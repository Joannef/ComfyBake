[{"C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\index.js":"1","C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\reportWebVitals.js":"2","C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\App.js":"3","C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\Routes.js":"4","C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\containers\\NotFound.js":"5","C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\containers\\Login.js":"6","C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\containers\\Home.js":"7","C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\containers\\OrderCon.js":"8","C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\containers\\OrderDetails.js":"9","C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\containers\\Cart.js":"10","C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\containers\\SellersPage.js":"11","C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\containers\\Signup.js":"12","C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\firebase.js":"13","C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\containers\\LoadCards.js":"14","C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\containers\\Transfer.js":"15","C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\containers\\DisplayGrid.js":"16","C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\containers\\BrowsingCards.js":"17","C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\containers\\displayCart.js":"18","C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\containers\\CustomCards.js":"19","C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\containers\\Display.js":"20"},{"size":609,"mtime":1620714005932,"results":"21","hashOfConfig":"22"},{"size":375,"mtime":1620714005939,"results":"23","hashOfConfig":"22"},{"size":1426,"mtime":1620714005721,"results":"24","hashOfConfig":"22"},{"size":1113,"mtime":1620714005734,"results":"25","hashOfConfig":"22"},{"size":208,"mtime":1620714005832,"results":"26","hashOfConfig":"22"},{"size":2831,"mtime":1620715028839,"results":"27","hashOfConfig":"22"},{"size":4625,"mtime":1620715028825,"results":"28","hashOfConfig":"22"},{"size":4353,"mtime":1620714005846,"results":"29","hashOfConfig":"22"},{"size":1350,"mtime":1620714005859,"results":"30","hashOfConfig":"22"},{"size":3685,"mtime":1621002670021,"results":"31","hashOfConfig":"22"},{"size":8314,"mtime":1620715028846,"results":"32","hashOfConfig":"22"},{"size":10283,"mtime":1620715028854,"results":"33","hashOfConfig":"22"},{"size":587,"mtime":1621002670048,"results":"34","hashOfConfig":"22"},{"size":2985,"mtime":1620715028832,"results":"35","hashOfConfig":"22"},{"size":582,"mtime":1620714005899,"results":"36","hashOfConfig":"22"},{"size":3157,"mtime":1621002670028,"results":"37","hashOfConfig":"22"},{"size":2686,"mtime":1620715028788,"results":"38","hashOfConfig":"22"},{"size":9737,"mtime":1621002670041,"results":"39","hashOfConfig":"22"},{"size":5859,"mtime":1620715028809,"results":"40","hashOfConfig":"22"},{"size":7819,"mtime":1620714005779,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"eyi6qs",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},"C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\index.js",[],"C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\reportWebVitals.js",[],"C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\App.js",[],"C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\Routes.js",[],"C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\containers\\NotFound.js",[],"C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\containers\\Login.js",["96"],"import React, {useState, useEffect} from \"react\";\r\nimport database from '../firebase';\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./Login.css\";\r\nimport Home from \"./Home\";\r\n\r\nconst Login = () =>{\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [account, setaccount] = useState(false);\r\n    const [AccountID, setAccountID] = useState('');\r\n\r\n    const handleLogin =() =>{\r\n        database.auth().signInWithEmailAndPassword(email,password)\r\n        .then(()=>{\r\n            setAccountID(email);\r\n            setEmail(\"\");\r\n            setPassword(\"\");\r\n            //if email and password is currect, then jump to home page\r\n            setTimeout(() => {\r\n                setaccount(true);\r\n            }, 200);\r\n\r\n        }).catch((err)=>{\r\n            alert(err);\r\n            setaccount(false);\r\n        });\r\n    }\r\n    \r\n    const authListener = () =>{\r\n        database.auth().onAuthStateChanged(account => {\r\n            if (account==true) {\r\n                setaccount(true);\r\n            }else{\r\n                setaccount(false);\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        authListener();\r\n    }, []);\r\n\r\n    return (\r\n        <section className=\"login\">\r\n            <div className=\"loginContainer\">\r\n                {account?(\r\n                    <>\r\n                    <br/>\r\n                    <br/>\r\n                    <Home \r\n                        AccountID = {AccountID}\r\n                    />\r\n                    </>\r\n                ):(\r\n                    <>\r\n                    <div class=\"form\">\r\n                    <h1 className=\"customh1\">Welcome</h1>\r\n                    {/* <BorderWrapper> */}\r\n                    <input type=\"text\" required value={email}\r\n                        placeholder = \"Email\"\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    /><br/>\r\n                    \r\n                    <input type=\"password\" required value={password}\r\n                        placeholder = \"Password\"\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    /><br/>\r\n\r\n                    <button1 onClick={handleLogin}>Login</button1><br/> \r\n\r\n                    <p2>Don't have an account?</p2>\r\n                    <LinkContainer to=\"/signup\">   \r\n                        <Nav.Link>\r\n                            <button2>Sign-up</button2><br/>\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n                    {/* </BorderWrapper> */}\r\n                    </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n\r\n","C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\containers\\Home.js",["97","98","99","100","101","102"],"import React, {useEffect, useState} from \"react\"\r\nimport CardColumns from 'react-bootstrap/CardColumns'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport database from '../firebase';\r\nimport \"./Home.css\";\r\nimport LoadCards from './LoadCards'\r\n// import Cart from \"./Cart\"\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport SellerPage from './SellersPage'; \r\nimport Transfer from './Transfer';\r\nimport './Cart.css';\r\nimport Show_cart from './displayCart';\r\n\r\n\r\nfunction Home(props) {\r\n  const [firestoreArray, setFirestoreArray] = useState([]);\r\n  \r\n  const db = database.firestore();\r\n\r\n  const {AccountID} = props\r\n  const [SellerID, setSellerID] = useState('');\r\n  const [jump, setjump] = useState(false);\r\n  const [jumpreflash, setjumpreflash] = useState (false);\r\n  const [test, setTest] = useState('');\r\n  const [run, setRun] = useState(true);\r\n  const [cart, setCart] = useState(false);\r\n  \r\n  const [cartitem, setCartitem] = useState(0);\r\n\r\n  if (AccountID != \"\"){\r\n      if (run == true){\r\n        const time_ = db.collection(\"users\").doc(AccountID).update({\r\n        jump: false\r\n      });\r\n      setRun(false)\r\n    }\r\n\r\n    db.collection(\"users\").doc(AccountID).onSnapshot((doc) =>{\r\n      if (doc.data().jump == true){\r\n        setTest(\"data: true\");\r\n        setSellerID(doc.data().sellerID);\r\n        setTimeout(() => {\r\n          setjump(true);\r\n        }, 500);\r\n      }else \r\n        setTest(\"data: false\")\r\n      \r\n     \r\n      setCartitem(doc.data().shoppingcart)\r\n      \r\n    })\r\n  }\r\n  \r\n\r\n\r\n  useEffect(() => {\r\n        \r\n    db.collectionGroup(\"food\").get().then(querySnapshot => {\r\n        const data = querySnapshot.docs.map(doc => doc.data());\r\n        console.log(data);\r\n        setFirestoreArray(data);\r\n    })\r\n\r\n  }, [])\r\n\r\n  //jump even \r\n  const handleJump =() =>{\r\n      setSellerID(AccountID);\r\n      setTimeout(() => {\r\n          setjump(true);\r\n      }, 500);\r\n  }\r\n\r\n  //logout\r\n  const handleLogout = () =>{\r\n      setTimeout(() => {\r\n          database.auth().signOut();\r\n      }, 100);\r\n  }\r\n\r\n  //reflash\r\n  const handleReflash =()=>{\r\n    setjump(true);\r\n    setjumpreflash(true);\r\n  }\r\n\r\n  const handleJumpCart =()=>{\r\n    setCart(true);\r\n  }\r\n\r\n  return (\r\n    <div> \r\n      {cart? (\r\n        <>\r\n          <Show_cart \r\n            AccountID = {AccountID}\r\n            SellerID = {SellerID}\r\n            state_ = {\"home\"}\r\n          />\r\n        </>\r\n      ):(\r\n        <>\r\n        {jump? (\r\n          <>\r\n          <div>\r\n            {jumpreflash?(\r\n              <>\r\n              <Transfer\r\n                AccountID = {AccountID}\r\n                SellerID = {SellerID}\r\n                reflash = {false} \r\n              />\r\n              </>\r\n            ):(\r\n              <>\r\n              <SellerPage\r\n                AccountID = {AccountID}\r\n                SellerID = {SellerID}\r\n              />\r\n              </>\r\n            )}\r\n            </div>\r\n          </>\r\n        ):(\r\n          <>\r\n            <div className=\"Home\">\r\n\r\n            {/* <Cart />*/ }\r\n            <div className=\"lander\">\r\n              <h1>ComfyBake</h1>\r\n              <p>Test: {test}</p>\r\n              <p>accountID:{AccountID}</p>\r\n              <p>sellerID:{SellerID}</p>\r\n            </div>\r\n\r\n            <div className=\"cart\">\r\n              <button className=\"cart-link\" onClick={handleJumpCart}>View Cart 🛒({cartitem})</button>\r\n            </div>\r\n\r\n            <div className=\"button\">\r\n              <button onClick={handleJump}> MySeller Page</button>\r\n              <button onClick={handleReflash}> Reflash</button>\r\n              <LinkContainer to=\"/\">  \r\n                <Nav.Link>\r\n                  <button onClick={handleLogout}>Logout</button><br/>\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              <br/>\r\n            </div>\r\n\r\n            <div className=\"content\">\r\n              <CardColumns>\r\n                {firestoreArray.map(each => <LoadCards key={each.Foodname}\r\n                                                  \r\n                  title= {each.Foodname}\r\n                  imageURL= {each.ImageUrl}\r\n                  body= {each.Body}\r\n                  price= {each.Price}\r\n                  ingredients= {each.Ingredients}\r\n                  sellerID = {each.SellerID}\r\n                  accountID = {AccountID}\r\n                  quantity =  {each.Quantity}\r\n                  />\r\n                )}\r\n              </CardColumns>\r\n            </div>\r\n\r\n            </div>\r\n          </>\r\n        )}\r\n      </>\r\n      )}      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\containers\\OrderCon.js",["103","104","105","106","107","108","109","110","111","112","113","114"],"import { getDefaultNormalizer, queryByTestId } from \"@testing-library/dom\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport database from '../firebase';\r\nimport \"./OrderCon.css\";\r\n\r\nconst Email = \"joannefung120@gmail.com\"; //should be authenticated by logged-in user dummy user fir now\r\n\r\nexport default function OrderCon() {\r\n    const [orderQty, setOrderQty] = useState([]);\r\n    const [orderImg, setImgList] = useState([]);\r\n    const [orderD, setDList] = useState([]);\r\n    const [orderPrice, setOrderPrice] = useState([]);\r\n    const [orderDate, setOrderDate] = useState([]);\r\n    const [orderID, setOrderID] = useState([]);\r\n    const [orderAddy, setOrderAddy] = useState([]);\r\n    const orders = database.firestore().collection(`/users/${Email}/orders`).where('complete', '==', true).get().then(\r\n    (querySnapshot => {\r\n        setOrderQty(querySnapshot.docs.map(doc=> doc.get(\"qty\")))\r\n        setOrderPrice(querySnapshot.docs.map(doc=> doc.get(\"price\")))\r\n        setOrderID(querySnapshot.docs.map(doc=> doc.id))\r\n        setOrderDate(querySnapshot.docs.map(doc=> doc.get(\"date\")))\r\n        //setImgList(querySnapshot.docs.map(doc=>doc.get(\"img\"))).map(doc=>orderImg.concat(doc))\r\n        //setDList(querySnapshot.docs.map(doc=>doc.get(\"description\"))).map(doc=>orderD.concat(doc))\r\n        setOrderAddy(querySnapshot.docs.map(doc=> doc.get(\"addy\")))\r\n        //do css for the page\r\n        //FINITIO\r\n    }));\r\n\r\n    function OrderBlock(props) {\r\n        let qty = props.xqty;\r\n        let price = props.xprice;\r\n        let date = props.xdate;\r\n        let ID = props.xID;\r\n        let addy = props.xaddy;\r\n        let img = props.ximg;\r\n        let des = props.xdes;\r\n        return (\r\n        <div class=\"order\">\r\n            <p class=\"text\"> Purchased on {date} </p>\r\n            <p class=\"text\"> Quantity: {qty}</p>\r\n            <p class=\"text\"> Order Status: Completed</p>\r\n            {/* I have to make a function to display the images correctly\r\n            <div class=\"img\">{img}</div>\r\n            */}\r\n            {/* I have to make a function to display the images correctly\r\n            <div class=\"description\">{description}</div>*/}\r\n            <p class=\"text\">Price: {price}</p>\r\n            <div class=\"order-details\">\r\n                        <p class=\"text\"> Order #: {ID} </p>\r\n                        <p class=\"bold\">Total: {price}</p>\r\n                        <div class=\"detail-btn\">\r\n                           {/*} <Link to={{ pathname: \"/orders/order-details\", state: {\r\n                                                                                id: ID,\r\n                                                                                addy: addy,\r\n                                                                                complete: \"True\",\r\n                                                                                plan: \"how do you intend to pay\",\r\n                                                                                price: price}\r\n                                    }}> \r\n                                    See Order Details\r\n                                </Link>*/}\r\n                        </div>\r\n                    </div>\r\n        </div>\r\n        );\r\n      }\r\n    \r\n    return(\r\n        <section>\r\n            <div class=\"order-page\">\r\n                <Link class=\"cart-link\" to=\"/orders/cart\">View Cart</Link>\r\n                <p class=\"check-out\">Ready To Checkout?</p>\r\n                <div class=\"feedback\">\r\n                    {orderQty.length != 0 ? (\r\n                    <div class=\"order-tower\">\r\n                        {orderQty.map(o => {\r\n                            return <OrderBlock  xqty={orderQty}   xID={orderID} xaddy={orderAddy} \r\n                                                xdate={orderDate} xprice={orderPrice} \r\n                                                xdes={orderD}     ximg={orderImg}/>\r\n                        })}\r\n                    </div>\r\n                    ):(\r\n                    <div>\r\n                        <p class=\"none\">Unfourtunately, your cart is empty. Please make a selection on the homepage first!</p>\r\n                    </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n};","C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\containers\\OrderDetails.js",["115"],"import database from '../firebase';\r\nimport \"./OrderDetails.css\";\r\nimport {useLocation} from 'react-router-dom';\r\n\r\nexport default function OrderDetails() {\r\n    let location = useLocation();\r\n    const id = location.state.id\r\n    const addy = location.state.addy;\r\n    const status = location.state.complete;\r\n    const plan = location.state.plan;\r\n    const price = location.state.price;\r\n    var subtotal = price*0.85;\r\n    var tax = price - subtotal;\r\n    \r\n    return (\r\n        <div class=\"big-rect\">\r\n            <k class=\"top-p\"> Order Details</k>\r\n            <f class=\"side-word-1\">{id}</f>\r\n            <f class=\"side-word-2\">{status}</f>\r\n            <f class=\"middle-word-1\">Ship To:</f>\r\n            <f class=\"middle-word-2\">{addy}</f>\r\n            <f class=\"middle-word-3\">Payment Information</f>\r\n            <f class=\"middle-word-4\">{plan}</f>\r\n            <f class=\"right-word-1\">Order Summary</f>\r\n            <f class=\"right-word-2a\">Subtotal</f>\r\n            <f class=\"right-word-2b\">{subtotal}</f>\r\n            <f class=\"right-word-3a\">Sales Tax</f>\r\n            <f class=\"right-word-3b\">{tax}</f>\r\n            <y class=\"faint-line\"/>\r\n            <f class=\"right-word-4a\">Total</f>\r\n            <f class=\"right-word-4b\">{price}</f>\r\n            <q class=\"bye-bye\"> We hope you order again soon!</q>\r\n        </div>\r\n    )\r\n};\r\n","C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\containers\\Cart.js",["116","117","118","119","120","121","122","123","124","125","126","127","128"],"import React, { useState, useEffect } from 'react';\r\nimport database from '../firebase';\r\nimport './Cart.css';\r\n// import Products from './Product';\r\n\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport Display from './DisplayGrid';\r\nimport Show_cart from './displayCart';\r\n\r\nconst db = database.firestore();\r\nconst PAGE_PRODUCTS = 'products';\r\n\r\n//const db = database.firestore();\r\n//const storage = database.storage();\r\n\r\nconst PAGE_CART = 'cart'\r\nconst senderEmail = \"cbakeTeam@gmail.com\"\r\nconst templateId = \"template_j303hv9\"\r\nconst Email = \"franciscor343@gmail.com\"\r\nconst FirstName = \"franciscor343@gmail.com\"\r\nconst LastName = \"franciscor343@gmail.com\"\r\n\r\n\r\n\r\nfunction Cart(){\r\n    const [cart, setCart] = useState([]);\r\n    const [page, setPage] = useState ('products');\r\n    const [cartitem, setCartitem] = useState([]);\r\n\r\n    const addToCart = (product) => {\r\n        setCart([...cart, {...product}]);\r\n    };\r\n\r\n    const navigateTo = (nextPage) => {\r\n        setPage(nextPage);\r\n    };\r\n\r\n    const removeFromCart = (productToRemove) => {\r\n        setCart(cart.filter((product) => product !== productToRemove))\r\n    }\r\n\r\n    const handleSumbit = (e) =>{\r\n        sendFeedback({\r\n            templateId,\r\n            senderEmail,\r\n            receiverEmail:Email,\r\n            FirstName,\r\n            LastName,\r\n          })\r\n        e.preventDefault();\r\n        //here we should probably change the status of the order so that the cart empties\r\n        // and all of the information goes from the cart to the order history page\r\n    }\r\n    const sendFeedback = ({\r\n        templateId,\r\n        senderEmail,\r\n        receiverEmail,\r\n        FirstName,\r\n        LastName,\r\n      }) => {\r\n        window.emailjs\r\n          .send(\r\n            \"default_service\",\r\n            templateId,\r\n            {\r\n              senderEmail,\r\n              receiverEmail,\r\n              FirstName,\r\n              LastName,\r\n            },\r\n          )\r\n          .then(res => {\r\n            if (res.status === 200) {\r\n              //setFormSubmitSuccessful(true)\r\n            }\r\n          })\r\n          // Handle errors here however you like\r\n          .catch(err => console.error(\"Failed to send feedback. Error: \", err))\r\n      }\r\n      \r\n\r\n      useEffect(() => {\r\n        \r\n        db.collectionGroup(\"Cart\").get().then(querySnapshot => {\r\n          const data = querySnapshot.docs.map(doc=>doc.data())\r\n          setCartitem(data);\r\n        })\r\n      });\r\n\r\n// render everything that has been added to the cart\r\n    const renderCart = () => (\r\n        <div className='back_home_btn'>\r\n            <button onClick={() => navigateTo(PAGE_PRODUCTS)}> Back to home </button>\r\n            \r\n            <h2 className=\"cart-title\">Shopping cart</h2>\r\n\r\n            <Show_cart/>\r\n\r\n        </div>\r\n    );\r\n\r\n    return(\r\n      <div className=\"cart\">\r\n        <header>\r\n          <h1>Shopping Cart </h1><br/>\r\n        </header>\r\n        {/* <Display addToCart={addToCart}/> */}\r\n      <Show_cart/>\r\n      </div>\r\n  )\r\n};\r\n\r\nexport default Cart;\r\n\r\n/*\r\nreturn(\r\n        <div className=\"cart\">\r\n<<<<<<< HEAD\r\n          <header>\r\n            <h1>Shopping Cart </h1><br/>\r\n          </header>\r\n          //{/* <Display addToCart={addToCart}/> \r\n        <Show_cart/>\r\n\r\n        <br/><br/><br/><br/>\r\n        <header>\r\n            <Link onClick={() => navigateTo(PAGE_CART)} className=\"cart-link\" to=\"/orders/cart\">View Cart 🛒 ({cartitem.length})</Link>\r\n            <br/><br/><br/><br/>\r\n        </header>\r\n        {page === PAGE_PRODUCTS && <Display addToCart={addToCart}/>}\r\n        {page === PAGE_CART && renderCart()}\r\n        \r\n\r\n        </div>\r\n    )\r\n*/","C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\containers\\SellersPage.js",["129","130","131","132","133","134","135","136"],"//imrc snippet\r\nimport React, {useEffect, useState} from 'react';\r\nimport \"./SellerPage.css\"\r\nimport CustomCards from './CustomCards'\r\nimport BrowsingCards from './BrowsingCards'\r\n\r\nimport Container from 'react-bootstrap/Container'\r\nimport Card from 'react-bootstrap/Card'\r\nimport CardDeck from 'react-bootstrap/CardDeck'\r\nimport CardColumns from 'react-bootstrap/CardColumns'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport database from '../firebase';\r\n\r\nimport Display from './Display';\r\nimport Home from \"./Home\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport Transfer from './Transfer';\r\nimport './Cart.css';\r\nimport Show_cart from './displayCart';\r\n\r\nfunction Sellers(props) {\r\n    const {AccountID, SellerID} = props;\r\n    const [jumpback, setjumpback] = useState(false);\r\n    const [AccountMatch, setAccountMatch] = useState(AccountID == SellerID);\r\n    const [jumpreflash, setjumpreflash] = useState (false);\r\n    const [jumpcart, setjumpcart] = useState(false);\r\n\r\n    const [firestoreArray, setFirestoreArray] = useState([]);\r\n    const db = database.firestore();\r\n    //const id = \"user2@gmail.com\";\r\n    const id =\"\";\r\n    \r\n    const [cartitem, setCartitem] = useState(0);\r\n    if (AccountID != \"\"){\r\n        db.collection(\"users\").doc(AccountID).onSnapshot((doc) =>{\r\n            setCartitem(doc.data().shoppingcart)\r\n        })\r\n    }\r\n    /*\r\n    if (AccountMatch == true){\r\n        id = AccountID;\r\n    }else{\r\n        id = SellerID;\r\n    }*/\r\n\r\n    useEffect(() => {\r\n        \r\n        db.collection(\"FoodCollection\").doc(SellerID).collection(\"food\").get().then(querySnapshot => {\r\n            const data = querySnapshot.docs.map(doc => doc.data());\r\n            console.log(data);\r\n            setFirestoreArray(data);\r\n        })\r\n\r\n    }, [])\r\n\r\n    //jump even \r\n    const handleJumpback =() =>{\r\n        setjumpback(true);\r\n    }\r\n\r\n    //reflash\r\n    const handleReflash =()=>{\r\n        setjumpback(true);\r\n        setjumpreflash(true);\r\n    }\r\n\r\n    //logout\r\n    const handleLogout = () =>{\r\n        database.auth().signOut();\r\n    }\r\n\r\n    const handleJumpCart =()=>{\r\n        setjumpback(true);\r\n        setjumpcart(true);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {jumpback?(\r\n                <>\r\n                {jumpcart? (\r\n                    <>\r\n                    <Show_cart \r\n                        AccountID = {AccountID}\r\n                        SellerID = {SellerID}\r\n                        state_ = {\"seller\"}\r\n                    />\r\n                    </>\r\n                ):(\r\n                    <>\r\n                    <div>\r\n                    {jumpreflash?(\r\n                        <>\r\n                        <Transfer\r\n                            AccountID = {AccountID}\r\n                            SellerID = {SellerID}\r\n                            reflash = {true}  \r\n                        />\r\n                        </>\r\n                    ):(\r\n                        <>\r\n                        <Home\r\n                            AccountID = {AccountID}\r\n                        />\r\n                        </>\r\n                    )}\r\n                    </div>\r\n                    </>\r\n                )}\r\n                </>\r\n            ):(\r\n                <>\r\n                <div>\r\n                    {AccountMatch?( //If Account Holder visits their own Sellers Page\r\n                        <>\r\n                        <div class = \"center\">\r\n                        <h1>Welcome To Your Home Kitchen</h1>\r\n                        <h5>Full Menu</h5>\r\n                        <p>AccountID:{AccountID}</p>\r\n                        <p>SellerID:{SellerID}</p>\r\n                        <button onClick={handleJumpback}> Home</button>\r\n                        <button onClick={handleReflash}> Reflash</button>\r\n                        <LinkContainer to=\"/\">  \r\n                            <Nav.Link>\r\n                                <button onClick={handleLogout}>Logout</button><br/>\r\n                            </Nav.Link>\r\n                        </LinkContainer>\r\n                    <br></br>\r\n                    <div className=\"cart\">\r\n                        <button className=\"cart-link\" onClick={handleJumpCart}>View Cart 🛒({cartitem})</button>\r\n                    </div>\r\n\r\n                    <Container>\r\n\r\n                    <CardColumns>\r\n\r\n                        {firestoreArray.map(each => \r\n                            <CustomCards key={each.Foodname}\r\n                                                                \r\n                                title= {each.Foodname}\r\n                                imageURL= {each.ImageUrl}\r\n                                body= {each.Body}\r\n                                price= {each.Price}\r\n                                ingredients= {each.Ingredients}\r\n                                quantity =  {each.Quantity}\r\n                                sellerID = {each.SellerID}\r\n                                accountID = {AccountID}\r\n\r\n                            />\r\n\r\n                        //</div>\r\n                        )}\r\n\r\n                    </CardColumns>\r\n\r\n                    <br></br>\r\n                    <h5>Add Menu Item</h5>\r\n\r\n                    <CardDeck>\r\n                    \r\n                        <CustomCards \r\n                            ID = {AccountID}\r\n                            title= 'Add New Item'\r\n                            imageURL='https://static01.nyt.com/images/2017/12/13/dining/15COOKING-CREME-BRULEE1/15COOKING-CREME-BRULEE1-articleLarge.jpg'\r\n                            body='Enter new menu item description here. After press save and refresh the page to see it appear on your menu.'\r\n                            price=\"Enter new item price\"\r\n                            ingredients= \"Enter new item ingredients\"\r\n                            quantity =  \"Enter Quantity\"\r\n\r\n                        />\r\n\r\n                    </CardDeck>\r\n                \r\n                    </Container>\r\n                    </div>\r\n                    </>\r\n                    ):( //If Account Holder visits another Sellers Page\r\n                        <>\r\n                        <div class = \"center\">\r\n                            <h1>Seller's Home Kitchen</h1>\r\n                            <h5>Full Menu</h5>\r\n                            <p>AccountID:{AccountID}</p>\r\n                            <p>SellerID:{SellerID}</p>\r\n                            <button onClick={handleJumpback}> Home</button>\r\n                            <button onClick={handleReflash}> Reflash</button>\r\n                            <LinkContainer to=\"/\">  \r\n                                <Nav.Link>\r\n                                    <button onClick={handleLogout}>Logout</button><br/>\r\n                                </Nav.Link>\r\n                            </LinkContainer>\r\n                        <br></br>\r\n                        <div className=\"cart\">\r\n                        <button className=\"cart-link\" onClick={handleJumpCart}>View Cart 🛒({cartitem})</button>\r\n                        </div>\r\n\r\n                        <Container>\r\n\r\n                        <CardColumns>\r\n\r\n                            {firestoreArray.map(each => \r\n                                <BrowsingCards key={each.Foodname}\r\n                                                                    \r\n                                    title= {each.Foodname}\r\n                                    imageURL= {each.ImageUrl}\r\n                                    body= {each.Body}\r\n                                    price= {each.Price}\r\n                                    ingredients= {each.Ingredients}\r\n                                    quantity =  {each.Quantity}\r\n                                    sellerID = {each.SellerID}\r\n                                    accountID = {AccountID}\r\n\r\n                                />\r\n\r\n                            //</div>\r\n                            )}\r\n\r\n                        </CardColumns>\r\n                        </Container>\r\n                        </div>\r\n                        </>\r\n                    )}\r\n                </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Sellers\r\n\r\n\r\n","C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\containers\\Signup.js",["137","138","139","140","141","142"],"import React, {useState} from \"react\";\r\nimport database from '../firebase';\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n// import BorderWrapper from 'react-border-wrapper'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./Signup.css\";\r\n\r\nconst db = database.firestore();\r\nconst userCollection = db.collection(\"users\");\r\nconst senderEmail = \"cbakeTeam@gmail.com\";\r\nconst templateId = \"template_j303hv9\";\r\n\r\n\r\nexport default function Signup() {\r\n    const [FirstName, setFirstName] = useState('');\r\n    const [LastName, setLastName] = useState('');\r\n    const [Address, setAddress] = useState('');\r\n    const [City, setCity] = useState('');\r\n    const [State, setState] = useState('');\r\n    const [PhoneNum, setPhoneNum] = useState('');\r\n    const [Email, setEmail] = useState('');\r\n    const [Password, setPassword] = useState('');\r\n    const [Vegan, setVegan] = useState(false);\r\n    const [GlutenFree, setGlutenFree] = useState(false);\r\n    const [DairyFree, setDairyFree] = useState(false);\r\n    const [Kosher, setKosher] = useState(false);\r\n    const [LactoseIntolerant, setLactoseIntolerant] = useState(false);\r\n    const [Peanut, setPeanut] = useState(false);\r\n    const [Almonds, setAlmonds] = useState(false);\r\n    const [Milk, setMilk] = useState(false);\r\n    const [Soy, setSoy] = useState(false);\r\n    const [Egg, setEgg] = useState(false);\r\n    const [feedback, setFeedback] = useState(\"\");\r\n    const [receiverEmail, setReceiverEmail] = useState(\"\");\r\n    const [formSubmitted, setFormSubmitted] = useState(false);\r\n    const [formSubmitSuccessful, setFormSubmitSuccessful] = useState(false);\r\n\r\n    const [signup, setsignup] = useState(false);\r\n\r\n    const handleSumbit = (e) =>{\r\n        sendFeedback({\r\n            templateId,\r\n            senderEmail,\r\n            receiverEmail:Email,\r\n            FirstName,\r\n            LastName,\r\n          })\r\n        setFormSubmitted(true)\r\n        e.preventDefault();\r\n\r\n        database.auth().createUserWithEmailAndPassword(Email,Password)\r\n        .then(()=>{\r\n            setsignup(true);\r\n\r\n            userCollection.doc(Email).set({\r\n                personalinfo: {\r\n                    FirstName:FirstName,\r\n                    LastName:LastName,\r\n                    Address:Address,\r\n                    City:City,\r\n                    State:State,\r\n                    PhoneNumber:PhoneNum\r\n                },\r\n                DietaryPreferences: {\r\n                    Vegan:Vegan,\r\n                    GlutenFree:GlutenFree,\r\n                    DairyFree:DairyFree,\r\n                    Kosher:Kosher,\r\n                    LactoseIntolerant:LactoseIntolerant\r\n                },\r\n                Allergies:{\r\n                    eanut:Peanut,\r\n                    Almonds:Almonds,\r\n                    Milk:Milk,\r\n                    Soy:Soy,\r\n                    Egg:Egg\r\n                },\r\n                shoppingcart: 0\r\n            }).then(()=>{\r\n                alert(\"Look out for an email confirming your account!\")\r\n            }).catch((err)=>{\r\n                alert(err.message);\r\n            });\r\n    \r\n            setFirstName(\"\");\r\n            setLastName(\"\");\r\n            setAddress(\"\");\r\n            setCity(\"\");\r\n            setState(\"\");\r\n            setPhoneNum(\"\");\r\n            setEmail(\"\");\r\n            setPassword(\"\");\r\n\r\n        }).catch((err)=>{\r\n            setsignup(false);\r\n            alert(err);\r\n        });\r\n        \r\n    }\r\n    const sendFeedback = ({\r\n        templateId,\r\n        senderEmail,\r\n        receiverEmail,\r\n        FirstName,\r\n        LastName,\r\n      }) => {\r\n        window.emailjs\r\n          .send(\r\n            \"default_service\",\r\n            templateId,\r\n            {\r\n              senderEmail,\r\n              receiverEmail,\r\n              FirstName,\r\n              LastName,\r\n            },\r\n          )\r\n          .then(res => {\r\n            if (res.status === 200) {\r\n              setFormSubmitSuccessful(true)\r\n            }\r\n          })\r\n          // Handle errors here however you like\r\n          .catch(err => console.error(\"Failed to send feedback. Error: \", err))\r\n      }\r\n\r\n    return (\r\n        <section className=\"login\">\r\n            <div className=\"loginContainer\">\r\n                {signup? (\r\n                    <>\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <div className=\"transition\">\r\n                        <p className=\"customP\">Press continue to go to the login page</p>\r\n                        <LinkContainer to=\"/\">   \r\n                            <Nav.Link>\r\n                                <button className=\"customButton\"> Continue</button><br/>\r\n                            </Nav.Link>\r\n                        </LinkContainer>\r\n                    </div>\r\n                    </>\r\n                    ):(\r\n                    <>\r\n                    <div className=\"form\">\r\n                        <form className=\"Signup-form\" onSubmit={handleSumbit}>\r\n                        <h1 className=\"customh1\">Let's Get to Know one Another!</h1>\r\n                        {/* <BorderWrapper> */}\r\n                        <div>\r\n                            <label>Introductions</label><br/>\r\n                            <input type=\"text\" required value={FirstName}\r\n                                placeholder = \"FirstName\"\r\n                                onChange={(e) => setFirstName(e.target.value)}\r\n                            /><b/> <b/>\r\n                            <input type=\"text\" required value={LastName}\r\n                                placeholder = \"LastName\"\r\n                                onChange={(e) => setLastName(e.target.value)}\r\n                            /><br/>\r\n                        </div>\r\n                \r\n                        <div> \r\n                            <label>Address</label><br/>\r\n                            <input type=\"text\" required value={Address}\r\n                                placeholder = \"Address\"\r\n                                onChange = {(e) => setAddress(e.target.value)}\r\n                            /><br/>\r\n                            <input type=\"text\" required value={City}\r\n                                placeholder = \"City\"\r\n                                onChange = {(e) => setCity(e.target.value)}\r\n                            /><b/> <b/>\r\n                            <input type=\"text\" required value={State}\r\n                                placeholder = \"State\"\r\n                                onChange = {(e) => setState(e.target.value)}\r\n                            /><br/>\r\n                        </div>\r\n\r\n                        <div> \r\n                            <label>Contact</label><br/>\r\n                            <input type=\"text\" required value={PhoneNum}\r\n                                placeholder = \"Phone Number\"\r\n                                onChange = {(e) => setPhoneNum(e.target.value)}\r\n                            /><br/>\r\n                            <input type=\"text\" required value={Email}\r\n                                placeholder = \"Email\"\r\n                                onChange = {(e) => setEmail(e.target.value)}\r\n                            /><br/>\r\n                            <input type=\"password\" required value={Password}\r\n                                placeholder = \"Password\"\r\n                                onChange = {(e) => setPassword(e.target.value)}\r\n                            /><br/>\r\n                        </div>\r\n\r\n                        <div> \r\n                            <label>Dietary Preferences</label><br/>\r\n                            <input type=\"checkbox\"   value={Vegan}\r\n                                onClick={()=> setVegan(!Vegan)}\r\n                            /> Vegan <br/>\r\n                            <input type=\"checkbox\"  value={GlutenFree}\r\n                                onClick={()=> setGlutenFree(!GlutenFree)}\r\n                            /> Gluen Free<br/>\r\n                            <input type=\"checkbox\"  value={DairyFree}\r\n                                onClick={()=> setDairyFree(!DairyFree)}\r\n                            /> Dairy Free<br/>\r\n                            <input type=\"checkbox\"  value={Kosher}\r\n                                onClick={()=> setKosher(!Kosher)}\r\n                            /> Kosher<br/>\r\n                            <input type=\"checkbox\"  value={LactoseIntolerant}\r\n                                onClick={()=> setLactoseIntolerant(!LactoseIntolerant)}\r\n                            /> Lactose Intolerant<br/>\r\n                        </div>\r\n\r\n                        <div> \r\n                            <label>Allergies</label><br/>\r\n                            <input type=\"checkbox\"   value={Peanut}\r\n                                onClick={()=> setPeanut(!Peanut)}\r\n                            /> Peanut <br/>\r\n                            <input type=\"checkbox\"  value={Almonds}\r\n                                onClick={()=> setAlmonds(!Almonds)}\r\n                            /> Almonds<br/>\r\n                            <input type=\"checkbox\"  value={Milk}\r\n                                onClick={()=> setMilk(!Milk)}\r\n                            /> Milk<br/>\r\n                            <input type=\"checkbox\"  value={Soy}\r\n                                onClick={()=> setSoy(!Soy)}\r\n                            /> Soy<br/>\r\n                            <input type=\"checkbox\"  value={Egg}\r\n                                onClick={()=> setEgg(!Egg)}\r\n                            /> Egg<br/>\r\n                        </div>\r\n                        <button classname=\"center customButton\" type=\"submit\">Sign Up</button>\r\n                        \r\n                        \r\n                        <LinkContainer to=\"/\">   \r\n                            <Nav.Link>\r\n                            <button2>Sign in instead</button2><br/>\r\n                            </Nav.Link>\r\n                        </LinkContainer>\r\n                        {/* </BorderWrapper> */}\r\n                        </form>\r\n                        </div>\r\n                        </>\r\n                )}\r\n                    </div>\r\n        </section>   \r\n    );\r\n}\r\n\r\n//export default Signup;","C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\firebase.js",["143"],"import firebase from 'firebase';\r\nimport 'firebase/firestore';\r\n\r\n//This is my firebase authentication\r\n//you can change it to your firebase authentication\r\nvar firebaseApp = {\r\n    apiKey: \"AIzaSyCBDaRuSre3hjHZR136J_zp6RMwHOkFeUs\",\r\n    authDomain: \"comfybake-78d36.firebaseapp.com\",\r\n    projectId: \"comfybake-78d36\",\r\n    storageBucket: \"comfybake-78d36.appspot.com\",\r\n    messagingSenderId: \"947011318778\",\r\n    appId: \"1:947011318778:web:0692a26d4c971c54042a43\",\r\n};\r\n\r\nconst database = firebase.initializeApp(firebaseApp);\r\nvar db = firebase.database();\r\n\r\nexport default database;","C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\containers\\LoadCards.js",["144","145","146"],"import React, { useState } from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport database from '../firebase';\r\nimport { addToCart } from './Cart'\r\nimport SellerPage from './SellersPage'; \r\n\r\nfunction LoadCards(props) {\r\n    const [titles] = useState(props.title)    \r\n    const [imageURL] = useState(props.imageURL)\r\n    const [body] = useState(props.body)\r\n    const [price] = useState(\"$\" + props.price)\r\n    const [price_] = useState(props.price)\r\n    const [ingredients] = useState(props.ingredients)\r\n    const [sellerID] = useState(props.sellerID)\r\n    const [accountID] = useState(props.accountID)\r\n    const [quantity] = useState(props.quantity)\r\n    //const [total] = useState (props.price * quantity)\r\n\r\n    const jump=()=>{\r\n        //database.firestore().collection(\"users\").doc(\"user2@gmail.com\").update({\r\n        database.firestore().collection(\"users\").doc(accountID).update({\r\n            jump: true,\r\n            sellerID: sellerID\r\n        })\r\n    }\r\n\r\n\r\n    const handleClick =() =>{\r\n        const ref = database.firestore().collection(\"users\").doc(accountID).collection('Cart').doc()\r\n        var myID = ref.id; \r\n        ref.set({\r\n            name: titles,\r\n            price: price_,\r\n            image: imageURL,\r\n            quantity: quantity,\r\n            checkout: false,\r\n            seller: sellerID,\r\n            body: body,\r\n            id: myID,\r\n            quantity: 1,\r\n            total: price_,\r\n        })\r\n        .then(() => {\r\n            console.log(\"Document successfully written!\");\r\n        })\r\n        .catch((error) => {\r\n            console.error(\"Error writing document: \", error);\r\n        });\r\n\r\n        var num=0\r\n        database.firestore().collection(\"users\").doc(accountID).onSnapshot((doc) =>{\r\n            num = doc.data().shoppingcart\r\n        })\r\n        setTimeout(() => {\r\n            //update \r\n            num += 1\r\n            database.firestore().collection(\"users\").doc(accountID).update({\r\n                \"shoppingcart\": num\r\n            })\r\n        }, 10);\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Img variant=\"top\" src = {imageURL} />\r\n            \r\n            <Card.Body>\r\n            \r\n                <Card.Title>{titles}</Card.Title>\r\n                <Card.Text>\r\n                    {body}\r\n                </Card.Text>\r\n            \r\n            </Card.Body>\r\n\r\n            <Card.Footer>\r\n\r\n                <p>{price}</p>\r\n                <p>accountID:{accountID}</p>\r\n                <p>sellerID:{sellerID}</p>\r\n                <button onClick={handleClick}>Add to cart</button>\r\n                <button onClick={jump}>Store</button>\r\n                <br></br>\r\n                <small className=\"text-muted\"> Contains: {ingredients}</small>\r\n                <br></br>\r\n                <small className=\"text-muted\"> Quantity: {quantity}</small>\r\n            </Card.Footer>\r\n        </Card>\r\n    );\r\n\r\n}\r\n\r\nexport default LoadCards","C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\containers\\Transfer.js",[],"C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\containers\\DisplayGrid.js",["147","148","149","150","151","152","153","154"],"import React, {useState, useEffect} from \"react\";\r\nimport database from '../firebase';\r\nimport firebase from '../firebase';\r\nimport './Cart.css';\r\nimport { addToCart } from './Cart'\r\nimport {account} from './Login'\r\nimport { __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED } from \"react-dom\";\r\nimport Show_cart from \"./displayCart\";\r\n\r\nconst db = database.firestore();\r\nconst storage = database.storage();\r\nconst user = \"mohammad@gmail\";\r\nconst realtimeDB = firebase.database();\r\n\r\n\r\nclass Display extends React.Component{\r\n    //state array\r\n    state = {\r\n        arr: null,\r\n    }\r\n\r\n    //---------------- this function brings all the data from firestore -------------------//\r\n    componentDidMount(){\r\n        db.collectionGroup('food')\r\n            .get()\r\n            .then( snapShot => {\r\n                //array to store single item\r\n                const arr = []\r\n                //takes a data and pushes it into the array\r\n                snapShot.forEach( doc => {\r\n                    const data = doc.data()\r\n                    arr.push(data)\r\n                })\r\n                //makes an array of all the item and saves it in the state, null array above\r\n                this.setState({arr: arr})\r\n                \r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n    //-------------------------collecting data from firestore ----------------------------//\r\n    \r\n\r\n    handleClick =(arr) =>{\r\n        this.props.addToCart(arr);\r\n        // const ref = db.collection(\"users\").doc(user).collection('Cart').doc();\r\n        const ref = db.collection(\"users\").doc(user).collection('Cart').doc()\r\n        var myID = ref.id;\r\n        ref.set({\r\n            name: arr.Foodname,\r\n            price: arr.Price,\r\n            image: arr.ImageUrl,\r\n            quantity: 1,\r\n            max_Qty: arr.Quantity,\r\n            checkout: false,\r\n            seller: arr.SellerID,\r\n            body: arr.Body,\r\n            id: myID,\r\n            total: arr.Price,\r\n        })\r\n        .then(() => {\r\n            console.log(\"Document successfully written!\");\r\n        })\r\n        .catch((error) => {\r\n            console.error(\"Error writing document: \", error);\r\n        });\r\n        \r\n\r\n    }\r\n    \r\n \r\n\r\n    render(){\r\n    \r\n        return(\r\n            <div className='item'>\r\n                <h1> home </h1>\r\n                {\r\n                    //if data exists then print each data from the array\r\n                    this.state.arr &&\r\n                    this.state.arr.map( arr => {\r\n                        return(\r\n                            <div className=\"img-wrap\">\r\n                                <img src={arr.ImageUrl } alt={arr.Foodname}/>\r\n                                <p>{arr.Foodname}</p>\r\n                                <p>{arr.Qty}</p>\r\n                                <p>${arr.Price}</p>\r\n                                <button onClick={()=>{ this.handleClick(arr)} }>Add to cart</button>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                <br/><br/> \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Display;\r\n\r\n","C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\containers\\BrowsingCards.js",["155","156"],"import React, { useEffect, useState } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport database from '../firebase';\r\n\r\nfunction BrowsingCards(props) {\r\n\r\n    //no edit state function, don't want to change data here\r\n    const [title] = useState(props.title)\r\n    const [imageURL] = useState(props.imageURL)\r\n    const [body] = useState(props.body)\r\n    const [price] = useState(\"$\" + props.price)\r\n    const [price_] = useState(props.price)\r\n    const [ingredients] = useState(props.ingredients)\r\n    const [quantity] = useState(props.quantity)\r\n    const [sellerID] = useState(props.sellerID)\r\n    const [accountID] = useState(props.accountID)\r\n\r\n    const handleClick =() =>{\r\n        const ref = database.firestore().collection(\"users\").doc(accountID).collection('Cart').doc()\r\n        var myID = ref.id;\r\n        ref.set({\r\n            name: title,\r\n            price: price_,\r\n            image: imageURL,\r\n            quantity: quantity,\r\n            checkout: false,\r\n            seller: sellerID,\r\n            body: body,\r\n            id: myID,\r\n            quantity: 1,\r\n            total: price_,\r\n        })\r\n        .then(() => {\r\n            console.log(\"Document successfully written!\");\r\n        })\r\n        .catch((error) => {\r\n            console.error(\"Error writing document: \", error);\r\n        });\r\n\r\n        var num=0\r\n        database.firestore().collection(\"users\").doc(accountID).onSnapshot((doc) =>{\r\n            num = doc.data().shoppingcart\r\n        })\r\n        setTimeout(() => {\r\n            //update \r\n            num += 1\r\n            database.firestore().collection(\"users\").doc(accountID).update({\r\n                \"shoppingcart\": num\r\n            })\r\n        }, 10);\r\n    }\r\n\r\n    return (\r\n            <Card>\r\n\r\n                    <Card.Img variant=\"top\" src = {imageURL} />\r\n                            \r\n                    <Card.Body>\r\n                    \r\n                        <Card.Title>{title}</Card.Title>\r\n                        <Card.Text>\r\n                            {body}\r\n                        </Card.Text>\r\n                    \r\n                    </Card.Body>\r\n\r\n                    <Card.Footer>\r\n\r\n                        <p>{price}</p>\r\n                        <button onClick={handleClick}>Add to cart</button>\r\n                        <br></br>\r\n                        <small className=\"text-muted\"> Contains: {ingredients} </small>\r\n                        <br></br>\r\n                        <small className=\"text-muted\"> Quantity: {quantity}</small>\r\n                    </Card.Footer> \r\n\r\n            </Card>\r\n    );\r\n}\r\n\r\nexport default BrowsingCards","C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\containers\\displayCart.js",["157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172"],"import React, {useState, useEffect} from \"react\";\r\nimport testUtils from \"react-dom/test-utils\";\r\nimport database from '../firebase';\r\nimport firebase from '../firebase'\r\nimport './Cart.css';\r\nimport Home from \"./Home\";\r\nimport SellerPage from './SellersPage'; \r\n\r\nconst db = database.firestore();\r\nconst storage = database.storage();\r\nconst user = \"mohammad@gmail\";\r\nconst userName = \"Moh\"\r\n\r\nclass Show_cart extends React.Component{\r\n    //state array\r\n    state = {\r\n        arr: null,\r\n        count: 0,\r\n        home: false,\r\n        jump: false,\r\n    }\r\n    //---------------- this function brings all the data from firestore -------------------//\r\n    componentDidMount(){\r\n        db.collection(\"users\").doc(this.props.AccountID).collection('Cart').get().then(snapShot =>{\r\n                const arr = []\r\n                //takes a data and pushes it into the array\r\n                snapShot.forEach( doc => {\r\n                    const data = doc.data()\r\n                    arr.push(data)\r\n                })\r\n                //makes an array of all the item and saves it in the state, null array above\r\n                this.setState({arr: arr})\r\n                \r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n    //-------------------------collecting data from firestore ----------------------------//\r\n\r\n\r\n    handleRemove =(arr) => {\r\n        \r\n        db.collection(\"users\").doc(this.props.AccountID).collection('Cart').doc(arr.id).delete().then(() => {\r\n            //console.log(\"Document successfully deleted!\");\r\n            alert(\"successfully deleted!\")\r\n        }).catch((error) => {\r\n            console.error(\"Error removing document: \", error);\r\n        }); \r\n\r\n        var num=0\r\n        database.firestore().collection(\"users\").doc(this.props.AccountID).onSnapshot((doc) =>{\r\n            num = doc.data().shoppingcart\r\n        })\r\n        setTimeout(() => {\r\n            //update \r\n            num -= 1\r\n            database.firestore().collection(\"users\").doc(this.props.AccountID).update({\r\n                \"shoppingcart\": num\r\n            })\r\n        }, 10);\r\n\r\n    }\r\n    \r\n    increment = (arr) => {\r\n\r\n        var maxquantity=0\r\n        db.collection(\"FoodCollection\").doc(arr.seller).collection('food').doc(arr.name).onSnapshot((doc) =>{\r\n            maxquantity = doc.data().Quantity\r\n        })\r\n\r\n        setTimeout(() => {\r\n            const ref = db.collection(\"users\").doc(this.props.AccountID).collection('Cart').doc(arr.id)\r\n            if (arr.quantity == maxquantity) {\r\n                alert(\"Maximum quantity\")\r\n            } else {\r\n                arr.quantity = arr.quantity + 1;\r\n                ref.update({\"quantity\": arr.quantity})\r\n                ref.update({\"total\": (arr.price * arr.quantity)})\r\n            }\r\n            }, 10);\r\n    }\r\n\r\n    decrement = (arr) => {\r\n        const ref = db.collection(\"users\").doc(this.props.AccountID).collection('Cart').doc(arr.id)\r\n\r\n        if (arr.quantity <= 1) {\r\n            console.log(\"Stops when the quantity is 1\")\r\n        } \r\n        else {\r\n            arr.quantity = arr.quantity - 1;\r\n            ref.update({\"quantity\": arr.quantity})\r\n            ref.update({\"total\": (arr.price * arr.quantity)})\r\n        }\r\n\r\n    }\r\n    \r\n    handleCheckout = (e) => {\r\n        e.preventDefault();\r\n        \r\n        db.collection(\"users\").doc(this.props.AccountID).collection(\"Cart\").get().then(querySnapshot =>{\r\n            const data = querySnapshot.docs.map(doc=> doc.data());\r\n            //alert (data.length)\r\n            var maxquantity = new Array();\r\n            var quantity =  new Array();\r\n            var seller =  new Array();\r\n            var name =  new Array();\r\n\r\n            for (var i=0; i< data.length; i++){\r\n                //new collection for successful  orders \r\n                const ref = db.collection(\"users\").doc(this.props.AccountID).collection('orders').doc()\r\n                            ref.set({\r\n                                name: this.props.AccountID,\r\n                                order_Date:String(new Date()),\r\n                                checkout: true,\r\n                                image: data[i].image,\r\n                                descriptions: data[i].body,\r\n                                price:Number(data[i].price),\r\n                                qty: data[i].quantity,\r\n                                total:Number(data[i].total),\r\n                            })\r\n                \r\n                //delete the items from the shopping cart \r\n                db.collection(\"users\").doc(this.props.AccountID).collection('Cart').doc(data[i].id).delete().then(() => {\r\n                                console.log(\"Document successfully checked out!\");\r\n                            }).catch((error) => {\r\n                                console.error(\"Error checking out \", error);\r\n                            }); \r\n                \r\n                //save data for  update the quantity to the seller store\r\n                quantity.push(data[i].quantity)\r\n                seller.push(data[i].seller)\r\n                name.push(data[i].name)\r\n                \r\n                db.collection(\"FoodCollection\").doc(data[i].seller).collection('food').doc(data[i].name).onSnapshot((doc) =>{\r\n                    var maxquantity_ = doc.data().Quantity\r\n                    maxquantity.push(maxquantity_)\r\n                })\r\n            }\r\n            //update the quantity to the seller store\r\n            setTimeout(() => {\r\n                //update \r\n                for (var j=0; j<seller.length; j++){\r\n                    quantity[j] = maxquantity[j] - quantity[j]\r\n                    db.collection(\"FoodCollection\").doc(seller[j]).collection('food').doc(name[j]).update({\r\n                        \"Quantity\": quantity[j]\r\n                    })\r\n                }\r\n            }, 1000);\r\n\r\n            \r\n            var num=0\r\n            database.firestore().collection(\"users\").doc(this.props.AccountID).onSnapshot((doc) =>{\r\n                num = doc.data().shoppingcart\r\n            })\r\n            setTimeout(() => {\r\n                //update \r\n                num -= data.length\r\n                database.firestore().collection(\"users\").doc(this.props.AccountID).update({\r\n                    \"shoppingcart\": num\r\n                })\r\n            }, 2000);\r\n        })\r\n    }\r\n    \r\n    handlejump = () =>{\r\n        if (this.props.state_ == \"home\"){\r\n            this.setState(state => ({\r\n                home: true\r\n            }))\r\n        }\r\n        this.setState(state => ({\r\n            jump: true\r\n        }))\r\n\r\n    } \r\n\r\n    render(){\r\n    \r\n        return(\r\n            <div>\r\n            {this.state.jump? (\r\n                <div>\r\n                {this.state.home? (\r\n                    <>\r\n                    <Home \r\n                        AccountID = {this.props.AccountID}\r\n                    />\r\n                    </>\r\n                ):(\r\n                    <>\r\n                    <SellerPage\r\n                        AccountID = {this.props.AccountID}\r\n                        SellerID = {this.props.SellerID}\r\n                    />\r\n                    </>\r\n                )}\r\n                </div>\r\n                \r\n            ):(\r\n                <>\r\n                <br/>\r\n                <button onClick={()=>{this.handlejump()}}>Back</button><br/><br/><br/>\r\n                <div className=\"displayCart\">\r\n                {\r\n                    //if data exists then print each data from the array\r\n                    this.state.arr &&\r\n                    this.state.arr.map( arr => {\r\n                        if(arr.checkout == false){\r\n                        return(\r\n                            <div>\r\n                                <tbody id=\"tableProducts\">\r\n                                    <table className=\"table\">\r\n                                        <th><img src={arr.image}/></th>\r\n                                        <h3>{arr.name}</h3>\r\n                                        <p>{arr.body}</p>\r\n                                        <p>${arr.price}</p>\r\n                                        <p>\r\n                                            <p>Quantity: {arr.quantity}</p>\r\n                                        </p>\r\n                                        <button onClick={()=>{ this.decrement(arr)}}> - </button>\r\n                                            <label>\r\n                                                Quantity\r\n                                            </label>\r\n                                        <button onClick={()=>{ this.increment(arr)}}> + </button>\r\n                                        <p>Seller: {arr.seller}</p>\r\n                                        <p>Total: ${arr.total}</p>\r\n                                        <button onClick={()=>{ this.handleRemove(arr)}}>Remove</button> \r\n                                        <br/><br/>\r\n\r\n                                        {/* <button onClick={()=>{ this.handleCheckout(arr)}}>Checkout</button> */}\r\n\r\n                                        \r\n                                    </table>\r\n                                    \r\n                                </tbody>\r\n                            </div>\r\n                        )\r\n                        \r\n                        } // if state \r\n                    })\r\n                }\r\n                <button \r\n                    className=\"checkout\"\r\n                    onClick={this.handleCheckout}>Checkout\r\n                </button>\r\n                <br/><br/> \r\n                </div>\r\n                \r\n                </>\r\n            )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Show_cart;","C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\containers\\CustomCards.js",["173","174","175","176","177"],"import React, { useEffect, useState } from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Card from 'react-bootstrap/Card'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport database from '../firebase';\r\nimport { getDefaultNormalizer } from '@testing-library/dom';\r\n\r\nfunction CustomCards(props) {\r\n    //{title, imageURL, body, price, ingredients}\r\n    //change\r\n    const [titles, setTitles] = useState(props.title)\r\n    const [titleValue, setTitleValue] = useState(\"Sample Title\")\r\n    \r\n    const [imageURL, setImageURL] = useState(props.imageURL)\r\n    \r\n    const [body, setBody] = useState(props.body)\r\n    const [bodyValue, setBodyValue] = useState(\"Sample Body\")\r\n    \r\n    const [price, setPrice] = useState(\"$\" + props.price)\r\n    const [price_] = useState(props.price)\r\n    const [priceValue, setPriceValue] = useState(\"Sample Price\")\r\n    \r\n    const [ingredients, setIngredients] = useState(props.ingredients)\r\n    const [ingredientsValue, setIngredientsValue] = useState(\"Sample Ingredients\")\r\n\r\n    const [quantity, setQuantity] = useState(props.quantity)\r\n    const [quantityValue, setQuantityValue] = useState(\"Sample Quantity\")\r\n\r\n    const [showInput, setInputState] = useState(false)\r\n\r\n    const [ID, setID] = useState(props.ID)\r\n\r\n    const [image, setImage] = useState(null);\r\n    const storage = database.storage();\r\n    const id = ID;\r\n    const FoodCollection = database.firestore().collection(\"FoodCollection\")\r\n\r\n\r\n    function save(event) {\r\n        event.preventDefault();\r\n        //upload image to firebase\r\n        const uploadTask = storage.ref(id+\"/\"+ image.name).put(image);\r\n        var imageURL_ = \"\";\r\n        //read image_url from firebase\r\n        uploadTask.on(\r\n            \"state_changed\",\r\n            snapshot =>{},\r\n            error=>{\r\n                alert(error);\r\n            },\r\n            ()=>{\r\n                storage.ref(id).child(image.name).getDownloadURL()\r\n                .then(url=>{\r\n                    imageURL_ = url;\r\n                })\r\n            }\r\n        )\r\n        \r\n        \r\n        setTimeout(() => {\r\n            //alert(imageURL_); \r\n            FoodCollection.doc(id).collection(\"food\").doc(titleValue).set({\r\n                Foodname: titleValue,\r\n                ImageUrl: imageURL_,\r\n                Body: bodyValue,\r\n                Price: priceValue,\r\n                Ingredients: ingredientsValue,\r\n                SellerID: id,\r\n                Quantity: quantityValue\r\n            }).then(()=>{\r\n                console.log(\"Information have been sent\");\r\n                //alert(\"Information have been sent\");\r\n            }).catch((err)=>{\r\n                alert(err.message);\r\n            });   \r\n\r\n            setTitles(titleValue)\r\n            setImageURL(imageURL_)\r\n            setBody(bodyValue)\r\n            setPrice(\"$ \"+priceValue)\r\n            setIngredients(ingredientsValue)\r\n            setQuantity(quantityValue)\r\n\r\n            setInputState(false)\r\n        }, 2000);\r\n\r\n    }\r\n \r\n    function edit () {\r\n        setInputState(true)\r\n    }\r\n\r\n    function cancel () {\r\n        setInputState(false)\r\n    }\r\n\r\n    function updateTitleValue (event) {\r\n        setTitleValue(event.target.value)\r\n        console.log(titleValue)\r\n    }\r\n\r\n    function updateImageURLValue (event){\r\n        event.preventDefault();\r\n        if (event.target.files[0]){\r\n            setImage(event.target.files[0]);\r\n        }\r\n    }\r\n\r\n    function updateBodyValue (event) {\r\n        setBodyValue(event.target.value)\r\n    }\r\n\r\n    function updatePriceValue (event) {\r\n        setPriceValue(event.target.value)\r\n    }\r\n\r\n    function updateIngredientsValue (event) {\r\n        setIngredientsValue(event.target.value)\r\n    }\r\n\r\n    function updateQuantityValue (event) {\r\n        setQuantityValue(event.target.value)\r\n    }\r\n\r\n    function deleteCard () {\r\n        FoodCollection.doc(id).collection(\"food\").doc(titles).delete();\r\n        alert(\"Refresh to complete Delete\")\r\n    }\r\n\r\n\r\n    if(showInput) {\r\n        return (\r\n            <Card>\r\n                <input onChange={updateTitleValue} placeholder=\"Edit Title\"></input>\r\n                <input type=\"file\" onChange={updateImageURLValue} placeholder=\"Edit Image\"></input>\r\n                <input onChange={updateBodyValue} placeholder=\"Edit Body\"></input>\r\n                <input onChange={updatePriceValue} placeholder=\"Edit Price\"></input>\r\n                <input onChange={updateIngredientsValue} placeholder=\"Edit Ingredients\"></input>\r\n                <input onChange={updateQuantityValue} placeholder=\"Edit Quantity\"></input>\r\n                <button onClick={save}>Save</button>\r\n                <button onClick={cancel}>Cancel</button>\r\n                <button onClick={deleteCard}>Delete</button>\r\n            </Card>\r\n        );\r\n    } else {\r\n        return (\r\n                <Card>\r\n                        <Card.Img variant=\"top\" src = {imageURL} />\r\n                        \r\n                        <Card.Body>\r\n                        \r\n                            <Card.Title>{titles}</Card.Title>\r\n                            <Card.Text>\r\n                                {body}\r\n                            </Card.Text>\r\n                        \r\n                        </Card.Body>\r\n\r\n                        <Card.Footer>\r\n\r\n                            <p>{price}</p>\r\n                            <small className=\"text-muted\"> Contains: {ingredients} </small>\r\n                            <br></br>\r\n                            <small className=\"text-muted\"> Quantity: {quantity} </small>\r\n                            <br></br>\r\n                            <button onClick = {edit}>Edit</button>\r\n                            \r\n\r\n                        </Card.Footer> \r\n                    \r\n                </Card> \r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default CustomCards","C:\\Users\\stvch\\Desktop\\ComfyBake\\src\\containers\\Display.js",["178","179","180","181"],"import React, {useState, useEffect} from \"react\";\r\nimport database from '../firebase';\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport SellerPage from './SellersPage';\r\n\r\n\r\nconst db = database.firestore();\r\nconst storage = database.storage();\r\n\r\nconst Display = (props) =>{\r\n    \r\n    const [FirstName, setFirstName] = useState('');\r\n    const [LastName, setLastName] = useState('');\r\n    const [Address, setAddress] = useState('');\r\n    const [PhoneNum, setPhoneNum] = useState('');\r\n    \r\n    const [TestFirstName, setTestFirstName] = useState('');\r\n    const [TestLastName, setTestLastName] = useState('');\r\n    const [TestAddress, setTestAddress] = useState('');\r\n    const [TestPhoneNum, setTestPhoneNum] = useState('');\r\n    const [Size, setSize] = useState(0);\r\n\r\n    const [TestBody, setTestBody] = useState(\"\");\r\n    const [TestFoodname, setTestFoodname] = useState(\"\");\r\n    const [TestImageUrl, setTestImageUrl] = useState();\r\n    const [TestSize, setTestSize] = useState(0);\r\n    \r\n    const {AccountID} = props\r\n    const [SellerID, setSellerID] = useState('');\r\n    const [AccountMatch, setAccountMatch] = useState('');\r\n    const [jump, setjump] = useState(false);\r\n    \r\n    const id = \"user1@gmail.com\";\r\n    \r\n    //method1\r\n    class User{\r\n        constructor(FirstName, LastName, Address, City, State, PhoneNumber){\r\n            this.FirstName = FirstName;\r\n            this.LastName = LastName;\r\n            this.Address = Address;\r\n            this.City = City;\r\n            this.State = State;\r\n            this.PhoneNumber = PhoneNumber;\r\n        }\r\n    }\r\n    \r\n    var userConverter = {\r\n        fromFirestore: function(snapshot, options){\r\n            const data = snapshot.data(options);\r\n            return new User(data.personalinfo.FirstName, data.personalinfo.LastName,\r\n                data.personalinfo.Address, data.personalinfo.City, \r\n                data.personalinfo.State, data.personalinfo.PhoneNumber);\r\n        }\r\n    }\r\n    \r\n    //var docRef = db.collection(\"FoodCollection\").doc(id).collection(\"food\").doc(\"Maple Sugar Scrolls\");\r\n    \r\n    db.collection(\"users\").doc(id)\r\n    .withConverter(userConverter).get().then((doc) => {\r\n        var user = doc.data();\r\n        setLastName(user.LastName);\r\n        setFirstName(user.FirstName);\r\n        setPhoneNum(user.PhoneNumber);\r\n        setAddress(user.Address + \" \" + user.City + \" \" + user.State)\r\n    });\r\n\r\n    //method2\r\n    db.collection(\"users\").get().then(querySnapshot =>{\r\n        const data = querySnapshot.docs.map(doc=> doc.data());\r\n    \r\n        //console.log(data[0].personalinfo.FirstName);\r\n        /*\r\n        setTestFirstName(data[5].personalinfo.FirstName);\r\n        setTestLastName(data[5].personalinfo.LastName);\r\n        setTestPhoneNum(data[5].personalinfo.PhoneNumber);\r\n        setTestAddress(data[5].personalinfo.Address + \" \" \r\n                        + data[5].personalinfo.City + \" \"\r\n                        + data[5].personalinfo.State);\r\n        */\r\n       \r\n       setSize(data.length);\r\n       setHelperfunction(data[5]);\r\n    })\r\n\r\n    \r\n    function setHelperfunction (data_1){\r\n        setTestFirstName(data_1.personalinfo.FirstName);\r\n        setTestLastName(data_1.personalinfo.LastName);\r\n        setTestPhoneNum(data_1.personalinfo.PhoneNumber);\r\n        setTestAddress(data_1.personalinfo.Address + \" \" \r\n                        + data_1.personalinfo.City + \" \"\r\n                        + data_1.personalinfo.State); \r\n    }\r\n    \r\n\r\n    //method3\r\n    db.collection(\"FoodCollection\").doc(id).collection(\"food\").get().then(querySnapshot =>{\r\n        const data = querySnapshot.docs.map(doc=> doc.data());\r\n        setTestSize(data.length);\r\n        setHelperfunction_2(data[3]);\r\n        \r\n    })\r\n\r\n    function setHelperfunction_2(data_2){\r\n        setTestBody(data_2.Body);\r\n        setTestFoodname(data_2.Foodname);\r\n        setTestImageUrl(data_2.ImageUrl);\r\n    }\r\n\r\n    const [TestBody_, setTestBody_] = useState(\"\");\r\n    const [TestFoodname_, setTestFoodname_] = useState(\"\");\r\n    const [TestImageUrl_, setTestImageUrl_] = useState();\r\n    const [size_seller, setSize_seller] = useState(0);\r\n    //method4\r\n    //db.collection(\"FoodCollection\").get().then(querySnapshot =>{\r\n    db.collectionGroup(\"food\").get().then(querySnapshot =>{\r\n        const data = querySnapshot.docs.map(doc=> doc.data());\r\n        console.log(data);\r\n        setSize_seller(data.length);\r\n        setHelperfunction_3(data[1]);\r\n    })\r\n\r\n    function setHelperfunction_3(data_3){\r\n        setTestBody_(data_3.Body);\r\n        setTestFoodname_(data_3.Foodname);\r\n        setTestImageUrl_(data_3.ImageUrl);\r\n    }\r\n\r\n    //delete document \r\n    db.collection(\"FoodCollection\").doc(\"user2@gmail.com\").collection(\"food\").doc(\"2\").delete();\r\n\r\n    //update \r\n    db.collection(\"FoodCollection\").doc(\"user5@gmail.com\").collection(\"food\").doc(\"t\")\r\n        .update({\r\n            \"Body\": \"changed\"\r\n    })\r\n\r\n    //jump even \r\n    const handleJump =() =>{\r\n        setjump(true);\r\n    }\r\n\r\n    //logout\r\n    const handleLogout = () =>{\r\n        setAccountMatch(AccountID==SellerID);\r\n        setTimeout(() => {\r\n            database.auth().signOut();\r\n        }, 100);\r\n    }\r\n    \r\n    return (\r\n        <div> \r\n            {jump? (\r\n                <>\r\n                <SellerPage\r\n                    AccountID = {AccountID}\r\n                    SellerID = {SellerID}\r\n                />\r\n                </>\r\n            ):(\r\n                <>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <p>AccountID:{AccountID}</p>\r\n                <p>SellerID:{SellerID}</p>\r\n                <br/>\r\n                <input value={SellerID}\r\n                    placeholder = \"SellerID\"\r\n                    onChange={(e) => setSellerID(e.target.value)}\r\n                /><br/>\r\n                <button onClick={handleJump}> Jump</button>\r\n                <br/>\r\n                    <LinkContainer to=\"/login\">  \r\n                        <Nav.Link>\r\n                            <button onClick={handleLogout}>Logout</button><br/>\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n                <br/>\r\n                <p>method4</p>\r\n                <p>count: {size_seller}</p>\r\n                <p>Foodname: {TestFoodname_}</p>\r\n                <p>Body: {TestBody_}</p>\r\n                <p>ImageUrl: {TestImageUrl_}</p>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <p>method1</p>\r\n                <p>FirstName: {FirstName}</p>\r\n                <p>LastName: {LastName}</p>\r\n                <p>PhoneNumber: {PhoneNum}</p>\r\n                <p>Address: {Address}</p>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <p>method2</p>\r\n                <p>TestFirstName: {TestFirstName}</p>\r\n                <p>TestLastName: {TestLastName}</p>\r\n                <p>TestPhoneNumber: {TestPhoneNum}</p>\r\n                <p>TestAddress: {TestAddress}</p>\r\n                <p>Size: {Size}</p>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <p>method3</p>\r\n                <p>Foodname: {TestFoodname}</p>\r\n                <p>Body: {TestBody}</p>\r\n                <p>ImageUrl: {TestImageUrl}</p>\r\n                <p>Size: {TestSize}</p>\r\n                </>\r\n            )}\r\n            \r\n        </div>\r\n    \r\n    );\r\n    \r\n\r\n}\r\n\r\nexport default Display;\r\n/*\r\n        <div> \r\n            {jump? (\r\n                <>\r\n                <SellerPage\r\n                    AccountID = {AccountID}\r\n                    SellerID = {SellerID}\r\n                />\r\n                </>\r\n            ):(\r\n                <>\r\n                </>\r\n            )}\r\n            \r\n        </div>\r\n*/",{"ruleId":"182","severity":1,"message":"183","line":34,"column":24,"nodeType":"184","messageId":"185","endLine":34,"endColumn":26},{"ruleId":"182","severity":1,"message":"186","line":31,"column":17,"nodeType":"184","messageId":"185","endLine":31,"endColumn":19},{"ruleId":"182","severity":1,"message":"183","line":32,"column":15,"nodeType":"184","messageId":"185","endLine":32,"endColumn":17},{"ruleId":"187","severity":1,"message":"188","line":33,"column":15,"nodeType":"189","messageId":"190","endLine":33,"endColumn":20},{"ruleId":"182","severity":1,"message":"183","line":40,"column":27,"nodeType":"184","messageId":"185","endLine":40,"endColumn":29},{"ruleId":"191","severity":1,"message":"192","line":65,"column":6,"nodeType":"193","endLine":65,"endColumn":8,"suggestions":"194"},{"ruleId":"195","severity":1,"message":"196","line":96,"column":11,"nodeType":"197","messageId":"198","endLine":100,"endColumn":13},{"ruleId":"187","severity":1,"message":"199","line":1,"column":10,"nodeType":"189","messageId":"190","endLine":1,"endColumn":30},{"ruleId":"187","severity":1,"message":"200","line":1,"column":32,"nodeType":"189","messageId":"190","endLine":1,"endColumn":45},{"ruleId":"187","severity":1,"message":"201","line":2,"column":26,"nodeType":"189","messageId":"190","endLine":2,"endColumn":35},{"ruleId":"187","severity":1,"message":"202","line":3,"column":27,"nodeType":"189","messageId":"190","endLine":3,"endColumn":33},{"ruleId":"187","severity":1,"message":"203","line":3,"column":35,"nodeType":"189","messageId":"190","endLine":3,"endColumn":40},{"ruleId":"187","severity":1,"message":"204","line":11,"column":22,"nodeType":"189","messageId":"190","endLine":11,"endColumn":32},{"ruleId":"187","severity":1,"message":"205","line":12,"column":20,"nodeType":"189","messageId":"190","endLine":12,"endColumn":28},{"ruleId":"187","severity":1,"message":"206","line":17,"column":11,"nodeType":"189","messageId":"190","endLine":17,"endColumn":17},{"ruleId":"187","severity":1,"message":"207","line":35,"column":13,"nodeType":"189","messageId":"190","endLine":35,"endColumn":17},{"ruleId":"187","severity":1,"message":"208","line":36,"column":13,"nodeType":"189","messageId":"190","endLine":36,"endColumn":16},{"ruleId":"187","severity":1,"message":"209","line":37,"column":13,"nodeType":"189","messageId":"190","endLine":37,"endColumn":16},{"ruleId":"182","severity":1,"message":"186","line":74,"column":38,"nodeType":"184","messageId":"185","endLine":74,"endColumn":40},{"ruleId":"187","severity":1,"message":"210","line":1,"column":8,"nodeType":"189","messageId":"190","endLine":1,"endColumn":16},{"ruleId":"187","severity":1,"message":"202","line":6,"column":27,"nodeType":"189","messageId":"190","endLine":6,"endColumn":33},{"ruleId":"187","severity":1,"message":"203","line":6,"column":35,"nodeType":"189","messageId":"190","endLine":6,"endColumn":40},{"ruleId":"187","severity":1,"message":"211","line":6,"column":42,"nodeType":"189","messageId":"190","endLine":6,"endColumn":46},{"ruleId":"187","severity":1,"message":"212","line":7,"column":8,"nodeType":"189","messageId":"190","endLine":7,"endColumn":15},{"ruleId":"187","severity":1,"message":"213","line":16,"column":7,"nodeType":"189","messageId":"190","endLine":16,"endColumn":16},{"ruleId":"187","severity":1,"message":"214","line":27,"column":12,"nodeType":"189","messageId":"190","endLine":27,"endColumn":16},{"ruleId":"187","severity":1,"message":"215","line":28,"column":12,"nodeType":"189","messageId":"190","endLine":28,"endColumn":20},{"ruleId":"187","severity":1,"message":"216","line":30,"column":11,"nodeType":"189","messageId":"190","endLine":30,"endColumn":20},{"ruleId":"187","severity":1,"message":"217","line":38,"column":11,"nodeType":"189","messageId":"190","endLine":38,"endColumn":25},{"ruleId":"187","severity":1,"message":"218","line":42,"column":11,"nodeType":"189","messageId":"190","endLine":42,"endColumn":23},{"ruleId":"187","severity":1,"message":"219","line":91,"column":11,"nodeType":"189","messageId":"190","endLine":91,"endColumn":21},{"ruleId":"195","severity":1,"message":"196","line":97,"column":13,"nodeType":"197","messageId":"198","endLine":97,"endColumn":25},{"ruleId":"195","severity":1,"message":"196","line":108,"column":7,"nodeType":"197","messageId":"198","endLine":108,"endColumn":19},{"ruleId":"187","severity":1,"message":"220","line":8,"column":8,"nodeType":"189","messageId":"190","endLine":8,"endColumn":12},{"ruleId":"187","severity":1,"message":"212","line":14,"column":8,"nodeType":"189","messageId":"190","endLine":14,"endColumn":15},{"ruleId":"187","severity":1,"message":"221","line":25,"column":26,"nodeType":"189","messageId":"190","endLine":25,"endColumn":41},{"ruleId":"182","severity":1,"message":"183","line":25,"column":64,"nodeType":"184","messageId":"185","endLine":25,"endColumn":66},{"ruleId":"187","severity":1,"message":"222","line":32,"column":11,"nodeType":"189","messageId":"190","endLine":32,"endColumn":13},{"ruleId":"182","severity":1,"message":"186","line":35,"column":19,"nodeType":"184","messageId":"185","endLine":35,"endColumn":21},{"ruleId":"191","severity":1,"message":"223","line":55,"column":8,"nodeType":"193","endLine":55,"endColumn":10,"suggestions":"224"},{"ruleId":"195","severity":1,"message":"196","line":84,"column":21,"nodeType":"197","messageId":"198","endLine":88,"endColumn":23},{"ruleId":"187","severity":1,"message":"225","line":34,"column":12,"nodeType":"189","messageId":"190","endLine":34,"endColumn":20},{"ruleId":"187","severity":1,"message":"226","line":34,"column":22,"nodeType":"189","messageId":"190","endLine":34,"endColumn":33},{"ruleId":"187","severity":1,"message":"227","line":35,"column":12,"nodeType":"189","messageId":"190","endLine":35,"endColumn":25},{"ruleId":"187","severity":1,"message":"228","line":35,"column":27,"nodeType":"189","messageId":"190","endLine":35,"endColumn":43},{"ruleId":"187","severity":1,"message":"229","line":36,"column":12,"nodeType":"189","messageId":"190","endLine":36,"endColumn":25},{"ruleId":"187","severity":1,"message":"230","line":37,"column":12,"nodeType":"189","messageId":"190","endLine":37,"endColumn":32},{"ruleId":"187","severity":1,"message":"231","line":16,"column":5,"nodeType":"189","messageId":"190","endLine":16,"endColumn":7},{"ruleId":"187","severity":1,"message":"232","line":5,"column":10,"nodeType":"189","messageId":"190","endLine":5,"endColumn":19},{"ruleId":"187","severity":1,"message":"233","line":6,"column":8,"nodeType":"189","messageId":"190","endLine":6,"endColumn":18},{"ruleId":"234","severity":1,"message":"235","line":41,"column":13,"nodeType":"236","messageId":"185","endLine":41,"endColumn":21},{"ruleId":"187","severity":1,"message":"237","line":1,"column":16,"nodeType":"189","messageId":"190","endLine":1,"endColumn":24},{"ruleId":"187","severity":1,"message":"201","line":1,"column":26,"nodeType":"189","messageId":"190","endLine":1,"endColumn":35},{"ruleId":"187","severity":1,"message":"232","line":5,"column":10,"nodeType":"189","messageId":"190","endLine":5,"endColumn":19},{"ruleId":"187","severity":1,"message":"238","line":6,"column":9,"nodeType":"189","messageId":"190","endLine":6,"endColumn":16},{"ruleId":"187","severity":1,"message":"239","line":7,"column":10,"nodeType":"189","messageId":"190","endLine":7,"endColumn":60},{"ruleId":"187","severity":1,"message":"240","line":8,"column":8,"nodeType":"189","messageId":"190","endLine":8,"endColumn":17},{"ruleId":"187","severity":1,"message":"241","line":11,"column":7,"nodeType":"189","messageId":"190","endLine":11,"endColumn":14},{"ruleId":"187","severity":1,"message":"242","line":13,"column":7,"nodeType":"189","messageId":"190","endLine":13,"endColumn":17},{"ruleId":"187","severity":1,"message":"201","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":26},{"ruleId":"234","severity":1,"message":"235","line":31,"column":13,"nodeType":"236","messageId":"185","endLine":31,"endColumn":21},{"ruleId":"187","severity":1,"message":"237","line":1,"column":16,"nodeType":"189","messageId":"190","endLine":1,"endColumn":24},{"ruleId":"187","severity":1,"message":"201","line":1,"column":26,"nodeType":"189","messageId":"190","endLine":1,"endColumn":35},{"ruleId":"187","severity":1,"message":"243","line":2,"column":8,"nodeType":"189","messageId":"190","endLine":2,"endColumn":17},{"ruleId":"187","severity":1,"message":"244","line":4,"column":8,"nodeType":"189","messageId":"190","endLine":4,"endColumn":16},{"ruleId":"187","severity":1,"message":"241","line":10,"column":7,"nodeType":"189","messageId":"190","endLine":10,"endColumn":14},{"ruleId":"187","severity":1,"message":"245","line":11,"column":7,"nodeType":"189","messageId":"190","endLine":11,"endColumn":11},{"ruleId":"187","severity":1,"message":"246","line":12,"column":7,"nodeType":"189","messageId":"190","endLine":12,"endColumn":15},{"ruleId":"182","severity":1,"message":"183","line":72,"column":30,"nodeType":"184","messageId":"185","endLine":72,"endColumn":32},{"ruleId":"247","severity":1,"message":"248","line":102,"column":31,"nodeType":"249","messageId":"250","endLine":102,"endColumn":42},{"ruleId":"247","severity":1,"message":"248","line":103,"column":29,"nodeType":"249","messageId":"250","endLine":103,"endColumn":40},{"ruleId":"247","severity":1,"message":"248","line":104,"column":27,"nodeType":"249","messageId":"250","endLine":104,"endColumn":38},{"ruleId":"247","severity":1,"message":"248","line":105,"column":25,"nodeType":"249","messageId":"250","endLine":105,"endColumn":36},{"ruleId":"182","severity":1,"message":"183","line":165,"column":31,"nodeType":"184","messageId":"185","endLine":165,"endColumn":33},{"ruleId":"251","severity":1,"message":"252","line":206,"column":45,"nodeType":"253","messageId":"254","endLine":206,"endColumn":47},{"ruleId":"182","severity":1,"message":"183","line":207,"column":41,"nodeType":"184","messageId":"185","endLine":207,"endColumn":43},{"ruleId":"255","severity":1,"message":"256","line":212,"column":45,"nodeType":"197","endLine":212,"endColumn":67},{"ruleId":"187","severity":1,"message":"201","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":26},{"ruleId":"187","severity":1,"message":"257","line":2,"column":8,"nodeType":"189","messageId":"190","endLine":2,"endColumn":17},{"ruleId":"187","severity":1,"message":"199","line":6,"column":10,"nodeType":"189","messageId":"190","endLine":6,"endColumn":30},{"ruleId":"187","severity":1,"message":"258","line":20,"column":12,"nodeType":"189","messageId":"190","endLine":20,"endColumn":18},{"ruleId":"187","severity":1,"message":"259","line":31,"column":16,"nodeType":"189","messageId":"190","endLine":31,"endColumn":21},{"ruleId":"187","severity":1,"message":"201","line":1,"column":26,"nodeType":"189","messageId":"190","endLine":1,"endColumn":35},{"ruleId":"187","severity":1,"message":"241","line":9,"column":7,"nodeType":"189","messageId":"190","endLine":9,"endColumn":14},{"ruleId":"187","severity":1,"message":"260","line":31,"column":12,"nodeType":"189","messageId":"190","endLine":31,"endColumn":24},{"ruleId":"182","severity":1,"message":"183","line":146,"column":34,"nodeType":"184","messageId":"185","endLine":146,"endColumn":36},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-unused-vars","'time_' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'db'. Either include it or remove the dependency array.","ArrayExpression",["261"],"react/jsx-pascal-case","Imported JSX component Show_cart must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","'getDefaultNormalizer' is defined but never used.","'queryByTestId' is defined but never used.","'useEffect' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'setImgList' is assigned a value but never used.","'setDList' is assigned a value but never used.","'orders' is assigned a value but never used.","'addy' is assigned a value but never used.","'img' is assigned a value but never used.","'des' is assigned a value but never used.","'database' is defined but never used.","'Link' is defined but never used.","'Display' is defined but never used.","'PAGE_CART' is assigned a value but never used.","'page' is assigned a value but never used.","'cartitem' is assigned a value but never used.","'addToCart' is assigned a value but never used.","'removeFromCart' is assigned a value but never used.","'handleSumbit' is assigned a value but never used.","'renderCart' is assigned a value but never used.","'Card' is defined but never used.","'setAccountMatch' is assigned a value but never used.","'id' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'SellerID' and 'db'. Either include them or remove the dependency array.",["262"],"'feedback' is assigned a value but never used.","'setFeedback' is assigned a value but never used.","'receiverEmail' is assigned a value but never used.","'setReceiverEmail' is assigned a value but never used.","'formSubmitted' is assigned a value but never used.","'formSubmitSuccessful' is assigned a value but never used.","'db' is assigned a value but never used.","'addToCart' is defined but never used.","'SellerPage' is defined but never used.","no-dupe-keys","Duplicate key 'quantity'.","ObjectExpression","'useState' is defined but never used.","'account' is defined but never used.","'__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED' is defined but never used.","'Show_cart' is defined but never used.","'storage' is assigned a value but never used.","'realtimeDB' is assigned a value but never used.","'testUtils' is defined but never used.","'firebase' is defined but never used.","'user' is assigned a value but never used.","'userName' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Container' is defined but never used.","'price_' is assigned a value but never used.","'setID' is assigned a value but never used.","'AccountMatch' is assigned a value but never used.",{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},"Update the dependencies array to be: [db]",{"range":"267","text":"268"},"Update the dependencies array to be: [SellerID, db]",{"range":"269","text":"270"},[1806,1808],"[db]",[1828,1830],"[SellerID, db]"]
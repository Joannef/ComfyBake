[{"/Users/franciscoruiz/Desktop/ComfyBake/src/index.js":"1","/Users/franciscoruiz/Desktop/ComfyBake/src/reportWebVitals.js":"2","/Users/franciscoruiz/Desktop/ComfyBake/src/App.js":"3","/Users/franciscoruiz/Desktop/ComfyBake/src/Routes.js":"4","/Users/franciscoruiz/Desktop/ComfyBake/src/containers/NotFound.js":"5","/Users/franciscoruiz/Desktop/ComfyBake/src/containers/Login.js":"6","/Users/franciscoruiz/Desktop/ComfyBake/src/containers/Signup.js":"7","/Users/franciscoruiz/Desktop/ComfyBake/src/containers/OrderDetails.js":"8","/Users/franciscoruiz/Desktop/ComfyBake/src/containers/Home.js":"9","/Users/franciscoruiz/Desktop/ComfyBake/src/containers/SellersPage.js":"10","/Users/franciscoruiz/Desktop/ComfyBake/src/containers/OrderCon.js":"11","/Users/franciscoruiz/Desktop/ComfyBake/src/containers/Cart.js":"12","/Users/franciscoruiz/Desktop/ComfyBake/src/firebase.js":"13","/Users/franciscoruiz/Desktop/ComfyBake/src/containers/Transfer.js":"14","/Users/franciscoruiz/Desktop/ComfyBake/src/containers/LoadCards.js":"15","/Users/franciscoruiz/Desktop/ComfyBake/src/containers/CustomCards.js":"16","/Users/franciscoruiz/Desktop/ComfyBake/src/containers/BrowsingCards.js":"17","/Users/franciscoruiz/Desktop/ComfyBake/src/containers/Display.js":"18","/Users/franciscoruiz/Desktop/ComfyBake/src/containers/displayCart.js":"19","/Users/franciscoruiz/Desktop/ComfyBake/src/containers/DisplayGrid.js":"20"},{"size":589,"mtime":1620839895681,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1620839895681,"results":"23","hashOfConfig":"22"},{"size":1384,"mtime":1620839895675,"results":"24","hashOfConfig":"22"},{"size":1066,"mtime":1620839895675,"results":"25","hashOfConfig":"22"},{"size":199,"mtime":1620839895678,"results":"26","hashOfConfig":"22"},{"size":2741,"mtime":1621005329746,"results":"27","hashOfConfig":"22"},{"size":10034,"mtime":1621005329747,"results":"28","hashOfConfig":"22"},{"size":1315,"mtime":1620839895679,"results":"29","hashOfConfig":"22"},{"size":4756,"mtime":1621005329746,"results":"30","hashOfConfig":"22"},{"size":7865,"mtime":1621005329747,"results":"31","hashOfConfig":"22"},{"size":3365,"mtime":1621006968581,"results":"32","hashOfConfig":"22"},{"size":3550,"mtime":1621005329745,"results":"33","hashOfConfig":"22"},{"size":570,"mtime":1621005329748,"results":"34","hashOfConfig":"22"},{"size":556,"mtime":1620839895680,"results":"35","hashOfConfig":"22"},{"size":2804,"mtime":1621005329746,"results":"36","hashOfConfig":"22"},{"size":5682,"mtime":1621005329745,"results":"37","hashOfConfig":"22"},{"size":2605,"mtime":1621005329744,"results":"38","hashOfConfig":"22"},{"size":7583,"mtime":1620839895677,"results":"39","hashOfConfig":"22"},{"size":9484,"mtime":1621005329747,"results":"40","hashOfConfig":"22"},{"size":3059,"mtime":1621005329745,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nx57kc",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},"/Users/franciscoruiz/Desktop/ComfyBake/src/index.js",[],"/Users/franciscoruiz/Desktop/ComfyBake/src/reportWebVitals.js",[],"/Users/franciscoruiz/Desktop/ComfyBake/src/App.js",[],"/Users/franciscoruiz/Desktop/ComfyBake/src/Routes.js",[],"/Users/franciscoruiz/Desktop/ComfyBake/src/containers/NotFound.js",[],"/Users/franciscoruiz/Desktop/ComfyBake/src/containers/Login.js",["95"],"import React, {useState, useEffect} from \"react\";\nimport database from '../firebase';\nimport Nav from \"react-bootstrap/Nav\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./Login.css\";\nimport Home from \"./Home\";\n\nconst Login = () =>{\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [account, setaccount] = useState(false);\n    const [AccountID, setAccountID] = useState('');\n\n    const handleLogin =() =>{\n        database.auth().signInWithEmailAndPassword(email,password)\n        .then(()=>{\n            setAccountID(email);\n            setEmail(\"\");\n            setPassword(\"\");\n            //if email and password is currect, then jump to home page\n            setTimeout(() => {\n                setaccount(true);\n            }, 200);\n\n        }).catch((err)=>{\n            alert(err);\n            setaccount(false);\n        });\n    }\n    \n    const authListener = () =>{\n        database.auth().onAuthStateChanged(account => {\n            if (account==true) {\n                setaccount(true);\n            }else{\n                setaccount(false);\n            }\n        });\n    };\n\n    useEffect(() => {\n        authListener();\n    }, []);\n\n    return (\n        <section className=\"login\">\n            <div className=\"loginContainer\">\n                {account?(\n                    <>\n                    <br/>\n                    <br/>\n                    <Home \n                        AccountID = {AccountID}\n                    />\n                    </>\n                ):(\n                    <>\n                    <div class=\"form\">\n                    <h1 className=\"customh1\">Welcome</h1>\n                    {/* <BorderWrapper> */}\n                    <input type=\"text\" required value={email}\n                        placeholder = \"Email\"\n                        onChange={(e) => setEmail(e.target.value)}\n                    /><br/>\n                    \n                    <input type=\"password\" required value={password}\n                        placeholder = \"Password\"\n                        onChange={(e) => setPassword(e.target.value)}\n                    /><br/>\n\n                    <button1 onClick={handleLogin}>Login</button1><br/> \n\n                    <p2>Don't have an account?</p2>\n                    <LinkContainer to=\"/signup\">   \n                        <Nav.Link>\n                            <button2>Sign-up</button2><br/>\n                        </Nav.Link>\n                    </LinkContainer>\n                    {/* </BorderWrapper> */}\n                    </div>\n                    </>\n                )}\n            </div>\n        </section>\n    );\n}\n\nexport default Login;\n\n","/Users/franciscoruiz/Desktop/ComfyBake/src/containers/Signup.js",["96","97","98","99","100","101"],"import React, {useState} from \"react\";\nimport database from '../firebase';\nimport Nav from \"react-bootstrap/Nav\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n// import BorderWrapper from 'react-border-wrapper'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./Signup.css\";\n\nconst db = database.firestore();\nconst userCollection = db.collection(\"users\");\nconst senderEmail = \"cbakeTeam@gmail.com\";\nconst templateId = \"template_j303hv9\";\n\n\nexport default function Signup() {\n    const [FirstName, setFirstName] = useState('');\n    const [LastName, setLastName] = useState('');\n    const [Address, setAddress] = useState('');\n    const [City, setCity] = useState('');\n    const [State, setState] = useState('');\n    const [PhoneNum, setPhoneNum] = useState('');\n    const [Email, setEmail] = useState('');\n    const [Password, setPassword] = useState('');\n    const [Vegan, setVegan] = useState(false);\n    const [GlutenFree, setGlutenFree] = useState(false);\n    const [DairyFree, setDairyFree] = useState(false);\n    const [Kosher, setKosher] = useState(false);\n    const [LactoseIntolerant, setLactoseIntolerant] = useState(false);\n    const [Peanut, setPeanut] = useState(false);\n    const [Almonds, setAlmonds] = useState(false);\n    const [Milk, setMilk] = useState(false);\n    const [Soy, setSoy] = useState(false);\n    const [Egg, setEgg] = useState(false);\n    const [feedback, setFeedback] = useState(\"\");\n    const [receiverEmail, setReceiverEmail] = useState(\"\");\n    const [formSubmitted, setFormSubmitted] = useState(false);\n    const [formSubmitSuccessful, setFormSubmitSuccessful] = useState(false);\n\n    const [signup, setsignup] = useState(false);\n\n    const handleSumbit = (e) =>{\n        sendFeedback({\n            templateId,\n            senderEmail,\n            receiverEmail:Email,\n            FirstName,\n            LastName,\n          })\n        setFormSubmitted(true)\n        e.preventDefault();\n\n        database.auth().createUserWithEmailAndPassword(Email,Password)\n        .then(()=>{\n            setsignup(true);\n\n            userCollection.doc(Email).set({\n                personalinfo: {\n                    FirstName:FirstName,\n                    LastName:LastName,\n                    Address:Address,\n                    City:City,\n                    State:State,\n                    PhoneNumber:PhoneNum\n                },\n                DietaryPreferences: {\n                    Vegan:Vegan,\n                    GlutenFree:GlutenFree,\n                    DairyFree:DairyFree,\n                    Kosher:Kosher,\n                    LactoseIntolerant:LactoseIntolerant\n                },\n                Allergies:{\n                    eanut:Peanut,\n                    Almonds:Almonds,\n                    Milk:Milk,\n                    Soy:Soy,\n                    Egg:Egg\n                },\n                shoppingcart: 0\n            }).then(()=>{\n                alert(\"Look out for an email confirming your account!\")\n            }).catch((err)=>{\n                alert(err.message);\n            });\n    \n            setFirstName(\"\");\n            setLastName(\"\");\n            setAddress(\"\");\n            setCity(\"\");\n            setState(\"\");\n            setPhoneNum(\"\");\n            setEmail(\"\");\n            setPassword(\"\");\n\n        }).catch((err)=>{\n            setsignup(false);\n            alert(err);\n        });\n        \n    }\n    const sendFeedback = ({\n        templateId,\n        senderEmail,\n        receiverEmail,\n        FirstName,\n        LastName,\n      }) => {\n        window.emailjs\n          .send(\n            \"default_service\",\n            templateId,\n            {\n              senderEmail,\n              receiverEmail,\n              FirstName,\n              LastName,\n            },\n          )\n          .then(res => {\n            if (res.status === 200) {\n              setFormSubmitSuccessful(true)\n            }\n          })\n          // Handle errors here however you like\n          .catch(err => console.error(\"Failed to send feedback. Error: \", err))\n      }\n\n    return (\n        <section className=\"login\">\n            <div className=\"loginContainer\">\n                {signup? (\n                    <>\n                    <br/>\n                    <br/>\n                    <br/>\n                    <div className=\"transition\">\n                        <p className=\"customP\">Press continue to go to the login page</p>\n                        <LinkContainer to=\"/\">   \n                            <Nav.Link>\n                                <button className=\"customButton\"> Continue</button><br/>\n                            </Nav.Link>\n                        </LinkContainer>\n                    </div>\n                    </>\n                    ):(\n                    <>\n                    <div className=\"form\">\n                        <form className=\"Signup-form\" onSubmit={handleSumbit}>\n                        <h1 className=\"customh1\">Let's Get to Know one Another!</h1>\n                        {/* <BorderWrapper> */}\n                        <div>\n                            <label>Introductions</label><br/>\n                            <input type=\"text\" required value={FirstName}\n                                placeholder = \"FirstName\"\n                                onChange={(e) => setFirstName(e.target.value)}\n                            /><b/> <b/>\n                            <input type=\"text\" required value={LastName}\n                                placeholder = \"LastName\"\n                                onChange={(e) => setLastName(e.target.value)}\n                            /><br/>\n                        </div>\n                \n                        <div> \n                            <label>Address</label><br/>\n                            <input type=\"text\" required value={Address}\n                                placeholder = \"Address\"\n                                onChange = {(e) => setAddress(e.target.value)}\n                            /><br/>\n                            <input type=\"text\" required value={City}\n                                placeholder = \"City\"\n                                onChange = {(e) => setCity(e.target.value)}\n                            /><b/> <b/>\n                            <input type=\"text\" required value={State}\n                                placeholder = \"State\"\n                                onChange = {(e) => setState(e.target.value)}\n                            /><br/>\n                        </div>\n\n                        <div> \n                            <label>Contact</label><br/>\n                            <input type=\"text\" required value={PhoneNum}\n                                placeholder = \"Phone Number\"\n                                onChange = {(e) => setPhoneNum(e.target.value)}\n                            /><br/>\n                            <input type=\"text\" required value={Email}\n                                placeholder = \"Email\"\n                                onChange = {(e) => setEmail(e.target.value)}\n                            /><br/>\n                            <input type=\"password\" required value={Password}\n                                placeholder = \"Password\"\n                                onChange = {(e) => setPassword(e.target.value)}\n                            /><br/>\n                        </div>\n\n                        <div> \n                            <label>Dietary Preferences</label><br/>\n                            <input type=\"checkbox\"   value={Vegan}\n                                onClick={()=> setVegan(!Vegan)}\n                            /> Vegan <br/>\n                            <input type=\"checkbox\"  value={GlutenFree}\n                                onClick={()=> setGlutenFree(!GlutenFree)}\n                            /> Gluen Free<br/>\n                            <input type=\"checkbox\"  value={DairyFree}\n                                onClick={()=> setDairyFree(!DairyFree)}\n                            /> Dairy Free<br/>\n                            <input type=\"checkbox\"  value={Kosher}\n                                onClick={()=> setKosher(!Kosher)}\n                            /> Kosher<br/>\n                            <input type=\"checkbox\"  value={LactoseIntolerant}\n                                onClick={()=> setLactoseIntolerant(!LactoseIntolerant)}\n                            /> Lactose Intolerant<br/>\n                        </div>\n\n                        <div> \n                            <label>Allergies</label><br/>\n                            <input type=\"checkbox\"   value={Peanut}\n                                onClick={()=> setPeanut(!Peanut)}\n                            /> Peanut <br/>\n                            <input type=\"checkbox\"  value={Almonds}\n                                onClick={()=> setAlmonds(!Almonds)}\n                            /> Almonds<br/>\n                            <input type=\"checkbox\"  value={Milk}\n                                onClick={()=> setMilk(!Milk)}\n                            /> Milk<br/>\n                            <input type=\"checkbox\"  value={Soy}\n                                onClick={()=> setSoy(!Soy)}\n                            /> Soy<br/>\n                            <input type=\"checkbox\"  value={Egg}\n                                onClick={()=> setEgg(!Egg)}\n                            /> Egg<br/>\n                        </div>\n                        <button classname=\"center customButton\" type=\"submit\">Sign Up</button>\n                        \n                        \n                        <LinkContainer to=\"/\">   \n                            <Nav.Link>\n                            <button2>Sign in instead</button2><br/>\n                            </Nav.Link>\n                        </LinkContainer>\n                        {/* </BorderWrapper> */}\n                        </form>\n                        </div>\n                        </>\n                )}\n                    </div>\n        </section>   \n    );\n}\n\n//export default Signup;","/Users/franciscoruiz/Desktop/ComfyBake/src/containers/OrderDetails.js",["102"],"import database from '../firebase';\nimport \"./OrderDetails.css\";\nimport {useLocation} from 'react-router-dom';\n\nexport default function OrderDetails() {\n    let location = useLocation();\n    const id = location.state.id\n    const addy = location.state.addy;\n    const status = location.state.complete;\n    const plan = location.state.plan;\n    const price = location.state.price;\n    var subtotal = price*0.85;\n    var tax = price - subtotal;\n    \n    return (\n        <div class=\"big-rect\">\n            <k class=\"top-p\"> Order Details</k>\n            <f class=\"side-word-1\">{id}</f>\n            <f class=\"side-word-2\">{status}</f>\n            <f class=\"middle-word-1\">Ship To:</f>\n            <f class=\"middle-word-2\">{addy}</f>\n            <f class=\"middle-word-3\">Payment Information</f>\n            <f class=\"middle-word-4\">{plan}</f>\n            <f class=\"right-word-1\">Order Summary</f>\n            <f class=\"right-word-2a\">Subtotal</f>\n            <f class=\"right-word-2b\">{subtotal}</f>\n            <f class=\"right-word-3a\">Sales Tax</f>\n            <f class=\"right-word-3b\">{tax}</f>\n            <y class=\"faint-line\"/>\n            <f class=\"right-word-4a\">Total</f>\n            <f class=\"right-word-4b\">{price}</f>\n            <q class=\"bye-bye\"> We hope you order again soon!</q>\n        </div>\n    )\n};\n","/Users/franciscoruiz/Desktop/ComfyBake/src/containers/Home.js",["103","104","105","106","107","108","109"],"import React, {useEffect, useState} from \"react\"\nimport CardColumns from 'react-bootstrap/CardColumns'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport database from '../firebase';\nimport \"./Home.css\";\nimport LoadCards from './LoadCards'\n// import Cart from \"./Cart\"\nimport Nav from \"react-bootstrap/Nav\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport SellerPage from './SellersPage'; \nimport Transfer from './Transfer';\nimport './Cart.css';\nimport Show_cart from './displayCart';\nimport OrderCon from './OrderCon';\n\nfunction Home(props) {\n  const [firestoreArray, setFirestoreArray] = useState([]);\n  \n  const db = database.firestore();\n\n  const {AccountID} = props\n  const [SellerID, setSellerID] = useState('');\n  const [jump, setjump] = useState(false);\n  const [jumpreflash, setjumpreflash] = useState (false);\n  const [test, setTest] = useState('');\n  const [run, setRun] = useState(true);\n  const [CartOrOrder, setCartOrOrder] = useState(false);\n  const [order, setorder] = useState(false); \n\n  const [cartitem, setCartitem] = useState(0);\n\n  if (AccountID != \"\"){\n      if (run == true){\n        const time_ = db.collection(\"users\").doc(AccountID).update({\n        jump: false\n      });\n      setRun(false)\n    }\n\n    db.collection(\"users\").doc(AccountID).onSnapshot((doc) =>{\n      if (doc.data().jump == true){\n        setTest(\"data: true\");\n        setSellerID(doc.data().sellerID);\n        setTimeout(() => {\n          setjump(true);\n        }, 500);\n      }else \n        setTest(\"data: false\")\n      \n     \n      setCartitem(doc.data().shoppingcart)\n      \n    })\n  }\n  \n\n\n  useEffect(() => {\n        \n    db.collectionGroup(\"food\").get().then(querySnapshot => {\n        const data = querySnapshot.docs.map(doc => doc.data());\n        console.log(data);\n        setFirestoreArray(data);\n    })\n\n  }, [])\n\n  //jump even \n  const handleJump =() =>{\n      setSellerID(AccountID);\n      setTimeout(() => {\n          setjump(true);\n      }, 500);\n  }\n\n  //logout\n  const handleLogout = () =>{\n      setTimeout(() => {\n          database.auth().signOut();\n      }, 100);\n  }\n\n  //reflash\n  const handleReflash =()=>{\n    setjump(true);\n    setjumpreflash(true);\n  }\n\n  const handleJumpCart =()=>{\n    setCartOrOrder(true);\n  }\n\n  //Order page\n  const handleOrder = ()=>{\n    setCartOrOrder(true);\n    setorder(true);\n  }\n\n  return (\n    <div> \n      {CartOrOrder? (\n        <>\n        {order? (\n          <>\n          <OrderCon \n            AccountID = {AccountID}\n          />\n          </>\n        ):(\n          <>\n          <Show_cart \n            AccountID = {AccountID}\n            SellerID = {SellerID}\n            state_ = {\"home\"}\n          />\n          </>\n        )}\n        </>\n      ):(\n        <>\n        {jump? (\n          <>\n          <div>\n            {jumpreflash?(\n              <>\n              <Transfer\n                AccountID = {AccountID}\n                SellerID = {SellerID}\n                reflash = {false} \n              />\n              </>\n            ):(\n              <>\n              <SellerPage\n                AccountID = {AccountID}\n                SellerID = {SellerID}\n              />\n              </>\n            )}\n            </div>\n          </>\n        ):(\n          <>\n            <div className=\"Home\">\n\n            {/* <Cart />*/ }\n            <div className=\"lander\">\n              <h1>ComfyBake</h1>\n            </div>\n\n            <div className=\"cart\">\n              <button className=\"cart-link\" onClick={handleJumpCart}>View Cart 🛒({cartitem})</button>\n            </div>\n\n            <div className=\"button\">\n              <button onClick={handleJump}> MySeller Page</button>\n              <button onClick={handleReflash}> Reflash</button>\n              <button onClick={handleOrder}> Orders </button>\n              <LinkContainer to=\"/\">  \n                <Nav.Link>\n                  <button onClick={handleLogout}>Logout</button><br/>\n                </Nav.Link>\n              </LinkContainer>\n              <br/>\n            </div>\n\n            <div className=\"content\">\n              <CardColumns>\n                {firestoreArray.map(each => <LoadCards key={each.Foodname}\n                                                  \n                  title= {each.Foodname}\n                  imageURL= {each.ImageUrl}\n                  body= {each.Body}\n                  price= {each.Price}\n                  ingredients= {each.Ingredients}\n                  sellerID = {each.SellerID}\n                  accountID = {AccountID}\n                  quantity =  {each.Quantity}\n                  />\n                )}\n              </CardColumns>\n            </div>\n\n            </div>\n          </>\n        )}\n      </>\n      )}      \n    </div>\n  );\n}\n\nexport default Home\n","/Users/franciscoruiz/Desktop/ComfyBake/src/containers/SellersPage.js",["110","111","112","113","114","115","116","117"],"//imrc snippet\nimport React, {useEffect, useState} from 'react';\nimport \"./SellerPage.css\"\nimport CustomCards from './CustomCards'\nimport BrowsingCards from './BrowsingCards'\n\nimport Container from 'react-bootstrap/Container'\nimport Card from 'react-bootstrap/Card'\nimport CardDeck from 'react-bootstrap/CardDeck'\nimport CardColumns from 'react-bootstrap/CardColumns'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport database from '../firebase';\n\nimport Display from './Display';\nimport Home from \"./Home\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport Transfer from './Transfer';\nimport './Cart.css';\nimport Show_cart from './displayCart';\n\nfunction Sellers(props) {\n    const {AccountID, SellerID} = props;\n    const [jumpback, setjumpback] = useState(false);\n    const [AccountMatch, setAccountMatch] = useState(AccountID == SellerID);\n    const [jumpreflash, setjumpreflash] = useState (false);\n    const [jumpcart, setjumpcart] = useState(false);\n\n    const [firestoreArray, setFirestoreArray] = useState([]);\n    const db = database.firestore();\n    //const id = \"user2@gmail.com\";\n    const id =\"\";\n    \n    const [cartitem, setCartitem] = useState(0);\n    if (AccountID != \"\"){\n        db.collection(\"users\").doc(AccountID).onSnapshot((doc) =>{\n            setCartitem(doc.data().shoppingcart)\n        })\n    }\n    /*\n    if (AccountMatch == true){\n        id = AccountID;\n    }else{\n        id = SellerID;\n    }*/\n\n    useEffect(() => {\n        \n        db.collection(\"FoodCollection\").doc(SellerID).collection(\"food\").get().then(querySnapshot => {\n            const data = querySnapshot.docs.map(doc => doc.data());\n            console.log(data);\n            setFirestoreArray(data);\n        })\n\n    }, [])\n\n    //jump even \n    const handleJumpback =() =>{\n        setjumpback(true);\n    }\n\n    //reflash\n    const handleReflash =()=>{\n        setjumpback(true);\n        setjumpreflash(true);\n    }\n\n    //logout\n    const handleLogout = () =>{\n        database.auth().signOut();\n    }\n\n    const handleJumpCart =()=>{\n        setjumpback(true);\n        setjumpcart(true);\n    }\n\n    return (\n        <div>\n            {jumpback?(\n                <>\n                {jumpcart? (\n                    <>\n                    <Show_cart \n                        AccountID = {AccountID}\n                        SellerID = {SellerID}\n                        state_ = {\"seller\"}\n                    />\n                    </>\n                ):(\n                    <>\n                    <div>\n                    {jumpreflash?(\n                        <>\n                        <Transfer\n                            AccountID = {AccountID}\n                            SellerID = {SellerID}\n                            reflash = {true}  \n                        />\n                        </>\n                    ):(\n                        <>\n                        <Home\n                            AccountID = {AccountID}\n                        />\n                        </>\n                    )}\n                    </div>\n                    </>\n                )}\n                </>\n            ):(\n                <>\n                <div>\n                    {AccountMatch?( //If Account Holder visits their own Sellers Page\n                        <>\n                        <div class = \"center\">\n                        <h1>Welcome To Your Home Kitchen</h1>\n                        <h5>Full Menu</h5>\n                        <button onClick={handleJumpback}> Home</button>\n                        <button onClick={handleReflash}> Reflash</button>\n                        <LinkContainer to=\"/\">  \n                            <Nav.Link>\n                                <button onClick={handleLogout}>Logout</button><br/>\n                            </Nav.Link>\n                        </LinkContainer>\n                    <br></br>\n                    <div className=\"cart\">\n                        <button className=\"cart-link\" onClick={handleJumpCart}>View Cart 🛒({cartitem})</button>\n                    </div>\n\n                    <Container>\n\n                    <CardColumns>\n\n                        {firestoreArray.map(each => \n                            <CustomCards key={each.Foodname}\n                                                                \n                                title= {each.Foodname}\n                                imageURL= {each.ImageUrl}\n                                body= {each.Body}\n                                price= {each.Price}\n                                ingredients= {each.Ingredients}\n                                quantity =  {each.Quantity}\n                                sellerID = {each.SellerID}\n                                accountID = {AccountID}\n\n                            />\n\n                        //</div>\n                        )}\n\n                    </CardColumns>\n\n                    <br></br>\n                    <h5>Add Menu Item</h5>\n\n                    <CardDeck>\n                    \n                        <CustomCards \n                            ID = {AccountID}\n                            title= 'Add New Item'\n                            imageURL='https://static01.nyt.com/images/2017/12/13/dining/15COOKING-CREME-BRULEE1/15COOKING-CREME-BRULEE1-articleLarge.jpg'\n                            body='Enter new menu item description here. After press save and refresh the page to see it appear on your menu.'\n                            price=\"Enter new item price\"\n                            ingredients= \"Enter new item ingredients\"\n                            quantity =  \"Enter Quantity\"\n\n                        />\n\n                    </CardDeck>\n                \n                    </Container>\n                    </div>\n                    </>\n                    ):( //If Account Holder visits another Sellers Page\n                        <>\n                        <div class = \"center\">\n                            <h1>Seller's Home Kitchen</h1>\n                            <h5>Full Menu</h5>\n                            <button onClick={handleJumpback}> Home</button>\n                            <button onClick={handleReflash}> Reflash</button>\n                            <LinkContainer to=\"/\">  \n                                <Nav.Link>\n                                    <button onClick={handleLogout}>Logout</button><br/>\n                                </Nav.Link>\n                            </LinkContainer>\n                        <br></br>\n                        <div className=\"cart\">\n                        <button className=\"cart-link\" onClick={handleJumpCart}>View Cart 🛒({cartitem})</button>\n                        </div>\n\n                        <Container>\n\n                        <CardColumns>\n\n                            {firestoreArray.map(each => \n                                <BrowsingCards key={each.Foodname}\n                                                                    \n                                    title= {each.Foodname}\n                                    imageURL= {each.ImageUrl}\n                                    body= {each.Body}\n                                    price= {each.Price}\n                                    ingredients= {each.Ingredients}\n                                    quantity =  {each.Quantity}\n                                    sellerID = {each.SellerID}\n                                    accountID = {AccountID}\n\n                                />\n\n                            //</div>\n                            )}\n\n                        </CardColumns>\n                        </Container>\n                        </div>\n                        </>\n                    )}\n                </div>\n                </>\n            )}\n        </div>\n    );\n\n}\n\nexport default Sellers\n\n\n","/Users/franciscoruiz/Desktop/ComfyBake/src/containers/OrderCon.js",["118","119","120","121","122","123","124","125"],"/Users/franciscoruiz/Desktop/ComfyBake/src/containers/Cart.js",["126","127","128","129","130","131","132","133","134","135","136","137","138"],"import React, { useState, useEffect } from 'react';\nimport database from '../firebase';\nimport './Cart.css';\n// import Products from './Product';\n\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Display from './DisplayGrid';\nimport Show_cart from './displayCart';\n\nconst db = database.firestore();\nconst PAGE_PRODUCTS = 'products';\n\n//const db = database.firestore();\n//const storage = database.storage();\n\nconst PAGE_CART = 'cart'\nconst senderEmail = \"cbakeTeam@gmail.com\"\nconst templateId = \"template_j303hv9\"\nconst Email = \"franciscor343@gmail.com\"\nconst FirstName = \"franciscor343@gmail.com\"\nconst LastName = \"franciscor343@gmail.com\"\n\n\n\nfunction Cart(){\n    const [cart, setCart] = useState([]);\n    const [page, setPage] = useState ('products');\n    const [cartitem, setCartitem] = useState([]);\n\n    const addToCart = (product) => {\n        setCart([...cart, {...product}]);\n    };\n\n    const navigateTo = (nextPage) => {\n        setPage(nextPage);\n    };\n\n    const removeFromCart = (productToRemove) => {\n        setCart(cart.filter((product) => product !== productToRemove))\n    }\n\n    const handleSumbit = (e) =>{\n        sendFeedback({\n            templateId,\n            senderEmail,\n            receiverEmail:Email,\n            FirstName,\n            LastName,\n          })\n        e.preventDefault();\n        //here we should probably change the status of the order so that the cart empties\n        // and all of the information goes from the cart to the order history page\n    }\n    const sendFeedback = ({\n        templateId,\n        senderEmail,\n        receiverEmail,\n        FirstName,\n        LastName,\n      }) => {\n        window.emailjs\n          .send(\n            \"default_service\",\n            templateId,\n            {\n              senderEmail,\n              receiverEmail,\n              FirstName,\n              LastName,\n            },\n          )\n          .then(res => {\n            if (res.status === 200) {\n              //setFormSubmitSuccessful(true)\n            }\n          })\n          // Handle errors here however you like\n          .catch(err => console.error(\"Failed to send feedback. Error: \", err))\n      }\n      \n\n      useEffect(() => {\n        \n        db.collectionGroup(\"Cart\").get().then(querySnapshot => {\n          const data = querySnapshot.docs.map(doc=>doc.data())\n          setCartitem(data);\n        })\n      });\n\n// render everything that has been added to the cart\n    const renderCart = () => (\n        <div className='back_home_btn'>\n            <button onClick={() => navigateTo(PAGE_PRODUCTS)}> Back to home </button>\n            \n            <h2 className=\"cart-title\">Shopping cart</h2>\n\n            <Show_cart/>\n\n        </div>\n    );\n\n    return(\n      <div className=\"cart\">\n        <header>\n          <h1>Shopping Cart </h1><br/>\n        </header>\n        {/* <Display addToCart={addToCart}/> */}\n      <Show_cart/>\n      </div>\n  )\n};\n\nexport default Cart;\n\n/*\nreturn(\n        <div className=\"cart\">\n<<<<<<< HEAD\n          <header>\n            <h1>Shopping Cart </h1><br/>\n          </header>\n          //{/* <Display addToCart={addToCart}/> \n        <Show_cart/>\n\n        <br/><br/><br/><br/>\n        <header>\n            <Link onClick={() => navigateTo(PAGE_CART)} className=\"cart-link\" to=\"/orders/cart\">View Cart 🛒 ({cartitem.length})</Link>\n            <br/><br/><br/><br/>\n        </header>\n        {page === PAGE_PRODUCTS && <Display addToCart={addToCart}/>}\n        {page === PAGE_CART && renderCart()}\n        \n\n        </div>\n    )\n*/","/Users/franciscoruiz/Desktop/ComfyBake/src/firebase.js",["139"],"import firebase from 'firebase';\nimport 'firebase/firestore';\n\n//This is my firebase authentication\n//you can change it to your firebase authentication\nvar firebaseApp = {\n    apiKey: \"AIzaSyCBDaRuSre3hjHZR136J_zp6RMwHOkFeUs\",\n    authDomain: \"comfybake-78d36.firebaseapp.com\",\n    projectId: \"comfybake-78d36\",\n    storageBucket: \"comfybake-78d36.appspot.com\",\n    messagingSenderId: \"947011318778\",\n    appId: \"1:947011318778:web:0692a26d4c971c54042a43\",\n};\n\nconst database = firebase.initializeApp(firebaseApp);\nvar db = firebase.database();\n\nexport default database;","/Users/franciscoruiz/Desktop/ComfyBake/src/containers/Transfer.js",[],"/Users/franciscoruiz/Desktop/ComfyBake/src/containers/LoadCards.js",["140","141","142"],"import React, { useState } from 'react'\nimport Card from 'react-bootstrap/Card'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport database from '../firebase';\nimport { addToCart } from './Cart'\nimport SellerPage from './SellersPage'; \n\nfunction LoadCards(props) {\n    const [titles] = useState(props.title)    \n    const [imageURL] = useState(props.imageURL)\n    const [body] = useState(props.body)\n    const [price] = useState(\"$\" + props.price)\n    const [price_] = useState(props.price)\n    const [ingredients] = useState(props.ingredients)\n    const [sellerID] = useState(props.sellerID)\n    const [accountID] = useState(props.accountID)\n    const [quantity] = useState(props.quantity)\n    //const [total] = useState (props.price * quantity)\n\n    const jump=()=>{\n        //database.firestore().collection(\"users\").doc(\"user2@gmail.com\").update({\n        database.firestore().collection(\"users\").doc(accountID).update({\n            jump: true,\n            sellerID: sellerID\n        })\n    }\n\n\n    const handleClick =() =>{\n        const ref = database.firestore().collection(\"users\").doc(accountID).collection('Cart').doc()\n        var myID = ref.id; \n        ref.set({\n            name: titles,\n            price: price_,\n            image: imageURL,\n            quantity: quantity,\n            checkout: false,\n            seller: sellerID,\n            body: body,\n            id: myID,\n            quantity: 1,\n            total: price_,\n        })\n        .then(() => {\n            console.log(\"Document successfully written!\");\n        })\n        .catch((error) => {\n            console.error(\"Error writing document: \", error);\n        });\n\n        var num=0\n        database.firestore().collection(\"users\").doc(accountID).onSnapshot((doc) =>{\n            num = doc.data().shoppingcart\n        })\n        setTimeout(() => {\n            //update \n            num += 1\n            database.firestore().collection(\"users\").doc(accountID).update({\n                \"shoppingcart\": num\n            })\n        }, 10);\n    }\n\n    return (\n        <Card>\n            <Card.Img variant=\"top\" src = {imageURL} />\n            \n            <Card.Body>\n            \n                <Card.Title>{titles}</Card.Title>\n                <Card.Text>\n                    {body}\n                </Card.Text>\n            \n            </Card.Body>\n\n            <Card.Footer>\n\n                <p>{price}</p>\n                <button onClick={handleClick}>Add to cart</button>\n                <button onClick={jump}>Store</button>\n                <br></br>\n                <small className=\"text-muted\"> Contains: {ingredients}</small>\n                <br></br>\n                <small className=\"text-muted\"> Quantity: {quantity}</small>\n            </Card.Footer>\n        </Card>\n    );\n\n}\n\nexport default LoadCards","/Users/franciscoruiz/Desktop/ComfyBake/src/containers/CustomCards.js",["143","144","145","146","147"],"import React, { useEffect, useState } from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Card from 'react-bootstrap/Card'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport database from '../firebase';\nimport { getDefaultNormalizer } from '@testing-library/dom';\n\nfunction CustomCards(props) {\n    //{title, imageURL, body, price, ingredients}\n    //change\n    const [titles, setTitles] = useState(props.title)\n    const [titleValue, setTitleValue] = useState(\"Sample Title\")\n    \n    const [imageURL, setImageURL] = useState(props.imageURL)\n    \n    const [body, setBody] = useState(props.body)\n    const [bodyValue, setBodyValue] = useState(\"Sample Body\")\n    \n    const [price, setPrice] = useState(\"$\" + props.price)\n    const [price_] = useState(props.price)\n    const [priceValue, setPriceValue] = useState(\"Sample Price\")\n    \n    const [ingredients, setIngredients] = useState(props.ingredients)\n    const [ingredientsValue, setIngredientsValue] = useState(\"Sample Ingredients\")\n\n    const [quantity, setQuantity] = useState(props.quantity)\n    const [quantityValue, setQuantityValue] = useState(\"Sample Quantity\")\n\n    const [showInput, setInputState] = useState(false)\n\n    const [ID, setID] = useState(props.ID)\n\n    const [image, setImage] = useState(null);\n    const storage = database.storage();\n    const id = ID;\n    const FoodCollection = database.firestore().collection(\"FoodCollection\")\n\n\n    function save(event) {\n        event.preventDefault();\n        //upload image to firebase\n        const uploadTask = storage.ref(id+\"/\"+ image.name).put(image);\n        var imageURL_ = \"\";\n        //read image_url from firebase\n        uploadTask.on(\n            \"state_changed\",\n            snapshot =>{},\n            error=>{\n                alert(error);\n            },\n            ()=>{\n                storage.ref(id).child(image.name).getDownloadURL()\n                .then(url=>{\n                    imageURL_ = url;\n                })\n            }\n        )\n        \n        \n        setTimeout(() => {\n            //alert(imageURL_); \n            FoodCollection.doc(id).collection(\"food\").doc(titleValue).set({\n                Foodname: titleValue,\n                ImageUrl: imageURL_,\n                Body: bodyValue,\n                Price: priceValue,\n                Ingredients: ingredientsValue,\n                SellerID: id,\n                Quantity: quantityValue\n            }).then(()=>{\n                console.log(\"Information have been sent\");\n                //alert(\"Information have been sent\");\n            }).catch((err)=>{\n                alert(err.message);\n            });   \n\n            setTitles(titleValue)\n            setImageURL(imageURL_)\n            setBody(bodyValue)\n            setPrice(\"$ \"+priceValue)\n            setIngredients(ingredientsValue)\n            setQuantity(quantityValue)\n\n            setInputState(false)\n        }, 2000);\n\n    }\n \n    function edit () {\n        setInputState(true)\n    }\n\n    function cancel () {\n        setInputState(false)\n    }\n\n    function updateTitleValue (event) {\n        setTitleValue(event.target.value)\n        console.log(titleValue)\n    }\n\n    function updateImageURLValue (event){\n        event.preventDefault();\n        if (event.target.files[0]){\n            setImage(event.target.files[0]);\n        }\n    }\n\n    function updateBodyValue (event) {\n        setBodyValue(event.target.value)\n    }\n\n    function updatePriceValue (event) {\n        setPriceValue(event.target.value)\n    }\n\n    function updateIngredientsValue (event) {\n        setIngredientsValue(event.target.value)\n    }\n\n    function updateQuantityValue (event) {\n        setQuantityValue(event.target.value)\n    }\n\n    function deleteCard () {\n        FoodCollection.doc(id).collection(\"food\").doc(titles).delete();\n        alert(\"Refresh to complete Delete\")\n    }\n\n\n    if(showInput) {\n        return (\n            <Card>\n                <input onChange={updateTitleValue} placeholder=\"Edit Title\"></input>\n                <input type=\"file\" onChange={updateImageURLValue} placeholder=\"Edit Image\"></input>\n                <input onChange={updateBodyValue} placeholder=\"Edit Body\"></input>\n                <input onChange={updatePriceValue} placeholder=\"Edit Price\"></input>\n                <input onChange={updateIngredientsValue} placeholder=\"Edit Ingredients\"></input>\n                <input onChange={updateQuantityValue} placeholder=\"Edit Quantity\"></input>\n                <button onClick={save}>Save</button>\n                <button onClick={cancel}>Cancel</button>\n                <button onClick={deleteCard}>Delete</button>\n            </Card>\n        );\n    } else {\n        return (\n                <Card>\n                        <Card.Img variant=\"top\" src = {imageURL} />\n                        \n                        <Card.Body>\n                        \n                            <Card.Title>{titles}</Card.Title>\n                            <Card.Text>\n                                {body}\n                            </Card.Text>\n                        \n                        </Card.Body>\n\n                        <Card.Footer>\n\n                            <p>{price}</p>\n                            <small className=\"text-muted\"> Contains: {ingredients} </small>\n                            <br></br>\n                            <small className=\"text-muted\"> Quantity: {quantity} </small>\n                            <br></br>\n                            <button onClick = {edit}>Edit</button>\n                            \n\n                        </Card.Footer> \n                    \n                </Card> \n\n        );\n    }\n\n}\n\nexport default CustomCards","/Users/franciscoruiz/Desktop/ComfyBake/src/containers/BrowsingCards.js",["148","149"],"import React, { useEffect, useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport database from '../firebase';\n\nfunction BrowsingCards(props) {\n\n    //no edit state function, don't want to change data here\n    const [title] = useState(props.title)\n    const [imageURL] = useState(props.imageURL)\n    const [body] = useState(props.body)\n    const [price] = useState(\"$\" + props.price)\n    const [price_] = useState(props.price)\n    const [ingredients] = useState(props.ingredients)\n    const [quantity] = useState(props.quantity)\n    const [sellerID] = useState(props.sellerID)\n    const [accountID] = useState(props.accountID)\n\n    const handleClick =() =>{\n        const ref = database.firestore().collection(\"users\").doc(accountID).collection('Cart').doc()\n        var myID = ref.id;\n        ref.set({\n            name: title,\n            price: price_,\n            image: imageURL,\n            quantity: quantity,\n            checkout: false,\n            seller: sellerID,\n            body: body,\n            id: myID,\n            quantity: 1,\n            total: price_,\n        })\n        .then(() => {\n            console.log(\"Document successfully written!\");\n        })\n        .catch((error) => {\n            console.error(\"Error writing document: \", error);\n        });\n\n        var num=0\n        database.firestore().collection(\"users\").doc(accountID).onSnapshot((doc) =>{\n            num = doc.data().shoppingcart\n        })\n        setTimeout(() => {\n            //update \n            num += 1\n            database.firestore().collection(\"users\").doc(accountID).update({\n                \"shoppingcart\": num\n            })\n        }, 10);\n    }\n\n    return (\n            <Card>\n\n                    <Card.Img variant=\"top\" src = {imageURL} />\n                            \n                    <Card.Body>\n                    \n                        <Card.Title>{title}</Card.Title>\n                        <Card.Text>\n                            {body}\n                        </Card.Text>\n                    \n                    </Card.Body>\n\n                    <Card.Footer>\n\n                        <p>{price}</p>\n                        <button onClick={handleClick}>Add to cart</button>\n                        <br></br>\n                        <small className=\"text-muted\"> Contains: {ingredients} </small>\n                        <br></br>\n                        <small className=\"text-muted\"> Quantity: {quantity}</small>\n                    </Card.Footer> \n\n            </Card>\n    );\n}\n\nexport default BrowsingCards","/Users/franciscoruiz/Desktop/ComfyBake/src/containers/Display.js",["150","151","152","153"],"import React, {useState, useEffect} from \"react\";\nimport database from '../firebase';\nimport Nav from \"react-bootstrap/Nav\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport SellerPage from './SellersPage';\n\n\nconst db = database.firestore();\nconst storage = database.storage();\n\nconst Display = (props) =>{\n    \n    const [FirstName, setFirstName] = useState('');\n    const [LastName, setLastName] = useState('');\n    const [Address, setAddress] = useState('');\n    const [PhoneNum, setPhoneNum] = useState('');\n    \n    const [TestFirstName, setTestFirstName] = useState('');\n    const [TestLastName, setTestLastName] = useState('');\n    const [TestAddress, setTestAddress] = useState('');\n    const [TestPhoneNum, setTestPhoneNum] = useState('');\n    const [Size, setSize] = useState(0);\n\n    const [TestBody, setTestBody] = useState(\"\");\n    const [TestFoodname, setTestFoodname] = useState(\"\");\n    const [TestImageUrl, setTestImageUrl] = useState();\n    const [TestSize, setTestSize] = useState(0);\n    \n    const {AccountID} = props\n    const [SellerID, setSellerID] = useState('');\n    const [AccountMatch, setAccountMatch] = useState('');\n    const [jump, setjump] = useState(false);\n    \n    const id = \"user1@gmail.com\";\n    \n    //method1\n    class User{\n        constructor(FirstName, LastName, Address, City, State, PhoneNumber){\n            this.FirstName = FirstName;\n            this.LastName = LastName;\n            this.Address = Address;\n            this.City = City;\n            this.State = State;\n            this.PhoneNumber = PhoneNumber;\n        }\n    }\n    \n    var userConverter = {\n        fromFirestore: function(snapshot, options){\n            const data = snapshot.data(options);\n            return new User(data.personalinfo.FirstName, data.personalinfo.LastName,\n                data.personalinfo.Address, data.personalinfo.City, \n                data.personalinfo.State, data.personalinfo.PhoneNumber);\n        }\n    }\n    \n    //var docRef = db.collection(\"FoodCollection\").doc(id).collection(\"food\").doc(\"Maple Sugar Scrolls\");\n    \n    db.collection(\"users\").doc(id)\n    .withConverter(userConverter).get().then((doc) => {\n        var user = doc.data();\n        setLastName(user.LastName);\n        setFirstName(user.FirstName);\n        setPhoneNum(user.PhoneNumber);\n        setAddress(user.Address + \" \" + user.City + \" \" + user.State)\n    });\n\n    //method2\n    db.collection(\"users\").get().then(querySnapshot =>{\n        const data = querySnapshot.docs.map(doc=> doc.data());\n    \n        //console.log(data[0].personalinfo.FirstName);\n        /*\n        setTestFirstName(data[5].personalinfo.FirstName);\n        setTestLastName(data[5].personalinfo.LastName);\n        setTestPhoneNum(data[5].personalinfo.PhoneNumber);\n        setTestAddress(data[5].personalinfo.Address + \" \" \n                        + data[5].personalinfo.City + \" \"\n                        + data[5].personalinfo.State);\n        */\n       \n       setSize(data.length);\n       setHelperfunction(data[5]);\n    })\n\n    \n    function setHelperfunction (data_1){\n        setTestFirstName(data_1.personalinfo.FirstName);\n        setTestLastName(data_1.personalinfo.LastName);\n        setTestPhoneNum(data_1.personalinfo.PhoneNumber);\n        setTestAddress(data_1.personalinfo.Address + \" \" \n                        + data_1.personalinfo.City + \" \"\n                        + data_1.personalinfo.State); \n    }\n    \n\n    //method3\n    db.collection(\"FoodCollection\").doc(id).collection(\"food\").get().then(querySnapshot =>{\n        const data = querySnapshot.docs.map(doc=> doc.data());\n        setTestSize(data.length);\n        setHelperfunction_2(data[3]);\n        \n    })\n\n    function setHelperfunction_2(data_2){\n        setTestBody(data_2.Body);\n        setTestFoodname(data_2.Foodname);\n        setTestImageUrl(data_2.ImageUrl);\n    }\n\n    const [TestBody_, setTestBody_] = useState(\"\");\n    const [TestFoodname_, setTestFoodname_] = useState(\"\");\n    const [TestImageUrl_, setTestImageUrl_] = useState();\n    const [size_seller, setSize_seller] = useState(0);\n    //method4\n    //db.collection(\"FoodCollection\").get().then(querySnapshot =>{\n    db.collectionGroup(\"food\").get().then(querySnapshot =>{\n        const data = querySnapshot.docs.map(doc=> doc.data());\n        console.log(data);\n        setSize_seller(data.length);\n        setHelperfunction_3(data[1]);\n    })\n\n    function setHelperfunction_3(data_3){\n        setTestBody_(data_3.Body);\n        setTestFoodname_(data_3.Foodname);\n        setTestImageUrl_(data_3.ImageUrl);\n    }\n\n    //delete document \n    db.collection(\"FoodCollection\").doc(\"user2@gmail.com\").collection(\"food\").doc(\"2\").delete();\n\n    //update \n    db.collection(\"FoodCollection\").doc(\"user5@gmail.com\").collection(\"food\").doc(\"t\")\n        .update({\n            \"Body\": \"changed\"\n    })\n\n    //jump even \n    const handleJump =() =>{\n        setjump(true);\n    }\n\n    //logout\n    const handleLogout = () =>{\n        setAccountMatch(AccountID==SellerID);\n        setTimeout(() => {\n            database.auth().signOut();\n        }, 100);\n    }\n    \n    return (\n        <div> \n            {jump? (\n                <>\n                <SellerPage\n                    AccountID = {AccountID}\n                    SellerID = {SellerID}\n                />\n                </>\n            ):(\n                <>\n                <br/>\n                <br/>\n                <br/>\n                <p>AccountID:{AccountID}</p>\n                <p>SellerID:{SellerID}</p>\n                <br/>\n                <input value={SellerID}\n                    placeholder = \"SellerID\"\n                    onChange={(e) => setSellerID(e.target.value)}\n                /><br/>\n                <button onClick={handleJump}> Jump</button>\n                <br/>\n                    <LinkContainer to=\"/login\">  \n                        <Nav.Link>\n                            <button onClick={handleLogout}>Logout</button><br/>\n                        </Nav.Link>\n                    </LinkContainer>\n                <br/>\n                <p>method4</p>\n                <p>count: {size_seller}</p>\n                <p>Foodname: {TestFoodname_}</p>\n                <p>Body: {TestBody_}</p>\n                <p>ImageUrl: {TestImageUrl_}</p>\n                <br/>\n                <br/>\n                <br/>\n                <p>method1</p>\n                <p>FirstName: {FirstName}</p>\n                <p>LastName: {LastName}</p>\n                <p>PhoneNumber: {PhoneNum}</p>\n                <p>Address: {Address}</p>\n                <br/>\n                <br/>\n                <br/>\n                <p>method2</p>\n                <p>TestFirstName: {TestFirstName}</p>\n                <p>TestLastName: {TestLastName}</p>\n                <p>TestPhoneNumber: {TestPhoneNum}</p>\n                <p>TestAddress: {TestAddress}</p>\n                <p>Size: {Size}</p>\n                <br/>\n                <br/>\n                <br/>\n                <p>method3</p>\n                <p>Foodname: {TestFoodname}</p>\n                <p>Body: {TestBody}</p>\n                <p>ImageUrl: {TestImageUrl}</p>\n                <p>Size: {TestSize}</p>\n                </>\n            )}\n            \n        </div>\n    \n    );\n    \n\n}\n\nexport default Display;\n/*\n        <div> \n            {jump? (\n                <>\n                <SellerPage\n                    AccountID = {AccountID}\n                    SellerID = {SellerID}\n                />\n                </>\n            ):(\n                <>\n                </>\n            )}\n            \n        </div>\n*/","/Users/franciscoruiz/Desktop/ComfyBake/src/containers/displayCart.js",["154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169"],"import React, {useState, useEffect} from \"react\";\nimport testUtils from \"react-dom/test-utils\";\nimport database from '../firebase';\nimport firebase from '../firebase'\nimport './Cart.css';\nimport Home from \"./Home\";\nimport SellerPage from './SellersPage'; \n\nconst db = database.firestore();\nconst storage = database.storage();\nconst user = \"mohammad@gmail\";\nconst userName = \"Moh\"\n\nclass Show_cart extends React.Component{\n    //state array\n    state = {\n        arr: null,\n        count: 0,\n        home: false,\n        jump: false,\n    }\n    //---------------- this function brings all the data from firestore -------------------//\n    componentDidMount(){\n        db.collection(\"users\").doc(this.props.AccountID).collection('Cart').get().then(snapShot =>{\n                const arr = []\n                //takes a data and pushes it into the array\n                snapShot.forEach( doc => {\n                    const data = doc.data()\n                    arr.push(data)\n                })\n                //makes an array of all the item and saves it in the state, null array above\n                this.setState({arr: arr})\n                \n            })\n            .catch(error => console.log(error))\n    }\n    //-------------------------collecting data from firestore ----------------------------//\n\n\n    handleRemove =(arr) => {\n        \n        db.collection(\"users\").doc(this.props.AccountID).collection('Cart').doc(arr.id).delete().then(() => {\n            //console.log(\"Document successfully deleted!\");\n            alert(\"successfully deleted!\")\n        }).catch((error) => {\n            console.error(\"Error removing document: \", error);\n        }); \n\n        var num=0\n        database.firestore().collection(\"users\").doc(this.props.AccountID).onSnapshot((doc) =>{\n            num = doc.data().shoppingcart\n        })\n        setTimeout(() => {\n            //update \n            num -= 1\n            database.firestore().collection(\"users\").doc(this.props.AccountID).update({\n                \"shoppingcart\": num\n            })\n        }, 10);\n\n    }\n    \n    increment = (arr) => {\n\n        var maxquantity=0\n        db.collection(\"FoodCollection\").doc(arr.seller).collection('food').doc(arr.name).onSnapshot((doc) =>{\n            maxquantity = doc.data().Quantity\n        })\n\n        setTimeout(() => {\n            const ref = db.collection(\"users\").doc(this.props.AccountID).collection('Cart').doc(arr.id)\n            if (arr.quantity == maxquantity) {\n                alert(\"Maximum quantity\")\n            } else {\n                arr.quantity = arr.quantity + 1;\n                ref.update({\"quantity\": arr.quantity})\n                ref.update({\"total\": (arr.price * arr.quantity)})\n            }\n            }, 10);\n    }\n\n    decrement = (arr) => {\n        const ref = db.collection(\"users\").doc(this.props.AccountID).collection('Cart').doc(arr.id)\n\n        if (arr.quantity <= 1) {\n            console.log(\"Stops when the quantity is 1\")\n        } \n        else {\n            arr.quantity = arr.quantity - 1;\n            ref.update({\"quantity\": arr.quantity})\n            ref.update({\"total\": (arr.price * arr.quantity)})\n        }\n\n    }\n    \n    handleCheckout = (e) => {\n        e.preventDefault();\n        \n        db.collection(\"users\").doc(this.props.AccountID).collection(\"Cart\").get().then(querySnapshot =>{\n            const data = querySnapshot.docs.map(doc=> doc.data());\n            //alert (data.length)\n            var maxquantity = new Array();\n            var quantity =  new Array();\n            var seller =  new Array();\n            var name =  new Array();\n\n            for (var i=0; i< data.length; i++){\n                //new collection for successful  orders \n                const ref = db.collection(\"users\").doc(this.props.AccountID).collection('orders').doc()\n                            ref.set({\n                                name: this.props.AccountID,\n                                order_Date:String(new Date()),\n                                checkout: true,\n                                image: data[i].image,\n                                descriptions: data[i].body,\n                                price:Number(data[i].price),\n                                qty: data[i].quantity,\n                                total:Number(data[i].total),\n                            })\n                \n                //delete the items from the shopping cart \n                db.collection(\"users\").doc(this.props.AccountID).collection('Cart').doc(data[i].id).delete().then(() => {\n                                console.log(\"Document successfully checked out!\");\n                            }).catch((error) => {\n                                console.error(\"Error checking out \", error);\n                            }); \n                \n                //save data for  update the quantity to the seller store\n                quantity.push(data[i].quantity)\n                seller.push(data[i].seller)\n                name.push(data[i].name)\n                \n                db.collection(\"FoodCollection\").doc(data[i].seller).collection('food').doc(data[i].name).onSnapshot((doc) =>{\n                    var maxquantity_ = doc.data().Quantity\n                    maxquantity.push(maxquantity_)\n                })\n            }\n            //update the quantity to the seller store\n            setTimeout(() => {\n                //update \n                for (var j=0; j<seller.length; j++){\n                    quantity[j] = maxquantity[j] - quantity[j]\n                    db.collection(\"FoodCollection\").doc(seller[j]).collection('food').doc(name[j]).update({\n                        \"Quantity\": quantity[j]\n                    })\n                }\n            }, 1000);\n\n            \n            var num=0\n            database.firestore().collection(\"users\").doc(this.props.AccountID).onSnapshot((doc) =>{\n                num = doc.data().shoppingcart\n            })\n            setTimeout(() => {\n                //update \n                num -= data.length\n                database.firestore().collection(\"users\").doc(this.props.AccountID).update({\n                    \"shoppingcart\": num\n                })\n            }, 2000);\n        })\n    }\n    \n    handlejump = () =>{\n        if (this.props.state_ == \"home\"){\n            this.setState(state => ({\n                home: true\n            }))\n        }\n        this.setState(state => ({\n            jump: true\n        }))\n\n    } \n\n    render(){\n    \n        return(\n            <div>\n            {this.state.jump? (\n                <div>\n                {this.state.home? (\n                    <>\n                    <Home \n                        AccountID = {this.props.AccountID}\n                    />\n                    </>\n                ):(\n                    <>\n                    <SellerPage\n                        AccountID = {this.props.AccountID}\n                        SellerID = {this.props.SellerID}\n                    />\n                    </>\n                )}\n                </div>\n                \n            ):(\n                <>\n                <br/>\n                <button onClick={()=>{this.handlejump()}}>Back</button><br/><br/><br/>\n                <div className=\"displayCart\">\n                {\n                    //if data exists then print each data from the array\n                    this.state.arr &&\n                    this.state.arr.map( arr => {\n                        if(arr.checkout == false){\n                        return(\n                            <div>\n                                <tbody id=\"tableProducts\">\n                                    <table className=\"table\">\n                                        <th><img src={arr.image}/></th>\n                                        <h3>{arr.name}</h3>\n                                        <p>{arr.body}</p>\n                                        <p>${arr.price}</p>\n                                        <p>\n                                            <p>Quantity: {arr.quantity}</p>\n                                        </p>\n                                        <button onClick={()=>{ this.decrement(arr)}}> - </button>\n                                            <label>\n                                                Quantity\n                                            </label>\n                                        <button onClick={()=>{ this.increment(arr)}}> + </button>\n                                        <p>Seller: {arr.seller}</p>\n                                        <p>Total: ${arr.total}</p>\n                                        <button onClick={()=>{ this.handleRemove(arr)}}>Remove</button> \n                                        <br/><br/>\n\n                                        {/* <button onClick={()=>{ this.handleCheckout(arr)}}>Checkout</button> */}\n\n                                        \n                                    </table>\n                                    \n                                </tbody>\n                            </div>\n                        )\n                        \n                        } // if state \n                    })\n                }\n                <button \n                    className=\"checkout\"\n                    onClick={this.handleCheckout}>Checkout\n                </button>\n                <br/><br/> \n                </div>\n                \n                </>\n            )}\n            </div>\n        )\n    }\n}\nexport default Show_cart;","/Users/franciscoruiz/Desktop/ComfyBake/src/containers/DisplayGrid.js",["170","171","172","173","174","175","176","177"],"import React, {useState, useEffect} from \"react\";\nimport database from '../firebase';\nimport firebase from '../firebase';\nimport './Cart.css';\nimport { addToCart } from './Cart'\nimport {account} from './Login'\nimport { __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED } from \"react-dom\";\nimport Show_cart from \"./displayCart\";\n\nconst db = database.firestore();\nconst storage = database.storage();\nconst user = \"mohammad@gmail\";\nconst realtimeDB = firebase.database();\n\n\nclass Display extends React.Component{\n    //state array\n    state = {\n        arr: null,\n    }\n\n    //---------------- this function brings all the data from firestore -------------------//\n    componentDidMount(){\n        db.collectionGroup('food')\n            .get()\n            .then( snapShot => {\n                //array to store single item\n                const arr = []\n                //takes a data and pushes it into the array\n                snapShot.forEach( doc => {\n                    const data = doc.data()\n                    arr.push(data)\n                })\n                //makes an array of all the item and saves it in the state, null array above\n                this.setState({arr: arr})\n                \n            })\n            .catch(error => console.log(error))\n    }\n    //-------------------------collecting data from firestore ----------------------------//\n    \n\n    handleClick =(arr) =>{\n        this.props.addToCart(arr);\n        // const ref = db.collection(\"users\").doc(user).collection('Cart').doc();\n        const ref = db.collection(\"users\").doc(user).collection('Cart').doc()\n        var myID = ref.id;\n        ref.set({\n            name: arr.Foodname,\n            price: arr.Price,\n            image: arr.ImageUrl,\n            quantity: 1,\n            max_Qty: arr.Quantity,\n            checkout: false,\n            seller: arr.SellerID,\n            body: arr.Body,\n            id: myID,\n            total: arr.Price,\n        })\n        .then(() => {\n            console.log(\"Document successfully written!\");\n        })\n        .catch((error) => {\n            console.error(\"Error writing document: \", error);\n        });\n        \n\n    }\n    \n \n\n    render(){\n    \n        return(\n            <div className='item'>\n                <h1> home </h1>\n                {\n                    //if data exists then print each data from the array\n                    this.state.arr &&\n                    this.state.arr.map( arr => {\n                        return(\n                            <div className=\"img-wrap\">\n                                <img src={arr.ImageUrl } alt={arr.Foodname}/>\n                                <p>{arr.Foodname}</p>\n                                <p>{arr.Qty}</p>\n                                <p>${arr.Price}</p>\n                                <button onClick={()=>{ this.handleClick(arr)} }>Add to cart</button>\n                            </div>\n                        )\n                    })\n                }\n                <br/><br/> \n            </div>\n        )\n    }\n}\nexport default Display;\n\n",{"ruleId":"178","severity":1,"message":"179","line":34,"column":24,"nodeType":"180","messageId":"181","endLine":34,"endColumn":26},{"ruleId":"182","severity":1,"message":"183","line":34,"column":12,"nodeType":"184","messageId":"185","endLine":34,"endColumn":20},{"ruleId":"182","severity":1,"message":"186","line":34,"column":22,"nodeType":"184","messageId":"185","endLine":34,"endColumn":33},{"ruleId":"182","severity":1,"message":"187","line":35,"column":12,"nodeType":"184","messageId":"185","endLine":35,"endColumn":25},{"ruleId":"182","severity":1,"message":"188","line":35,"column":27,"nodeType":"184","messageId":"185","endLine":35,"endColumn":43},{"ruleId":"182","severity":1,"message":"189","line":36,"column":12,"nodeType":"184","messageId":"185","endLine":36,"endColumn":25},{"ruleId":"182","severity":1,"message":"190","line":37,"column":12,"nodeType":"184","messageId":"185","endLine":37,"endColumn":32},{"ruleId":"182","severity":1,"message":"191","line":1,"column":8,"nodeType":"184","messageId":"185","endLine":1,"endColumn":16},{"ruleId":"182","severity":1,"message":"192","line":25,"column":10,"nodeType":"184","messageId":"185","endLine":25,"endColumn":14},{"ruleId":"178","severity":1,"message":"193","line":32,"column":17,"nodeType":"180","messageId":"181","endLine":32,"endColumn":19},{"ruleId":"178","severity":1,"message":"179","line":33,"column":15,"nodeType":"180","messageId":"181","endLine":33,"endColumn":17},{"ruleId":"182","severity":1,"message":"194","line":34,"column":15,"nodeType":"184","messageId":"185","endLine":34,"endColumn":20},{"ruleId":"178","severity":1,"message":"179","line":41,"column":27,"nodeType":"180","messageId":"181","endLine":41,"endColumn":29},{"ruleId":"195","severity":1,"message":"196","line":66,"column":6,"nodeType":"197","endLine":66,"endColumn":8,"suggestions":"198"},{"ruleId":"199","severity":1,"message":"200","line":111,"column":11,"nodeType":"201","messageId":"202","endLine":115,"endColumn":13},{"ruleId":"182","severity":1,"message":"203","line":8,"column":8,"nodeType":"184","messageId":"185","endLine":8,"endColumn":12},{"ruleId":"182","severity":1,"message":"204","line":14,"column":8,"nodeType":"184","messageId":"185","endLine":14,"endColumn":15},{"ruleId":"182","severity":1,"message":"205","line":25,"column":26,"nodeType":"184","messageId":"185","endLine":25,"endColumn":41},{"ruleId":"178","severity":1,"message":"179","line":25,"column":64,"nodeType":"180","messageId":"181","endLine":25,"endColumn":66},{"ruleId":"182","severity":1,"message":"206","line":32,"column":11,"nodeType":"184","messageId":"185","endLine":32,"endColumn":13},{"ruleId":"178","severity":1,"message":"193","line":35,"column":19,"nodeType":"180","messageId":"181","endLine":35,"endColumn":21},{"ruleId":"195","severity":1,"message":"207","line":55,"column":8,"nodeType":"197","endLine":55,"endColumn":10,"suggestions":"208"},{"ruleId":"199","severity":1,"message":"200","line":84,"column":21,"nodeType":"201","messageId":"202","endLine":88,"endColumn":23},{"ruleId":"182","severity":1,"message":"209","line":1,"column":10,"nodeType":"184","messageId":"185","endLine":1,"endColumn":30},{"ruleId":"182","severity":1,"message":"210","line":1,"column":32,"nodeType":"184","messageId":"185","endLine":1,"endColumn":45},{"ruleId":"182","severity":1,"message":"211","line":2,"column":26,"nodeType":"184","messageId":"185","endLine":2,"endColumn":35},{"ruleId":"182","severity":1,"message":"212","line":3,"column":27,"nodeType":"184","messageId":"185","endLine":3,"endColumn":33},{"ruleId":"182","severity":1,"message":"213","line":3,"column":35,"nodeType":"184","messageId":"185","endLine":3,"endColumn":40},{"ruleId":"182","severity":1,"message":"214","line":3,"column":42,"nodeType":"184","messageId":"185","endLine":3,"endColumn":46},{"ruleId":"182","severity":1,"message":"215","line":21,"column":11,"nodeType":"184","messageId":"185","endLine":21,"endColumn":17},{"ruleId":"216","severity":1,"message":"217","line":38,"column":21,"nodeType":"201","endLine":38,"endColumn":58},{"ruleId":"182","severity":1,"message":"212","line":6,"column":27,"nodeType":"184","messageId":"185","endLine":6,"endColumn":33},{"ruleId":"182","severity":1,"message":"213","line":6,"column":35,"nodeType":"184","messageId":"185","endLine":6,"endColumn":40},{"ruleId":"182","severity":1,"message":"214","line":6,"column":42,"nodeType":"184","messageId":"185","endLine":6,"endColumn":46},{"ruleId":"182","severity":1,"message":"204","line":7,"column":8,"nodeType":"184","messageId":"185","endLine":7,"endColumn":15},{"ruleId":"182","severity":1,"message":"218","line":16,"column":7,"nodeType":"184","messageId":"185","endLine":16,"endColumn":16},{"ruleId":"182","severity":1,"message":"219","line":27,"column":12,"nodeType":"184","messageId":"185","endLine":27,"endColumn":16},{"ruleId":"182","severity":1,"message":"220","line":28,"column":12,"nodeType":"184","messageId":"185","endLine":28,"endColumn":20},{"ruleId":"182","severity":1,"message":"221","line":30,"column":11,"nodeType":"184","messageId":"185","endLine":30,"endColumn":20},{"ruleId":"182","severity":1,"message":"222","line":38,"column":11,"nodeType":"184","messageId":"185","endLine":38,"endColumn":25},{"ruleId":"182","severity":1,"message":"223","line":42,"column":11,"nodeType":"184","messageId":"185","endLine":42,"endColumn":23},{"ruleId":"182","severity":1,"message":"224","line":91,"column":11,"nodeType":"184","messageId":"185","endLine":91,"endColumn":21},{"ruleId":"199","severity":1,"message":"200","line":97,"column":13,"nodeType":"201","messageId":"202","endLine":97,"endColumn":25},{"ruleId":"199","severity":1,"message":"200","line":108,"column":7,"nodeType":"201","messageId":"202","endLine":108,"endColumn":19},{"ruleId":"182","severity":1,"message":"225","line":16,"column":5,"nodeType":"184","messageId":"185","endLine":16,"endColumn":7},{"ruleId":"182","severity":1,"message":"226","line":5,"column":10,"nodeType":"184","messageId":"185","endLine":5,"endColumn":19},{"ruleId":"182","severity":1,"message":"227","line":6,"column":8,"nodeType":"184","messageId":"185","endLine":6,"endColumn":18},{"ruleId":"228","severity":1,"message":"229","line":41,"column":13,"nodeType":"230","messageId":"181","endLine":41,"endColumn":21},{"ruleId":"182","severity":1,"message":"211","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":26},{"ruleId":"182","severity":1,"message":"231","line":2,"column":8,"nodeType":"184","messageId":"185","endLine":2,"endColumn":17},{"ruleId":"182","severity":1,"message":"209","line":6,"column":10,"nodeType":"184","messageId":"185","endLine":6,"endColumn":30},{"ruleId":"182","severity":1,"message":"232","line":20,"column":12,"nodeType":"184","messageId":"185","endLine":20,"endColumn":18},{"ruleId":"182","severity":1,"message":"233","line":31,"column":16,"nodeType":"184","messageId":"185","endLine":31,"endColumn":21},{"ruleId":"182","severity":1,"message":"211","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":26},{"ruleId":"228","severity":1,"message":"229","line":31,"column":13,"nodeType":"230","messageId":"181","endLine":31,"endColumn":21},{"ruleId":"182","severity":1,"message":"211","line":1,"column":26,"nodeType":"184","messageId":"185","endLine":1,"endColumn":35},{"ruleId":"182","severity":1,"message":"234","line":9,"column":7,"nodeType":"184","messageId":"185","endLine":9,"endColumn":14},{"ruleId":"182","severity":1,"message":"235","line":31,"column":12,"nodeType":"184","messageId":"185","endLine":31,"endColumn":24},{"ruleId":"178","severity":1,"message":"179","line":146,"column":34,"nodeType":"180","messageId":"181","endLine":146,"endColumn":36},{"ruleId":"182","severity":1,"message":"236","line":1,"column":16,"nodeType":"184","messageId":"185","endLine":1,"endColumn":24},{"ruleId":"182","severity":1,"message":"211","line":1,"column":26,"nodeType":"184","messageId":"185","endLine":1,"endColumn":35},{"ruleId":"182","severity":1,"message":"237","line":2,"column":8,"nodeType":"184","messageId":"185","endLine":2,"endColumn":17},{"ruleId":"182","severity":1,"message":"238","line":4,"column":8,"nodeType":"184","messageId":"185","endLine":4,"endColumn":16},{"ruleId":"182","severity":1,"message":"234","line":10,"column":7,"nodeType":"184","messageId":"185","endLine":10,"endColumn":14},{"ruleId":"182","severity":1,"message":"239","line":11,"column":7,"nodeType":"184","messageId":"185","endLine":11,"endColumn":11},{"ruleId":"182","severity":1,"message":"240","line":12,"column":7,"nodeType":"184","messageId":"185","endLine":12,"endColumn":15},{"ruleId":"178","severity":1,"message":"179","line":72,"column":30,"nodeType":"180","messageId":"181","endLine":72,"endColumn":32},{"ruleId":"241","severity":1,"message":"242","line":102,"column":31,"nodeType":"243","messageId":"244","endLine":102,"endColumn":42},{"ruleId":"241","severity":1,"message":"242","line":103,"column":29,"nodeType":"243","messageId":"244","endLine":103,"endColumn":40},{"ruleId":"241","severity":1,"message":"242","line":104,"column":27,"nodeType":"243","messageId":"244","endLine":104,"endColumn":38},{"ruleId":"241","severity":1,"message":"242","line":105,"column":25,"nodeType":"243","messageId":"244","endLine":105,"endColumn":36},{"ruleId":"178","severity":1,"message":"179","line":165,"column":31,"nodeType":"180","messageId":"181","endLine":165,"endColumn":33},{"ruleId":"245","severity":1,"message":"246","line":206,"column":45,"nodeType":"247","messageId":"248","endLine":206,"endColumn":47},{"ruleId":"178","severity":1,"message":"179","line":207,"column":41,"nodeType":"180","messageId":"181","endLine":207,"endColumn":43},{"ruleId":"216","severity":1,"message":"217","line":212,"column":45,"nodeType":"201","endLine":212,"endColumn":67},{"ruleId":"182","severity":1,"message":"236","line":1,"column":16,"nodeType":"184","messageId":"185","endLine":1,"endColumn":24},{"ruleId":"182","severity":1,"message":"211","line":1,"column":26,"nodeType":"184","messageId":"185","endLine":1,"endColumn":35},{"ruleId":"182","severity":1,"message":"226","line":5,"column":10,"nodeType":"184","messageId":"185","endLine":5,"endColumn":19},{"ruleId":"182","severity":1,"message":"249","line":6,"column":9,"nodeType":"184","messageId":"185","endLine":6,"endColumn":16},{"ruleId":"182","severity":1,"message":"250","line":7,"column":10,"nodeType":"184","messageId":"185","endLine":7,"endColumn":60},{"ruleId":"182","severity":1,"message":"251","line":8,"column":8,"nodeType":"184","messageId":"185","endLine":8,"endColumn":17},{"ruleId":"182","severity":1,"message":"234","line":11,"column":7,"nodeType":"184","messageId":"185","endLine":11,"endColumn":14},{"ruleId":"182","severity":1,"message":"252","line":13,"column":7,"nodeType":"184","messageId":"185","endLine":13,"endColumn":17},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'feedback' is assigned a value but never used.","Identifier","unusedVar","'setFeedback' is assigned a value but never used.","'receiverEmail' is assigned a value but never used.","'setReceiverEmail' is assigned a value but never used.","'formSubmitted' is assigned a value but never used.","'formSubmitSuccessful' is assigned a value but never used.","'database' is defined but never used.","'test' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'time_' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'db'. Either include it or remove the dependency array.","ArrayExpression",["253"],"react/jsx-pascal-case","Imported JSX component Show_cart must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","'Card' is defined but never used.","'Display' is defined but never used.","'setAccountMatch' is assigned a value but never used.","'id' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'SellerID' and 'db'. Either include them or remove the dependency array.",["254"],"'getDefaultNormalizer' is defined but never used.","'queryByTestId' is defined but never used.","'useEffect' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'orders' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'PAGE_CART' is assigned a value but never used.","'page' is assigned a value but never used.","'cartitem' is assigned a value but never used.","'addToCart' is assigned a value but never used.","'removeFromCart' is assigned a value but never used.","'handleSumbit' is assigned a value but never used.","'renderCart' is assigned a value but never used.","'db' is assigned a value but never used.","'addToCart' is defined but never used.","'SellerPage' is defined but never used.","no-dupe-keys","Duplicate key 'quantity'.","ObjectExpression","'Container' is defined but never used.","'price_' is assigned a value but never used.","'setID' is assigned a value but never used.","'storage' is assigned a value but never used.","'AccountMatch' is assigned a value but never used.","'useState' is defined but never used.","'testUtils' is defined but never used.","'firebase' is defined but never used.","'user' is assigned a value but never used.","'userName' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'account' is defined but never used.","'__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED' is defined but never used.","'Show_cart' is defined but never used.","'realtimeDB' is assigned a value but never used.",{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},"Update the dependencies array to be: [db]",{"range":"259","text":"260"},"Update the dependencies array to be: [SellerID, db]",{"range":"261","text":"262"},[1834,1836],"[db]",[1774,1776],"[SellerID, db]"]
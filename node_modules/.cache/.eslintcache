[{"/Users/tawhidmahmud/Documents/react/ComfyBake/src/index.js":"1","/Users/tawhidmahmud/Documents/react/ComfyBake/src/App.js":"2","/Users/tawhidmahmud/Documents/react/ComfyBake/src/reportWebVitals.js":"3","/Users/tawhidmahmud/Documents/react/ComfyBake/src/Routes.js":"4","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/Signup.js":"5","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/OrderDetails.js":"6","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/OrderCon.js":"7","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/Cart.js":"8","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/Login.js":"9","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/NotFound.js":"10","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/SellersPage.js":"11","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/Home.js":"12","/Users/tawhidmahmud/Documents/react/ComfyBake/src/firebase.js":"13","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/DisplayGrid.js":"14","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/CustomCards.js":"15","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/LoadCards.js":"16","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/Product.js":"17","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/displayCart.js":"18","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/Transfer.js":"19","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/Display.js":"20","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/BrowsingCards.js":"21"},{"size":589,"mtime":1619987910651,"results":"22","hashOfConfig":"23"},{"size":1384,"mtime":1620702732767,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1619987910651,"results":"25","hashOfConfig":"23"},{"size":1066,"mtime":1620702732767,"results":"26","hashOfConfig":"23"},{"size":10034,"mtime":1620708249584,"results":"27","hashOfConfig":"23"},{"size":1315,"mtime":1619987910649,"results":"28","hashOfConfig":"23"},{"size":3274,"mtime":1620838184649,"results":"29","hashOfConfig":"23"},{"size":3550,"mtime":1620838168721,"results":"30","hashOfConfig":"23"},{"size":2741,"mtime":1620708249583,"results":"31","hashOfConfig":"23"},{"size":199,"mtime":1619987910649,"results":"32","hashOfConfig":"23"},{"size":7865,"mtime":1620838184651,"results":"33","hashOfConfig":"23"},{"size":4756,"mtime":1620838184647,"results":"34","hashOfConfig":"23"},{"size":570,"mtime":1620838168738,"results":"35","hashOfConfig":"23"},{"size":3059,"mtime":1620838168722,"results":"36","hashOfConfig":"23"},{"size":5682,"mtime":1620708249579,"results":"37","hashOfConfig":"23"},{"size":2804,"mtime":1620838184648,"results":"38","hashOfConfig":"23"},{"size":1347,"mtime":1619987910649,"results":"39","hashOfConfig":"23"},{"size":9484,"mtime":1620838168736,"results":"40","hashOfConfig":"23"},{"size":556,"mtime":1620702732770,"results":"41","hashOfConfig":"23"},{"size":7583,"mtime":1620702732768,"results":"42","hashOfConfig":"23"},{"size":2605,"mtime":1620708249578,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1mp43ag",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"46"},"/Users/tawhidmahmud/Documents/react/ComfyBake/src/index.js",[],["94","95"],"/Users/tawhidmahmud/Documents/react/ComfyBake/src/App.js",[],"/Users/tawhidmahmud/Documents/react/ComfyBake/src/reportWebVitals.js",[],"/Users/tawhidmahmud/Documents/react/ComfyBake/src/Routes.js",[],"/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/Signup.js",["96","97","98","99","100","101"],"import React, {useState} from \"react\";\nimport database from '../firebase';\nimport Nav from \"react-bootstrap/Nav\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n// import BorderWrapper from 'react-border-wrapper'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./Signup.css\";\n\nconst db = database.firestore();\nconst userCollection = db.collection(\"users\");\nconst senderEmail = \"cbakeTeam@gmail.com\";\nconst templateId = \"template_j303hv9\";\n\n\nexport default function Signup() {\n    const [FirstName, setFirstName] = useState('');\n    const [LastName, setLastName] = useState('');\n    const [Address, setAddress] = useState('');\n    const [City, setCity] = useState('');\n    const [State, setState] = useState('');\n    const [PhoneNum, setPhoneNum] = useState('');\n    const [Email, setEmail] = useState('');\n    const [Password, setPassword] = useState('');\n    const [Vegan, setVegan] = useState(false);\n    const [GlutenFree, setGlutenFree] = useState(false);\n    const [DairyFree, setDairyFree] = useState(false);\n    const [Kosher, setKosher] = useState(false);\n    const [LactoseIntolerant, setLactoseIntolerant] = useState(false);\n    const [Peanut, setPeanut] = useState(false);\n    const [Almonds, setAlmonds] = useState(false);\n    const [Milk, setMilk] = useState(false);\n    const [Soy, setSoy] = useState(false);\n    const [Egg, setEgg] = useState(false);\n    const [feedback, setFeedback] = useState(\"\");\n    const [receiverEmail, setReceiverEmail] = useState(\"\");\n    const [formSubmitted, setFormSubmitted] = useState(false);\n    const [formSubmitSuccessful, setFormSubmitSuccessful] = useState(false);\n\n    const [signup, setsignup] = useState(false);\n\n    const handleSumbit = (e) =>{\n        sendFeedback({\n            templateId,\n            senderEmail,\n            receiverEmail:Email,\n            FirstName,\n            LastName,\n          })\n        setFormSubmitted(true)\n        e.preventDefault();\n\n        database.auth().createUserWithEmailAndPassword(Email,Password)\n        .then(()=>{\n            setsignup(true);\n\n            userCollection.doc(Email).set({\n                personalinfo: {\n                    FirstName:FirstName,\n                    LastName:LastName,\n                    Address:Address,\n                    City:City,\n                    State:State,\n                    PhoneNumber:PhoneNum\n                },\n                DietaryPreferences: {\n                    Vegan:Vegan,\n                    GlutenFree:GlutenFree,\n                    DairyFree:DairyFree,\n                    Kosher:Kosher,\n                    LactoseIntolerant:LactoseIntolerant\n                },\n                Allergies:{\n                    eanut:Peanut,\n                    Almonds:Almonds,\n                    Milk:Milk,\n                    Soy:Soy,\n                    Egg:Egg\n                },\n                shoppingcart: 0\n            }).then(()=>{\n                alert(\"Look out for an email confirming your account!\")\n            }).catch((err)=>{\n                alert(err.message);\n            });\n    \n            setFirstName(\"\");\n            setLastName(\"\");\n            setAddress(\"\");\n            setCity(\"\");\n            setState(\"\");\n            setPhoneNum(\"\");\n            setEmail(\"\");\n            setPassword(\"\");\n\n        }).catch((err)=>{\n            setsignup(false);\n            alert(err);\n        });\n        \n    }\n    const sendFeedback = ({\n        templateId,\n        senderEmail,\n        receiverEmail,\n        FirstName,\n        LastName,\n      }) => {\n        window.emailjs\n          .send(\n            \"default_service\",\n            templateId,\n            {\n              senderEmail,\n              receiverEmail,\n              FirstName,\n              LastName,\n            },\n          )\n          .then(res => {\n            if (res.status === 200) {\n              setFormSubmitSuccessful(true)\n            }\n          })\n          // Handle errors here however you like\n          .catch(err => console.error(\"Failed to send feedback. Error: \", err))\n      }\n\n    return (\n        <section className=\"login\">\n            <div className=\"loginContainer\">\n                {signup? (\n                    <>\n                    <br/>\n                    <br/>\n                    <br/>\n                    <div className=\"transition\">\n                        <p className=\"customP\">Press continue to go to the login page</p>\n                        <LinkContainer to=\"/\">   \n                            <Nav.Link>\n                                <button className=\"customButton\"> Continue</button><br/>\n                            </Nav.Link>\n                        </LinkContainer>\n                    </div>\n                    </>\n                    ):(\n                    <>\n                    <div className=\"form\">\n                        <form className=\"Signup-form\" onSubmit={handleSumbit}>\n                        <h1 className=\"customh1\">Let's Get to Know one Another!</h1>\n                        {/* <BorderWrapper> */}\n                        <div>\n                            <label>Introductions</label><br/>\n                            <input type=\"text\" required value={FirstName}\n                                placeholder = \"FirstName\"\n                                onChange={(e) => setFirstName(e.target.value)}\n                            /><b/> <b/>\n                            <input type=\"text\" required value={LastName}\n                                placeholder = \"LastName\"\n                                onChange={(e) => setLastName(e.target.value)}\n                            /><br/>\n                        </div>\n                \n                        <div> \n                            <label>Address</label><br/>\n                            <input type=\"text\" required value={Address}\n                                placeholder = \"Address\"\n                                onChange = {(e) => setAddress(e.target.value)}\n                            /><br/>\n                            <input type=\"text\" required value={City}\n                                placeholder = \"City\"\n                                onChange = {(e) => setCity(e.target.value)}\n                            /><b/> <b/>\n                            <input type=\"text\" required value={State}\n                                placeholder = \"State\"\n                                onChange = {(e) => setState(e.target.value)}\n                            /><br/>\n                        </div>\n\n                        <div> \n                            <label>Contact</label><br/>\n                            <input type=\"text\" required value={PhoneNum}\n                                placeholder = \"Phone Number\"\n                                onChange = {(e) => setPhoneNum(e.target.value)}\n                            /><br/>\n                            <input type=\"text\" required value={Email}\n                                placeholder = \"Email\"\n                                onChange = {(e) => setEmail(e.target.value)}\n                            /><br/>\n                            <input type=\"password\" required value={Password}\n                                placeholder = \"Password\"\n                                onChange = {(e) => setPassword(e.target.value)}\n                            /><br/>\n                        </div>\n\n                        <div> \n                            <label>Dietary Preferences</label><br/>\n                            <input type=\"checkbox\"   value={Vegan}\n                                onClick={()=> setVegan(!Vegan)}\n                            /> Vegan <br/>\n                            <input type=\"checkbox\"  value={GlutenFree}\n                                onClick={()=> setGlutenFree(!GlutenFree)}\n                            /> Gluen Free<br/>\n                            <input type=\"checkbox\"  value={DairyFree}\n                                onClick={()=> setDairyFree(!DairyFree)}\n                            /> Dairy Free<br/>\n                            <input type=\"checkbox\"  value={Kosher}\n                                onClick={()=> setKosher(!Kosher)}\n                            /> Kosher<br/>\n                            <input type=\"checkbox\"  value={LactoseIntolerant}\n                                onClick={()=> setLactoseIntolerant(!LactoseIntolerant)}\n                            /> Lactose Intolerant<br/>\n                        </div>\n\n                        <div> \n                            <label>Allergies</label><br/>\n                            <input type=\"checkbox\"   value={Peanut}\n                                onClick={()=> setPeanut(!Peanut)}\n                            /> Peanut <br/>\n                            <input type=\"checkbox\"  value={Almonds}\n                                onClick={()=> setAlmonds(!Almonds)}\n                            /> Almonds<br/>\n                            <input type=\"checkbox\"  value={Milk}\n                                onClick={()=> setMilk(!Milk)}\n                            /> Milk<br/>\n                            <input type=\"checkbox\"  value={Soy}\n                                onClick={()=> setSoy(!Soy)}\n                            /> Soy<br/>\n                            <input type=\"checkbox\"  value={Egg}\n                                onClick={()=> setEgg(!Egg)}\n                            /> Egg<br/>\n                        </div>\n                        <button classname=\"center customButton\" type=\"submit\">Sign Up</button>\n                        \n                        \n                        <LinkContainer to=\"/\">   \n                            <Nav.Link>\n                            <button2>Sign in instead</button2><br/>\n                            </Nav.Link>\n                        </LinkContainer>\n                        {/* </BorderWrapper> */}\n                        </form>\n                        </div>\n                        </>\n                )}\n                    </div>\n        </section>   \n    );\n}\n\n//export default Signup;","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/OrderDetails.js",["102"],"import database from '../firebase';\nimport \"./OrderDetails.css\";\nimport {useLocation} from 'react-router-dom';\n\nexport default function OrderDetails() {\n    let location = useLocation();\n    const id = location.state.id\n    const addy = location.state.addy;\n    const status = location.state.complete;\n    const plan = location.state.plan;\n    const price = location.state.price;\n    var subtotal = price*0.85;\n    var tax = price - subtotal;\n    \n    return (\n        <div class=\"big-rect\">\n            <k class=\"top-p\"> Order Details</k>\n            <f class=\"side-word-1\">{id}</f>\n            <f class=\"side-word-2\">{status}</f>\n            <f class=\"middle-word-1\">Ship To:</f>\n            <f class=\"middle-word-2\">{addy}</f>\n            <f class=\"middle-word-3\">Payment Information</f>\n            <f class=\"middle-word-4\">{plan}</f>\n            <f class=\"right-word-1\">Order Summary</f>\n            <f class=\"right-word-2a\">Subtotal</f>\n            <f class=\"right-word-2b\">{subtotal}</f>\n            <f class=\"right-word-3a\">Sales Tax</f>\n            <f class=\"right-word-3b\">{tax}</f>\n            <y class=\"faint-line\"/>\n            <f class=\"right-word-4a\">Total</f>\n            <f class=\"right-word-4b\">{price}</f>\n            <q class=\"bye-bye\"> We hope you order again soon!</q>\n        </div>\n    )\n};\n","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/OrderCon.js",["103","104","105","106","107","108","109","110","111","112"],"import { getDefaultNormalizer, queryByTestId } from \"@testing-library/dom\";\nimport React, {useState, useEffect} from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport database from '../firebase';\nimport \"./OrderCon.css\";\nimport Home from './Home';\n\n//const Email = \"user3@gmail.com\"; //should be authenticated by logged-in user dummy user fir now\n\nexport default function OrderCon(props) {\n    const {AccountID} = props;\n    const [orderID, setOrderID] = useState([]);\n    const [orderImg, setImgList] = useState([]);\n    const [orderQty, setOrderQty] = useState([]);\n    const [orderDate, setDateList] = useState([]);\n    const [orderD, setDList] = useState([]);\n    const [orderPrice, setPriceList] = useState([]);\n    const [jumpback, setjumpback] = useState(false);\n    React.useEffect(() => {\n    const orders = database.firestore().collection(`/users/${AccountID}/orders`).get().then(\n    (querySnapshot => {\n        setOrderID(querySnapshot.docs.map(doc=> doc.get(\"order_number\")))\n        setImgList(querySnapshot.docs.map(doc=>doc.get(\"image\")))\n        setOrderQty(querySnapshot.docs.map(doc=>doc.get(\"qty\")))\n        //setDateList(querySnapshot.docs.map(doc=> doc.get(\"order_Date\")))\n        setDList(querySnapshot.docs.map(doc=>doc.get(\"descriptions\")))\n        setPriceList(querySnapshot.docs.map(doc=>doc.get(\"price\")))\n    }));\n}, [])\n\n    function OrderBlock(props) {\n        return (\n            <div class=\"item-tower\">\n                <p class=\"right\">Total: {props.xprice*props.xqty}</p>\n                <p class=\"left-bold\"> Order #: {props.xID}</p>\n                <div class=\"item\">\n                    <img class=\"left\" src= {props.ximg}/>\n                    <p class=\"left\"> {props.xdes} </p>\n                    <p class=\"right\"> Purchased on {props.xdate} </p>\n                    <p class=\"right\"> Quantity: {props.xqty}</p>\n                    <p class=\"right\">Price: {props.xprice}</p>\n                </div>\n        </div>\n            \n        );\n    }\n\n    const handleJumpback =() =>{\n        setjumpback(true);\n    }\n\n    return(\n        <div>\n        {jumpback? (\n            <>\n            <Home \n                AccountID = {AccountID}\n            />\n            </>\n        ):(\n           <>\n            <section>\n            <div class=\"order-page\">\n                <button onClick={handleJumpback}> Home</button>\n                <p class=\"check-out\">Order History</p>\n                {orderID.length > 0 ? (\n                    <div class=\"order-tower\">\n                        {orderID.map((id,index) => (\n                            <OrderBlock    xqty={orderQty[index]}   xID={orderID[index]}\n                                           xdate={orderDate[index]} xprice={orderPrice[index]} \n                                           xdes={orderD[index]}     ximg={orderImg[index]}/>\n                        ))}\n\n                    </div>\n                ):(\n                    <div>\n                        <p class=\"none\">Unfourtunately, you have no order history. Please make a selection add an item to your cart and select the checkout option</p>\n                    </div>\n                )}\n            </div>\n            </section>\n           </> \n        )} \n        </div>\n    )\n};\n","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/Cart.js",["113","114","115","116","117","118","119","120","121","122","123","124","125"],"/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/Login.js",["126"],"import React, {useState, useEffect} from \"react\";\nimport database from '../firebase';\nimport Nav from \"react-bootstrap/Nav\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./Login.css\";\nimport Home from \"./Home\";\n\nconst Login = () =>{\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [account, setaccount] = useState(false);\n    const [AccountID, setAccountID] = useState('');\n\n    const handleLogin =() =>{\n        database.auth().signInWithEmailAndPassword(email,password)\n        .then(()=>{\n            setAccountID(email);\n            setEmail(\"\");\n            setPassword(\"\");\n            //if email and password is currect, then jump to home page\n            setTimeout(() => {\n                setaccount(true);\n            }, 200);\n\n        }).catch((err)=>{\n            alert(err);\n            setaccount(false);\n        });\n    }\n    \n    const authListener = () =>{\n        database.auth().onAuthStateChanged(account => {\n            if (account==true) {\n                setaccount(true);\n            }else{\n                setaccount(false);\n            }\n        });\n    };\n\n    useEffect(() => {\n        authListener();\n    }, []);\n\n    return (\n        <section className=\"login\">\n            <div className=\"loginContainer\">\n                {account?(\n                    <>\n                    <br/>\n                    <br/>\n                    <Home \n                        AccountID = {AccountID}\n                    />\n                    </>\n                ):(\n                    <>\n                    <div class=\"form\">\n                    <h1 className=\"customh1\">Welcome</h1>\n                    {/* <BorderWrapper> */}\n                    <input type=\"text\" required value={email}\n                        placeholder = \"Email\"\n                        onChange={(e) => setEmail(e.target.value)}\n                    /><br/>\n                    \n                    <input type=\"password\" required value={password}\n                        placeholder = \"Password\"\n                        onChange={(e) => setPassword(e.target.value)}\n                    /><br/>\n\n                    <button1 onClick={handleLogin}>Login</button1><br/> \n\n                    <p2>Don't have an account?</p2>\n                    <LinkContainer to=\"/signup\">   \n                        <Nav.Link>\n                            <button2>Sign-up</button2><br/>\n                        </Nav.Link>\n                    </LinkContainer>\n                    {/* </BorderWrapper> */}\n                    </div>\n                    </>\n                )}\n            </div>\n        </section>\n    );\n}\n\nexport default Login;\n\n","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/NotFound.js",[],"/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/SellersPage.js",["127","128","129","130","131","132","133","134"],"/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/Home.js",["135","136","137","138","139","140","141"],"/Users/tawhidmahmud/Documents/react/ComfyBake/src/firebase.js",["142"],"/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/DisplayGrid.js",["143","144","145","146","147","148","149","150"],"/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/CustomCards.js",["151","152","153","154","155"],"import React, { useEffect, useState } from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Card from 'react-bootstrap/Card'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport database from '../firebase';\nimport { getDefaultNormalizer } from '@testing-library/dom';\n\nfunction CustomCards(props) {\n    //{title, imageURL, body, price, ingredients}\n    //change\n    const [titles, setTitles] = useState(props.title)\n    const [titleValue, setTitleValue] = useState(\"Sample Title\")\n    \n    const [imageURL, setImageURL] = useState(props.imageURL)\n    \n    const [body, setBody] = useState(props.body)\n    const [bodyValue, setBodyValue] = useState(\"Sample Body\")\n    \n    const [price, setPrice] = useState(\"$\" + props.price)\n    const [price_] = useState(props.price)\n    const [priceValue, setPriceValue] = useState(\"Sample Price\")\n    \n    const [ingredients, setIngredients] = useState(props.ingredients)\n    const [ingredientsValue, setIngredientsValue] = useState(\"Sample Ingredients\")\n\n    const [quantity, setQuantity] = useState(props.quantity)\n    const [quantityValue, setQuantityValue] = useState(\"Sample Quantity\")\n\n    const [showInput, setInputState] = useState(false)\n\n    const [ID, setID] = useState(props.ID)\n\n    const [image, setImage] = useState(null);\n    const storage = database.storage();\n    const id = ID;\n    const FoodCollection = database.firestore().collection(\"FoodCollection\")\n\n\n    function save(event) {\n        event.preventDefault();\n        //upload image to firebase\n        const uploadTask = storage.ref(id+\"/\"+ image.name).put(image);\n        var imageURL_ = \"\";\n        //read image_url from firebase\n        uploadTask.on(\n            \"state_changed\",\n            snapshot =>{},\n            error=>{\n                alert(error);\n            },\n            ()=>{\n                storage.ref(id).child(image.name).getDownloadURL()\n                .then(url=>{\n                    imageURL_ = url;\n                })\n            }\n        )\n        \n        \n        setTimeout(() => {\n            //alert(imageURL_); \n            FoodCollection.doc(id).collection(\"food\").doc(titleValue).set({\n                Foodname: titleValue,\n                ImageUrl: imageURL_,\n                Body: bodyValue,\n                Price: priceValue,\n                Ingredients: ingredientsValue,\n                SellerID: id,\n                Quantity: quantityValue\n            }).then(()=>{\n                console.log(\"Information have been sent\");\n                //alert(\"Information have been sent\");\n            }).catch((err)=>{\n                alert(err.message);\n            });   \n\n            setTitles(titleValue)\n            setImageURL(imageURL_)\n            setBody(bodyValue)\n            setPrice(\"$ \"+priceValue)\n            setIngredients(ingredientsValue)\n            setQuantity(quantityValue)\n\n            setInputState(false)\n        }, 2000);\n\n    }\n \n    function edit () {\n        setInputState(true)\n    }\n\n    function cancel () {\n        setInputState(false)\n    }\n\n    function updateTitleValue (event) {\n        setTitleValue(event.target.value)\n        console.log(titleValue)\n    }\n\n    function updateImageURLValue (event){\n        event.preventDefault();\n        if (event.target.files[0]){\n            setImage(event.target.files[0]);\n        }\n    }\n\n    function updateBodyValue (event) {\n        setBodyValue(event.target.value)\n    }\n\n    function updatePriceValue (event) {\n        setPriceValue(event.target.value)\n    }\n\n    function updateIngredientsValue (event) {\n        setIngredientsValue(event.target.value)\n    }\n\n    function updateQuantityValue (event) {\n        setQuantityValue(event.target.value)\n    }\n\n    function deleteCard () {\n        FoodCollection.doc(id).collection(\"food\").doc(titles).delete();\n        alert(\"Refresh to complete Delete\")\n    }\n\n\n    if(showInput) {\n        return (\n            <Card>\n                <input onChange={updateTitleValue} placeholder=\"Edit Title\"></input>\n                <input type=\"file\" onChange={updateImageURLValue} placeholder=\"Edit Image\"></input>\n                <input onChange={updateBodyValue} placeholder=\"Edit Body\"></input>\n                <input onChange={updatePriceValue} placeholder=\"Edit Price\"></input>\n                <input onChange={updateIngredientsValue} placeholder=\"Edit Ingredients\"></input>\n                <input onChange={updateQuantityValue} placeholder=\"Edit Quantity\"></input>\n                <button onClick={save}>Save</button>\n                <button onClick={cancel}>Cancel</button>\n                <button onClick={deleteCard}>Delete</button>\n            </Card>\n        );\n    } else {\n        return (\n                <Card>\n                        <Card.Img variant=\"top\" src = {imageURL} />\n                        \n                        <Card.Body>\n                        \n                            <Card.Title>{titles}</Card.Title>\n                            <Card.Text>\n                                {body}\n                            </Card.Text>\n                        \n                        </Card.Body>\n\n                        <Card.Footer>\n\n                            <p>{price}</p>\n                            <small className=\"text-muted\"> Contains: {ingredients} </small>\n                            <br></br>\n                            <small className=\"text-muted\"> Quantity: {quantity} </small>\n                            <br></br>\n                            <button onClick = {edit}>Edit</button>\n                            \n\n                        </Card.Footer> \n                    \n                </Card> \n\n        );\n    }\n\n}\n\nexport default CustomCards","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/LoadCards.js",["156","157","158"],"/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/Product.js",["159","160","161","162"],"/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/displayCart.js",["163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178"],"/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/Transfer.js",[],"/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/Display.js",["179","180","181","182"],"import React, {useState, useEffect} from \"react\";\nimport database from '../firebase';\nimport Nav from \"react-bootstrap/Nav\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport SellerPage from './SellersPage';\n\n\nconst db = database.firestore();\nconst storage = database.storage();\n\nconst Display = (props) =>{\n    \n    const [FirstName, setFirstName] = useState('');\n    const [LastName, setLastName] = useState('');\n    const [Address, setAddress] = useState('');\n    const [PhoneNum, setPhoneNum] = useState('');\n    \n    const [TestFirstName, setTestFirstName] = useState('');\n    const [TestLastName, setTestLastName] = useState('');\n    const [TestAddress, setTestAddress] = useState('');\n    const [TestPhoneNum, setTestPhoneNum] = useState('');\n    const [Size, setSize] = useState(0);\n\n    const [TestBody, setTestBody] = useState(\"\");\n    const [TestFoodname, setTestFoodname] = useState(\"\");\n    const [TestImageUrl, setTestImageUrl] = useState();\n    const [TestSize, setTestSize] = useState(0);\n    \n    const {AccountID} = props\n    const [SellerID, setSellerID] = useState('');\n    const [AccountMatch, setAccountMatch] = useState('');\n    const [jump, setjump] = useState(false);\n    \n    const id = \"user1@gmail.com\";\n    \n    //method1\n    class User{\n        constructor(FirstName, LastName, Address, City, State, PhoneNumber){\n            this.FirstName = FirstName;\n            this.LastName = LastName;\n            this.Address = Address;\n            this.City = City;\n            this.State = State;\n            this.PhoneNumber = PhoneNumber;\n        }\n    }\n    \n    var userConverter = {\n        fromFirestore: function(snapshot, options){\n            const data = snapshot.data(options);\n            return new User(data.personalinfo.FirstName, data.personalinfo.LastName,\n                data.personalinfo.Address, data.personalinfo.City, \n                data.personalinfo.State, data.personalinfo.PhoneNumber);\n        }\n    }\n    \n    //var docRef = db.collection(\"FoodCollection\").doc(id).collection(\"food\").doc(\"Maple Sugar Scrolls\");\n    \n    db.collection(\"users\").doc(id)\n    .withConverter(userConverter).get().then((doc) => {\n        var user = doc.data();\n        setLastName(user.LastName);\n        setFirstName(user.FirstName);\n        setPhoneNum(user.PhoneNumber);\n        setAddress(user.Address + \" \" + user.City + \" \" + user.State)\n    });\n\n    //method2\n    db.collection(\"users\").get().then(querySnapshot =>{\n        const data = querySnapshot.docs.map(doc=> doc.data());\n    \n        //console.log(data[0].personalinfo.FirstName);\n        /*\n        setTestFirstName(data[5].personalinfo.FirstName);\n        setTestLastName(data[5].personalinfo.LastName);\n        setTestPhoneNum(data[5].personalinfo.PhoneNumber);\n        setTestAddress(data[5].personalinfo.Address + \" \" \n                        + data[5].personalinfo.City + \" \"\n                        + data[5].personalinfo.State);\n        */\n       \n       setSize(data.length);\n       setHelperfunction(data[5]);\n    })\n\n    \n    function setHelperfunction (data_1){\n        setTestFirstName(data_1.personalinfo.FirstName);\n        setTestLastName(data_1.personalinfo.LastName);\n        setTestPhoneNum(data_1.personalinfo.PhoneNumber);\n        setTestAddress(data_1.personalinfo.Address + \" \" \n                        + data_1.personalinfo.City + \" \"\n                        + data_1.personalinfo.State); \n    }\n    \n\n    //method3\n    db.collection(\"FoodCollection\").doc(id).collection(\"food\").get().then(querySnapshot =>{\n        const data = querySnapshot.docs.map(doc=> doc.data());\n        setTestSize(data.length);\n        setHelperfunction_2(data[3]);\n        \n    })\n\n    function setHelperfunction_2(data_2){\n        setTestBody(data_2.Body);\n        setTestFoodname(data_2.Foodname);\n        setTestImageUrl(data_2.ImageUrl);\n    }\n\n    const [TestBody_, setTestBody_] = useState(\"\");\n    const [TestFoodname_, setTestFoodname_] = useState(\"\");\n    const [TestImageUrl_, setTestImageUrl_] = useState();\n    const [size_seller, setSize_seller] = useState(0);\n    //method4\n    //db.collection(\"FoodCollection\").get().then(querySnapshot =>{\n    db.collectionGroup(\"food\").get().then(querySnapshot =>{\n        const data = querySnapshot.docs.map(doc=> doc.data());\n        console.log(data);\n        setSize_seller(data.length);\n        setHelperfunction_3(data[1]);\n    })\n\n    function setHelperfunction_3(data_3){\n        setTestBody_(data_3.Body);\n        setTestFoodname_(data_3.Foodname);\n        setTestImageUrl_(data_3.ImageUrl);\n    }\n\n    //delete document \n    db.collection(\"FoodCollection\").doc(\"user2@gmail.com\").collection(\"food\").doc(\"2\").delete();\n\n    //update \n    db.collection(\"FoodCollection\").doc(\"user5@gmail.com\").collection(\"food\").doc(\"t\")\n        .update({\n            \"Body\": \"changed\"\n    })\n\n    //jump even \n    const handleJump =() =>{\n        setjump(true);\n    }\n\n    //logout\n    const handleLogout = () =>{\n        setAccountMatch(AccountID==SellerID);\n        setTimeout(() => {\n            database.auth().signOut();\n        }, 100);\n    }\n    \n    return (\n        <div> \n            {jump? (\n                <>\n                <SellerPage\n                    AccountID = {AccountID}\n                    SellerID = {SellerID}\n                />\n                </>\n            ):(\n                <>\n                <br/>\n                <br/>\n                <br/>\n                <p>AccountID:{AccountID}</p>\n                <p>SellerID:{SellerID}</p>\n                <br/>\n                <input value={SellerID}\n                    placeholder = \"SellerID\"\n                    onChange={(e) => setSellerID(e.target.value)}\n                /><br/>\n                <button onClick={handleJump}> Jump</button>\n                <br/>\n                    <LinkContainer to=\"/login\">  \n                        <Nav.Link>\n                            <button onClick={handleLogout}>Logout</button><br/>\n                        </Nav.Link>\n                    </LinkContainer>\n                <br/>\n                <p>method4</p>\n                <p>count: {size_seller}</p>\n                <p>Foodname: {TestFoodname_}</p>\n                <p>Body: {TestBody_}</p>\n                <p>ImageUrl: {TestImageUrl_}</p>\n                <br/>\n                <br/>\n                <br/>\n                <p>method1</p>\n                <p>FirstName: {FirstName}</p>\n                <p>LastName: {LastName}</p>\n                <p>PhoneNumber: {PhoneNum}</p>\n                <p>Address: {Address}</p>\n                <br/>\n                <br/>\n                <br/>\n                <p>method2</p>\n                <p>TestFirstName: {TestFirstName}</p>\n                <p>TestLastName: {TestLastName}</p>\n                <p>TestPhoneNumber: {TestPhoneNum}</p>\n                <p>TestAddress: {TestAddress}</p>\n                <p>Size: {Size}</p>\n                <br/>\n                <br/>\n                <br/>\n                <p>method3</p>\n                <p>Foodname: {TestFoodname}</p>\n                <p>Body: {TestBody}</p>\n                <p>ImageUrl: {TestImageUrl}</p>\n                <p>Size: {TestSize}</p>\n                </>\n            )}\n            \n        </div>\n    \n    );\n    \n\n}\n\nexport default Display;\n/*\n        <div> \n            {jump? (\n                <>\n                <SellerPage\n                    AccountID = {AccountID}\n                    SellerID = {SellerID}\n                />\n                </>\n            ):(\n                <>\n                </>\n            )}\n            \n        </div>\n*/","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/BrowsingCards.js",["183","184"],"import React, { useEffect, useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport database from '../firebase';\n\nfunction BrowsingCards(props) {\n\n    //no edit state function, don't want to change data here\n    const [title] = useState(props.title)\n    const [imageURL] = useState(props.imageURL)\n    const [body] = useState(props.body)\n    const [price] = useState(\"$\" + props.price)\n    const [price_] = useState(props.price)\n    const [ingredients] = useState(props.ingredients)\n    const [quantity] = useState(props.quantity)\n    const [sellerID] = useState(props.sellerID)\n    const [accountID] = useState(props.accountID)\n\n    const handleClick =() =>{\n        const ref = database.firestore().collection(\"users\").doc(accountID).collection('Cart').doc()\n        var myID = ref.id;\n        ref.set({\n            name: title,\n            price: price_,\n            image: imageURL,\n            quantity: quantity,\n            checkout: false,\n            seller: sellerID,\n            body: body,\n            id: myID,\n            quantity: 1,\n            total: price_,\n        })\n        .then(() => {\n            console.log(\"Document successfully written!\");\n        })\n        .catch((error) => {\n            console.error(\"Error writing document: \", error);\n        });\n\n        var num=0\n        database.firestore().collection(\"users\").doc(accountID).onSnapshot((doc) =>{\n            num = doc.data().shoppingcart\n        })\n        setTimeout(() => {\n            //update \n            num += 1\n            database.firestore().collection(\"users\").doc(accountID).update({\n                \"shoppingcart\": num\n            })\n        }, 10);\n    }\n\n    return (\n            <Card>\n\n                    <Card.Img variant=\"top\" src = {imageURL} />\n                            \n                    <Card.Body>\n                    \n                        <Card.Title>{title}</Card.Title>\n                        <Card.Text>\n                            {body}\n                        </Card.Text>\n                    \n                    </Card.Body>\n\n                    <Card.Footer>\n\n                        <p>{price}</p>\n                        <button onClick={handleClick}>Add to cart</button>\n                        <br></br>\n                        <small className=\"text-muted\"> Contains: {ingredients} </small>\n                        <br></br>\n                        <small className=\"text-muted\"> Quantity: {quantity}</small>\n                    </Card.Footer> \n\n            </Card>\n    );\n}\n\nexport default BrowsingCards",{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":34,"column":12,"nodeType":"191","messageId":"192","endLine":34,"endColumn":20},{"ruleId":"189","severity":1,"message":"193","line":34,"column":22,"nodeType":"191","messageId":"192","endLine":34,"endColumn":33},{"ruleId":"189","severity":1,"message":"194","line":35,"column":12,"nodeType":"191","messageId":"192","endLine":35,"endColumn":25},{"ruleId":"189","severity":1,"message":"195","line":35,"column":27,"nodeType":"191","messageId":"192","endLine":35,"endColumn":43},{"ruleId":"189","severity":1,"message":"196","line":36,"column":12,"nodeType":"191","messageId":"192","endLine":36,"endColumn":25},{"ruleId":"189","severity":1,"message":"197","line":37,"column":12,"nodeType":"191","messageId":"192","endLine":37,"endColumn":32},{"ruleId":"189","severity":1,"message":"198","line":1,"column":8,"nodeType":"191","messageId":"192","endLine":1,"endColumn":16},{"ruleId":"189","severity":1,"message":"199","line":1,"column":10,"nodeType":"191","messageId":"192","endLine":1,"endColumn":30},{"ruleId":"189","severity":1,"message":"200","line":1,"column":32,"nodeType":"191","messageId":"192","endLine":1,"endColumn":45},{"ruleId":"189","severity":1,"message":"201","line":2,"column":26,"nodeType":"191","messageId":"192","endLine":2,"endColumn":35},{"ruleId":"189","severity":1,"message":"202","line":3,"column":27,"nodeType":"191","messageId":"192","endLine":3,"endColumn":33},{"ruleId":"189","severity":1,"message":"203","line":3,"column":35,"nodeType":"191","messageId":"192","endLine":3,"endColumn":40},{"ruleId":"189","severity":1,"message":"204","line":3,"column":42,"nodeType":"191","messageId":"192","endLine":3,"endColumn":46},{"ruleId":"189","severity":1,"message":"205","line":15,"column":23,"nodeType":"191","messageId":"192","endLine":15,"endColumn":34},{"ruleId":"189","severity":1,"message":"206","line":20,"column":11,"nodeType":"191","messageId":"192","endLine":20,"endColumn":17},{"ruleId":"207","severity":1,"message":"208","line":29,"column":4,"nodeType":"209","endLine":29,"endColumn":6,"suggestions":"210"},{"ruleId":"211","severity":1,"message":"212","line":37,"column":21,"nodeType":"213","endLine":37,"endColumn":58},{"ruleId":"189","severity":1,"message":"202","line":6,"column":27,"nodeType":"191","messageId":"192","endLine":6,"endColumn":33},{"ruleId":"189","severity":1,"message":"203","line":6,"column":35,"nodeType":"191","messageId":"192","endLine":6,"endColumn":40},{"ruleId":"189","severity":1,"message":"204","line":6,"column":42,"nodeType":"191","messageId":"192","endLine":6,"endColumn":46},{"ruleId":"189","severity":1,"message":"214","line":7,"column":8,"nodeType":"191","messageId":"192","endLine":7,"endColumn":15},{"ruleId":"189","severity":1,"message":"215","line":16,"column":7,"nodeType":"191","messageId":"192","endLine":16,"endColumn":16},{"ruleId":"189","severity":1,"message":"216","line":27,"column":12,"nodeType":"191","messageId":"192","endLine":27,"endColumn":16},{"ruleId":"189","severity":1,"message":"217","line":28,"column":12,"nodeType":"191","messageId":"192","endLine":28,"endColumn":20},{"ruleId":"189","severity":1,"message":"218","line":30,"column":11,"nodeType":"191","messageId":"192","endLine":30,"endColumn":20},{"ruleId":"189","severity":1,"message":"219","line":38,"column":11,"nodeType":"191","messageId":"192","endLine":38,"endColumn":25},{"ruleId":"189","severity":1,"message":"220","line":42,"column":11,"nodeType":"191","messageId":"192","endLine":42,"endColumn":23},{"ruleId":"189","severity":1,"message":"221","line":91,"column":11,"nodeType":"191","messageId":"192","endLine":91,"endColumn":21},{"ruleId":"222","severity":1,"message":"223","line":97,"column":13,"nodeType":"213","messageId":"224","endLine":97,"endColumn":25},{"ruleId":"222","severity":1,"message":"223","line":108,"column":7,"nodeType":"213","messageId":"224","endLine":108,"endColumn":19},{"ruleId":"225","severity":1,"message":"226","line":34,"column":24,"nodeType":"227","messageId":"228","endLine":34,"endColumn":26},{"ruleId":"189","severity":1,"message":"229","line":8,"column":8,"nodeType":"191","messageId":"192","endLine":8,"endColumn":12},{"ruleId":"189","severity":1,"message":"214","line":14,"column":8,"nodeType":"191","messageId":"192","endLine":14,"endColumn":15},{"ruleId":"189","severity":1,"message":"230","line":25,"column":26,"nodeType":"191","messageId":"192","endLine":25,"endColumn":41},{"ruleId":"225","severity":1,"message":"226","line":25,"column":64,"nodeType":"227","messageId":"228","endLine":25,"endColumn":66},{"ruleId":"189","severity":1,"message":"231","line":32,"column":11,"nodeType":"191","messageId":"192","endLine":32,"endColumn":13},{"ruleId":"225","severity":1,"message":"232","line":35,"column":19,"nodeType":"227","messageId":"228","endLine":35,"endColumn":21},{"ruleId":"207","severity":1,"message":"233","line":55,"column":8,"nodeType":"209","endLine":55,"endColumn":10,"suggestions":"234"},{"ruleId":"222","severity":1,"message":"223","line":84,"column":21,"nodeType":"213","messageId":"224","endLine":88,"endColumn":23},{"ruleId":"189","severity":1,"message":"235","line":25,"column":10,"nodeType":"191","messageId":"192","endLine":25,"endColumn":14},{"ruleId":"225","severity":1,"message":"232","line":32,"column":17,"nodeType":"227","messageId":"228","endLine":32,"endColumn":19},{"ruleId":"225","severity":1,"message":"226","line":33,"column":15,"nodeType":"227","messageId":"228","endLine":33,"endColumn":17},{"ruleId":"189","severity":1,"message":"236","line":34,"column":15,"nodeType":"191","messageId":"192","endLine":34,"endColumn":20},{"ruleId":"225","severity":1,"message":"226","line":41,"column":27,"nodeType":"227","messageId":"228","endLine":41,"endColumn":29},{"ruleId":"207","severity":1,"message":"237","line":66,"column":6,"nodeType":"209","endLine":66,"endColumn":8,"suggestions":"238"},{"ruleId":"222","severity":1,"message":"223","line":111,"column":11,"nodeType":"213","messageId":"224","endLine":115,"endColumn":13},{"ruleId":"189","severity":1,"message":"239","line":16,"column":5,"nodeType":"191","messageId":"192","endLine":16,"endColumn":7},{"ruleId":"189","severity":1,"message":"240","line":1,"column":16,"nodeType":"191","messageId":"192","endLine":1,"endColumn":24},{"ruleId":"189","severity":1,"message":"201","line":1,"column":26,"nodeType":"191","messageId":"192","endLine":1,"endColumn":35},{"ruleId":"189","severity":1,"message":"241","line":5,"column":10,"nodeType":"191","messageId":"192","endLine":5,"endColumn":19},{"ruleId":"189","severity":1,"message":"242","line":6,"column":9,"nodeType":"191","messageId":"192","endLine":6,"endColumn":16},{"ruleId":"189","severity":1,"message":"243","line":7,"column":10,"nodeType":"191","messageId":"192","endLine":7,"endColumn":60},{"ruleId":"189","severity":1,"message":"244","line":8,"column":8,"nodeType":"191","messageId":"192","endLine":8,"endColumn":17},{"ruleId":"189","severity":1,"message":"245","line":11,"column":7,"nodeType":"191","messageId":"192","endLine":11,"endColumn":14},{"ruleId":"189","severity":1,"message":"246","line":13,"column":7,"nodeType":"191","messageId":"192","endLine":13,"endColumn":17},{"ruleId":"189","severity":1,"message":"201","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":26},{"ruleId":"189","severity":1,"message":"247","line":2,"column":8,"nodeType":"191","messageId":"192","endLine":2,"endColumn":17},{"ruleId":"189","severity":1,"message":"199","line":6,"column":10,"nodeType":"191","messageId":"192","endLine":6,"endColumn":30},{"ruleId":"189","severity":1,"message":"248","line":20,"column":12,"nodeType":"191","messageId":"192","endLine":20,"endColumn":18},{"ruleId":"189","severity":1,"message":"249","line":31,"column":16,"nodeType":"191","messageId":"192","endLine":31,"endColumn":21},{"ruleId":"189","severity":1,"message":"241","line":5,"column":10,"nodeType":"191","messageId":"192","endLine":5,"endColumn":19},{"ruleId":"189","severity":1,"message":"250","line":6,"column":8,"nodeType":"191","messageId":"192","endLine":6,"endColumn":18},{"ruleId":"251","severity":1,"message":"252","line":41,"column":13,"nodeType":"253","messageId":"228","endLine":41,"endColumn":21},{"ruleId":"189","severity":1,"message":"201","line":1,"column":27,"nodeType":"191","messageId":"192","endLine":1,"endColumn":36},{"ruleId":"189","severity":1,"message":"254","line":3,"column":8,"nodeType":"191","messageId":"192","endLine":3,"endColumn":10},{"ruleId":"189","severity":1,"message":"214","line":4,"column":8,"nodeType":"191","messageId":"192","endLine":4,"endColumn":15},{"ruleId":"211","severity":1,"message":"212","line":36,"column":21,"nodeType":"213","endLine":36,"endColumn":47},{"ruleId":"189","severity":1,"message":"240","line":1,"column":16,"nodeType":"191","messageId":"192","endLine":1,"endColumn":24},{"ruleId":"189","severity":1,"message":"201","line":1,"column":26,"nodeType":"191","messageId":"192","endLine":1,"endColumn":35},{"ruleId":"189","severity":1,"message":"255","line":2,"column":8,"nodeType":"191","messageId":"192","endLine":2,"endColumn":17},{"ruleId":"189","severity":1,"message":"256","line":4,"column":8,"nodeType":"191","messageId":"192","endLine":4,"endColumn":16},{"ruleId":"189","severity":1,"message":"245","line":10,"column":7,"nodeType":"191","messageId":"192","endLine":10,"endColumn":14},{"ruleId":"189","severity":1,"message":"257","line":11,"column":7,"nodeType":"191","messageId":"192","endLine":11,"endColumn":11},{"ruleId":"189","severity":1,"message":"258","line":12,"column":7,"nodeType":"191","messageId":"192","endLine":12,"endColumn":15},{"ruleId":"225","severity":1,"message":"226","line":72,"column":30,"nodeType":"227","messageId":"228","endLine":72,"endColumn":32},{"ruleId":"259","severity":1,"message":"260","line":102,"column":31,"nodeType":"261","messageId":"262","endLine":102,"endColumn":42},{"ruleId":"259","severity":1,"message":"260","line":103,"column":29,"nodeType":"261","messageId":"262","endLine":103,"endColumn":40},{"ruleId":"259","severity":1,"message":"260","line":104,"column":27,"nodeType":"261","messageId":"262","endLine":104,"endColumn":38},{"ruleId":"259","severity":1,"message":"260","line":105,"column":25,"nodeType":"261","messageId":"262","endLine":105,"endColumn":36},{"ruleId":"225","severity":1,"message":"226","line":165,"column":31,"nodeType":"227","messageId":"228","endLine":165,"endColumn":33},{"ruleId":"263","severity":1,"message":"264","line":206,"column":45,"nodeType":"265","messageId":"266","endLine":206,"endColumn":47},{"ruleId":"225","severity":1,"message":"226","line":207,"column":41,"nodeType":"227","messageId":"228","endLine":207,"endColumn":43},{"ruleId":"211","severity":1,"message":"212","line":212,"column":45,"nodeType":"213","endLine":212,"endColumn":67},{"ruleId":"189","severity":1,"message":"201","line":1,"column":26,"nodeType":"191","messageId":"192","endLine":1,"endColumn":35},{"ruleId":"189","severity":1,"message":"245","line":9,"column":7,"nodeType":"191","messageId":"192","endLine":9,"endColumn":14},{"ruleId":"189","severity":1,"message":"267","line":31,"column":12,"nodeType":"191","messageId":"192","endLine":31,"endColumn":24},{"ruleId":"225","severity":1,"message":"226","line":146,"column":34,"nodeType":"227","messageId":"228","endLine":146,"endColumn":36},{"ruleId":"189","severity":1,"message":"201","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":26},{"ruleId":"251","severity":1,"message":"252","line":31,"column":13,"nodeType":"253","messageId":"228","endLine":31,"endColumn":21},"no-native-reassign",["268"],"no-negated-in-lhs",["269"],"no-unused-vars","'feedback' is assigned a value but never used.","Identifier","unusedVar","'setFeedback' is assigned a value but never used.","'receiverEmail' is assigned a value but never used.","'setReceiverEmail' is assigned a value but never used.","'formSubmitted' is assigned a value but never used.","'formSubmitSuccessful' is assigned a value but never used.","'database' is defined but never used.","'getDefaultNormalizer' is defined but never used.","'queryByTestId' is defined but never used.","'useEffect' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'setDateList' is assigned a value but never used.","'orders' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'AccountID'. Either include it or remove the dependency array.","ArrayExpression",["270"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Display' is defined but never used.","'PAGE_CART' is assigned a value but never used.","'page' is assigned a value but never used.","'cartitem' is assigned a value but never used.","'addToCart' is assigned a value but never used.","'removeFromCart' is assigned a value but never used.","'handleSumbit' is assigned a value but never used.","'renderCart' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Show_cart must be in PascalCase or SCREAMING_SNAKE_CASE","usePascalOrSnakeCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Card' is defined but never used.","'setAccountMatch' is assigned a value but never used.","'id' is assigned a value but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'SellerID' and 'db'. Either include them or remove the dependency array.",["271"],"'test' is assigned a value but never used.","'time_' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'db'. Either include it or remove the dependency array.",["272"],"'db' is assigned a value but never used.","'useState' is defined but never used.","'addToCart' is defined but never used.","'account' is defined but never used.","'__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED' is defined but never used.","'Show_cart' is defined but never used.","'storage' is assigned a value but never used.","'realtimeDB' is assigned a value but never used.","'Container' is defined but never used.","'price_' is assigned a value but never used.","'setID' is assigned a value but never used.","'SellerPage' is defined but never used.","no-dupe-keys","Duplicate key 'quantity'.","ObjectExpression","'db' is defined but never used.","'testUtils' is defined but never used.","'firebase' is defined but never used.","'user' is assigned a value but never used.","'userName' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'AccountMatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},"Update the dependencies array to be: [AccountID]",{"range":"279","text":"280"},"Update the dependencies array to be: [SellerID, db]",{"range":"281","text":"282"},"Update the dependencies array to be: [db]",{"range":"283","text":"284"},[1385,1387],"[AccountID]",[1774,1776],"[SellerID, db]",[1834,1836],"[db]"]
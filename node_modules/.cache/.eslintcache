[{"/Users/tawhidmahmud/Documents/react/ComfyBake/src/index.js":"1","/Users/tawhidmahmud/Documents/react/ComfyBake/src/reportWebVitals.js":"2","/Users/tawhidmahmud/Documents/react/ComfyBake/src/App.js":"3","/Users/tawhidmahmud/Documents/react/ComfyBake/src/Routes.js":"4","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/SellersPage.js":"5","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/Home.js":"6","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/NotFound.js":"7","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/Login.js":"8","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/Cart.js":"9","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/OrderCon.js":"10","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/OrderDetails.js":"11","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/Signup.js":"12","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/CustomCards.js":"13","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/Product.js":"14","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/DisplayGrid.js":"15","/Users/tawhidmahmud/Documents/react/ComfyBake/src/firebase.js":"16","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/LoadCards.js":"17","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/displayCart.js":"18"},{"size":589,"mtime":1618635090001,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1618635090001,"results":"21","hashOfConfig":"20"},{"size":1385,"mtime":1618635089995,"results":"22","hashOfConfig":"20"},{"size":1067,"mtime":1618635089996,"results":"23","hashOfConfig":"20"},{"size":5282,"mtime":1618635089999,"results":"24","hashOfConfig":"20"},{"size":1554,"mtime":1618635089997,"results":"25","hashOfConfig":"20"},{"size":199,"mtime":1618635089998,"results":"26","hashOfConfig":"20"},{"size":2643,"mtime":1618712128278,"results":"27","hashOfConfig":"20"},{"size":3804,"mtime":1619469183542,"results":"28","hashOfConfig":"20"},{"size":4263,"mtime":1618635089998,"results":"29","hashOfConfig":"20"},{"size":1315,"mtime":1618635089998,"results":"30","hashOfConfig":"20"},{"size":9719,"mtime":1618635090000,"results":"31","hashOfConfig":"20"},{"size":5565,"mtime":1618635089996,"results":"32","hashOfConfig":"20"},{"size":1347,"mtime":1618635089999,"results":"33","hashOfConfig":"20"},{"size":2992,"mtime":1619469143350,"results":"34","hashOfConfig":"20"},{"size":663,"mtime":1619464159456,"results":"35","hashOfConfig":"20"},{"size":1008,"mtime":1618635089997,"results":"36","hashOfConfig":"20"},{"size":4603,"mtime":1619470384102,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1mp43ag",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/tawhidmahmud/Documents/react/ComfyBake/src/index.js",[],["84","85"],"/Users/tawhidmahmud/Documents/react/ComfyBake/src/reportWebVitals.js",[],"/Users/tawhidmahmud/Documents/react/ComfyBake/src/App.js",[],"/Users/tawhidmahmud/Documents/react/ComfyBake/src/Routes.js",[],"/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/SellersPage.js",["86"],"//imrc snippet\nimport React, {useEffect, useState} from 'react';\nimport \"./SellerPage.css\"\nimport CustomCards from './CustomCards'\n\nimport Container from 'react-bootstrap/Container'\nimport Card from 'react-bootstrap/Card'\nimport CardDeck from 'react-bootstrap/CardDeck'\nimport CardColumns from 'react-bootstrap/CardColumns'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport database from '../firebase';\n\nfunction Sellers() {\n\n    const [firestoreArray, setFirestoreArray] = useState([]);\n\n    const db = database.firestore();\n    const id = \"user2@gmail.com\";\n\n    useEffect(() => {\n        \n        db.collection(\"FoodCollection\").doc(id).collection(\"food\").get().then(querySnapshot => {\n            const data = querySnapshot.docs.map(doc => doc.data());\n            console.log(data);\n            setFirestoreArray(data);\n        })\n\n    }, [])\n\n    return (\n        <div class = \"center\">\n            <h1>Sindy's Home Kitchen</h1>\n            <h5>Full Menu</h5>\n\n            <br></br>\n\n            <Container>\n\n                <CardColumns>\n\n                    {firestoreArray.map(each => \n                        // console.log(each.Foodname, each.Ingredients, each.Price)\n                        //<div key={each.Foodname}>\n                            /* <h1 style={{top: \"100px\"}}>{each.Foodname}</h1>\n                            <h3>{each.Ingredients}</h3>\n                            <p>{each.Price}</p> */\n                        \n\n                            <CustomCards key={each.Foodname}\n                                                                \n                                title= {each.Foodname}\n                                imageURL= {each.ImageUrl}\n                                body= {each.Body}\n                                price= {each.Price}\n                                ingredients= {each.Ingredients}\n\n                            />\n\n                        //</div>\n                    )}\n\n                </CardColumns>\n\n                <br></br>\n\n                <CardDeck>\n\n                    <Card>\n                        <Card.Img variant=\"top\" src = \"https://images.kitchenstories.io/recipeImages/RP10_30_08_MoltenChocoladeCupcakeWithRaspberryFilling_TitlePictureNEW/RP10_30_08_MoltenChocoladeCupcakeWithRaspberryFilling_TitlePictureNEW-medium-landscape-150.jpg\" />\n                        <Card.Body>\n                        <Card.Title>Raspberry Molten Chocolate Lava Cakes</Card.Title>\n                        <Card.Text>\n                            Its crisp, flaky crust holding a creamy custard \n                            center, blistered on top from the high heat of an oven.\n                        </Card.Text>\n                        </Card.Body>\n                        <Card.Footer>\n                        <p>$3.00</p>\n                        <small className=\"text-muted\">Cocoa | Milk | Rasberry </small>\n                        </Card.Footer>\n                    </Card>\n\n                    <Card>\n                        <Card.Img variant=\"top\" src = \"https://cdn.loveandlemons.com/wp-content/uploads/2020/03/baking-recipes-1.jpg\" />\n                        <Card.Body>\n                        <Card.Title>Homemade Brownies</Card.Title>\n                        <Card.Text>\n                        These brownies will put all other brownie recipes to shame. They have a crave-worthy fudgy texture and a rich dark chocolate flavor.\n                        </Card.Text>\n                        </Card.Body>\n                        <Card.Footer>\n                        <p>$1.50</p>\n                        <small className=\"text-muted\">Cocoa | Egg | Vanilla </small>\n                        </Card.Footer>\n                    </Card>\n\n                    <Card>\n                        <Card.Img variant=\"top\" src = \"https://static01.nyt.com/images/2017/12/13/dining/15COOKING-CREME-BRULEE1/15COOKING-CREME-BRULEE1-articleLarge.jpg\" />\n                        <Card.Body>\n                        <Card.Title>Crème brûlée</Card.Title>\n                        <Card.Text>\n                        Crème brûlée, a dessert consisting of a rich custard base topped with a layer of hardened caramelized sugar.\n                        </Card.Text>\n                        </Card.Body>\n                        <Card.Footer>\n                        <p>$3.25</p>\n                        <small className=\"text-muted\">Egg | Milk | Vanilla </small>\n                        </Card.Footer>\n                    </Card>\n\n                </CardDeck>\n\n                <br></br>\n                <h5>Add Menu Item</h5>\n\n                <CardDeck>\n                    \n\n                    <CustomCards \n                    \n                        title= 'Add New Item'\n                        imageURL='https://static01.nyt.com/images/2017/12/13/dining/15COOKING-CREME-BRULEE1/15COOKING-CREME-BRULEE1-articleLarge.jpg'\n                        body='Enter new menu item description here. After press save and refresh the page to see it appear on your menu.'\n                        price=\"Enter new item price\"\n                        ingredients= \"Enter new item ingredients\"\n\n                    />\n\n                </CardDeck>\n                \n            </Container>\n        </div>\n    );\n\n}\n\nexport default Sellers","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/Home.js",["87"],"import React, {useEffect, useState} from \"react\"\nimport CardColumns from 'react-bootstrap/CardColumns'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport database from '../firebase';\nimport \"./Home.css\";\nimport LoadCards from './LoadCards'\n// import Cart from \"./Cart\"\n\nfunction Home() {\n  const [firestoreArray, setFirestoreArray] = useState([]);\n  \n  const db = database.firestore();\n  const id = \"user2@gmail.com\";\n\n  useEffect(() => {\n        \n    db.collection(\"FoodCollection\").doc(id).collection(\"food\").get().then(querySnapshot => {\n        const data = querySnapshot.docs.map(doc => doc.data());\n        console.log(data);\n        setFirestoreArray(data);\n    })\n  }, [])\n\n  // useEffect(() => {\n        \n  //   db.collection(\"FoodCollection\").get().then((querySnapshot) => {\n  //       querySnapshot.forEach((doc) => {\n  //         console.log(doc);\n  //       });\n  //       // console.log(data);\n  //       // setFirestoreArray(data);\n  //   });\n  // }, [])\n\n  return (\n    <div className=\"Home\">\n      {/* <Cart /> */}\n      <div className=\"lander\">\n        <h1>ComfyBake</h1>\n      </div>\n      <div className=\"content\">\n        <CardColumns>\n          {firestoreArray.map(each => <LoadCards key={each.Foodname}\n                                            \n            title= {each.Foodname}\n            imageURL= {each.ImageUrl}\n            body= {each.Body}\n            price= {each.Price}\n            ingredients= {each.Ingredients}\n            />\n          )}\n        </CardColumns>\n      </div>\n    </div>\n  );\n}\n\nexport default Home","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/NotFound.js",[],"/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/Login.js",["88"],"import React, {useState, useEffect} from \"react\";\nimport database from '../firebase';\nimport Nav from \"react-bootstrap/Nav\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./Login.css\";\n// import BorderWrapper from 'react-border-wrapper'\n\nconst Login = () =>{\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [account, setaccount] = useState(false);\n\n    const handleLogin =() =>{\n        database.auth().signInWithEmailAndPassword(email,password)\n        .then(()=>{\n            setEmail(\"\");\n            setPassword(\"\");\n            //if email and password is currect, then jump to home page\n            setaccount(true);\n        }).catch((err)=>{\n            alert(err);\n            setaccount(false);\n        });\n    }\n\n    return (\n        <section className=\"login\">\n            <div className=\"loginContainer\">\n                {account?(\n                    <>\n                    <br/>\n                    <br/>\n                    <div className=\"transition\">\n                        <p className=\"customP\">Press Continue to go to the Home Page</p>\n                        <LinkContainer to=\"/\">   \n                            <Nav.Link>\n                                <button className=\"customButton\">Continue</button><br/>\n                            </Nav.Link>\n                        </LinkContainer>\n                    </div>\n                    </>\n                ):(\n                    <>\n                    <div class=\"form\">\n                    <h1 className=\"customh1\">Welcome</h1>\n                    {/* <BorderWrapper> */}\n                    <input type=\"text\" required value={email}\n                        placeholder = \"Email\"\n                        onChange={(e) => setEmail(e.target.value)}\n                    /><br/>\n                    \n                    <input type=\"password\" required value={password}\n                        placeholder = \"Password\"\n                        onChange={(e) => setPassword(e.target.value)}\n                    /><br/>\n\n                    <button1 onClick={handleLogin}>Login</button1><br/> \n\n                    <p2>Don't have an account?</p2>\n                    <LinkContainer to=\"/signup\">   \n                        <Nav.Link>\n                            <button2>Sign-up</button2><br/>\n                        </Nav.Link>\n                    </LinkContainer>\n                    {/* </BorderWrapper> */}\n                    </div>\n                    </>\n                )}\n            </div>\n        </section>\n    );\n}\n\nexport default Login;\n\n","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/Cart.js",["89","90","91","92","93"],"/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/OrderCon.js",["94","95","96","97","98","99","100","101","102","103","104","105"],"import { getDefaultNormalizer, queryByTestId } from \"@testing-library/dom\";\nimport React, {useState, useEffect} from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport database from '../firebase';\nimport \"./OrderCon.css\";\n\nconst Email = \"joannefung120@gmail.com\"; //should be authenticated by logged-in user dummy user fir now\n\nexport default function OrderCon() {\n    const [orderQty, setOrderQty] = useState([]);\n    const [orderImg, setImgList] = useState([]);\n    const [orderD, setDList] = useState([]);\n    const [orderPrice, setOrderPrice] = useState([]);\n    const [orderDate, setOrderDate] = useState([]);\n    const [orderID, setOrderID] = useState([]);\n    const [orderAddy, setOrderAddy] = useState([]);\n    const orders = database.firestore().collection(`/users/${Email}/orders`).where('complete', '==', true).get().then(\n    (querySnapshot => {\n        setOrderQty(querySnapshot.docs.map(doc=> doc.get(\"qty\")))\n        setOrderPrice(querySnapshot.docs.map(doc=> doc.get(\"price\")))\n        setOrderID(querySnapshot.docs.map(doc=> doc.id))\n        setOrderDate(querySnapshot.docs.map(doc=> doc.get(\"date\")))\n        //setImgList(querySnapshot.docs.map(doc=>doc.get(\"img\"))).map(doc=>orderImg.concat(doc))\n        //setDList(querySnapshot.docs.map(doc=>doc.get(\"description\"))).map(doc=>orderD.concat(doc))\n        setOrderAddy(querySnapshot.docs.map(doc=> doc.get(\"addy\")))\n        //do css for the page\n        //FINITIO\n    }));\n\n    function OrderBlock(props) {\n        let qty = props.xqty;\n        let price = props.xprice;\n        let date = props.xdate;\n        let ID = props.xID;\n        let addy = props.xaddy;\n        let img = props.ximg;\n        let des = props.xdes;\n        return (\n        <div class=\"order\">\n            <p class=\"text\"> Purchased on {date} </p>\n            <p class=\"text\"> Quantity: {qty}</p>\n            <p class=\"text\"> Order Status: Completed</p>\n            {/* I have to make a function to display the images correctly\n            <div class=\"img\">{img}</div>\n            */}\n            {/* I have to make a function to display the images correctly\n            <div class=\"description\">{description}</div>*/}\n            <p class=\"text\">Price: {price}</p>\n            <div class=\"order-details\">\n                        <p class=\"text\"> Order #: {ID} </p>\n                        <p class=\"bold\">Total: {price}</p>\n                        <div class=\"detail-btn\">\n                           {/*} <Link to={{ pathname: \"/orders/order-details\", state: {\n                                                                                id: ID,\n                                                                                addy: addy,\n                                                                                complete: \"True\",\n                                                                                plan: \"how do you intend to pay\",\n                                                                                price: price}\n                                    }}> \n                                    See Order Details\n                                </Link>*/}\n                        </div>\n                    </div>\n        </div>\n        );\n      }\n    \n    return(\n        <section>\n            <div class=\"order-page\">\n                <Link class=\"cart-link\" to=\"/orders/cart\">View Cart</Link>\n                <p class=\"check-out\">Ready To Checkout?</p>\n                <div class=\"feedback\">\n                    {orderQty.length != 0 ? (\n                    <div class=\"order-tower\">\n                        {orderQty.map(o => {\n                            return <OrderBlock  xqty={orderQty}   xID={orderID} xaddy={orderAddy} \n                                                xdate={orderDate} xprice={orderPrice} \n                                                xdes={orderD}     ximg={orderImg}/>\n                        })}\n                    </div>\n                    ):(\n                    <div>\n                        <p class=\"none\">Unfourtunately, your cart is empty. Please make a selection on the homepage first!</p>\n                    </div>\n                    )}\n                </div>\n            </div>\n        </section>\n    )\n};","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/OrderDetails.js",["106"],"import database from '../firebase';\nimport \"./OrderDetails.css\";\nimport {useLocation} from 'react-router-dom';\n\nexport default function OrderDetails() {\n    let location = useLocation();\n    const id = location.state.id\n    const addy = location.state.addy;\n    const status = location.state.complete;\n    const plan = location.state.plan;\n    const price = location.state.price;\n    var subtotal = price*0.85;\n    var tax = price - subtotal;\n    \n    return (\n        <div class=\"big-rect\">\n            <k class=\"top-p\"> Order Details</k>\n            <f class=\"side-word-1\">{id}</f>\n            <f class=\"side-word-2\">{status}</f>\n            <f class=\"middle-word-1\">Ship To:</f>\n            <f class=\"middle-word-2\">{addy}</f>\n            <f class=\"middle-word-3\">Payment Information</f>\n            <f class=\"middle-word-4\">{plan}</f>\n            <f class=\"right-word-1\">Order Summary</f>\n            <f class=\"right-word-2a\">Subtotal</f>\n            <f class=\"right-word-2b\">{subtotal}</f>\n            <f class=\"right-word-3a\">Sales Tax</f>\n            <f class=\"right-word-3b\">{tax}</f>\n            <y class=\"faint-line\"/>\n            <f class=\"right-word-4a\">Total</f>\n            <f class=\"right-word-4b\">{price}</f>\n            <q class=\"bye-bye\"> We hope you order again soon!</q>\n        </div>\n    )\n};\n","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/Signup.js",["107","108","109","110","111","112"],"import React, {useState} from \"react\";\nimport database from '../firebase';\nimport Nav from \"react-bootstrap/Nav\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n// import BorderWrapper from 'react-border-wrapper'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./Signup.css\";\n\nconst db = database.firestore();\nconst userCollection = db.collection(\"users\");\nconst senderEmail = \"cbakeTeam@gmail.com\";\nconst templateId = \"template_j303hv9\";\n\n\nexport default function Signup() {\n    const [FirstName, setFirstName] = useState('');\n    const [LastName, setLastName] = useState('');\n    const [Address, setAddress] = useState('');\n    const [City, setCity] = useState('');\n    const [State, setState] = useState('');\n    const [PhoneNum, setPhoneNum] = useState('');\n    const [Email, setEmail] = useState('');\n    const [Password, setPassword] = useState('');\n    const [Vegan, setVegan] = useState(false);\n    const [GlutenFree, setGlutenFree] = useState(false);\n    const [DairyFree, setDairyFree] = useState(false);\n    const [Kosher, setKosher] = useState(false);\n    const [LactoseIntolerant, setLactoseIntolerant] = useState(false);\n    const [Peanut, setPeanut] = useState(false);\n    const [Almonds, setAlmonds] = useState(false);\n    const [Milk, setMilk] = useState(false);\n    const [Soy, setSoy] = useState(false);\n    const [Egg, setEgg] = useState(false);\n    const [feedback, setFeedback] = useState(\"\");\n    const [receiverEmail, setReceiverEmail] = useState(\"\");\n    const [formSubmitted, setFormSubmitted] = useState(false);\n    const [formSubmitSuccessful, setFormSubmitSuccessful] = useState(false);\n\n    const [signup, setsignup] = useState(false);\n\n    const handleSumbit = (e) =>{\n        sendFeedback({\n            templateId,\n            senderEmail,\n            receiverEmail:Email,\n            FirstName,\n            LastName,\n          })\n        setFormSubmitted(true)\n        e.preventDefault();\n\n        database.auth().createUserWithEmailAndPassword(Email,Password)\n        .then(()=>{\n            setsignup(true);\n\n            userCollection.doc(Email).set({\n                personalinfo: {\n                    FirstName:FirstName,\n                    LastName:LastName,\n                    Address:Address,\n                    City:City,\n                    State:State,\n                    PhoneNumber:PhoneNum\n                },\n                DietaryPreferences: {\n                    Vegan:Vegan,\n                    GlutenFree:GlutenFree,\n                    DairyFree:DairyFree,\n                    Kosher:Kosher,\n                    LactoseIntolerant:LactoseIntolerant\n                },\n                Allergies:{\n                    eanut:Peanut,\n                    Almonds:Almonds,\n                    Milk:Milk,\n                    Soy:Soy,\n                    Egg:Egg\n                },\n            }).then(()=>{\n                alert(\"Look out for an email confirming your account!\")\n            }).catch((err)=>{\n                alert(err.message);\n            });\n    \n            setFirstName(\"\");\n            setLastName(\"\");\n            setAddress(\"\");\n            setCity(\"\");\n            setState(\"\");\n            setPhoneNum(\"\");\n            setEmail(\"\");\n            setPassword(\"\");\n\n        }).catch((err)=>{\n            setsignup(false);\n            alert(err);\n        });\n        \n    }\n    const sendFeedback = ({\n        templateId,\n        senderEmail,\n        receiverEmail,\n        FirstName,\n        LastName,\n      }) => {\n        window.emailjs\n          .send(\n            \"default_service\",\n            templateId,\n            {\n              senderEmail,\n              receiverEmail,\n              FirstName,\n              LastName,\n            },\n          )\n          .then(res => {\n            if (res.status === 200) {\n              setFormSubmitSuccessful(true)\n            }\n          })\n          // Handle errors here however you like\n          .catch(err => console.error(\"Failed to send feedback. Error: \", err))\n      }\n\n    return (\n        <section className=\"login\">\n            <div className=\"loginContainer\">\n                {signup? (\n                    <>\n                    <br/>\n                    <br/>\n                    <br/>\n                    <div className=\"transition\">\n                        <p className=\"customP\">Press continue to go to the login page</p>\n                        <LinkContainer to=\"/login\">   \n                            <Nav.Link>\n                                <button className=\"customButton\"> Continue</button><br/>\n                            </Nav.Link>\n                        </LinkContainer>\n                    </div>\n                    </>\n                    ):(\n                    <>\n                    <div className=\"form\">\n                        <form className=\"Signup-form\" onSubmit={handleSumbit}>\n                        <h1 className=\"customh1\">Let's Get to Know one Another!</h1>\n                        {/* <BorderWrapper> */}\n                        <div>\n                            <label>Introductions</label><br/>\n                            <input type=\"text\" required value={FirstName}\n                                placeholder = \"FirstName\"\n                                onChange={(e) => setFirstName(e.target.value)}\n                            /><b/> <b/>\n                            <input type=\"text\" required value={LastName}\n                                placeholder = \"LastName\"\n                                onChange={(e) => setLastName(e.target.value)}\n                            /><br/>\n                        </div>\n                \n                        <div> \n                            <label>Address</label><br/>\n                            <input type=\"text\" required value={Address}\n                                placeholder = \"Address\"\n                                onChange = {(e) => setAddress(e.target.value)}\n                            /><br/>\n                            <input type=\"text\" required value={City}\n                                placeholder = \"City\"\n                                onChange = {(e) => setCity(e.target.value)}\n                            /><b/> <b/>\n                            <input type=\"text\" required value={State}\n                                placeholder = \"State\"\n                                onChange = {(e) => setState(e.target.value)}\n                            /><br/>\n                        </div>\n\n                        <div> \n                            <label>Contact</label><br/>\n                            <input type=\"text\" required value={PhoneNum}\n                                placeholder = \"Phone Number\"\n                                onChange = {(e) => setPhoneNum(e.target.value)}\n                            /><br/>\n                            <input type=\"text\" required value={Email}\n                                placeholder = \"Email\"\n                                onChange = {(e) => setEmail(e.target.value)}\n                            /><br/>\n                            <input type=\"password\" required value={Password}\n                                placeholder = \"Password\"\n                                onChange = {(e) => setPassword(e.target.value)}\n                            /><br/>\n                        </div>\n\n                        <div> \n                            <label>Dietary Preferences</label><br/>\n                            <input type=\"checkbox\"   value={Vegan}\n                                onClick={()=> setVegan(!Vegan)}\n                            /> Vegan <br/>\n                            <input type=\"checkbox\"  value={GlutenFree}\n                                onClick={()=> setGlutenFree(!GlutenFree)}\n                            /> Gluen Free<br/>\n                            <input type=\"checkbox\"  value={DairyFree}\n                                onClick={()=> setDairyFree(!DairyFree)}\n                            /> Dairy Free<br/>\n                            <input type=\"checkbox\"  value={Kosher}\n                                onClick={()=> setKosher(!Kosher)}\n                            /> Kosher<br/>\n                            <input type=\"checkbox\"  value={LactoseIntolerant}\n                                onClick={()=> setLactoseIntolerant(!LactoseIntolerant)}\n                            /> Lactose Intolerant<br/>\n                        </div>\n\n                        <div> \n                            <label>Allergies</label><br/>\n                            <input type=\"checkbox\"   value={Peanut}\n                                onClick={()=> setPeanut(!Peanut)}\n                            /> Peanut <br/>\n                            <input type=\"checkbox\"  value={Almonds}\n                                onClick={()=> setAlmonds(!Almonds)}\n                            /> Almonds<br/>\n                            <input type=\"checkbox\"  value={Milk}\n                                onClick={()=> setMilk(!Milk)}\n                            /> Milk<br/>\n                            <input type=\"checkbox\"  value={Soy}\n                                onClick={()=> setSoy(!Soy)}\n                            /> Soy<br/>\n                            <input type=\"checkbox\"  value={Egg}\n                                onClick={()=> setEgg(!Egg)}\n                            /> Egg<br/>\n                        </div>\n                        <button classname=\"center customButton\" type=\"sumbit\">Sign Up</button>\n                        {/* </BorderWrapper> */}\n                        </form>\n                        </div>\n                        </>\n                )}\n                    </div>\n        </section>   \n    );\n}\n\n//export default Signup;","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/CustomCards.js",["113","114","115"],"import React, { useEffect, useState } from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Card from 'react-bootstrap/Card'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport database from '../firebase';\n\nfunction CustomCards(props) {\n    //{title, imageURL, body, price, ingredients}\n    //change\n    const [titles, setTitles] = useState(props.title)\n    const [titleValue, setTitleValue] = useState(\"Sample Title\")\n    \n    const [imageURL, setImageURL] = useState(props.imageURL)\n    const [imageURLValue, setimageURLValue] = useState(\"http://localhost:3000/static/media/portuguese-egg-custard-tarts.1c7f0846.jpg\")\n    \n    const [body, setBody] = useState(props.body)\n    const [bodyValue, setBodyValue] = useState(\"Sample Body\")\n    \n    const [price, setPrice] = useState('$' + props.price)\n    const [priceValue, setPriceValue] = useState(\"Sample Price\")\n    \n    const [ingredients, setIngredients] = useState(props.ingredients)\n    const [ingredientsValue, setIngredientsValue] = useState(\"Sample Ingredients\")\n\n    const [showInput, setInputState] = useState(false)\n\n    const [image, setImage] = useState(null);\n    const storage = database.storage();\n    const id = \"user2@gmail.com\";\n    const FoodCollection = database.firestore().collection(\"FoodCollection\");\n\n\n    function save(event) {\n        event.preventDefault();\n        //upload image to firebase\n        const uploadTask = storage.ref(id+\"/\"+ image.name).put(image);\n        var imageURL_ = \"\";\n        //read image_url from firebase\n        uploadTask.on(\n            \"state_changed\",\n            snapshot =>{},\n            error=>{\n                alert(error);\n            },\n            ()=>{\n                storage.ref(id).child(image.name).getDownloadURL()\n                .then(url=>{\n                    //setImageURL(url);\n                    imageURL_ = url;\n                    //alert(url);\n                    //alert(imageURL);\n                    //alert(imageURL_);\n                })\n            }\n        )\n        \n        \n        setTimeout(() => {\n            //alert(imageURL_); \n            FoodCollection.doc(id).collection(\"food\").doc(titleValue).set({\n                Foodname: titleValue,\n                ImageUrl: imageURL_,\n                Body: bodyValue,\n                Price: priceValue,\n                Ingredients: ingredientsValue,\n            }).then(()=>{\n                console.log(\"Information have been sent\");\n                //alert(\"Information have been sent\");\n            }).catch((err)=>{\n                alert(err.message);\n            });   \n\n            setTitles(titleValue)\n            //setImage(imageURLValue)\n            //alert(imageURL_);\n            setImageURL(imageURL_)\n            setBody(bodyValue)\n            setPrice(\"$ \"+priceValue)\n            setIngredients(ingredientsValue)\n\n            setInputState(false)\n        }, 2000);\n\n    }\n \n    function edit () {\n        setInputState(true)\n    }\n\n    function cancel () {\n        setInputState(false)\n    }\n\n    function updateTitleValue (event) {\n        setTitleValue(event.target.value)\n        console.log(titleValue)\n    }\n    /*\n    function updateImageURLValue (event) {\n        setimageURLValue(event.target.value)\n        console.log(imageURLValue)\n    }*/\n    function updateImageURLValue (event){\n        event.preventDefault();\n        if (event.target.files[0]){\n            setImage(event.target.files[0]);\n        }\n    }\n\n    function updateBodyValue (event) {\n        setBodyValue(event.target.value)\n    }\n\n    function updatePriceValue (event) {\n        setPriceValue(event.target.value)\n    }\n\n    function updateIngredientsValue (event) {\n        setIngredientsValue(event.target.value)\n    }\n\n    function deleteCard () {\n        //create a function that can delete card chosen card from {cards}\n        return\n    }\n\n    useEffect(() => {\n        \n    })\n\n\n    if(showInput) {\n        return (\n            <Card>\n                <input onChange={updateTitleValue} placeholder=\"Edit Title\"></input>\n                <input type=\"file\" onChange={updateImageURLValue} placeholder=\"Edit Image\"></input>\n                <input onChange={updateBodyValue} placeholder=\"Edit Body\"></input>\n                <input onChange={updatePriceValue} placeholder=\"Edit Price\"></input>\n                <input onChange={updateIngredientsValue} placeholder=\"Edit Ingredients\"></input>\n                <button onClick={save}>Save</button>\n                <button onClick={cancel}>Cancel</button>\n                <button onClick={deleteCard}>Delete</button>\n            </Card>\n        );\n    } else {\n        return (\n                <Card>\n                        <Card.Img variant=\"top\" src = {imageURL} />\n                        \n                        <Card.Body>\n                        \n                            <Card.Title>{titles}</Card.Title>\n                            <Card.Text>\n                                {body}\n                            </Card.Text>\n                        \n                        </Card.Body>\n\n                        <Card.Footer>\n\n                            <p>{price}</p>\n                            <button>Add to Cart</button>\n                            <br></br>\n                            <small className=\"text-muted\"> Contains: {ingredients}</small>\n\n                            <br></br>\n                            <button onClick = {edit}>Edit</button>\n\n                        </Card.Footer> \n                    \n                </Card> \n\n        );\n    }\n\n}\n\nexport default CustomCards","/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/Product.js",["116","117","118","119"],"import React, { useState, useEffect } from 'react'\nimport './Cart.css';\nimport db from \"../firebase\"\nimport Display from \"./DisplayGrid\";\n//import App from './consume';\n\n// testing\n\n\nconst Product = ({ addToCart }) => {\n    const [products] = useState([\n        {\n            name: \"cookies\",\n            cost: '$2.99',\n            image: \"https://www.tasteofhome.com/wp-content/uploads/2018/02/Gluten-Free-Peanut-Butter-Kiss-Cookies_exps46220_CW143039D09_11__14b_RMS-1.jpg\"\n    \n        },\n        {\n            name: \"Cake\",\n            cost: '$12.99',\n            image: \"https://dominosugar.com/emshare/views/modules/asset/downloads/originals/2020/09/74014/MuffinsTipsShippingBakedGoods.jpg/MuffinsTipsShippingBakedGoods.jpg\"\n        },\n        \n\n    ]);\n\n\n\n    return (\n        <div>\n            {/* <h1>Product</h1> */}\n            {/* <Display /> */}\n            <div className=\"products\">\n                {products.map((product, index) => (\n                <div className=\"product\" key={index}>\n                    <img src={product.image}/>\n                    <h3>{product.name}</h3>\n                    <h4>{product.cost}</h4>\n                    <button onClick={() => addToCart(product)}> Add </button>\n                    <br/>\n                </div>\n            ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Product\n",["120","121"],"/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/DisplayGrid.js",["122","123","124","125","126","127","128","129"],"/Users/tawhidmahmud/Documents/react/ComfyBake/src/firebase.js",[],"/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/LoadCards.js",[],"/Users/tawhidmahmud/Documents/react/ComfyBake/src/containers/displayCart.js",["130","131","132","133","134"],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":28,"column":8,"nodeType":"141","endLine":28,"endColumn":10,"suggestions":"142"},{"ruleId":"139","severity":1,"message":"140","line":22,"column":6,"nodeType":"141","endLine":22,"endColumn":8,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":1,"column":26,"nodeType":"146","messageId":"147","endLine":1,"endColumn":35},{"ruleId":"144","severity":1,"message":"148","line":6,"column":27,"nodeType":"146","messageId":"147","endLine":6,"endColumn":33},{"ruleId":"144","severity":1,"message":"149","line":6,"column":35,"nodeType":"146","messageId":"147","endLine":6,"endColumn":40},{"ruleId":"144","severity":1,"message":"150","line":38,"column":11,"nodeType":"146","messageId":"147","endLine":38,"endColumn":25},{"ruleId":"144","severity":1,"message":"151","line":42,"column":11,"nodeType":"146","messageId":"147","endLine":42,"endColumn":23},{"ruleId":"152","severity":1,"message":"153","line":99,"column":21,"nodeType":"154","messageId":"155","endLine":99,"endColumn":33},{"ruleId":"144","severity":1,"message":"156","line":1,"column":10,"nodeType":"146","messageId":"147","endLine":1,"endColumn":30},{"ruleId":"144","severity":1,"message":"157","line":1,"column":32,"nodeType":"146","messageId":"147","endLine":1,"endColumn":45},{"ruleId":"144","severity":1,"message":"145","line":2,"column":26,"nodeType":"146","messageId":"147","endLine":2,"endColumn":35},{"ruleId":"144","severity":1,"message":"148","line":3,"column":27,"nodeType":"146","messageId":"147","endLine":3,"endColumn":33},{"ruleId":"144","severity":1,"message":"149","line":3,"column":35,"nodeType":"146","messageId":"147","endLine":3,"endColumn":40},{"ruleId":"144","severity":1,"message":"158","line":11,"column":22,"nodeType":"146","messageId":"147","endLine":11,"endColumn":32},{"ruleId":"144","severity":1,"message":"159","line":12,"column":20,"nodeType":"146","messageId":"147","endLine":12,"endColumn":28},{"ruleId":"144","severity":1,"message":"160","line":17,"column":11,"nodeType":"146","messageId":"147","endLine":17,"endColumn":17},{"ruleId":"144","severity":1,"message":"161","line":35,"column":13,"nodeType":"146","messageId":"147","endLine":35,"endColumn":17},{"ruleId":"144","severity":1,"message":"162","line":36,"column":13,"nodeType":"146","messageId":"147","endLine":36,"endColumn":16},{"ruleId":"144","severity":1,"message":"163","line":37,"column":13,"nodeType":"146","messageId":"147","endLine":37,"endColumn":16},{"ruleId":"164","severity":1,"message":"165","line":74,"column":38,"nodeType":"166","messageId":"167","endLine":74,"endColumn":40},{"ruleId":"144","severity":1,"message":"168","line":1,"column":8,"nodeType":"146","messageId":"147","endLine":1,"endColumn":16},{"ruleId":"144","severity":1,"message":"169","line":34,"column":12,"nodeType":"146","messageId":"147","endLine":34,"endColumn":20},{"ruleId":"144","severity":1,"message":"170","line":34,"column":22,"nodeType":"146","messageId":"147","endLine":34,"endColumn":33},{"ruleId":"144","severity":1,"message":"171","line":35,"column":12,"nodeType":"146","messageId":"147","endLine":35,"endColumn":25},{"ruleId":"144","severity":1,"message":"172","line":35,"column":27,"nodeType":"146","messageId":"147","endLine":35,"endColumn":43},{"ruleId":"144","severity":1,"message":"173","line":36,"column":12,"nodeType":"146","messageId":"147","endLine":36,"endColumn":25},{"ruleId":"144","severity":1,"message":"174","line":37,"column":12,"nodeType":"146","messageId":"147","endLine":37,"endColumn":32},{"ruleId":"144","severity":1,"message":"175","line":2,"column":8,"nodeType":"146","messageId":"147","endLine":2,"endColumn":17},{"ruleId":"144","severity":1,"message":"176","line":14,"column":12,"nodeType":"146","messageId":"147","endLine":14,"endColumn":25},{"ruleId":"144","severity":1,"message":"177","line":14,"column":27,"nodeType":"146","messageId":"147","endLine":14,"endColumn":43},{"ruleId":"144","severity":1,"message":"145","line":1,"column":27,"nodeType":"146","messageId":"147","endLine":1,"endColumn":36},{"ruleId":"144","severity":1,"message":"178","line":3,"column":8,"nodeType":"146","messageId":"147","endLine":3,"endColumn":10},{"ruleId":"144","severity":1,"message":"179","line":4,"column":8,"nodeType":"146","messageId":"147","endLine":4,"endColumn":15},{"ruleId":"180","severity":1,"message":"181","line":36,"column":21,"nodeType":"154","endLine":36,"endColumn":47},{"ruleId":"135","replacedBy":"182"},{"ruleId":"137","replacedBy":"183"},{"ruleId":"144","severity":1,"message":"184","line":1,"column":16,"nodeType":"146","messageId":"147","endLine":1,"endColumn":24},{"ruleId":"144","severity":1,"message":"145","line":1,"column":26,"nodeType":"146","messageId":"147","endLine":1,"endColumn":35},{"ruleId":"144","severity":1,"message":"185","line":5,"column":10,"nodeType":"146","messageId":"147","endLine":5,"endColumn":19},{"ruleId":"144","severity":1,"message":"186","line":6,"column":9,"nodeType":"146","messageId":"147","endLine":6,"endColumn":16},{"ruleId":"144","severity":1,"message":"187","line":7,"column":10,"nodeType":"146","messageId":"147","endLine":7,"endColumn":60},{"ruleId":"144","severity":1,"message":"188","line":8,"column":8,"nodeType":"146","messageId":"147","endLine":8,"endColumn":17},{"ruleId":"144","severity":1,"message":"189","line":11,"column":7,"nodeType":"146","messageId":"147","endLine":11,"endColumn":14},{"ruleId":"144","severity":1,"message":"190","line":13,"column":7,"nodeType":"146","messageId":"147","endLine":13,"endColumn":17},{"ruleId":"144","severity":1,"message":"184","line":1,"column":16,"nodeType":"146","messageId":"147","endLine":1,"endColumn":24},{"ruleId":"144","severity":1,"message":"145","line":1,"column":26,"nodeType":"146","messageId":"147","endLine":1,"endColumn":35},{"ruleId":"144","severity":1,"message":"191","line":3,"column":8,"nodeType":"146","messageId":"147","endLine":3,"endColumn":16},{"ruleId":"144","severity":1,"message":"189","line":7,"column":7,"nodeType":"146","messageId":"147","endLine":7,"endColumn":14},{"ruleId":"180","severity":1,"message":"181","line":92,"column":45,"nodeType":"154","endLine":92,"endColumn":67},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'db'. Either include it or remove the dependency array.","ArrayExpression",["194"],["195"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Route' is defined but never used.","'removeFromCart' is assigned a value but never used.","'handleSumbit' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Show_cart must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","'getDefaultNormalizer' is defined but never used.","'queryByTestId' is defined but never used.","'setImgList' is assigned a value but never used.","'setDList' is assigned a value but never used.","'orders' is assigned a value but never used.","'addy' is assigned a value but never used.","'img' is assigned a value but never used.","'des' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'database' is defined but never used.","'feedback' is assigned a value but never used.","'setFeedback' is assigned a value but never used.","'receiverEmail' is assigned a value but never used.","'setReceiverEmail' is assigned a value but never used.","'formSubmitted' is assigned a value but never used.","'formSubmitSuccessful' is assigned a value but never used.","'Container' is defined but never used.","'imageURLValue' is assigned a value but never used.","'setimageURLValue' is assigned a value but never used.","'db' is defined but never used.","'Display' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["192"],["193"],"'useState' is defined but never used.","'addToCart' is defined but never used.","'account' is defined but never used.","'__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED' is defined but never used.","'Show_cart' is defined but never used.","'storage' is assigned a value but never used.","'realtimeDB' is assigned a value but never used.","'firebase' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"196","fix":"197"},{"desc":"196","fix":"198"},"Update the dependencies array to be: [db]",{"range":"199","text":"200"},{"range":"201","text":"200"},[848,850],"[db]",[679,681]]
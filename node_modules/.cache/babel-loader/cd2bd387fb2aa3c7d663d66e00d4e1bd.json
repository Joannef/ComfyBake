{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joann\\\\Desktop\\\\Capstone\\\\comfybake-app\\\\src\\\\containers\\\\LoadCards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport database from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoadCards(props) {\n  _s();\n\n  //{title, imageURL, body, price, ingredients}\n  //change\n  const [titles, setTitles] = useState(props.title);\n  const [titleValue, setTitleValue] = useState(\"Sample Title\");\n  const [imageURL, setImageURL] = useState(props.imageURL);\n  const [imageURLValue, setimageURLValue] = useState(\"http://localhost:3000/static/media/portuguese-egg-custard-tarts.1c7f0846.jpg\");\n  const [body, setBody] = useState(props.body);\n  const [bodyValue, setBodyValue] = useState(\"Sample Body\");\n  const [price, setPrice] = useState('$' + props.price);\n  const [priceValue, setPriceValue] = useState(\"Sample Price\");\n  const [ingredients, setIngredients] = useState(props.ingredients);\n  const [ingredientsValue, setIngredientsValue] = useState(\"Sample Ingredients\");\n  const [showInput, setInputState] = useState(false);\n  const [image, setImage] = useState(null);\n  const storage = database.storage();\n  const id = \"user2@gmail.com\";\n  const FoodCollection = database.firestore().collection(\"FoodCollection\");\n\n  function save(event) {\n    event.preventDefault(); //upload image to firebase\n\n    const uploadTask = storage.ref(id + \"/\" + image.name).put(image);\n    var imageURL_ = \"\"; //read image_url from firebase\n\n    uploadTask.on(\"state_changed\", snapshot => {}, error => {\n      alert(error);\n    }, () => {\n      storage.ref(id).child(image.name).getDownloadURL().then(url => {\n        //setImageURL(url);\n        imageURL_ = url; //alert(url);\n        //alert(imageURL);\n        //alert(imageURL_);\n      });\n    });\n    setTimeout(() => {\n      //alert(imageURL_); \n      FoodCollection.doc(id).collection(\"food\").doc(titleValue).set({\n        Foodname: titleValue,\n        ImageUrl: imageURL_,\n        Body: bodyValue,\n        Price: priceValue,\n        Ingredients: ingredientsValue\n      }).then(() => {\n        console.log(\"Information have been sent\"); //alert(\"Information have been sent\");\n      }).catch(err => {\n        alert(err.message);\n      });\n      setTitles(titleValue); //setImage(imageURLValue)\n      //alert(imageURL_);\n\n      setImageURL(imageURL_);\n      setBody(bodyValue);\n      setPrice(\"$ \" + priceValue);\n      setIngredients(ingredientsValue);\n      setInputState(false);\n    }, 2000);\n  }\n\n  function updateTitleValue(event) {\n    setTitleValue(event.target.value);\n    console.log(titleValue);\n  }\n\n  function updateImageURLValue(event) {\n    setimageURLValue(event.target.value);\n    console.log(imageURLValue);\n  }\n\n  function updateImageURLValue(event) {\n    event.preventDefault();\n\n    if (event.target.files[0]) {\n      setImage(event.target.files[0]);\n    }\n  }\n\n  function updateBodyValue(event) {\n    setBodyValue(event.target.value);\n  }\n\n  function updatePriceValue(event) {\n    setPriceValue(event.target.value);\n  }\n\n  function updateIngredientsValue(event) {\n    setIngredientsValue(event.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n      variant: \"top\",\n      src: imageURL\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: titles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add to Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"text-muted\",\n        children: [\" Contains: \", ingredients]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 13\n  }, this);\n}\n\n_s(LoadCards, \"jjr2977sNCoS9E3FjnfcXTkICF4=\");\n\n_c = LoadCards;\nexport default CustomCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoadCards\");","map":{"version":3,"sources":["C:/Users/joann/Desktop/Capstone/comfybake-app/src/containers/LoadCards.js"],"names":["React","useEffect","useState","Container","Card","database","LoadCards","props","titles","setTitles","title","titleValue","setTitleValue","imageURL","setImageURL","imageURLValue","setimageURLValue","body","setBody","bodyValue","setBodyValue","price","setPrice","priceValue","setPriceValue","ingredients","setIngredients","ingredientsValue","setIngredientsValue","showInput","setInputState","image","setImage","storage","id","FoodCollection","firestore","collection","save","event","preventDefault","uploadTask","ref","name","put","imageURL_","on","snapshot","error","alert","child","getDownloadURL","then","url","setTimeout","doc","set","Foodname","ImageUrl","Body","Price","Ingredients","console","log","catch","err","message","updateTitleValue","target","value","updateImageURLValue","files","updateBodyValue","updatePriceValue","updateIngredientsValue","CustomCards"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Card from 'react-bootstrap/Card'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport database from '../firebase';\r\n\r\nfunction LoadCards(props) {\r\n    //{title, imageURL, body, price, ingredients}\r\n    //change\r\n    const [titles, setTitles] = useState(props.title)\r\n    const [titleValue, setTitleValue] = useState(\"Sample Title\")\r\n    \r\n    const [imageURL, setImageURL] = useState(props.imageURL)\r\n    const [imageURLValue, setimageURLValue] = useState(\"http://localhost:3000/static/media/portuguese-egg-custard-tarts.1c7f0846.jpg\")\r\n    \r\n    const [body, setBody] = useState(props.body)\r\n    const [bodyValue, setBodyValue] = useState(\"Sample Body\")\r\n    \r\n    const [price, setPrice] = useState('$' + props.price)\r\n    const [priceValue, setPriceValue] = useState(\"Sample Price\")\r\n    \r\n    const [ingredients, setIngredients] = useState(props.ingredients)\r\n    const [ingredientsValue, setIngredientsValue] = useState(\"Sample Ingredients\")\r\n\r\n    const [showInput, setInputState] = useState(false)\r\n\r\n    const [image, setImage] = useState(null);\r\n    const storage = database.storage();\r\n    const id = \"user2@gmail.com\";\r\n    const FoodCollection = database.firestore().collection(\"FoodCollection\");\r\n\r\n\r\n    function save(event) {\r\n        event.preventDefault();\r\n        //upload image to firebase\r\n        const uploadTask = storage.ref(id+\"/\"+ image.name).put(image);\r\n        var imageURL_ = \"\";\r\n        //read image_url from firebase\r\n        uploadTask.on(\r\n            \"state_changed\",\r\n            snapshot =>{},\r\n            error=>{\r\n                alert(error);\r\n            },\r\n            ()=>{\r\n                storage.ref(id).child(image.name).getDownloadURL()\r\n                .then(url=>{\r\n                    //setImageURL(url);\r\n                    imageURL_ = url;\r\n                    //alert(url);\r\n                    //alert(imageURL);\r\n                    //alert(imageURL_);\r\n                })\r\n            }\r\n        )\r\n        \r\n        \r\n        setTimeout(() => {\r\n            //alert(imageURL_); \r\n            FoodCollection.doc(id).collection(\"food\").doc(titleValue).set({\r\n                Foodname: titleValue,\r\n                ImageUrl: imageURL_,\r\n                Body: bodyValue,\r\n                Price: priceValue,\r\n                Ingredients: ingredientsValue,\r\n            }).then(()=>{\r\n                console.log(\"Information have been sent\");\r\n                //alert(\"Information have been sent\");\r\n            }).catch((err)=>{\r\n                alert(err.message);\r\n            });   \r\n\r\n            setTitles(titleValue)\r\n            //setImage(imageURLValue)\r\n            //alert(imageURL_);\r\n            setImageURL(imageURL_)\r\n            setBody(bodyValue)\r\n            setPrice(\"$ \"+priceValue)\r\n            setIngredients(ingredientsValue)\r\n\r\n            setInputState(false)\r\n        }, 2000);\r\n\r\n    }\r\n\r\n    function updateTitleValue (event) {\r\n        setTitleValue(event.target.value)\r\n        console.log(titleValue)\r\n    }\r\n    \r\n    function updateImageURLValue (event) {\r\n        setimageURLValue(event.target.value)\r\n        console.log(imageURLValue)\r\n    }\r\n    function updateImageURLValue (event){\r\n        event.preventDefault();\r\n        if (event.target.files[0]){\r\n            setImage(event.target.files[0]);\r\n        }\r\n    }\r\n\r\n    function updateBodyValue (event) {\r\n        setBodyValue(event.target.value)\r\n    }\r\n\r\n    function updatePriceValue (event) {\r\n        setPriceValue(event.target.value)\r\n    }\r\n\r\n    function updateIngredientsValue (event) {\r\n        setIngredientsValue(event.target.value)\r\n    }\r\n    \r\n    return (\r\n            <Card>\r\n                    <Card.Img variant=\"top\" src = {imageURL} />\r\n                    \r\n                    <Card.Body>\r\n                    \r\n                        <Card.Title>{titles}</Card.Title>\r\n                        <Card.Text>\r\n                            {body}\r\n                        </Card.Text>\r\n                    \r\n                    </Card.Body>\r\n\r\n                    <Card.Footer>\r\n\r\n                        <p>{price}</p>\r\n                        <button>Add to Cart</button>\r\n                        <br></br>\r\n                        <small className=\"text-muted\"> Contains: {ingredients}</small>\r\n                        \r\n                    </Card.Footer> \r\n                \r\n            </Card> \r\n    );\r\n\r\n}\r\n\r\nexport default CustomCards"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joann\\\\Desktop\\\\Capstone\\\\comfybake-app\\\\src\\\\containers\\\\LoadCards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport database from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoadCards(props) {\n  _s();\n\n  const [titles, setTitles] = useState(props.title);\n  const [titleValue, setTitleValue] = useState(\"Sample Title\");\n  const [imageURL, setImageURL] = useState(props.imageURL);\n  const [imageURLValue, setimageURLValue] = useState(\"http://localhost:3000/static/media/portuguese-egg-custard-tarts.1c7f0846.jpg\");\n  const [body, setBody] = useState(props.body);\n  const [bodyValue, setBodyValue] = useState(\"Sample Body\");\n  const [price, setPrice] = useState('$' + props.price);\n  const [priceValue, setPriceValue] = useState(\"Sample Price\");\n  const [ingredients, setIngredients] = useState(props.ingredients);\n  const [ingredientsValue, setIngredientsValue] = useState(\"Sample Ingredients\");\n  const [showInput, setInputState] = useState(false);\n  const [image, setImage] = useState(null);\n  const storage = database.storage();\n  const id = \"user2@gmail.com\";\n  const FoodCollection = database.firestore().collection(\"FoodCollection\"); // function save(event) {\n  //     event.preventDefault();\n  //     //upload image to firebase\n  //     const uploadTask = storage.ref(id+\"/\"+ image.name).put(image);\n  //     var imageURL_ = \"\";\n  //     //read image_url from firebase\n  //     uploadTask.on(\n  //         \"state_changed\",\n  //         snapshot =>{},\n  //         error=>{\n  //             alert(error);\n  //         },\n  //         ()=>{\n  //             storage.ref(id).child(image.name).getDownloadURL()\n  //             .then(url=>{\n  //                 //setImageURL(url);\n  //                 imageURL_ = url;\n  //                 //alert(url);\n  //                 //alert(imageURL);\n  //                 //alert(imageURL_);\n  //             })\n  //         }\n  //     )\n  //     setTimeout(() => {\n  //         //alert(imageURL_); \n  //         FoodCollection.doc(id).collection(\"food\").doc(titleValue).set({\n  //             Foodname: titleValue,\n  //             ImageUrl: imageURL_,\n  //             Body: bodyValue,\n  //             Price: priceValue,\n  //             Ingredients: ingredientsValue,\n  //         }).then(()=>{\n  //             console.log(\"Information have been sent\");\n  //             //alert(\"Information have been sent\");\n  //         }).catch((err)=>{\n  //             alert(err.message);\n  //         });   \n  //         setTitles(titleValue)\n  //         //setImage(imageURLValue)\n  //         //alert(imageURL_);\n  //         setImageURL(imageURL_)\n  //         setBody(bodyValue)\n  //         setPrice(\"$ \"+priceValue)\n  //         setIngredients(ingredientsValue)\n  //         setInputState(false)\n  //     }, 2000);\n  // }\n  // function updateTitleValue (event) {\n  //     setTitleValue(event.target.value)\n  //     console.log(titleValue)\n  // }\n  // function updateImageURLValue (event) {\n  //     setimageURLValue(event.target.value)\n  //     console.log(imageURLValue)\n  // }\n  // function updateImageURLValue (event){\n  //     event.preventDefault();\n  //     if (event.target.files[0]){\n  //         setImage(event.target.files[0]);\n  //     }\n  // }\n  // function updateBodyValue (event) {\n  //     setBodyValue(event.target.value)\n  // }\n  // function updatePriceValue (event) {\n  //     setPriceValue(event.target.value)\n  // }\n  // function updateIngredientsValue (event) {\n  //     setIngredientsValue(event.target.value)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n      variant: \"top\",\n      src: imageURL\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: titles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add to Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"text-muted\",\n        children: [\" Contains: \", ingredients]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 13\n  }, this);\n}\n\n_s(LoadCards, \"jjr2977sNCoS9E3FjnfcXTkICF4=\");\n\n_c = LoadCards;\nexport default LoadCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoadCards\");","map":{"version":3,"sources":["C:/Users/joann/Desktop/Capstone/comfybake-app/src/containers/LoadCards.js"],"names":["React","useEffect","useState","Container","Card","database","LoadCards","props","titles","setTitles","title","titleValue","setTitleValue","imageURL","setImageURL","imageURLValue","setimageURLValue","body","setBody","bodyValue","setBodyValue","price","setPrice","priceValue","setPriceValue","ingredients","setIngredients","ingredientsValue","setIngredientsValue","showInput","setInputState","image","setImage","storage","id","FoodCollection","firestore","collection"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Card from 'react-bootstrap/Card'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport database from '../firebase';\r\n\r\nfunction LoadCards(props) {\r\n    const [titles, setTitles] = useState(props.title)\r\n    const [titleValue, setTitleValue] = useState(\"Sample Title\")\r\n    \r\n    const [imageURL, setImageURL] = useState(props.imageURL)\r\n    const [imageURLValue, setimageURLValue] = useState(\"http://localhost:3000/static/media/portuguese-egg-custard-tarts.1c7f0846.jpg\")\r\n    \r\n    const [body, setBody] = useState(props.body)\r\n    const [bodyValue, setBodyValue] = useState(\"Sample Body\")\r\n    \r\n    const [price, setPrice] = useState('$' + props.price)\r\n    const [priceValue, setPriceValue] = useState(\"Sample Price\")\r\n    \r\n    const [ingredients, setIngredients] = useState(props.ingredients)\r\n    const [ingredientsValue, setIngredientsValue] = useState(\"Sample Ingredients\")\r\n\r\n    const [showInput, setInputState] = useState(false)\r\n\r\n    const [image, setImage] = useState(null);\r\n    const storage = database.storage();\r\n    const id = \"user2@gmail.com\";\r\n    const FoodCollection = database.firestore().collection(\"FoodCollection\");\r\n\r\n\r\n    // function save(event) {\r\n    //     event.preventDefault();\r\n    //     //upload image to firebase\r\n    //     const uploadTask = storage.ref(id+\"/\"+ image.name).put(image);\r\n    //     var imageURL_ = \"\";\r\n    //     //read image_url from firebase\r\n    //     uploadTask.on(\r\n    //         \"state_changed\",\r\n    //         snapshot =>{},\r\n    //         error=>{\r\n    //             alert(error);\r\n    //         },\r\n    //         ()=>{\r\n    //             storage.ref(id).child(image.name).getDownloadURL()\r\n    //             .then(url=>{\r\n    //                 //setImageURL(url);\r\n    //                 imageURL_ = url;\r\n    //                 //alert(url);\r\n    //                 //alert(imageURL);\r\n    //                 //alert(imageURL_);\r\n    //             })\r\n    //         }\r\n    //     )\r\n        \r\n        \r\n    //     setTimeout(() => {\r\n    //         //alert(imageURL_); \r\n    //         FoodCollection.doc(id).collection(\"food\").doc(titleValue).set({\r\n    //             Foodname: titleValue,\r\n    //             ImageUrl: imageURL_,\r\n    //             Body: bodyValue,\r\n    //             Price: priceValue,\r\n    //             Ingredients: ingredientsValue,\r\n    //         }).then(()=>{\r\n    //             console.log(\"Information have been sent\");\r\n    //             //alert(\"Information have been sent\");\r\n    //         }).catch((err)=>{\r\n    //             alert(err.message);\r\n    //         });   \r\n\r\n    //         setTitles(titleValue)\r\n    //         //setImage(imageURLValue)\r\n    //         //alert(imageURL_);\r\n    //         setImageURL(imageURL_)\r\n    //         setBody(bodyValue)\r\n    //         setPrice(\"$ \"+priceValue)\r\n    //         setIngredients(ingredientsValue)\r\n\r\n    //         setInputState(false)\r\n    //     }, 2000);\r\n\r\n    // }\r\n\r\n    // function updateTitleValue (event) {\r\n    //     setTitleValue(event.target.value)\r\n    //     console.log(titleValue)\r\n    // }\r\n    \r\n    // function updateImageURLValue (event) {\r\n    //     setimageURLValue(event.target.value)\r\n    //     console.log(imageURLValue)\r\n    // }\r\n    // function updateImageURLValue (event){\r\n    //     event.preventDefault();\r\n    //     if (event.target.files[0]){\r\n    //         setImage(event.target.files[0]);\r\n    //     }\r\n    // }\r\n\r\n    // function updateBodyValue (event) {\r\n    //     setBodyValue(event.target.value)\r\n    // }\r\n\r\n    // function updatePriceValue (event) {\r\n    //     setPriceValue(event.target.value)\r\n    // }\r\n\r\n    // function updateIngredientsValue (event) {\r\n    //     setIngredientsValue(event.target.value)\r\n    // }\r\n    \r\n    return (\r\n            <Card>\r\n                    <Card.Img variant=\"top\" src = {imageURL} />\r\n                    \r\n                    <Card.Body>\r\n                    \r\n                        <Card.Title>{titles}</Card.Title>\r\n                        <Card.Text>\r\n                            {body}\r\n                        </Card.Text>\r\n                    \r\n                    </Card.Body>\r\n\r\n                    <Card.Footer>\r\n\r\n                        <p>{price}</p>\r\n                        <button>Add to Cart</button>\r\n                        <br></br>\r\n                        <small className=\"text-muted\"> Contains: {ingredients}</small>\r\n                        \r\n                    </Card.Footer> \r\n                \r\n            </Card> \r\n    );\r\n\r\n}\r\n\r\nexport default LoadCards"]},"metadata":{},"sourceType":"module"}
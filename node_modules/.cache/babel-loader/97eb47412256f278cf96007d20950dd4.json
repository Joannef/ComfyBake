{"ast":null,"code":"import firebase from '@firebase/app';\nimport { __spread, __values, __extends, __assign, __read, __awaiter, __generator } from 'tslib';\nimport { stringify, jsonEval, contains, assert, base64, stringToByteArray, Sha1, isNodeSdk, stringLength, errorPrefix, validateArgCount, validateCallback, Deferred, assertionError, safeGet, map, validateContextObject, deepCopy, isMobileCordova, base64Encode, isAdmin, isValidFormat, isEmpty, isReactNative, querystring } from '@firebase/util';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { Provider, ComponentContainer, Component } from '@firebase/component';\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n */\n\nvar DOMStorageWrapper =\n/** @class */\nfunction () {\n  /**\r\n   * @param domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n   */\n  function DOMStorageWrapper(domStorage_) {\n    this.domStorage_ = domStorage_; // Use a prefix to avoid collisions with other stuff saved by the app.\n\n    this.prefix_ = 'firebase:';\n  }\n  /**\r\n   * @param key The key to save the value under\r\n   * @param value The value being stored, or null to remove the key.\r\n   */\n\n\n  DOMStorageWrapper.prototype.set = function (key, value) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\n    }\n  };\n  /**\r\n   * @return The value that was stored under this key, or null\r\n   */\n\n\n  DOMStorageWrapper.prototype.get = function (key) {\n    var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n\n    if (storedVal == null) {\n      return null;\n    } else {\n      return jsonEval(storedVal);\n    }\n  };\n\n  DOMStorageWrapper.prototype.remove = function (key) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  };\n\n  DOMStorageWrapper.prototype.prefixedName_ = function (name) {\n    return this.prefix_ + name;\n  };\n\n  DOMStorageWrapper.prototype.toString = function () {\n    return this.domStorage_.toString();\n  };\n\n  return DOMStorageWrapper;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n */\n\n\nvar MemoryStorage =\n/** @class */\nfunction () {\n  function MemoryStorage() {\n    this.cache_ = {};\n    this.isInMemoryStorage = true;\n  }\n\n  MemoryStorage.prototype.set = function (key, value) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  };\n\n  MemoryStorage.prototype.get = function (key) {\n    if (contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n\n    return null;\n  };\n\n  MemoryStorage.prototype.remove = function (key) {\n    delete this.cache_[key];\n  };\n\n  return MemoryStorage;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return Turning off type information until a common interface is defined.\r\n */\n\n\nvar createStoragefor = function (domStorageName) {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (typeof window !== 'undefined' && typeof window[domStorageName] !== 'undefined') {\n      // Need to test cache. Just because it's here doesn't mean it works\n      var domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {} // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n\n\n  return new MemoryStorage();\n};\n/** A storage object that lasts across sessions */\n\n\nvar PersistentStorage = createStoragefor('localStorage');\n/** A storage object that only lasts one session */\n\nvar SessionStorage = createStoragefor('sessionStorage');\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar logClient = new Logger('@firebase/database');\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n */\n\nvar LUIDGenerator = function () {\n  var id = 1;\n  return function () {\n    return id++;\n  };\n}();\n/**\r\n * Sha1 hash of the input string\r\n * @param str The string to hash\r\n * @return {!string} The resulting hash\r\n */\n\n\nvar sha1 = function (str) {\n  var utf8Bytes = stringToByteArray(str);\n  var sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  var sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\n\nvar buildLogMessage_ = function () {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = '';\n\n  for (var i = 0; i < varArgs.length; i++) {\n    var arg = varArgs[i];\n\n    if (Array.isArray(arg) || arg && typeof arg === 'object' && // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof arg.length === 'number') {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += stringify(arg);\n    } else {\n      message += arg;\n    }\n\n    message += ' ';\n  }\n\n  return message;\n};\n/**\r\n * Use this for all debug messages in Firebase.\r\n */\n\n\nvar logger = null;\n/**\r\n * Flag to check for log availability on first log message\r\n */\n\nvar firstLog_ = true;\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param logger_ A flag to turn on logging, or a custom logger\r\n * @param persistent Whether or not to persist logging settings across refreshes\r\n */\n\nvar enableLogging = function (logger_, persistent) {\n  assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\n\n  if (logger_ === true) {\n    logClient.logLevel = LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n\nvar log = function () {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  if (firstLog_ === true) {\n    firstLog_ = false;\n\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n\n  if (logger) {\n    var message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\n\nvar logWrapper = function (prefix) {\n  return function () {\n    var varArgs = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      varArgs[_i] = arguments[_i];\n    }\n\n    log.apply(void 0, __spread([prefix], varArgs));\n  };\n};\n\nvar error = function () {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, __spread(varArgs));\n  logClient.error(message);\n};\n\nvar fatal = function () {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, __spread(varArgs));\n  logClient.error(message);\n  throw new Error(message);\n};\n\nvar warn = function () {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, __spread(varArgs));\n  logClient.warn(message);\n};\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\n\n\nvar warnIfPageIsSecure = function () {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (typeof window !== 'undefined' && window.location && window.location.protocol && window.location.protocol.indexOf('https:') !== -1) {\n    warn('Insecure Firebase access from a secure page. ' + 'Please use https in calls to new Firebase().');\n  }\n};\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n */\n\n\nvar isInvalidJSONNumber = function (data) {\n  return typeof data === 'number' && (data !== data || // NaN\n  data === Number.POSITIVE_INFINITY || data === Number.NEGATIVE_INFINITY);\n};\n\nvar executeWhenDOMReady = function (fn) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n    var called_1 = false;\n\n    var wrappedFn_1 = function () {\n      if (!document.body) {\n        setTimeout(wrappedFn_1, Math.floor(10));\n        return;\n      }\n\n      if (!called_1) {\n        called_1 = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn_1, false); // fallback to onload.\n\n      window.addEventListener('load', wrappedFn_1, false); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if (document.attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      document.attachEvent('onreadystatechange', function () {\n        if (document.readyState === 'complete') {\n          wrappedFn_1();\n        }\n      }); // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      window.attachEvent('onload', wrappedFn_1); // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n */\n\n\nvar MIN_NAME = '[MIN_NAME]';\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n */\n\nvar MAX_NAME = '[MAX_NAME]';\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n */\n\nvar nameCompare = function (a, b) {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    var aAsInt = tryParseInt(a),\n        bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n/**\r\n * @return {!number} comparison result.\r\n */\n\n\nvar stringCompare = function (a, b) {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\nvar requireKey = function (key, obj) {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error('Missing required key (' + key + ') in object: ' + stringify(obj));\n  }\n};\n\nvar ObjectToUniqueKey = function (obj) {\n  if (typeof obj !== 'object' || obj === null) {\n    return stringify(obj);\n  }\n\n  var keys = []; // eslint-disable-next-line guard-for-in\n\n  for (var k in obj) {\n    keys.push(k);\n  } // Export as json, but with the keys sorted.\n\n\n  keys.sort();\n  var key = '{';\n\n  for (var i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param str The string\r\n * @param segsize The maximum number of chars in the string.\r\n * @return The string, split into appropriately-sized chunks\r\n */\n\n\nvar splitStringBySize = function (str, segsize) {\n  var len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  var dataSegs = [];\n\n  for (var c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n\n  return dataSegs;\n};\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj The object or array to iterate over\r\n * @param fn The function to apply\r\n */\n\n\nfunction each(obj, fn) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param v A double\r\n *\r\n */\n\n\nvar doubleToIEEE754String = function (v) {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  var ebits = 11,\n      fbits = 52;\n  var bias = (1 << ebits - 1) - 1;\n  var s, e, f, ln, i; // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  } // Pack sign, exponent, fraction\n\n\n  var bits = [];\n\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  var str = bits.join(''); // Return the data as a hex string. --MJL\n\n  var hexByteString = '';\n\n  for (i = 0; i < 64; i += 8) {\n    var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n\n    hexByteString = hexByteString + hexByte;\n  }\n\n  return hexByteString.toLowerCase();\n};\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n */\n\n\nvar isChromeExtensionContentScript = function () {\n  return !!(typeof window === 'object' && window['chrome'] && window['chrome']['extension'] && !/^chrome/.test(window.location.href));\n};\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n */\n\n\nvar isWindowsStoreApp = function () {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n/**\r\n * Converts a server error code to a Javascript Error\r\n */\n\n\nvar errorForServerCode = function (code, query) {\n  var reason = 'Unknown Error';\n\n  if (code === 'too_big') {\n    reason = 'The data requested exceeds the maximum size ' + 'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  error.code = code.toUpperCase();\n  return error;\n};\n/**\r\n * Used to test for integer-looking strings\r\n */\n\n\nvar INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n/**\r\n * For use in keys, the minimum possible 32-bit integer.\r\n */\n\nvar INTEGER_32_MIN = -2147483648;\n/**\r\n * For use in kyes, the maximum possible 32-bit integer.\r\n */\n\nvar INTEGER_32_MAX = 2147483647;\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n */\n\nvar tryParseInt = function (str) {\n  if (INTEGER_REGEXP_.test(str)) {\n    var intVal = Number(str);\n\n    if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\n      return intVal;\n    }\n  }\n\n  return null;\n};\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param fn The code to guard.\r\n */\n\n\nvar exceptionGuard = function (fn) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(function () {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      var stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\n\n\nvar beingCrawled = function () {\n  var userAgent = typeof window === 'object' && window['navigator'] && window['navigator']['userAgent'] || ''; // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n\n  return userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0;\n};\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param fn Function to run.\r\n * @param time Milliseconds to wait before running.\r\n * @return The setTimeout() return value.\r\n */\n\n\nvar setTimeoutNonBlocking = function (fn, time) {\n  var timeout = setTimeout(fn, time); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  if (typeof timeout === 'object' && timeout['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    timeout['unref']();\n  }\n\n  return timeout;\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\n\n\nvar Path =\n/** @class */\nfunction () {\n  /**\r\n   * @param pathOrString Path string to parse, or another path, or the raw\r\n   * tokens array\r\n   */\n  function Path(pathOrString, pieceNum) {\n    if (pieceNum === void 0) {\n      this.pieces_ = pathOrString.split('/'); // Remove empty pieces.\n\n      var copyTo = 0;\n\n      for (var i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n\n      this.pieces_.length = copyTo;\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString;\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  Path.prototype.toString = function () {\n    var pathString = '';\n\n    for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n\n    return pathString || '/';\n  };\n\n  return Path;\n}();\n\nfunction newEmptyPath() {\n  return new Path('');\n}\n\nfunction pathGetFront(path) {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  return path.pieces_[path.pieceNum_];\n}\n/**\r\n * @return The number of segments in this path\r\n */\n\n\nfunction pathGetLength(path) {\n  return path.pieces_.length - path.pieceNum_;\n}\n\nfunction pathPopFront(path) {\n  var pieceNum = path.pieceNum_;\n\n  if (pieceNum < path.pieces_.length) {\n    pieceNum++;\n  }\n\n  return new Path(path.pieces_, pieceNum);\n}\n\nfunction pathGetBack(path) {\n  if (path.pieceNum_ < path.pieces_.length) {\n    return path.pieces_[path.pieces_.length - 1];\n  }\n\n  return null;\n}\n\nfunction pathToUrlEncodedString(path) {\n  var pathString = '';\n\n  for (var i = path.pieceNum_; i < path.pieces_.length; i++) {\n    if (path.pieces_[i] !== '') {\n      pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\n    }\n  }\n\n  return pathString || '/';\n}\n/**\r\n * Shallow copy of the parts of the path.\r\n *\r\n */\n\n\nfunction pathSlice(path, begin) {\n  if (begin === void 0) {\n    begin = 0;\n  }\n\n  return path.pieces_.slice(path.pieceNum_ + begin);\n}\n\nfunction pathParent(path) {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  var pieces = [];\n\n  for (var i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  return new Path(pieces, 0);\n}\n\nfunction pathChild(path, childPathObj) {\n  var pieces = [];\n\n  for (var i = path.pieceNum_; i < path.pieces_.length; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  if (childPathObj instanceof Path) {\n    for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n      pieces.push(childPathObj.pieces_[i]);\n    }\n  } else {\n    var childPieces = childPathObj.split('/');\n\n    for (var i = 0; i < childPieces.length; i++) {\n      if (childPieces[i].length > 0) {\n        pieces.push(childPieces[i]);\n      }\n    }\n  }\n\n  return new Path(pieces, 0);\n}\n/**\r\n * @return True if there are no segments in this path\r\n */\n\n\nfunction pathIsEmpty(path) {\n  return path.pieceNum_ >= path.pieces_.length;\n}\n/**\r\n * @return The path from outerPath to innerPath\r\n */\n\n\nfunction newRelativePath(outerPath, innerPath) {\n  var outer = pathGetFront(outerPath),\n      inner = pathGetFront(innerPath);\n\n  if (outer === null) {\n    return innerPath;\n  } else if (outer === inner) {\n    return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\n  } else {\n    throw new Error('INTERNAL ERROR: innerPath (' + innerPath + ') is not within ' + 'outerPath (' + outerPath + ')');\n  }\n}\n/**\r\n * @return -1, 0, 1 if left is less, equal, or greater than the right.\r\n */\n\n\nfunction pathCompare(left, right) {\n  var leftKeys = pathSlice(left, 0);\n  var rightKeys = pathSlice(right, 0);\n\n  for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n    var cmp = nameCompare(leftKeys[i], rightKeys[i]);\n\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n\n  if (leftKeys.length === rightKeys.length) {\n    return 0;\n  }\n\n  return leftKeys.length < rightKeys.length ? -1 : 1;\n}\n/**\r\n * @return true if paths are the same.\r\n */\n\n\nfunction pathEquals(path, other) {\n  if (pathGetLength(path) !== pathGetLength(other)) {\n    return false;\n  }\n\n  for (var i = path.pieceNum_, j = other.pieceNum_; i <= path.pieces_.length; i++, j++) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\r\n * @return True if this path is a parent (or the same as) other\r\n */\n\n\nfunction pathContains(path, other) {\n  var i = path.pieceNum_;\n  var j = other.pieceNum_;\n\n  if (pathGetLength(path) > pathGetLength(other)) {\n    return false;\n  }\n\n  while (i < path.pieces_.length) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n\n    ++i;\n    ++j;\n  }\n\n  return true;\n}\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\n\n\nvar ValidationPath =\n/** @class */\nfunction () {\n  /**\r\n   * @param path Initial Path.\r\n   * @param errorPrefix_ Prefix for any error messages.\r\n   */\n  function ValidationPath(path, errorPrefix_) {\n    this.errorPrefix_ = errorPrefix_;\n    this.parts_ = pathSlice(path, 0);\n    /** Initialize to number of '/' chars needed in path. */\n\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (var i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += stringLength(this.parts_[i]);\n    }\n\n    this.checkValid_();\n  }\n\n  Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\n    /** @const {number} Maximum key depth. */\n    get: function () {\n      return 32;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\n    /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\n    get: function () {\n      return 768;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /** @param child */\n\n  ValidationPath.prototype.push = function (child) {\n    // Count the needed '/'\n    if (this.parts_.length > 0) {\n      this.byteLength_ += 1;\n    }\n\n    this.parts_.push(child);\n    this.byteLength_ += stringLength(child);\n    this.checkValid_();\n  };\n\n  ValidationPath.prototype.pop = function () {\n    var last = this.parts_.pop();\n    this.byteLength_ -= stringLength(last); // Un-count the previous '/'\n\n    if (this.parts_.length > 0) {\n      this.byteLength_ -= 1;\n    }\n  };\n\n  ValidationPath.prototype.checkValid_ = function () {\n    if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\n      throw new Error(this.errorPrefix_ + 'has a key path longer than ' + ValidationPath.MAX_PATH_LENGTH_BYTES + ' bytes (' + this.byteLength_ + ').');\n    }\n\n    if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\n      throw new Error(this.errorPrefix_ + 'path specified exceeds the maximum depth that can be written (' + ValidationPath.MAX_PATH_DEPTH + ') or object contains a cycle ' + this.toErrorString());\n    }\n  };\n  /**\r\n   * String for use in error messages - uses '.' notation for path.\r\n   */\n\n\n  ValidationPath.prototype.toErrorString = function () {\n    if (this.parts_.length === 0) {\n      return '';\n    }\n\n    return \"in property '\" + this.parts_.join('.') + \"'\";\n  };\n\n  return ValidationPath;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar PROTOCOL_VERSION = '5';\nvar VERSION_PARAM = 'v';\nvar TRANSPORT_SESSION_PARAM = 's';\nvar REFERER_PARAM = 'r';\nvar FORGE_REF = 'f'; // Matches console.firebase.google.com, firebase-console-*.corp.google.com and\n// firebase.corp.google.com\n\nvar FORGE_DOMAIN_RE = /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\nvar LAST_SESSION_PARAM = 'ls';\nvar APPLICATION_ID_PARAM = 'p';\nvar WEBSOCKET = 'websocket';\nvar LONG_POLLING = 'long_polling';\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A class that holds metadata about a Repo object\r\n */\n\nvar RepoInfo =\n/** @class */\nfunction () {\n  /**\r\n   * @param host Hostname portion of the url for the repo\r\n   * @param secure Whether or not this repo is accessed over ssl\r\n   * @param namespace The namespace represented by the repo\r\n   * @param webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n   * @param nodeAdmin Whether this instance uses Admin SDK credentials\r\n   * @param persistenceKey Override the default session persistence storage key\r\n   */\n  function RepoInfo(host, secure, namespace, webSocketOnly, nodeAdmin, persistenceKey, includeNamespaceInQueryParams) {\n    if (nodeAdmin === void 0) {\n      nodeAdmin = false;\n    }\n\n    if (persistenceKey === void 0) {\n      persistenceKey = '';\n    }\n\n    if (includeNamespaceInQueryParams === void 0) {\n      includeNamespaceInQueryParams = false;\n    }\n\n    this.secure = secure;\n    this.namespace = namespace;\n    this.webSocketOnly = webSocketOnly;\n    this.nodeAdmin = nodeAdmin;\n    this.persistenceKey = persistenceKey;\n    this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\n    this.host = host.toLowerCase();\n    this.domain = this.host.substr(this.host.indexOf('.') + 1);\n    this.internalHost = PersistentStorage.get('host:' + host) || this.host;\n  }\n\n  RepoInfo.prototype.needsQueryParam = function () {\n    return this.host !== this.internalHost || this.isCustomHost() || this.includeNamespaceInQueryParams;\n  };\n\n  RepoInfo.prototype.isCacheableHost = function () {\n    return this.internalHost.substr(0, 2) === 's-';\n  };\n\n  RepoInfo.prototype.isDemoHost = function () {\n    return this.domain === 'firebaseio-demo.com';\n  };\n\n  RepoInfo.prototype.isCustomHost = function () {\n    return this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com';\n  };\n\n  RepoInfo.prototype.updateHost = function (newHost) {\n    if (newHost !== this.internalHost) {\n      this.internalHost = newHost;\n\n      if (this.isCacheableHost()) {\n        PersistentStorage.set('host:' + this.host, this.internalHost);\n      }\n    }\n  };\n  /**\r\n   * Returns the websocket URL for this repo\r\n   * @param type of connection\r\n   * @param params list\r\n   * @return The URL for this repo\r\n   */\n\n\n  RepoInfo.prototype.connectionURL = function (type, params) {\n    assert(typeof type === 'string', 'typeof type must == string');\n    assert(typeof params === 'object', 'typeof params must == object');\n    var connURL;\n\n    if (type === WEBSOCKET) {\n      connURL = (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\n    } else if (type === LONG_POLLING) {\n      connURL = (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\n    } else {\n      throw new Error('Unknown connection type: ' + type);\n    }\n\n    if (this.needsQueryParam()) {\n      params['ns'] = this.namespace;\n    }\n\n    var pairs = [];\n    each(params, function (key, value) {\n      pairs.push(key + '=' + value);\n    });\n    return connURL + pairs.join('&');\n  };\n  /** @return {string} */\n\n\n  RepoInfo.prototype.toString = function () {\n    var str = this.toURLString();\n\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n\n    return str;\n  };\n  /** @return {string} */\n\n\n  RepoInfo.prototype.toURLString = function () {\n    var protocol = this.secure ? 'https://' : 'http://';\n    var query = this.includeNamespaceInQueryParams ? \"?ns=\" + this.namespace : '';\n    return \"\" + protocol + this.host + \"/\" + query;\n  };\n\n  return RepoInfo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction decodePath(pathString) {\n  var pathStringDecoded = '';\n  var pieces = pathString.split('/');\n\n  for (var i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      var piece = pieces[i];\n\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n\n      pathStringDecoded += '/' + piece;\n    }\n  }\n\n  return pathStringDecoded;\n}\n/**\r\n * @return key value hash\r\n */\n\n\nfunction decodeQuery(queryString) {\n  var e_1, _a;\n\n  var results = {};\n\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n\n  try {\n    for (var _b = __values(queryString.split('&')), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var segment = _c.value;\n\n      if (segment.length === 0) {\n        continue;\n      }\n\n      var kv = segment.split('=');\n\n      if (kv.length === 2) {\n        results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n      } else {\n        warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return results;\n}\n\nvar parseRepoInfo = function (dataURL, nodeAdmin) {\n  var parsedUrl = parseDatabaseURL(dataURL),\n      namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(parsedUrl.host + ' is no longer supported. ' + 'Please use <YOUR FIREBASE>.firebaseio.com instead');\n  } // Catch common error of uninitialized namespace value.\n\n\n  if ((!namespace || namespace === 'undefined') && parsedUrl.domain !== 'localhost') {\n    fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n  return {\n    repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, nodeAdmin, webSocketOnly,\n    /*persistenceKey=*/\n    '',\n    /*includeNamespaceInQueryParams=*/\n    namespace !== parsedUrl.subdomain),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n\nvar parseDatabaseURL = function (dataURL) {\n  // Default to empty strings in the event of a malformed string.\n  var host = '',\n      domain = '',\n      subdomain = '',\n      pathString = '',\n      namespace = ''; // Always default to SSL, unless otherwise specified.\n\n  var secure = true,\n      scheme = 'https',\n      port = 443; // Don't do any validation here. The caller is responsible for validating the result of parsing.\n\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    var colonInd = dataURL.indexOf('//');\n\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    } // Parse host, path, and query string.\n\n\n    var slashInd = dataURL.indexOf('/');\n\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n\n    var questionMarkInd = dataURL.indexOf('?');\n\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n\n    var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd))); // If we have a port, use scheme for determining if it's secure.\n\n    colonInd = host.indexOf(':');\n\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n\n    var hostWithoutPort = host.slice(0, colonInd);\n\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      var dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1); // Normalize namespaces to lowercase to share storage / connection.\n\n      namespace = subdomain;\n    } // Always treat the value of the `ns` as the namespace name if it is present.\n\n\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host: host,\n    port: port,\n    domain: domain,\n    subdomain: subdomain,\n    secure: secure,\n    scheme: scheme,\n    pathString: pathString,\n    namespace: namespace\n  };\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * True for invalid Firebase keys\r\n */\n\n\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n */\n\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n/**\r\n * Maximum number of characters to allow in leaf value\r\n */\n\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n\nvar isValidKey = function (key) {\n  return typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key);\n};\n\nvar isValidPathString = function (pathString) {\n  return typeof pathString === 'string' && pathString.length !== 0 && !INVALID_PATH_REGEX_.test(pathString);\n};\n\nvar isValidRootPathString = function (pathString) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n\nvar isValidPriority = function (priority) {\n  return priority === null || typeof priority === 'string' || typeof priority === 'number' && !isInvalidJSONNumber(priority) || priority && typeof priority === 'object' && // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  contains(priority, '.sv');\n};\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n */\n\n\nvar validateFirebaseDataArg = function (fnName, argumentNumber, data, path, optional) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  validateFirebaseData(errorPrefix(fnName, argumentNumber, optional), data, path);\n};\n/**\r\n * Validate a data object client-side before sending to server.\r\n */\n\n\nvar validateFirebaseData = function (errorPrefix, data, path_) {\n  var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\n  }\n\n  if (typeof data === 'function') {\n    throw new Error(errorPrefix + 'contains a function ' + path.toErrorString() + ' with contents = ' + data.toString());\n  }\n\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\n  } // Check max leaf size, but try to avoid the utf8 conversion if we can.\n\n\n  if (typeof data === 'string' && data.length > MAX_LEAF_SIZE_ / 3 && stringLength(data) > MAX_LEAF_SIZE_) {\n    throw new Error(errorPrefix + 'contains a string greater than ' + MAX_LEAF_SIZE_ + ' utf8 bytes ' + path.toErrorString() + \" ('\" + data.substring(0, 50) + \"...')\");\n  } // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n\n\n  if (data && typeof data === 'object') {\n    var hasDotValue_1 = false;\n    var hasActualChild_1 = false;\n    each(data, function (key, value) {\n      if (key === '.value') {\n        hasDotValue_1 = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild_1 = true;\n\n        if (!isValidKey(key)) {\n          throw new Error(errorPrefix + ' contains an invalid key (' + key + ') ' + path.toErrorString() + '.  Keys must be non-empty strings ' + 'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n        }\n      }\n\n      path.push(key);\n      validateFirebaseData(errorPrefix, value, path);\n      path.pop();\n    });\n\n    if (hasDotValue_1 && hasActualChild_1) {\n      throw new Error(errorPrefix + ' contains \".value\" child ' + path.toErrorString() + ' in addition to actual children.');\n    }\n  }\n};\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n */\n\n\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\n  var i, curPath;\n\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    var keys = pathSlice(curPath);\n\n    for (var j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) ;else if (!isValidKey(keys[j])) {\n        throw new Error(errorPrefix + 'contains an invalid key (' + keys[j] + ') in path ' + curPath.toString() + '. Keys must be non-empty strings ' + 'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n      }\n    }\n  } // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n\n\n  mergePaths.sort(pathCompare);\n  var prevPath = null;\n\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n\n    if (prevPath !== null && pathContains(prevPath, curPath)) {\n      throw new Error(errorPrefix + 'contains a path ' + prevPath.toString() + ' that is ancestor of another path ' + curPath.toString());\n    }\n\n    prevPath = curPath;\n  }\n};\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n */\n\n\nvar validateFirebaseMergeDataArg = function (fnName, argumentNumber, data, path, optional) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  var errorPrefix$1 = errorPrefix(fnName, argumentNumber, optional);\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(errorPrefix$1 + ' must be an object containing the children to replace.');\n  }\n\n  var mergePaths = [];\n  each(data, function (key, value) {\n    var curPath = new Path(key);\n    validateFirebaseData(errorPrefix$1, value, pathChild(path, curPath));\n\n    if (pathGetBack(curPath) === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(errorPrefix$1 + \"contains an invalid value for '\" + curPath.toString() + \"', which must be a valid \" + 'Firebase priority (a string, finite number, server value, or null).');\n      }\n    }\n\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix$1, mergePaths);\n};\n\nvar validatePriority = function (fnName, argumentNumber, priority, optional) {\n  if (optional && priority === undefined) {\n    return;\n  }\n\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'is ' + priority.toString() + ', but must be a valid Firebase priority (a string, finite number, ' + 'server value, or null).');\n  } // Special case to allow importing data with a .sv.\n\n\n  if (!isValidPriority(priority)) {\n    throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a valid Firebase priority ' + '(a string, finite number, server value, or null).');\n  }\n};\n\nvar validateEventType = function (fnName, argumentNumber, eventType, optional) {\n  if (optional && eventType === undefined) {\n    return;\n  }\n\n  switch (eventType) {\n    case 'value':\n    case 'child_added':\n    case 'child_removed':\n    case 'child_changed':\n    case 'child_moved':\n      break;\n\n    default:\n      throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' + '\"child_changed\", or \"child_moved\".');\n  }\n};\n\nvar validateKey = function (fnName, argumentNumber, key, optional) {\n  if (optional && key === undefined) {\n    return;\n  }\n\n  if (!isValidKey(key)) {\n    throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'was an invalid key = \"' + key + '\".  Firebase keys must be non-empty strings and ' + 'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\n  }\n};\n\nvar validatePathString = function (fnName, argumentNumber, pathString, optional) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n\n  if (!isValidPathString(pathString)) {\n    throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'was an invalid path = \"' + pathString + '\". Paths must be non-empty strings and ' + 'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\n  }\n};\n\nvar validateRootPathString = function (fnName, argumentNumber, pathString, optional) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentNumber, pathString, optional);\n};\n\nvar validateWritablePath = function (fnName, path) {\n  if (pathGetFront(path) === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nvar validateUrl = function (fnName, argumentNumber, parsedUrl) {\n  // TODO = Validate server better.\n  var pathString = parsedUrl.path.toString();\n\n  if (!(typeof parsedUrl.repoInfo.host === 'string') || parsedUrl.repoInfo.host.length === 0 || !isValidKey(parsedUrl.repoInfo.namespace) && parsedUrl.repoInfo.host.split(':')[0] !== 'localhost' || pathString.length !== 0 && !isValidRootPathString(pathString)) {\n    throw new Error(errorPrefix(fnName, argumentNumber, false) + 'must be a valid firebase URL and ' + 'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\n  }\n};\n\nvar validateBoolean = function (fnName, argumentNumber, bool, optional) {\n  if (optional && bool === undefined) {\n    return;\n  }\n\n  if (typeof bool !== 'boolean') {\n    throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\n  }\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar OnDisconnect =\n/** @class */\nfunction () {\n  function OnDisconnect(repo_, path_) {\n    this.repo_ = repo_;\n    this.path_ = path_;\n  }\n\n  OnDisconnect.prototype.cancel = function (onComplete) {\n    validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\n    validateCallback('OnDisconnect.cancel', 1, onComplete, true);\n    var deferred = new Deferred();\n    this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n\n  OnDisconnect.prototype.remove = function (onComplete) {\n    validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\n    validateWritablePath('OnDisconnect.remove', this.path_);\n    validateCallback('OnDisconnect.remove', 1, onComplete, true);\n    var deferred = new Deferred();\n    this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n\n  OnDisconnect.prototype.set = function (value, onComplete) {\n    validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\n    validateWritablePath('OnDisconnect.set', this.path_);\n    validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\n    validateCallback('OnDisconnect.set', 2, onComplete, true);\n    var deferred = new Deferred();\n    this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n\n  OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\n    validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\n    validateWritablePath('OnDisconnect.setWithPriority', this.path_);\n    validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\n    validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\n    validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\n    var deferred = new Deferred();\n    this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n\n  OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\n    validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\n    validateWritablePath('OnDisconnect.update', this.path_);\n\n    if (Array.isArray(objectToMerge)) {\n      var newObjectToMerge = {};\n\n      for (var i = 0; i < objectToMerge.length; ++i) {\n        newObjectToMerge['' + i] = objectToMerge[i];\n      }\n\n      objectToMerge = newObjectToMerge;\n      warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' + 'existing data, or an Object with integer keys if you really do want to only update some of the children.');\n    }\n\n    validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\n    validateCallback('OnDisconnect.update', 2, onComplete, true);\n    var deferred = new Deferred();\n    this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n\n  return OnDisconnect;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar TransactionResult =\n/** @class */\nfunction () {\n  /**\r\n   * A type for the resolve value of Firebase.transaction.\r\n   */\n  function TransactionResult(committed, snapshot) {\n    this.committed = committed;\n    this.snapshot = snapshot;\n  } // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n\n\n  TransactionResult.prototype.toJSON = function () {\n    validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\n    return {\n      committed: this.committed,\n      snapshot: this.snapshot.toJSON()\n    };\n  };\n\n  return TransactionResult;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Modeled after base64 web-safe chars, but ordered by ASCII.\n\n\nvar PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\nvar MIN_PUSH_CHAR = '-';\nvar MAX_PUSH_CHAR = 'z';\nvar MAX_KEY_LEN = 786;\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\n\nvar nextPushId = function () {\n  // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n  var lastPushTime = 0; // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n\n  var lastRandChars = [];\n  return function (now) {\n    var duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n    var i;\n    var timeStampChars = new Array(8);\n\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64); // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n\n      now = Math.floor(now / 64);\n    }\n\n    assert(now === 0, 'Cannot push at time == 0');\n    var id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n\n      lastRandChars[i]++;\n    }\n\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n\n    assert(id.length === 20, 'nextPushId: Length should be 20.');\n    return id;\n  };\n}();\n\nvar successor = function (key) {\n  if (key === '' + INTEGER_32_MAX) {\n    // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\n    return MIN_PUSH_CHAR;\n  }\n\n  var keyAsInt = tryParseInt(key);\n\n  if (keyAsInt != null) {\n    return '' + (keyAsInt + 1);\n  }\n\n  var next = new Array(key.length);\n\n  for (var i_1 = 0; i_1 < next.length; i_1++) {\n    next[i_1] = key.charAt(i_1);\n  }\n\n  if (next.length < MAX_KEY_LEN) {\n    next.push(MIN_PUSH_CHAR);\n    return next.join('');\n  }\n\n  var i = next.length - 1;\n\n  while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\n    i--;\n  } // `successor` was called on the largest possible key, so return the\n  // MAX_NAME, which sorts larger than all keys.\n\n\n  if (i === -1) {\n    return MAX_NAME;\n  }\n\n  var source = next[i];\n  var sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\n  next[i] = sourcePlusOne;\n  return next.slice(0, i + 1).join('');\n}; // `key` is assumed to be non-empty.\n\n\nvar predecessor = function (key) {\n  if (key === '' + INTEGER_32_MIN) {\n    return MIN_NAME;\n  }\n\n  var keyAsInt = tryParseInt(key);\n\n  if (keyAsInt != null) {\n    return '' + (keyAsInt - 1);\n  }\n\n  var next = new Array(key.length);\n\n  for (var i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  } // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\n  // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\n  // than that, `predecessor(predecessor(key))`, is\n  //\n  // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\n  //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\n  //\n  // analogous to increment/decrement for base-10 integers.\n  //\n  // This works because lexigographic comparison works character-by-character,\n  // using length as a tie-breaker if one key is a prefix of the other.\n\n\n  if (next[next.length - 1] === MIN_PUSH_CHAR) {\n    if (next.length === 1) {\n      // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\n      return '' + INTEGER_32_MAX;\n    }\n\n    delete next[next.length - 1];\n    return next.join('');\n  } // Replace the last character with it's immediate predecessor, and\n  // fill the suffix of the key with MAX_PUSH_CHAR. This is the\n  // lexicographically largest possible key smaller than `key`.\n\n\n  next[next.length - 1] = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(next[next.length - 1]) - 1);\n  return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar NamedNode =\n/** @class */\nfunction () {\n  function NamedNode(name, node) {\n    this.name = name;\n    this.node = node;\n  }\n\n  NamedNode.Wrap = function (name, node) {\n    return new NamedNode(name, node);\n  };\n\n  return NamedNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Index =\n/** @class */\nfunction () {\n  function Index() {}\n  /**\r\n   * @return A standalone comparison function for\r\n   * this index\r\n   */\n\n\n  Index.prototype.getCompare = function () {\n    return this.compare.bind(this);\n  };\n  /**\r\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n   *\r\n   *\r\n   * @return True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n   */\n\n\n  Index.prototype.indexedValueChanged = function (oldNode, newNode) {\n    var oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    var newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  };\n  /**\r\n   * @return a node wrapper that will sort equal to or less than\r\n   * any other node wrapper, using this index\r\n   */\n\n\n  Index.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n\n  return Index;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __EMPTY_NODE;\n\nvar KeyIndex =\n/** @class */\nfunction (_super) {\n  __extends(KeyIndex, _super);\n\n  function KeyIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\n    get: function () {\n      return __EMPTY_NODE;\n    },\n    set: function (val) {\n      __EMPTY_NODE = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * @inheritDoc\r\n   */\n\n  KeyIndex.prototype.compare = function (a, b) {\n    return nameCompare(a.name, b.name);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.isDefinedOn = function (node) {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return false; // The key for a node never changes.\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.maxPost = function () {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  };\n\n  KeyIndex.prototype.makePost = function (indexValue, name) {\n    assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.'); // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  };\n  /**\r\n   * @return String representation for inclusion in a query spec\r\n   */\n\n\n  KeyIndex.prototype.toString = function () {\n    return '.key';\n  };\n\n  return KeyIndex;\n}(Index);\n\nvar KEY_INDEX = new KeyIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar MAX_NODE;\n\nfunction setMaxNode(val) {\n  MAX_NODE = val;\n}\n\nvar priorityHashText = function (priority) {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n */\n\n\nvar validatePriorityNode = function (priorityNode) {\n  if (priorityNode.isLeafNode()) {\n    var val = priorityNode.val();\n    assert(typeof val === 'string' || typeof val === 'number' || typeof val === 'object' && contains(val, '.sv'), 'Priority must be a string or number.');\n  } else {\n    assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\n  } // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n\n\n  assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __childrenNodeConstructor;\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\n\n\nvar LeafNode =\n/** @class */\nfunction () {\n  /**\r\n   * @param value_ The value to store in this leaf node. The object type is\r\n   * possible in the event of a deferred value\r\n   * @param priorityNode_ The priority of this node.\r\n   */\n  function LeafNode(value_, priorityNode_) {\n    if (priorityNode_ === void 0) {\n      priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n\n    this.value_ = value_;\n    this.priorityNode_ = priorityNode_;\n    this.lazyHash_ = null;\n    assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\n    get: function () {\n      return __childrenNodeConstructor;\n    },\n    set: function (val) {\n      __childrenNodeConstructor = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /** @inheritDoc */\n\n  LeafNode.prototype.isLeafNode = function () {\n    return true;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getPriority = function () {\n    return this.priorityNode_;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updatePriority = function (newPriorityNode) {\n    return new LeafNode(this.value_, newPriorityNode);\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getImmediateChild = function (childName) {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getChild = function (path) {\n    if (pathIsEmpty(path)) {\n      return this;\n    } else if (pathGetFront(path) === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.hasChild = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\n    return null;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updateChild = function (path, newChildNode) {\n    var front = pathGetFront(path);\n\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      assert(front !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\n      return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(pathPopFront(path), newChildNode));\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.isEmpty = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.numChildren = function () {\n    return 0;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.forEachChild = function (index, action) {\n    return false;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.val = function (exportFormat) {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.hash = function () {\n    if (this.lazyHash_ === null) {\n      var toHash = '';\n\n      if (!this.priorityNode_.isEmpty()) {\n        toHash += 'priority:' + priorityHashText(this.priorityNode_.val()) + ':';\n      }\n\n      var type = typeof this.value_;\n      toHash += type + ':';\n\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_);\n      } else {\n        toHash += this.value_;\n      }\n\n      this.lazyHash_ = sha1(toHash);\n    }\n\n    return this.lazyHash_;\n  };\n  /**\r\n   * Returns the value of the leaf node.\r\n   * @return The value of the node.\r\n   */\n\n\n  LeafNode.prototype.getValue = function () {\n    return this.value_;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.compareTo = function (other) {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other);\n    }\n  };\n  /**\r\n   * Comparison specifically for two leaf nodes\r\n   */\n\n\n  LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\n    var otherLeafType = typeof otherLeaf.value_;\n    var thisLeafType = typeof this.value_;\n    var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.withIndex = function () {\n    return this;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.isIndexed = function () {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.equals = function (other) {\n    /**\r\n     * @inheritDoc\r\n     */\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      var otherLeaf = other;\n      return this.value_ === otherLeaf.value_ && this.priorityNode_.equals(otherLeaf.priorityNode_);\n    } else {\n      return false;\n    }\n  };\n  /**\r\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n   * the same type, the comparison falls back to their value\r\n   */\n\n\n  LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n  return LeafNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar nodeFromJSON;\nvar MAX_NODE$1;\n\nfunction setNodeFromJSON(val) {\n  nodeFromJSON = val;\n}\n\nfunction setMaxNode$1(val) {\n  MAX_NODE$1 = val;\n}\n\nvar PriorityIndex =\n/** @class */\nfunction (_super) {\n  __extends(PriorityIndex, _super);\n\n  function PriorityIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.compare = function (a, b) {\n    var aPriority = a.node.getPriority();\n    var bPriority = b.node.getPriority();\n    var indexCmp = aPriority.compareTo(bPriority);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.isDefinedOn = function (node) {\n    return !node.getPriority().isEmpty();\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.maxPost = function () {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\n  };\n\n  PriorityIndex.prototype.makePost = function (indexValue, name) {\n    var priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  };\n  /**\r\n   * @return String representation for inclusion in a query spec\r\n   */\n\n\n  PriorityIndex.prototype.toString = function () {\n    return '.priority';\n  };\n\n  return PriorityIndex;\n}(Index);\n\nvar PRIORITY_INDEX = new PriorityIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An iterator over an LLRBNode.\r\n */\n\nvar SortedMapIterator =\n/** @class */\nfunction () {\n  /**\r\n   * @param node Node to iterate.\r\n   * @param isReverse_ Whether or not to iterate in reverse\r\n   * @param resultGenerator_\r\n   */\n  function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\n    if (resultGenerator_ === void 0) {\n      resultGenerator_ = null;\n    }\n\n    this.isReverse_ = isReverse_;\n    this.resultGenerator_ = resultGenerator_;\n    this.nodeStack_ = [];\n    var cmp = 1;\n\n    while (!node.isEmpty()) {\n      node = node;\n      cmp = startKey ? comparator(node.key, startKey) : 1; // flip the comparison if we're going in reverse\n\n      if (isReverse_) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  SortedMapIterator.prototype.getNext = function () {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    var node = this.nodeStack_.pop();\n    var result;\n\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = {\n        key: node.key,\n        value: node.value\n      };\n    }\n\n    if (this.isReverse_) {\n      node = node.left;\n\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  };\n\n  SortedMapIterator.prototype.hasNext = function () {\n    return this.nodeStack_.length > 0;\n  };\n\n  SortedMapIterator.prototype.peek = function () {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    var node = this.nodeStack_[this.nodeStack_.length - 1];\n\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return {\n        key: node.key,\n        value: node.value\n      };\n    }\n  };\n\n  return SortedMapIterator;\n}();\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\n\n\nvar LLRBNode =\n/** @class */\nfunction () {\n  /**\r\n   * @param key Key associated with this node.\r\n   * @param value Value associated with this node.\r\n   * @param color Whether this node is red.\r\n   * @param left Left child.\r\n   * @param right Right child.\r\n   */\n  function LLRBNode(key, value, color, left, right) {\n    this.key = key;\n    this.value = value;\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left = left != null ? left : SortedMap.EMPTY_NODE;\n    this.right = right != null ? right : SortedMap.EMPTY_NODE;\n  }\n  /**\r\n   * Returns a copy of the current node, optionally replacing pieces of it.\r\n   *\r\n   * @param key New key for the node, or null.\r\n   * @param value New value for the node, or null.\r\n   * @param color New color for the node, or null.\r\n   * @param left New left child for the node, or null.\r\n   * @param right New right child for the node, or null.\r\n   * @return The node copy.\r\n   */\n\n\n  LLRBNode.prototype.copy = function (key, value, color, left, right) {\n    return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\n  };\n  /**\r\n   * @return The total number of nodes in the tree.\r\n   */\n\n\n  LLRBNode.prototype.count = function () {\n    return this.left.count() + 1 + this.right.count();\n  };\n  /**\r\n   * @return True if the tree is empty.\r\n   */\n\n\n  LLRBNode.prototype.isEmpty = function () {\n    return false;\n  };\n  /**\r\n   * Traverses the tree in key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param action Callback function to be called for each\r\n   *   node.  If it returns true, traversal is aborted.\r\n   * @return The first truthy value returned by action, or the last falsey\r\n   *   value returned by action\r\n   */\n\n\n  LLRBNode.prototype.inorderTraversal = function (action) {\n    return this.left.inorderTraversal(action) || !!action(this.key, this.value) || this.right.inorderTraversal(action);\n  };\n  /**\r\n   * Traverses the tree in reverse key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param action Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @return True if traversal was aborted.\r\n   */\n\n\n  LLRBNode.prototype.reverseTraversal = function (action) {\n    return this.right.reverseTraversal(action) || action(this.key, this.value) || this.left.reverseTraversal(action);\n  };\n  /**\r\n   * @return The minimum node in the tree.\r\n   */\n\n\n  LLRBNode.prototype.min_ = function () {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return this.left.min_();\n    }\n  };\n  /**\r\n   * @return The maximum key in the tree.\r\n   */\n\n\n  LLRBNode.prototype.minKey = function () {\n    return this.min_().key;\n  };\n  /**\r\n   * @return The maximum key in the tree.\r\n   */\n\n\n  LLRBNode.prototype.maxKey = function () {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  };\n  /**\r\n   * @param key Key to insert.\r\n   * @param value Value to insert.\r\n   * @param comparator Comparator.\r\n   * @return New tree, with the key/value added.\r\n   */\n\n\n  LLRBNode.prototype.insert = function (key, value, comparator) {\n    var n = this;\n    var cmp = comparator(key, n.key);\n\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\n    }\n\n    return n.fixUp_();\n  };\n  /**\r\n   * @return New tree, with the minimum key removed.\r\n   */\n\n\n  LLRBNode.prototype.removeMin_ = function () {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE;\n    }\n\n    var n = this;\n\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n\n    n = n.copy(null, null, null, n.left.removeMin_(), null);\n    return n.fixUp_();\n  };\n  /**\r\n   * @param key The key of the item to remove.\r\n   * @param comparator Comparator.\r\n   * @return New tree, with the specified item removed.\r\n   */\n\n\n  LLRBNode.prototype.remove = function (key, comparator) {\n    var n, smallest;\n    n = this;\n\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE;\n        } else {\n          smallest = n.right.min_();\n          n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\n        }\n      }\n\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n\n    return n.fixUp_();\n  };\n  /**\r\n   * @return Whether this is a RED node.\r\n   */\n\n\n  LLRBNode.prototype.isRed_ = function () {\n    return this.color;\n  };\n  /**\r\n   * @return New tree after performing any needed rotations.\r\n   */\n\n\n  LLRBNode.prototype.fixUp_ = function () {\n    var n = this;\n\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @return New tree, after moveRedLeft.\r\n   */\n\n\n  LLRBNode.prototype.moveRedLeft_ = function () {\n    var n = this.colorFlip_();\n\n    if (n.right.left.isRed_()) {\n      n = n.copy(null, null, null, null, n.right.rotateRight_());\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @return New tree, after moveRedRight.\r\n   */\n\n\n  LLRBNode.prototype.moveRedRight_ = function () {\n    var n = this.colorFlip_();\n\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @return New tree, after rotateLeft.\r\n   */\n\n\n  LLRBNode.prototype.rotateLeft_ = function () {\n    var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null);\n  };\n  /**\r\n   * @return New tree, after rotateRight.\r\n   */\n\n\n  LLRBNode.prototype.rotateRight_ = function () {\n    var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr);\n  };\n  /**\r\n   * @return Newt ree, after colorFlip.\r\n   */\n\n\n  LLRBNode.prototype.colorFlip_ = function () {\n    var left = this.left.copy(null, null, !this.left.color, null, null);\n    var right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  };\n  /**\r\n   * For testing.\r\n   *\r\n   * @return True if all is well.\r\n   */\n\n\n  LLRBNode.prototype.checkMaxDepth_ = function () {\n    var blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  };\n\n  LLRBNode.prototype.check_ = function () {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\n    }\n\n    if (this.right.isRed_()) {\n      throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\n    }\n\n    var blackDepth = this.left.check_();\n\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  };\n\n  LLRBNode.RED = true;\n  LLRBNode.BLACK = false;\n  return LLRBNode;\n}();\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\n\n\nvar LLRBEmptyNode =\n/** @class */\nfunction () {\n  function LLRBEmptyNode() {}\n  /**\r\n   * Returns a copy of the current node.\r\n   *\r\n   * @return The node copy.\r\n   */\n\n\n  LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\n    return this;\n  };\n  /**\r\n   * Returns a copy of the tree, with the specified key/value added.\r\n   *\r\n   * @param key Key to be added.\r\n   * @param value Value to be added.\r\n   * @param comparator Comparator.\r\n   * @return New tree, with item added.\r\n   */\n\n\n  LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\n    return new LLRBNode(key, value, null);\n  };\n  /**\r\n   * Returns a copy of the tree, with the specified key removed.\r\n   *\r\n   * @param key The key to remove.\r\n   * @param comparator Comparator.\r\n   * @return New tree, with item removed.\r\n   */\n\n\n  LLRBEmptyNode.prototype.remove = function (key, comparator) {\n    return this;\n  };\n  /**\r\n   * @return The total number of nodes in the tree.\r\n   */\n\n\n  LLRBEmptyNode.prototype.count = function () {\n    return 0;\n  };\n  /**\r\n   * @return True if the tree is empty.\r\n   */\n\n\n  LLRBEmptyNode.prototype.isEmpty = function () {\n    return true;\n  };\n  /**\r\n   * Traverses the tree in key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param action Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @return True if traversal was aborted.\r\n   */\n\n\n  LLRBEmptyNode.prototype.inorderTraversal = function (action) {\n    return false;\n  };\n  /**\r\n   * Traverses the tree in reverse key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param action Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @return True if traversal was aborted.\r\n   */\n\n\n  LLRBEmptyNode.prototype.reverseTraversal = function (action) {\n    return false;\n  };\n\n  LLRBEmptyNode.prototype.minKey = function () {\n    return null;\n  };\n\n  LLRBEmptyNode.prototype.maxKey = function () {\n    return null;\n  };\n\n  LLRBEmptyNode.prototype.check_ = function () {\n    return 0;\n  };\n  /**\r\n   * @return Whether this node is red.\r\n   */\n\n\n  LLRBEmptyNode.prototype.isRed_ = function () {\n    return false;\n  };\n\n  return LLRBEmptyNode;\n}();\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\n\n\nvar SortedMap =\n/** @class */\nfunction () {\n  /**\r\n   * @param comparator_ Key comparator.\r\n   * @param root_ (Optional) Root node for the map.\r\n   */\n  function SortedMap(comparator_, root_) {\n    if (root_ === void 0) {\n      root_ = SortedMap.EMPTY_NODE;\n    }\n\n    this.comparator_ = comparator_;\n    this.root_ = root_;\n  }\n  /**\r\n   * Returns a copy of the map, with the specified key/value added or replaced.\r\n   * (TODO: We should perhaps rename this method to 'put')\r\n   *\r\n   * @param key Key to be added.\r\n   * @param value Value to be added.\r\n   * @return New map, with item added.\r\n   */\n\n\n  SortedMap.prototype.insert = function (key, value) {\n    return new SortedMap(this.comparator_, this.root_.insert(key, value, this.comparator_).copy(null, null, LLRBNode.BLACK, null, null));\n  };\n  /**\r\n   * Returns a copy of the map, with the specified key removed.\r\n   *\r\n   * @param key The key to remove.\r\n   * @return New map, with item removed.\r\n   */\n\n\n  SortedMap.prototype.remove = function (key) {\n    return new SortedMap(this.comparator_, this.root_.remove(key, this.comparator_).copy(null, null, LLRBNode.BLACK, null, null));\n  };\n  /**\r\n   * Returns the value of the node with the given key, or null.\r\n   *\r\n   * @param key The key to look up.\r\n   * @return The value of the node with the given key, or null if the\r\n   * key doesn't exist.\r\n   */\n\n\n  SortedMap.prototype.get = function (key) {\n    var cmp;\n    var node = this.root_;\n\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n\n    return null;\n  };\n  /**\r\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n   * @param key The key to find the predecessor of\r\n   * @return The predecessor key.\r\n   */\n\n\n  SortedMap.prototype.getPredecessorKey = function (key) {\n    var cmp,\n        node = this.root_,\n        rightParent = null;\n\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\n  };\n  /**\r\n   * @return True if the map is empty.\r\n   */\n\n\n  SortedMap.prototype.isEmpty = function () {\n    return this.root_.isEmpty();\n  };\n  /**\r\n   * @return The total number of nodes in the map.\r\n   */\n\n\n  SortedMap.prototype.count = function () {\n    return this.root_.count();\n  };\n  /**\r\n   * @return The minimum key in the map.\r\n   */\n\n\n  SortedMap.prototype.minKey = function () {\n    return this.root_.minKey();\n  };\n  /**\r\n   * @return The maximum key in the map.\r\n   */\n\n\n  SortedMap.prototype.maxKey = function () {\n    return this.root_.maxKey();\n  };\n  /**\r\n   * Traverses the map in key order and calls the specified action function\r\n   * for each key/value pair.\r\n   *\r\n   * @param action Callback function to be called\r\n   * for each key/value pair.  If action returns true, traversal is aborted.\r\n   * @return The first truthy value returned by action, or the last falsey\r\n   *   value returned by action\r\n   */\n\n\n  SortedMap.prototype.inorderTraversal = function (action) {\n    return this.root_.inorderTraversal(action);\n  };\n  /**\r\n   * Traverses the map in reverse key order and calls the specified action function\r\n   * for each key/value pair.\r\n   *\r\n   * @param action Callback function to be called\r\n   * for each key/value pair.  If action returns true, traversal is aborted.\r\n   * @return True if the traversal was aborted.\r\n   */\n\n\n  SortedMap.prototype.reverseTraversal = function (action) {\n    return this.root_.reverseTraversal(action);\n  };\n  /**\r\n   * Returns an iterator over the SortedMap.\r\n   * @return The iterator.\r\n   */\n\n\n  SortedMap.prototype.getIterator = function (resultGenerator) {\n    return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\n  };\n\n  SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\n    return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\n  };\n\n  SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\n    return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\n  };\n\n  SortedMap.prototype.getReverseIterator = function (resultGenerator) {\n    return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\n  };\n  /**\r\n   * Always use the same empty node, to reduce memory.\r\n   */\n\n\n  SortedMap.EMPTY_NODE = new LLRBEmptyNode();\n  return SortedMap;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar LOG_2 = Math.log(2);\n\nvar Base12Num =\n/** @class */\nfunction () {\n  function Base12Num(length) {\n    var logBase2 = function (num) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return parseInt(Math.log(num) / LOG_2, 10);\n    };\n\n    var bitMask = function (bits) {\n      return parseInt(Array(bits + 1).join('1'), 2);\n    };\n\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    var mask = bitMask(this.count);\n    this.bits_ = length + 1 & mask;\n  }\n\n  Base12Num.prototype.nextBitIsOne = function () {\n    //noinspection JSBitwiseOperatorUsage\n    var result = !(this.bits_ & 0x1 << this.current_);\n    this.current_--;\n    return result;\n  };\n\n  return Base12Num;\n}();\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @param childList Unsorted list of children\r\n * @param cmp The comparison method to be used\r\n * @param keyFn An optional function to extract K from a node wrapper, if K's\r\n * type is not NamedNode\r\n * @param mapSortFn An optional override for comparator used by the generated sorted map\r\n */\n\n\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\n  childList.sort(cmp);\n\n  var buildBalancedTree = function (low, high) {\n    var length = high - low;\n    var namedNode;\n    var key;\n\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : namedNode;\n      return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var middle = parseInt(length / 2, 10) + low;\n      var left = buildBalancedTree(low, middle);\n      var right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : namedNode;\n      return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\n    }\n  };\n\n  var buildFrom12Array = function (base12) {\n    var node = null;\n    var root = null;\n    var index = childList.length;\n\n    var buildPennant = function (chunkSize, color) {\n      var low = index - chunkSize;\n      var high = index;\n      index -= chunkSize;\n      var childTree = buildBalancedTree(low + 1, high);\n      var namedNode = childList[low];\n      var key = keyFn ? keyFn(namedNode) : namedNode;\n      attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\n    };\n\n    var attachPennant = function (pennant) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (var i = 0; i < base12.count; ++i) {\n      var isOne = base12.nextBitIsOne(); // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n\n      var chunkSize = Math.pow(2, base12.count - (i + 1));\n\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n\n    return root;\n  };\n\n  var base12 = new Base12Num(childList.length);\n  var root = buildFrom12Array(base12); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  return new SortedMap(mapSortFn || cmp, root);\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar _defaultIndexMap;\n\nvar fallbackObject = {};\n\nvar IndexMap =\n/** @class */\nfunction () {\n  function IndexMap(indexes_, indexSet_) {\n    this.indexes_ = indexes_;\n    this.indexSet_ = indexSet_;\n  }\n\n  Object.defineProperty(IndexMap, \"Default\", {\n    /**\r\n     * The default IndexMap for nodes without a priority\r\n     */\n    get: function () {\n      assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\n      _defaultIndexMap = _defaultIndexMap || new IndexMap({\n        '.priority': fallbackObject\n      }, {\n        '.priority': PRIORITY_INDEX\n      });\n      return _defaultIndexMap;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IndexMap.prototype.get = function (indexKey) {\n    var sortedMap = safeGet(this.indexes_, indexKey);\n\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  };\n\n  IndexMap.prototype.hasIndex = function (indexDefinition) {\n    return contains(this.indexSet_, indexDefinition.toString());\n  };\n\n  IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\n    assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\n    var childList = [];\n    var sawIndexedValue = false;\n    var iter = existingChildren.getIterator(NamedNode.Wrap);\n    var next = iter.getNext();\n\n    while (next) {\n      sawIndexedValue = sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n\n    var newIndex;\n\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n\n    var indexName = indexDefinition.toString();\n\n    var newIndexSet = __assign({}, this.indexSet_);\n\n    newIndexSet[indexName] = indexDefinition;\n\n    var newIndexes = __assign({}, this.indexes_);\n\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  };\n  /**\r\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n   */\n\n\n  IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\n    var _this = this;\n\n    var newIndexes = map(this.indexes_, function (indexedChildren, indexName) {\n      var index = safeGet(_this.indexSet_, indexName);\n      assert(index, 'Missing index implementation for ' + indexName);\n\n      if (indexedChildren === fallbackObject) {\n        // Check to see if we need to index everything\n        if (index.isDefinedOn(namedNode.node)) {\n          // We need to build this index\n          var childList = [];\n          var iter = existingChildren.getIterator(NamedNode.Wrap);\n          var next = iter.getNext();\n\n          while (next) {\n            if (next.name !== namedNode.name) {\n              childList.push(next);\n            }\n\n            next = iter.getNext();\n          }\n\n          childList.push(namedNode);\n          return buildChildSet(childList, index.getCompare());\n        } else {\n          // No change, this remains a fallback\n          return fallbackObject;\n        }\n      } else {\n        var existingSnap = existingChildren.get(namedNode.name);\n        var newChildren = indexedChildren;\n\n        if (existingSnap) {\n          newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\n        }\n\n        return newChildren.insert(namedNode, namedNode.node);\n      }\n    });\n    return new IndexMap(newIndexes, this.indexSet_);\n  };\n  /**\r\n   * Create a new IndexMap instance with the given value removed\r\n   */\n\n\n  IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\n    var newIndexes = map(this.indexes_, function (indexedChildren) {\n      if (indexedChildren === fallbackObject) {\n        // This is the fallback. Just return it, nothing to do in this case\n        return indexedChildren;\n      } else {\n        var existingSnap = existingChildren.get(namedNode.name);\n\n        if (existingSnap) {\n          return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\n        } else {\n          // No record of this child\n          return indexedChildren;\n        }\n      }\n    });\n    return new IndexMap(newIndexes, this.indexSet_);\n  };\n\n  return IndexMap;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction NAME_ONLY_COMPARATOR(left, right) {\n  return nameCompare(left.name, right.name);\n}\n\nfunction NAME_COMPARATOR(left, right) {\n  return nameCompare(left, right);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\n\nvar EMPTY_NODE;\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n */\n\nvar ChildrenNode =\n/** @class */\nfunction () {\n  /**\r\n   * @param children_ List of children of this node..\r\n   * @param priorityNode_ The priority of this node (as a snapshot node).\r\n   */\n  function ChildrenNode(children_, priorityNode_, indexMap_) {\n    this.children_ = children_;\n    this.priorityNode_ = priorityNode_;\n    this.indexMap_ = indexMap_;\n    this.lazyHash_ = null;\n    /**\r\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n     * class instead of an empty ChildrenNode.\r\n     */\n\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\n    }\n  }\n\n  Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\n    get: function () {\n      return EMPTY_NODE || (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /** @inheritDoc */\n\n  ChildrenNode.prototype.isLeafNode = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getPriority = function () {\n    return this.priorityNode_ || EMPTY_NODE;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getImmediateChild = function (childName) {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      var child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getChild = function (path) {\n    var front = pathGetFront(path);\n\n    if (front === null) {\n      return this;\n    }\n\n    return this.getImmediateChild(front).getChild(pathPopFront(path));\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.hasChild = function (childName) {\n    return this.children_.get(childName) !== null;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n    assert(newChildNode, 'We should always be passing snapshot nodes');\n\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      var namedNode = new NamedNode(childName, newChildNode);\n      var newChildren = void 0,\n          newIndexMap = void 0;\n\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      var newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updateChild = function (path, newChildNode) {\n    var front = pathGetFront(path);\n\n    if (front === null) {\n      return newChildNode;\n    } else {\n      assert(pathGetFront(path) !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\n      var newImmediateChild = this.getImmediateChild(front).updateChild(pathPopFront(path), newChildNode);\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.isEmpty = function () {\n    return this.children_.isEmpty();\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.numChildren = function () {\n    return this.children_.count();\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.val = function (exportFormat) {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    var obj = {};\n    var numKeys = 0,\n        maxKey = 0,\n        allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      obj[key] = childNode.val(exportFormat);\n      numKeys++;\n\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      var array = []; // eslint-disable-next-line guard-for-in\n\n      for (var key in obj) {\n        array[key] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n\n      return obj;\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.hash = function () {\n    if (this.lazyHash_ === null) {\n      var toHash_1 = '';\n\n      if (!this.getPriority().isEmpty()) {\n        toHash_1 += 'priority:' + priorityHashText(this.getPriority().val()) + ':';\n      }\n\n      this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n        var childHash = childNode.hash();\n\n        if (childHash !== '') {\n          toHash_1 += ':' + key + ':' + childHash;\n        }\n      });\n      this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\n    }\n\n    return this.lazyHash_;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\n    var idx = this.resolveIndex_(index);\n\n    if (idx) {\n      var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  };\n\n  ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      var minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  };\n\n  ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\n    var minKey = this.getFirstChildName(indexDefinition);\n\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * Given an index, return the key name of the largest value we have, according to that index\r\n   */\n\n\n  ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      var maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  };\n\n  ChildrenNode.prototype.getLastChild = function (indexDefinition) {\n    var maxKey = this.getLastChildName(indexDefinition);\n\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.forEachChild = function (index, action) {\n    var idx = this.resolveIndex_(index);\n\n    if (idx) {\n      return idx.inorderTraversal(function (wrappedNode) {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  };\n\n  ChildrenNode.prototype.getIterator = function (indexDefinition) {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  };\n\n  ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      return idx.getIteratorFrom(startPost, function (key) {\n        return key;\n      });\n    } else {\n      var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\n      var next = iterator.peek();\n\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n\n      return iterator;\n    }\n  };\n\n  ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\n    return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\n  };\n\n  ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, function (key) {\n        return key;\n      });\n    } else {\n      var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\n      var next = iterator.peek();\n\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n\n      return iterator;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.compareTo = function (other) {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE$2) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.withIndex = function (indexDefinition) {\n    if (indexDefinition === KEY_INDEX || this.indexMap_.hasIndex(indexDefinition)) {\n      return this;\n    } else {\n      var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.isIndexed = function (index) {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.equals = function (other) {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      var otherChildrenNode = other;\n\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (this.children_.count() === otherChildrenNode.children_.count()) {\n        var thisIter = this.getIterator(PRIORITY_INDEX);\n        var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        var thisCurrent = thisIter.getNext();\n        var otherCurrent = otherIter.getNext();\n\n        while (thisCurrent && otherCurrent) {\n          if (thisCurrent.name !== otherCurrent.name || !thisCurrent.node.equals(otherCurrent.node)) {\n            return false;\n          }\n\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  };\n  /**\r\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n   * instead.\r\n   *\r\n   */\n\n\n  ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  };\n\n  ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n  return ChildrenNode;\n}();\n\nvar MaxNode =\n/** @class */\nfunction (_super) {\n  __extends(MaxNode, _super);\n\n  function MaxNode() {\n    return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\n  }\n\n  MaxNode.prototype.compareTo = function (other) {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  };\n\n  MaxNode.prototype.equals = function (other) {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  };\n\n  MaxNode.prototype.getPriority = function () {\n    return this;\n  };\n\n  MaxNode.prototype.getImmediateChild = function (childName) {\n    return ChildrenNode.EMPTY_NODE;\n  };\n\n  MaxNode.prototype.isEmpty = function () {\n    return false;\n  };\n\n  return MaxNode;\n}(ChildrenNode);\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n */\n\n\nvar MAX_NODE$2 = new MaxNode();\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE$2)\n  }\n});\n/**\r\n * Reference Extensions\r\n */\n\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE$2);\nsetMaxNode$1(MAX_NODE$2);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar USE_HINZE = true;\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param json JSON to create a node for.\r\n * @param priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n */\n\nfunction nodeFromJSON$1(json, priority) {\n  if (priority === void 0) {\n    priority = null;\n  }\n\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  assert(priority === null || typeof priority === 'string' || typeof priority === 'number' || typeof priority === 'object' && '.sv' in priority, 'Invalid priority type found: ' + typeof priority);\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  } // Valid leaf nodes include non-objects or server-value wrapper objects\n\n\n  if (typeof json !== 'object' || '.sv' in json) {\n    var jsonLeaf = json;\n    return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    var children_1 = [];\n    var childrenHavePriority_1 = false;\n    var hinzeJsonObj = json;\n    each(hinzeJsonObj, function (key, child) {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        var childNode = nodeFromJSON$1(child);\n\n        if (!childNode.isEmpty()) {\n          childrenHavePriority_1 = childrenHavePriority_1 || !childNode.getPriority().isEmpty();\n          children_1.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children_1.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) {\n      return namedNode.name;\n    }, NAME_COMPARATOR);\n\n    if (childrenHavePriority_1) {\n      var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\n      return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({\n        '.priority': sortedChildSet\n      }, {\n        '.priority': PRIORITY_INDEX\n      }));\n    } else {\n      return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\n    }\n  } else {\n    var node_1 = ChildrenNode.EMPTY_NODE;\n    each(json, function (key, childData) {\n      if (contains(json, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          var childNode = nodeFromJSON$1(childData);\n\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node_1 = node_1.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n    return node_1.updatePriority(nodeFromJSON$1(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON$1);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar ValueIndex =\n/** @class */\nfunction (_super) {\n  __extends(ValueIndex, _super);\n\n  function ValueIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.compare = function (a, b) {\n    var indexCmp = a.node.compareTo(b.node);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.isDefinedOn = function (node) {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return !oldNode.equals(newNode);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.maxPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MAX;\n  };\n\n  ValueIndex.prototype.makePost = function (indexValue, name) {\n    var valueNode = nodeFromJSON$1(indexValue);\n    return new NamedNode(name, valueNode);\n  };\n  /**\r\n   * @return String representation for inclusion in a query spec\r\n   */\n\n\n  ValueIndex.prototype.toString = function () {\n    return '.value';\n  };\n\n  return ValueIndex;\n}(Index);\n\nvar VALUE_INDEX = new ValueIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar PathIndex =\n/** @class */\nfunction (_super) {\n  __extends(PathIndex, _super);\n\n  function PathIndex(indexPath_) {\n    var _this = _super.call(this) || this;\n\n    _this.indexPath_ = indexPath_;\n    assert(!pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\n    return _this;\n  }\n\n  PathIndex.prototype.extractChild = function (snap) {\n    return snap.getChild(this.indexPath_);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.isDefinedOn = function (node) {\n    return !node.getChild(this.indexPath_).isEmpty();\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.compare = function (a, b) {\n    var aChild = this.extractChild(a.node);\n    var bChild = this.extractChild(b.node);\n    var indexCmp = aChild.compareTo(bChild);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.makePost = function (indexValue, name) {\n    var valueNode = nodeFromJSON$1(indexValue);\n    var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\n    return new NamedNode(name, node);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.maxPost = function () {\n    var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\n    return new NamedNode(MAX_NAME, node);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.toString = function () {\n    return pathSlice(this.indexPath_, 0).join('/');\n  };\n\n  return PathIndex;\n}(Index);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\n\n\nvar DataSnapshot =\n/** @class */\nfunction () {\n  /**\r\n   * @param node_ A SnapshotNode to wrap.\r\n   * @param ref_ The ref of the location this snapshot came from.\r\n   * @param index_ The iteration order for this snapshot\r\n   */\n  function DataSnapshot(node_, ref_, index_) {\n    this.node_ = node_;\n    this.ref_ = ref_;\n    this.index_ = index_;\n  }\n  /**\r\n   * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n   * empty.\r\n   *\r\n   * @return JSON representation of the DataSnapshot contents, or null if empty.\r\n   */\n\n\n  DataSnapshot.prototype.val = function () {\n    validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\n    return this.node_.val();\n  };\n  /**\r\n   * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n   * the entire node contents.\r\n   * @return JSON representation of the DataSnapshot contents, or null if empty.\r\n   */\n\n\n  DataSnapshot.prototype.exportVal = function () {\n    validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\n    return this.node_.val(true);\n  }; // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n\n\n  DataSnapshot.prototype.toJSON = function () {\n    // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\n    validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\n    return this.exportVal();\n  };\n  /**\r\n   * Returns whether the snapshot contains a non-null value.\r\n   *\r\n   * @return Whether the snapshot contains a non-null value, or is empty.\r\n   */\n\n\n  DataSnapshot.prototype.exists = function () {\n    validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\n    return !this.node_.isEmpty();\n  };\n  /**\r\n   * Returns a DataSnapshot of the specified child node's contents.\r\n   *\r\n   * @param childPathString Path to a child.\r\n   * @return DataSnapshot for child node.\r\n   */\n\n\n  DataSnapshot.prototype.child = function (childPathString) {\n    validateArgCount('DataSnapshot.child', 0, 1, arguments.length); // Ensure the childPath is a string (can be a number)\n\n    childPathString = String(childPathString);\n    validatePathString('DataSnapshot.child', 1, childPathString, false);\n    var childPath = new Path(childPathString);\n    var childRef = this.ref_.child(childPath);\n    return new DataSnapshot(this.node_.getChild(childPath), childRef, PRIORITY_INDEX);\n  };\n  /**\r\n   * Returns whether the snapshot contains a child at the specified path.\r\n   *\r\n   * @param childPathString Path to a child.\r\n   * @return Whether the child exists.\r\n   */\n\n\n  DataSnapshot.prototype.hasChild = function (childPathString) {\n    validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\n    validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\n    var childPath = new Path(childPathString);\n    return !this.node_.getChild(childPath).isEmpty();\n  };\n  /**\r\n   * Returns the priority of the object, or null if no priority was set.\r\n   *\r\n   * @return The priority.\r\n   */\n\n\n  DataSnapshot.prototype.getPriority = function () {\n    validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length); // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n\n    return this.node_.getPriority().val();\n  };\n  /**\r\n   * Iterates through child nodes and calls the specified action for each one.\r\n   *\r\n   * @param action Callback function to be called\r\n   * for each child.\r\n   * @return True if forEach was canceled by action returning true for\r\n   * one of the child nodes.\r\n   */\n\n\n  DataSnapshot.prototype.forEach = function (action) {\n    var _this = this;\n\n    validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\n    validateCallback('DataSnapshot.forEach', 1, action, false);\n\n    if (this.node_.isLeafNode()) {\n      return false;\n    }\n\n    var childrenNode = this.node_; // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n\n    return !!childrenNode.forEachChild(this.index_, function (key, node) {\n      return action(new DataSnapshot(node, _this.ref_.child(key), PRIORITY_INDEX));\n    });\n  };\n  /**\r\n   * Returns whether this DataSnapshot has children.\r\n   * @return True if the DataSnapshot contains 1 or more child nodes.\r\n   */\n\n\n  DataSnapshot.prototype.hasChildren = function () {\n    validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\n\n    if (this.node_.isLeafNode()) {\n      return false;\n    } else {\n      return !this.node_.isEmpty();\n    }\n  };\n\n  Object.defineProperty(DataSnapshot.prototype, \"key\", {\n    get: function () {\n      return this.ref_.getKey();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Returns the number of children for this DataSnapshot.\r\n   * @return The number of children that this DataSnapshot contains.\r\n   */\n\n  DataSnapshot.prototype.numChildren = function () {\n    validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\n    return this.node_.numChildren();\n  };\n  /**\r\n   * @return The Firebase reference for the location this snapshot's data came\r\n   * from.\r\n   */\n\n\n  DataSnapshot.prototype.getRef = function () {\n    validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\n    return this.ref_;\n  };\n\n  Object.defineProperty(DataSnapshot.prototype, \"ref\", {\n    get: function () {\n      return this.getRef();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return DataSnapshot;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Encapsulates the data needed to raise an event\r\n */\n\n\nvar DataEvent =\n/** @class */\nfunction () {\n  /**\r\n   * @param eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n   * @param eventRegistration The function to call to with the event data. User provided\r\n   * @param snapshot The data backing the event\r\n   * @param prevName Optional, the name of the previous child for child_* events.\r\n   */\n  function DataEvent(eventType, eventRegistration, snapshot, prevName) {\n    this.eventType = eventType;\n    this.eventRegistration = eventRegistration;\n    this.snapshot = snapshot;\n    this.prevName = prevName;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.getPath = function () {\n    var ref = this.snapshot.getRef();\n\n    if (this.eventType === 'value') {\n      return ref.path;\n    } else {\n      return ref.getParent().path;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.getEventType = function () {\n    return this.eventType;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.getEventRunner = function () {\n    return this.eventRegistration.getEventRunner(this);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.toString = function () {\n    return this.getPath().toString() + ':' + this.eventType + ':' + stringify(this.snapshot.exportVal());\n  };\n\n  return DataEvent;\n}();\n\nvar CancelEvent =\n/** @class */\nfunction () {\n  function CancelEvent(eventRegistration, error, path) {\n    this.eventRegistration = eventRegistration;\n    this.error = error;\n    this.path = path;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.getPath = function () {\n    return this.path;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.getEventType = function () {\n    return 'cancel';\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.getEventRunner = function () {\n    return this.eventRegistration.getEventRunner(this);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.toString = function () {\n    return this.path.toString() + ':cancel';\n  };\n\n  return CancelEvent;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Represents registration for 'value' events.\r\n */\n\n\nvar ValueEventRegistration =\n/** @class */\nfunction () {\n  function ValueEventRegistration(callback_, cancelCallback_, context_) {\n    this.callback_ = callback_;\n    this.cancelCallback_ = cancelCallback_;\n    this.context_ = context_;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.respondsTo = function (eventType) {\n    return eventType === 'value';\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.createEvent = function (change, query) {\n    var index = query.getQueryParams().getIndex();\n    return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, query.getRef(), index));\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.getEventRunner = function (eventData) {\n    var ctx = this.context_;\n\n    if (eventData.getEventType() === 'cancel') {\n      assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\n      var cancelCB_1 = this.cancelCallback_;\n      return function () {\n        // We know that error exists, we checked above that this is a cancel event\n        cancelCB_1.call(ctx, eventData.error);\n      };\n    } else {\n      var cb_1 = this.callback_;\n      return function () {\n        cb_1.call(ctx, eventData.snapshot);\n      };\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\n    if (this.cancelCallback_) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.matches = function (other) {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callback_ || !this.callback_) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return other.callback_ === this.callback_ && other.context_ === this.context_;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.hasAnyCallback = function () {\n    return this.callback_ !== null;\n  };\n\n  return ValueEventRegistration;\n}();\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n */\n\n\nvar ChildEventRegistration =\n/** @class */\nfunction () {\n  function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\n    this.callbacks_ = callbacks_;\n    this.cancelCallback_ = cancelCallback_;\n    this.context_ = context_;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.respondsTo = function (eventType) {\n    var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck = eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return contains(this.callbacks_, eventToCheck);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\n    if (this.cancelCallback_) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.createEvent = function (change, query) {\n    assert(change.childName != null, 'Child events should have a childName.');\n    var ref = query.getRef().child(change.childName);\n    var index = query.getQueryParams().getIndex();\n    return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, ref, index), change.prevName);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.getEventRunner = function (eventData) {\n    var ctx = this.context_;\n\n    if (eventData.getEventType() === 'cancel') {\n      assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\n      var cancelCB_2 = this.cancelCallback_;\n      return function () {\n        // We know that error exists, we checked above that this is a cancel event\n        cancelCB_2.call(ctx, eventData.error);\n      };\n    } else {\n      var cb_2 = this.callbacks_[eventData.eventType];\n      return function () {\n        cb_2.call(ctx, eventData.snapshot, eventData.prevName);\n      };\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.matches = function (other) {\n    var _this = this;\n\n    if (other instanceof ChildEventRegistration) {\n      if (!this.callbacks_ || !other.callbacks_) {\n        return true;\n      } else if (this.context_ === other.context_) {\n        var otherKeys = Object.keys(other.callbacks_);\n        var thisKeys = Object.keys(this.callbacks_);\n        var otherCount = otherKeys.length;\n        var thisCount = thisKeys.length;\n\n        if (otherCount === thisCount) {\n          // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\n          // If event types don't match, not a match\n          // If count is not 1, exact match across all\n          if (otherCount === 1) {\n            var otherKey = otherKeys[0];\n            var thisKey = thisKeys[0];\n            return thisKey === otherKey && (!other.callbacks_[otherKey] || !this.callbacks_[thisKey] || other.callbacks_[otherKey] === this.callbacks_[thisKey]);\n          } else {\n            // Exact match on each key.\n            return thisKeys.every(function (eventType) {\n              return other.callbacks_[eventType] === _this.callbacks_[eventType];\n            });\n          }\n        }\n      }\n    }\n\n    return false;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.hasAnyCallback = function () {\n    return this.callbacks_ !== null;\n  };\n\n  return ChildEventRegistration;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction changeValue(snapshotNode) {\n  return {\n    type: \"value\"\n    /* VALUE */\n    ,\n    snapshotNode: snapshotNode\n  };\n}\n\nfunction changeChildAdded(childName, snapshotNode) {\n  return {\n    type: \"child_added\"\n    /* CHILD_ADDED */\n    ,\n    snapshotNode: snapshotNode,\n    childName: childName\n  };\n}\n\nfunction changeChildRemoved(childName, snapshotNode) {\n  return {\n    type: \"child_removed\"\n    /* CHILD_REMOVED */\n    ,\n    snapshotNode: snapshotNode,\n    childName: childName\n  };\n}\n\nfunction changeChildChanged(childName, snapshotNode, oldSnap) {\n  return {\n    type: \"child_changed\"\n    /* CHILD_CHANGED */\n    ,\n    snapshotNode: snapshotNode,\n    childName: childName,\n    oldSnap: oldSnap\n  };\n}\n\nfunction changeChildMoved(childName, snapshotNode) {\n  return {\n    type: \"child_moved\"\n    /* CHILD_MOVED */\n    ,\n    snapshotNode: snapshotNode,\n    childName: childName\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n */\n\n\nvar IndexedFilter =\n/** @class */\nfunction () {\n  function IndexedFilter(index_) {\n    this.index_ = index_;\n  }\n\n  IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\n    var oldChild = snap.getImmediateChild(key); // Check if anything actually changed.\n\n    if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() === newChild.isEmpty()) {\n        // Nothing changed.\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(changeChildRemoved(key, oldChild));\n        } else {\n          assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\n      } else {\n        optChangeAccumulator.trackChildChange(changeChildChanged(key, newChild, oldChild));\n      }\n    }\n\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(changeChildRemoved(key, childNode));\n          }\n        });\n      }\n\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n          if (oldSnap.hasChild(key)) {\n            var oldChild = oldSnap.getImmediateChild(key);\n\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(changeChildChanged(key, childNode, oldChild));\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(changeChildAdded(key, childNode));\n          }\n        });\n      }\n    }\n\n    return newSnap.withIndex(this.index_);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.filtersNodes = function () {\n    return false;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.getIndexedFilter = function () {\n    return this;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  return IndexedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n */\n\n\nvar RangedFilter =\n/** @class */\nfunction () {\n  function RangedFilter(params) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n  }\n\n  RangedFilter.prototype.getStartPost = function () {\n    return this.startPost_;\n  };\n\n  RangedFilter.prototype.getEndPost = function () {\n    return this.endPost_;\n  };\n\n  RangedFilter.prototype.matches = function (node) {\n    return this.index_.compare(this.getStartPost(), node) <= 0 && this.index_.compare(node, this.getEndPost()) <= 0;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n\n    return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n\n    var filtered = newSnap.withIndex(this.index_); // Don't support priorities on queries\n\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    var self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    // Don't support priorities on queries\n    return oldSnap;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.filtersNodes = function () {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.getIndexedFilter = function () {\n    return this.indexedFilter_;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  RangedFilter.getStartPost_ = function (params) {\n    if (params.hasStart()) {\n      var startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  };\n\n  RangedFilter.getEndPost_ = function (params) {\n    if (params.hasEnd()) {\n      var endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  };\n\n  return RangedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n */\n\n\nvar LimitedFilter =\n/** @class */\nfunction () {\n  function LimitedFilter(params) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_.getIndexedFilter().updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n    } else {\n      return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    var filtered;\n\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (this.limit_ * 2 < newSnap.numChildren() && newSnap.isIndexed(this.index_)) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_); // anchor to the startPost, endPost, or last element as appropriate\n\n        var iterator = void 0;\n\n        if (this.reverse_) {\n          iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\n        } else {\n          iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\n        }\n\n        var count = 0;\n\n        while (iterator.hasNext() && count < this.limit_) {\n          var next = iterator.getNext();\n          var inRange = void 0;\n\n          if (this.reverse_) {\n            inRange = this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\n          } else {\n            inRange = this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\n          }\n\n          if (inRange) {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          } else {\n            // if we have reached the end post, we cannot keep adding elemments\n            break;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_); // Don't support priorities on queries\n\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n        var startPost = void 0;\n        var endPost = void 0;\n        var cmp = void 0;\n        var iterator = void 0;\n\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n          startPost = this.rangedFilter_.getEndPost();\n          endPost = this.rangedFilter_.getStartPost();\n          var indexCompare_1 = this.index_.getCompare();\n\n          cmp = function (a, b) {\n            return indexCompare_1(b, a);\n          };\n        } else {\n          iterator = filtered.getIterator(this.index_);\n          startPost = this.rangedFilter_.getStartPost();\n          endPost = this.rangedFilter_.getEndPost();\n          cmp = this.index_.getCompare();\n        }\n\n        var count = 0;\n        var foundStartPost = false;\n\n        while (iterator.hasNext()) {\n          var next = iterator.getNext();\n\n          if (!foundStartPost && cmp(startPost, next) <= 0) {\n            // start adding\n            foundStartPost = true;\n          }\n\n          var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\n\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\n          }\n        }\n      }\n    }\n\n    return this.rangedFilter_.getIndexedFilter().updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    // Don't support priorities on queries\n    return oldSnap;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.filtersNodes = function () {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.getIndexedFilter = function () {\n    return this.rangedFilter_.getIndexedFilter();\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\n    // TODO: rename all cache stuff etc to general snap terminology\n    var cmp;\n\n    if (this.reverse_) {\n      var indexCmp_1 = this.index_.getCompare();\n\n      cmp = function (a, b) {\n        return indexCmp_1(b, a);\n      };\n    } else {\n      cmp = this.index_.getCompare();\n    }\n\n    var oldEventCache = snap;\n    assert(oldEventCache.numChildren() === this.limit_, '');\n    var newChildNamedNode = new NamedNode(childKey, childSnap);\n    var windowBoundary = this.reverse_ ? oldEventCache.getFirstChild(this.index_) : oldEventCache.getLastChild(this.index_);\n    var inRange = this.rangedFilter_.matches(newChildNamedNode);\n\n    if (oldEventCache.hasChild(childKey)) {\n      var oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\n\n      while (nextChild != null && (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\n      }\n\n      var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\n\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(changeChildChanged(childKey, childSnap, oldChildSnap));\n        }\n\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(changeChildRemoved(childKey, oldChildSnap));\n        }\n\n        var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\n        var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\n\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(changeChildAdded(nextChild.name, nextChild.node));\n          }\n\n          return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(changeChildRemoved(windowBoundary.name, windowBoundary.node));\n          changeAccumulator.trackChildChange(changeChildAdded(childKey, childSnap));\n        }\n\n        return oldEventCache.updateImmediateChild(childKey, childSnap).updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  };\n\n  return LimitedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n */\n\n\nvar QueryParams =\n/** @class */\nfunction () {\n  function QueryParams() {\n    this.limitSet_ = false;\n    this.startSet_ = false;\n    this.startNameSet_ = false;\n    this.startAfterSet_ = false;\n    this.endSet_ = false;\n    this.endNameSet_ = false;\n    this.endBeforeSet_ = false;\n    this.limit_ = 0;\n    this.viewFrom_ = '';\n    this.indexStartValue_ = null;\n    this.indexStartName_ = '';\n    this.indexEndValue_ = null;\n    this.indexEndName_ = '';\n    this.index_ = PRIORITY_INDEX;\n  }\n\n  QueryParams.prototype.hasStart = function () {\n    return this.startSet_;\n  };\n\n  QueryParams.prototype.hasStartAfter = function () {\n    return this.startAfterSet_;\n  };\n\n  QueryParams.prototype.hasEndBefore = function () {\n    return this.endBeforeSet_;\n  };\n  /**\r\n   * @return True if it would return from left.\r\n   */\n\n\n  QueryParams.prototype.isViewFromLeft = function () {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === \"l\"\n      /* VIEW_FROM_LEFT */\n      ;\n    }\n  };\n  /**\r\n   * Only valid to call if hasStart() returns true\r\n   */\n\n\n  QueryParams.prototype.getIndexStartValue = function () {\n    assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  };\n  /**\r\n   * Only valid to call if hasStart() returns true.\r\n   * Returns the starting key name for the range defined by these query parameters\r\n   */\n\n\n  QueryParams.prototype.getIndexStartName = function () {\n    assert(this.startSet_, 'Only valid if start has been set');\n\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  };\n\n  QueryParams.prototype.hasEnd = function () {\n    return this.endSet_;\n  };\n  /**\r\n   * Only valid to call if hasEnd() returns true.\r\n   */\n\n\n  QueryParams.prototype.getIndexEndValue = function () {\n    assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  };\n  /**\r\n   * Only valid to call if hasEnd() returns true.\r\n   * Returns the end key name for the range defined by these query parameters\r\n   */\n\n\n  QueryParams.prototype.getIndexEndName = function () {\n    assert(this.endSet_, 'Only valid if end has been set');\n\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  };\n\n  QueryParams.prototype.hasLimit = function () {\n    return this.limitSet_;\n  };\n  /**\r\n   * @return True if a limit has been set and it has been explicitly anchored\r\n   */\n\n\n  QueryParams.prototype.hasAnchoredLimit = function () {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  };\n  /**\r\n   * Only valid to call if hasLimit() returns true\r\n   */\n\n\n  QueryParams.prototype.getLimit = function () {\n    assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  };\n\n  QueryParams.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  QueryParams.prototype.loadsAllData = function () {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  };\n\n  QueryParams.prototype.isDefault = function () {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  };\n\n  QueryParams.prototype.copy = function () {\n    var copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  };\n\n  return QueryParams;\n}();\n\nfunction queryParamsGetNodeFilter(queryParams) {\n  if (queryParams.loadsAllData()) {\n    return new IndexedFilter(queryParams.getIndex());\n  } else if (queryParams.hasLimit()) {\n    return new LimitedFilter(queryParams);\n  } else {\n    return new RangedFilter(queryParams);\n  }\n}\n\nfunction queryParamsLimitToFirst(queryParams, newLimit) {\n  var newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = \"l\"\n  /* VIEW_FROM_LEFT */\n  ;\n  return newParams;\n}\n\nfunction queryParamsLimitToLast(queryParams, newLimit) {\n  var newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = \"r\"\n  /* VIEW_FROM_RIGHT */\n  ;\n  return newParams;\n}\n\nfunction queryParamsStartAt(queryParams, indexValue, key) {\n  var newParams = queryParams.copy();\n  newParams.startSet_ = true;\n\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n\n  newParams.indexStartValue_ = indexValue;\n\n  if (key != null) {\n    newParams.startNameSet_ = true;\n    newParams.indexStartName_ = key;\n  } else {\n    newParams.startNameSet_ = false;\n    newParams.indexStartName_ = '';\n  }\n\n  return newParams;\n}\n\nfunction queryParamsStartAfter(queryParams, indexValue, key) {\n  var params;\n\n  if (queryParams.index_ === KEY_INDEX) {\n    if (typeof indexValue === 'string') {\n      indexValue = successor(indexValue);\n    }\n\n    params = queryParamsStartAt(queryParams, indexValue, key);\n  } else {\n    var childKey = void 0;\n\n    if (key == null) {\n      childKey = MAX_NAME;\n    } else {\n      childKey = successor(key);\n    }\n\n    params = queryParamsStartAt(queryParams, indexValue, childKey);\n  }\n\n  params.startAfterSet_ = true;\n  return params;\n}\n\nfunction queryParamsEndAt(queryParams, indexValue, key) {\n  var newParams = queryParams.copy();\n  newParams.endSet_ = true;\n\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n\n  newParams.indexEndValue_ = indexValue;\n\n  if (key !== undefined) {\n    newParams.endNameSet_ = true;\n    newParams.indexEndName_ = key;\n  } else {\n    newParams.endNameSet_ = false;\n    newParams.indexEndName_ = '';\n  }\n\n  return newParams;\n}\n\nfunction queryParamsEndBefore(queryParams, indexValue, key) {\n  var childKey;\n  var params;\n\n  if (queryParams.index_ === KEY_INDEX) {\n    if (typeof indexValue === 'string') {\n      indexValue = predecessor(indexValue);\n    }\n\n    params = queryParamsEndAt(queryParams, indexValue, key);\n  } else {\n    if (key == null) {\n      childKey = MIN_NAME;\n    } else {\n      childKey = predecessor(key);\n    }\n\n    params = queryParamsEndAt(queryParams, indexValue, childKey);\n  }\n\n  params.endBeforeSet_ = true;\n  return params;\n}\n\nfunction queryParamsOrderBy(queryParams, index) {\n  var newParams = queryParams.copy();\n  newParams.index_ = index;\n  return newParams;\n}\n/**\r\n * Returns a set of REST query string parameters representing this query.\r\n *\r\n * @return query string parameters\r\n */\n\n\nfunction queryParamsToRestQueryStringParameters(queryParams) {\n  var qs = {};\n\n  if (queryParams.isDefault()) {\n    return qs;\n  }\n\n  var orderBy;\n\n  if (queryParams.index_ === PRIORITY_INDEX) {\n    orderBy = \"$priority\"\n    /* PRIORITY_INDEX */\n    ;\n  } else if (queryParams.index_ === VALUE_INDEX) {\n    orderBy = \"$value\"\n    /* VALUE_INDEX */\n    ;\n  } else if (queryParams.index_ === KEY_INDEX) {\n    orderBy = \"$key\"\n    /* KEY_INDEX */\n    ;\n  } else {\n    assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\n    orderBy = queryParams.index_.toString();\n  }\n\n  qs[\"orderBy\"\n  /* ORDER_BY */\n  ] = stringify(orderBy);\n\n  if (queryParams.startSet_) {\n    qs[\"startAt\"\n    /* START_AT */\n    ] = stringify(queryParams.indexStartValue_);\n\n    if (queryParams.startNameSet_) {\n      qs[\"startAt\"\n      /* START_AT */\n      ] += ',' + stringify(queryParams.indexStartName_);\n    }\n  }\n\n  if (queryParams.endSet_) {\n    qs[\"endAt\"\n    /* END_AT */\n    ] = stringify(queryParams.indexEndValue_);\n\n    if (queryParams.endNameSet_) {\n      qs[\"endAt\"\n      /* END_AT */\n      ] += ',' + stringify(queryParams.indexEndName_);\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    if (queryParams.isViewFromLeft()) {\n      qs[\"limitToFirst\"\n      /* LIMIT_TO_FIRST */\n      ] = queryParams.limit_;\n    } else {\n      qs[\"limitToLast\"\n      /* LIMIT_TO_LAST */\n      ] = queryParams.limit_;\n    }\n  }\n\n  return qs;\n}\n\nfunction queryParamsGetQueryObject(queryParams) {\n  var obj = {};\n\n  if (queryParams.startSet_) {\n    obj[\"sp\"\n    /* INDEX_START_VALUE */\n    ] = queryParams.indexStartValue_;\n\n    if (queryParams.startNameSet_) {\n      obj[\"sn\"\n      /* INDEX_START_NAME */\n      ] = queryParams.indexStartName_;\n    }\n  }\n\n  if (queryParams.endSet_) {\n    obj[\"ep\"\n    /* INDEX_END_VALUE */\n    ] = queryParams.indexEndValue_;\n\n    if (queryParams.endNameSet_) {\n      obj[\"en\"\n      /* INDEX_END_NAME */\n      ] = queryParams.indexEndName_;\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    obj[\"l\"\n    /* LIMIT */\n    ] = queryParams.limit_;\n    var viewFrom = queryParams.viewFrom_;\n\n    if (viewFrom === '') {\n      if (queryParams.isViewFromLeft()) {\n        viewFrom = \"l\"\n        /* VIEW_FROM_LEFT */\n        ;\n      } else {\n        viewFrom = \"r\"\n        /* VIEW_FROM_RIGHT */\n        ;\n      }\n    }\n\n    obj[\"vf\"\n    /* VIEW_FROM */\n    ] = viewFrom;\n  } // For now, priority index is the default, so we only specify if it's some other index\n\n\n  if (queryParams.index_ !== PRIORITY_INDEX) {\n    obj[\"i\"\n    /* INDEX */\n    ] = queryParams.index_.toString();\n  }\n\n  return obj;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __referenceConstructor;\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\n\n\nvar Query =\n/** @class */\nfunction () {\n  function Query(repo, path, queryParams_, orderByCalled_) {\n    this.repo = repo;\n    this.path = path;\n    this.queryParams_ = queryParams_;\n    this.orderByCalled_ = orderByCalled_;\n  }\n\n  Object.defineProperty(Query, \"__referenceConstructor\", {\n    get: function () {\n      assert(__referenceConstructor, 'Reference.ts has not been loaded');\n      return __referenceConstructor;\n    },\n    set: function (val) {\n      __referenceConstructor = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Validates start/end values for queries.\r\n   */\n\n  Query.validateQueryEndpoints_ = function (params) {\n    var startNode = null;\n    var endNode = null;\n\n    if (params.hasStart()) {\n      startNode = params.getIndexStartValue();\n    }\n\n    if (params.hasEnd()) {\n      endNode = params.getIndexEndValue();\n    }\n\n    if (params.getIndex() === KEY_INDEX) {\n      var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' + 'startAt(), endAt(), or equalTo().';\n      var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' + 'endAt(), endBefore(), or equalTo() must be a string.';\n\n      if (params.hasStart()) {\n        var startName = params.getIndexStartName();\n\n        if (startName !== MIN_NAME) {\n          throw new Error(tooManyArgsError);\n        } else if (typeof startNode !== 'string') {\n          throw new Error(wrongArgTypeError);\n        }\n      }\n\n      if (params.hasEnd()) {\n        var endName = params.getIndexEndName();\n\n        if (endName !== MAX_NAME) {\n          throw new Error(tooManyArgsError);\n        } else if (typeof endNode !== 'string') {\n          throw new Error(wrongArgTypeError);\n        }\n      }\n    } else if (params.getIndex() === PRIORITY_INDEX) {\n      if (startNode != null && !isValidPriority(startNode) || endNode != null && !isValidPriority(endNode)) {\n        throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' + 'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' + '(null, a number, or a string).');\n      }\n    } else {\n      assert(params.getIndex() instanceof PathIndex || params.getIndex() === VALUE_INDEX, 'unknown index type.');\n\n      if (startNode != null && typeof startNode === 'object' || endNode != null && typeof endNode === 'object') {\n        throw new Error('Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' + 'equalTo() cannot be an object.');\n      }\n    }\n  };\n  /**\r\n   * Validates that limit* has been called with the correct combination of parameters\r\n   */\n\n\n  Query.validateLimit_ = function (params) {\n    if (params.hasStart() && params.hasEnd() && params.hasLimit() && !params.hasAnchoredLimit()) {\n      throw new Error(\"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" + 'limitToFirst() or limitToLast() instead.');\n    }\n  };\n  /**\r\n   * Validates that no other order by call has been made\r\n   */\n\n\n  Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\n    if (this.orderByCalled_ === true) {\n      throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n    }\n  };\n\n  Query.prototype.getQueryParams = function () {\n    return this.queryParams_;\n  };\n\n  Query.prototype.getRef = function () {\n    validateArgCount('Query.ref', 0, 0, arguments.length); // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\n    // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\n    // method gets called.\n\n    return new Query.__referenceConstructor(this.repo, this.path);\n  };\n\n  Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\n    validateArgCount('Query.on', 2, 4, arguments.length);\n    validateEventType('Query.on', 1, eventType, false);\n    validateCallback('Query.on', 2, callback, false);\n    var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\n\n    if (eventType === 'value') {\n      this.onValueEvent(callback, ret.cancel, ret.context);\n    } else {\n      var callbacks = {};\n      callbacks[eventType] = callback;\n      this.onChildEvent(callbacks, ret.cancel, ret.context);\n    }\n\n    return callback;\n  };\n\n  Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\n    var container = new ValueEventRegistration(callback, cancelCallback || null, context || null);\n    this.repo.addEventCallbackForQuery(this, container);\n  };\n\n  Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\n    var container = new ChildEventRegistration(callbacks, cancelCallback, context);\n    this.repo.addEventCallbackForQuery(this, container);\n  };\n\n  Query.prototype.off = function (eventType, callback, context) {\n    validateArgCount('Query.off', 0, 3, arguments.length);\n    validateEventType('Query.off', 1, eventType, true);\n    validateCallback('Query.off', 2, callback, true);\n    validateContextObject('Query.off', 3, context, true);\n    var container = null;\n    var callbacks = null;\n\n    if (eventType === 'value') {\n      var valueCallback = callback || null;\n      container = new ValueEventRegistration(valueCallback, null, context || null);\n    } else if (eventType) {\n      if (callback) {\n        callbacks = {};\n        callbacks[eventType] = callback;\n      }\n\n      container = new ChildEventRegistration(callbacks, null, context || null);\n    }\n\n    this.repo.removeEventCallbackForQuery(this, container);\n  };\n  /**\r\n   * Get the server-value for this query, or return a cached value if not connected.\r\n   */\n\n\n  Query.prototype.get = function () {\n    return this.repo.getValue(this);\n  };\n  /**\r\n   * Attaches a listener, waits for the first event, and then removes the listener\r\n   */\n\n\n  Query.prototype.once = function (eventType, userCallback, failureCallbackOrContext, context) {\n    var _this = this;\n\n    validateArgCount('Query.once', 1, 4, arguments.length);\n    validateEventType('Query.once', 1, eventType, false);\n    validateCallback('Query.once', 2, userCallback, true);\n    var ret = Query.getCancelAndContextArgs_('Query.once', failureCallbackOrContext, context); // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\n    // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\n    // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\n    // against the Promise specification.\n\n    var firstCall = true;\n    var deferred = new Deferred(); // A dummy error handler in case a user wasn't expecting promises\n\n    deferred.promise.catch(function () {});\n\n    var onceCallback = function (snapshot) {\n      // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\n      // triggers multiple events (e.g. child_added or child_changed).\n      if (firstCall) {\n        firstCall = false;\n\n        _this.off(eventType, onceCallback);\n\n        if (userCallback) {\n          userCallback.bind(ret.context)(snapshot);\n        }\n\n        deferred.resolve(snapshot);\n      }\n    };\n\n    this.on(eventType, onceCallback,\n    /*cancel=*/\n    function (err) {\n      _this.off(eventType, onceCallback);\n\n      if (ret.cancel) {\n        ret.cancel.bind(ret.context)(err);\n      }\n\n      deferred.reject(err);\n    });\n    return deferred.promise;\n  };\n  /**\r\n   * Set a limit and anchor it to the start of the window.\r\n   */\n\n\n  Query.prototype.limitToFirst = function (limit) {\n    validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\n\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n      throw new Error('Query.limitToFirst: First argument must be a positive integer.');\n    }\n\n    if (this.queryParams_.hasLimit()) {\n      throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' + 'limitToFirst, or limitToLast).');\n    }\n\n    return new Query(this.repo, this.path, queryParamsLimitToFirst(this.queryParams_, limit), this.orderByCalled_);\n  };\n  /**\r\n   * Set a limit and anchor it to the end of the window.\r\n   */\n\n\n  Query.prototype.limitToLast = function (limit) {\n    validateArgCount('Query.limitToLast', 1, 1, arguments.length);\n\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n      throw new Error('Query.limitToLast: First argument must be a positive integer.');\n    }\n\n    if (this.queryParams_.hasLimit()) {\n      throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' + 'limitToFirst, or limitToLast).');\n    }\n\n    return new Query(this.repo, this.path, queryParamsLimitToLast(this.queryParams_, limit), this.orderByCalled_);\n  };\n  /**\r\n   * Given a child path, return a new query ordered by the specified grandchild path.\r\n   */\n\n\n  Query.prototype.orderByChild = function (path) {\n    validateArgCount('Query.orderByChild', 1, 1, arguments.length);\n\n    if (path === '$key') {\n      throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\n    } else if (path === '$priority') {\n      throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\n    } else if (path === '$value') {\n      throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\n    }\n\n    validatePathString('Query.orderByChild', 1, path, false);\n    this.validateNoPreviousOrderByCall_('Query.orderByChild');\n    var parsedPath = new Path(path);\n\n    if (pathIsEmpty(parsedPath)) {\n      throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\n    }\n\n    var index = new PathIndex(parsedPath);\n    var newParams = queryParamsOrderBy(this.queryParams_, index);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n  /**\r\n   * Return a new query ordered by the KeyIndex\r\n   */\n\n\n  Query.prototype.orderByKey = function () {\n    validateArgCount('Query.orderByKey', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByKey');\n    var newParams = queryParamsOrderBy(this.queryParams_, KEY_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n  /**\r\n   * Return a new query ordered by the PriorityIndex\r\n   */\n\n\n  Query.prototype.orderByPriority = function () {\n    validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByPriority');\n    var newParams = queryParamsOrderBy(this.queryParams_, PRIORITY_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n  /**\r\n   * Return a new query ordered by the ValueIndex\r\n   */\n\n\n  Query.prototype.orderByValue = function () {\n    validateArgCount('Query.orderByValue', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByValue');\n    var newParams = queryParamsOrderBy(this.queryParams_, VALUE_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n\n  Query.prototype.startAt = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    validateArgCount('Query.startAt', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\n    validateKey('Query.startAt', 2, name, true);\n    var newParams = queryParamsStartAt(this.queryParams_, value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n\n    if (this.queryParams_.hasStart()) {\n      throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' + 'or equalTo).');\n    } // Calling with no params tells us to start at the beginning.\n\n\n    if (value === undefined) {\n      value = null;\n      name = null;\n    }\n\n    return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n  };\n\n  Query.prototype.startAfter = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    validateArgCount('Query.startAfter', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.startAfter', 1, value, this.path, false);\n    validateKey('Query.startAfter', 2, name, true);\n    var newParams = queryParamsStartAfter(this.queryParams_, value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n\n    if (this.queryParams_.hasStart()) {\n      throw new Error('Query.startAfter: Starting point was already set (by another call to startAt, startAfter ' + 'or equalTo).');\n    }\n\n    return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n  };\n\n  Query.prototype.endAt = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    validateArgCount('Query.endAt', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\n    validateKey('Query.endAt', 2, name, true);\n    var newParams = queryParamsEndAt(this.queryParams_, value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n\n    if (this.queryParams_.hasEnd()) {\n      throw new Error('Query.endAt: Ending point was already set (by another call to endAt, endBefore, or ' + 'equalTo).');\n    }\n\n    return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n  };\n\n  Query.prototype.endBefore = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    validateArgCount('Query.endBefore', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.endBefore', 1, value, this.path, false);\n    validateKey('Query.endBefore', 2, name, true);\n    var newParams = queryParamsEndBefore(this.queryParams_, value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n\n    if (this.queryParams_.hasEnd()) {\n      throw new Error('Query.endBefore: Ending point was already set (by another call to endAt, endBefore, or ' + 'equalTo).');\n    }\n\n    return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n  };\n  /**\r\n   * Load the selection of children with exactly the specified value, and, optionally,\r\n   * the specified name.\r\n   */\n\n\n  Query.prototype.equalTo = function (value, name) {\n    validateArgCount('Query.equalTo', 1, 2, arguments.length);\n    validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\n    validateKey('Query.equalTo', 2, name, true);\n\n    if (this.queryParams_.hasStart()) {\n      throw new Error('Query.equalTo: Starting point was already set (by another call to startAt/startAfter or ' + 'equalTo).');\n    }\n\n    if (this.queryParams_.hasEnd()) {\n      throw new Error('Query.equalTo: Ending point was already set (by another call to endAt/endBefore or ' + 'equalTo).');\n    }\n\n    return this.startAt(value, name).endAt(value, name);\n  };\n  /**\r\n   * @return URL for this location.\r\n   */\n\n\n  Query.prototype.toString = function () {\n    validateArgCount('Query.toString', 0, 0, arguments.length);\n    return this.repo.toString() + pathToUrlEncodedString(this.path);\n  }; // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users.\n\n\n  Query.prototype.toJSON = function () {\n    // An optional spacer argument is unnecessary for a string.\n    validateArgCount('Query.toJSON', 0, 1, arguments.length);\n    return this.toString();\n  };\n  /**\r\n   * An object representation of the query parameters used by this Query.\r\n   */\n\n\n  Query.prototype.queryObject = function () {\n    return queryParamsGetQueryObject(this.queryParams_);\n  };\n\n  Query.prototype.queryIdentifier = function () {\n    var obj = this.queryObject();\n    var id = ObjectToUniqueKey(obj);\n    return id === '{}' ? 'default' : id;\n  };\n  /**\r\n   * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n   */\n\n\n  Query.prototype.isEqual = function (other) {\n    validateArgCount('Query.isEqual', 1, 1, arguments.length);\n\n    if (!(other instanceof Query)) {\n      var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\n      throw new Error(error);\n    }\n\n    var sameRepo = this.repo === other.repo;\n    var samePath = pathEquals(this.path, other.path);\n    var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\n    return sameRepo && samePath && sameQueryIdentifier;\n  };\n  /**\r\n   * Helper used by .on and .once to extract the context and or cancel arguments.\r\n   * @param fnName The function name (on or once)\r\n   *\r\n   */\n\n\n  Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\n    var ret = {\n      cancel: null,\n      context: null\n    };\n\n    if (cancelOrContext && context) {\n      ret.cancel = cancelOrContext;\n      validateCallback(fnName, 3, ret.cancel, true);\n      ret.context = context;\n      validateContextObject(fnName, 4, ret.context, true);\n    } else if (cancelOrContext) {\n      // we have either a cancel callback or a context.\n      if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\n        // it's a context!\n        ret.context = cancelOrContext;\n      } else if (typeof cancelOrContext === 'function') {\n        ret.cancel = cancelOrContext;\n      } else {\n        throw new Error(errorPrefix(fnName, 3, true) + ' must either be a cancel callback or a context object.');\n      }\n    }\n\n    return ret;\n  };\n\n  Object.defineProperty(Query.prototype, \"ref\", {\n    get: function () {\n      return this.getRef();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Query;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ExistingValueProvider =\n/** @class */\nfunction () {\n  function ExistingValueProvider(node_) {\n    this.node_ = node_;\n  }\n\n  ExistingValueProvider.prototype.getImmediateChild = function (childName) {\n    var child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  };\n\n  ExistingValueProvider.prototype.node = function () {\n    return this.node_;\n  };\n\n  return ExistingValueProvider;\n}();\n\nvar DeferredValueProvider =\n/** @class */\nfunction () {\n  function DeferredValueProvider(syncTree, path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n\n  DeferredValueProvider.prototype.getImmediateChild = function (childName) {\n    var childPath = pathChild(this.path_, childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  };\n\n  DeferredValueProvider.prototype.node = function () {\n    return this.syncTree_.calcCompleteEventCache(this.path_);\n  };\n\n  return DeferredValueProvider;\n}();\n/**\r\n * Generate placeholders for deferred values.\r\n */\n\n\nvar generateWithValues = function (values) {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n */\n\n\nvar resolveDeferredLeafValue = function (value, existingVal, serverValues) {\n  if (!value || typeof value !== 'object') {\n    return value;\n  }\n\n  assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal);\n  } else {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nvar resolveScalarDeferredValue = function (op, existing, serverValues) {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'];\n\n    default:\n      assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nvar resolveComplexDeferredValue = function (op, existing, unused) {\n  if (!op.hasOwnProperty('increment')) {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n\n  var delta = op['increment'];\n\n  if (typeof delta !== 'number') {\n    assert(false, 'Unexpected increment value: ' + delta);\n  }\n\n  var existingNode = existing.node();\n  assert(existingNode !== null && typeof existingNode !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls'); // Incrementing a non-number sets the value to the incremented amount\n\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n\n  var leaf = existingNode;\n  var existingVal = leaf.getValue();\n\n  if (typeof existingVal !== 'number') {\n    return delta;\n  } // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n\n\n  return existingVal + delta;\n};\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param path path to which write is relative\r\n * @param node new data written at path\r\n * @param syncTree current data\r\n */\n\n\nvar resolveDeferredValueTree = function (path, node, syncTree, serverValues) {\n  return resolveDeferredValue(node, new DeferredValueProvider(syncTree, path), serverValues);\n};\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n */\n\n\nvar resolveDeferredValueSnapshot = function (node, existing, serverValues) {\n  return resolveDeferredValue(node, new ExistingValueProvider(existing), serverValues);\n};\n\nfunction resolveDeferredValue(node, existingVal, serverValues) {\n  var rawPri = node.getPriority().val();\n  var priority = resolveDeferredLeafValue(rawPri, existingVal.getImmediateChild('.priority'), serverValues);\n  var newNode;\n\n  if (node.isLeafNode()) {\n    var leafNode = node;\n    var value = resolveDeferredLeafValue(leafNode.getValue(), existingVal, serverValues);\n\n    if (value !== leafNode.getValue() || priority !== leafNode.getPriority().val()) {\n      return new LeafNode(value, nodeFromJSON$1(priority));\n    } else {\n      return node;\n    }\n  } else {\n    var childrenNode = node;\n    newNode = childrenNode;\n\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n\n    childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n      var newChildNode = resolveDeferredValue(childNode, existingVal.getImmediateChild(childName), serverValues);\n\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Helper class to store a sparse set of snapshots.\r\n */\n\n\nvar SparseSnapshotTree =\n/** @class */\nfunction () {\n  function SparseSnapshotTree() {\n    this.value = null;\n    this.children = new Map();\n  }\n  /**\r\n   * Gets the node stored at the given path if one exists.\r\n   *\r\n   * @param path Path to look up snapshot for.\r\n   * @return The retrieved node, or null.\r\n   */\n\n\n  SparseSnapshotTree.prototype.find = function (path) {\n    if (this.value != null) {\n      return this.value.getChild(path);\n    } else if (!pathIsEmpty(path) && this.children.size > 0) {\n      var childKey = pathGetFront(path);\n      path = pathPopFront(path);\n\n      if (this.children.has(childKey)) {\n        var childTree = this.children.get(childKey);\n        return childTree.find(path);\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * Stores the given node at the specified path. If there is already a node\r\n   * at a shallower path, it merges the new data into that snapshot node.\r\n   *\r\n   * @param path Path to look up snapshot for.\r\n   * @param data The new data, or null.\r\n   */\n\n\n  SparseSnapshotTree.prototype.remember = function (path, data) {\n    if (pathIsEmpty(path)) {\n      this.value = data;\n      this.children.clear();\n    } else if (this.value !== null) {\n      this.value = this.value.updateChild(path, data);\n    } else {\n      var childKey = pathGetFront(path);\n\n      if (!this.children.has(childKey)) {\n        this.children.set(childKey, new SparseSnapshotTree());\n      }\n\n      var child = this.children.get(childKey);\n      path = pathPopFront(path);\n      child.remember(path, data);\n    }\n  };\n  /**\r\n   * Purge the data at path from the cache.\r\n   *\r\n   * @param path Path to look up snapshot for.\r\n   * @return True if this node should now be removed.\r\n   */\n\n\n  SparseSnapshotTree.prototype.forget = function (path) {\n    if (pathIsEmpty(path)) {\n      this.value = null;\n      this.children.clear();\n      return true;\n    } else {\n      if (this.value !== null) {\n        if (this.value.isLeafNode()) {\n          // We're trying to forget a node that doesn't exist\n          return false;\n        } else {\n          var value = this.value;\n          this.value = null;\n          var self_1 = this;\n          value.forEachChild(PRIORITY_INDEX, function (key, tree) {\n            self_1.remember(new Path(key), tree);\n          });\n          return this.forget(path);\n        }\n      } else if (this.children.size > 0) {\n        var childKey = pathGetFront(path);\n        path = pathPopFront(path);\n\n        if (this.children.has(childKey)) {\n          var safeToRemove = this.children.get(childKey).forget(path);\n\n          if (safeToRemove) {\n            this.children.delete(childKey);\n          }\n        }\n\n        return this.children.size === 0;\n      } else {\n        return true;\n      }\n    }\n  };\n  /**\r\n   * Recursively iterates through all of the stored tree and calls the\r\n   * callback on each one.\r\n   *\r\n   * @param prefixPath Path to look up node for.\r\n   * @param func The function to invoke for each tree.\r\n   */\n\n\n  SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\n    if (this.value !== null) {\n      func(prefixPath, this.value);\n    } else {\n      this.forEachChild(function (key, tree) {\n        var path = new Path(prefixPath.toString() + '/' + key);\n        tree.forEachTree(path, func);\n      });\n    }\n  };\n  /**\r\n   * Iterates through each immediate child and triggers the callback.\r\n   *\r\n   * @param func The function to invoke for each child.\r\n   */\n\n\n  SparseSnapshotTree.prototype.forEachChild = function (func) {\n    this.children.forEach(function (tree, key) {\n      func(key, tree);\n    });\n  };\n\n  return SparseSnapshotTree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n *\r\n * @enum\r\n */\n\n\nvar OperationType;\n\n(function (OperationType) {\n  OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\n  OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\n  OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\n  OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\n})(OperationType || (OperationType = {}));\n\nfunction newOperationSourceUser() {\n  return {\n    fromUser: true,\n    fromServer: false,\n    queryId: null,\n    tagged: false\n  };\n}\n\nfunction newOperationSourceServer() {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: null,\n    tagged: false\n  };\n}\n\nfunction newOperationSourceServerTaggedQuery(queryId) {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: queryId,\n    tagged: true\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar AckUserWrite =\n/** @class */\nfunction () {\n  /**\r\n   * @param affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n   */\n  function AckUserWrite(\n  /** @inheritDoc */\n  path,\n  /** @inheritDoc */\n  affectedTree,\n  /** @inheritDoc */\n  revert) {\n    this.path = path;\n    this.affectedTree = affectedTree;\n    this.revert = revert;\n    /** @inheritDoc */\n\n    this.type = OperationType.ACK_USER_WRITE;\n    /** @inheritDoc */\n\n    this.source = newOperationSourceUser();\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  AckUserWrite.prototype.operationForChild = function (childName) {\n    if (!pathIsEmpty(this.path)) {\n      assert(pathGetFront(this.path) === childName, 'operationForChild called for unrelated child.');\n      return new AckUserWrite(pathPopFront(this.path), this.affectedTree, this.revert);\n    } else if (this.affectedTree.value != null) {\n      assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.'); // All child locations are affected as well; just return same operation.\n\n      return this;\n    } else {\n      var childTree = this.affectedTree.subtree(new Path(childName));\n      return new AckUserWrite(newEmptyPath(), childTree, this.revert);\n    }\n  };\n\n  return AckUserWrite;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar emptyChildrenSingleton;\n/**\r\n * Singleton empty children collection.\r\n *\r\n */\n\nvar EmptyChildren = function () {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap(stringCompare);\n  }\n\n  return emptyChildrenSingleton;\n};\n/**\r\n * A tree with immutable elements.\r\n */\n\n\nvar ImmutableTree =\n/** @class */\nfunction () {\n  function ImmutableTree(value, children) {\n    if (children === void 0) {\n      children = EmptyChildren();\n    }\n\n    this.value = value;\n    this.children = children;\n  }\n\n  ImmutableTree.fromObject = function (obj) {\n    var tree = new ImmutableTree(null);\n    each(obj, function (childPath, childSnap) {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  };\n  /**\r\n   * True if the value is empty and there are no children\r\n   */\n\n\n  ImmutableTree.prototype.isEmpty = function () {\n    return this.value === null && this.children.isEmpty();\n  };\n  /**\r\n   * Given a path and predicate, return the first node and the path to that node\r\n   * where the predicate returns true.\r\n   *\r\n   * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n   * on the way back out, it may be better to pass down a pathSoFar obj.\r\n   *\r\n   * @param relativePath The remainder of the path\r\n   * @param predicate The predicate to satisfy to return a node\r\n   */\n\n\n  ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\n    if (this.value != null && predicate(this.value)) {\n      return {\n        path: newEmptyPath(),\n        value: this.value\n      };\n    } else {\n      if (pathIsEmpty(relativePath)) {\n        return null;\n      } else {\n        var front = pathGetFront(relativePath);\n        var child = this.children.get(front);\n\n        if (child !== null) {\n          var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(pathPopFront(relativePath), predicate);\n\n          if (childExistingPathAndValue != null) {\n            var fullPath = pathChild(new Path(front), childExistingPathAndValue.path);\n            return {\n              path: fullPath,\n              value: childExistingPathAndValue.value\n            };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  };\n  /**\r\n   * Find, if it exists, the shortest subpath of the given path that points a defined\r\n   * value in the tree\r\n   */\n\n\n  ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\n    return this.findRootMostMatchingPathAndValue(relativePath, function () {\n      return true;\n    });\n  };\n  /**\r\n   * @return The subtree at the given path\r\n   */\n\n\n  ImmutableTree.prototype.subtree = function (relativePath) {\n    if (pathIsEmpty(relativePath)) {\n      return this;\n    } else {\n      var front = pathGetFront(relativePath);\n      var childTree = this.children.get(front);\n\n      if (childTree !== null) {\n        return childTree.subtree(pathPopFront(relativePath));\n      } else {\n        return new ImmutableTree(null);\n      }\n    }\n  };\n  /**\r\n   * Sets a value at the specified path.\r\n   *\r\n   * @param relativePath Path to set value at.\r\n   * @param toSet Value to set.\r\n   * @return Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.set = function (relativePath, toSet) {\n    if (pathIsEmpty(relativePath)) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      var front = pathGetFront(relativePath);\n      var child = this.children.get(front) || new ImmutableTree(null);\n      var newChild = child.set(pathPopFront(relativePath), toSet);\n      var newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  };\n  /**\r\n   * Removes the value at the specified path.\r\n   *\r\n   * @param relativePath Path to value to remove.\r\n   * @return Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.remove = function (relativePath) {\n    if (pathIsEmpty(relativePath)) {\n      if (this.children.isEmpty()) {\n        return new ImmutableTree(null);\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      var front = pathGetFront(relativePath);\n      var child = this.children.get(front);\n\n      if (child) {\n        var newChild = child.remove(pathPopFront(relativePath));\n        var newChildren = void 0;\n\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n\n        if (this.value === null && newChildren.isEmpty()) {\n          return new ImmutableTree(null);\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  };\n  /**\r\n   * Gets a value from the tree.\r\n   *\r\n   * @param relativePath Path to get value for.\r\n   * @return Value at path, or null.\r\n   */\n\n\n  ImmutableTree.prototype.get = function (relativePath) {\n    if (pathIsEmpty(relativePath)) {\n      return this.value;\n    } else {\n      var front = pathGetFront(relativePath);\n      var child = this.children.get(front);\n\n      if (child) {\n        return child.get(pathPopFront(relativePath));\n      } else {\n        return null;\n      }\n    }\n  };\n  /**\r\n   * Replace the subtree at the specified path with the given new tree.\r\n   *\r\n   * @param relativePath Path to replace subtree for.\r\n   * @param newTree New tree.\r\n   * @return Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.setTree = function (relativePath, newTree) {\n    if (pathIsEmpty(relativePath)) {\n      return newTree;\n    } else {\n      var front = pathGetFront(relativePath);\n      var child = this.children.get(front) || new ImmutableTree(null);\n      var newChild = child.setTree(pathPopFront(relativePath), newTree);\n      var newChildren = void 0;\n\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n\n      return new ImmutableTree(this.value, newChildren);\n    }\n  };\n  /**\r\n   * Performs a depth first fold on this tree. Transforms a tree into a single\r\n   * value, given a function that operates on the path to a node, an optional\r\n   * current value, and a map of child names to folded subtrees\r\n   */\n\n\n  ImmutableTree.prototype.fold = function (fn) {\n    return this.fold_(newEmptyPath(), fn);\n  };\n  /**\r\n   * Recursive helper for public-facing fold() method\r\n   */\n\n\n  ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\n    var accum = {};\n    this.children.inorderTraversal(function (childKey, childTree) {\n      accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\n    });\n    return fn(pathSoFar, this.value, accum);\n  };\n  /**\r\n   * Find the first matching value on the given path. Return the result of applying f to it.\r\n   */\n\n\n  ImmutableTree.prototype.findOnPath = function (path, f) {\n    return this.findOnPath_(path, newEmptyPath(), f);\n  };\n\n  ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\n    var result = this.value ? f(pathSoFar, this.value) : false;\n\n    if (result) {\n      return result;\n    } else {\n      if (pathIsEmpty(pathToFollow)) {\n        return null;\n      } else {\n        var front = pathGetFront(pathToFollow);\n        var nextChild = this.children.get(front);\n\n        if (nextChild) {\n          return nextChild.findOnPath_(pathPopFront(pathToFollow), pathChild(pathSoFar, front), f);\n        } else {\n          return null;\n        }\n      }\n    }\n  };\n\n  ImmutableTree.prototype.foreachOnPath = function (path, f) {\n    return this.foreachOnPath_(path, newEmptyPath(), f);\n  };\n\n  ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\n    if (pathIsEmpty(pathToFollow)) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n\n      var front = pathGetFront(pathToFollow);\n      var nextChild = this.children.get(front);\n\n      if (nextChild) {\n        return nextChild.foreachOnPath_(pathPopFront(pathToFollow), pathChild(currentRelativePath, front), f);\n      } else {\n        return new ImmutableTree(null);\n      }\n    }\n  };\n  /**\r\n   * Calls the given function for each node in the tree that has a value.\r\n   *\r\n   * @param f A function to be called with the path from the root of the tree to\r\n   * a node, and the value at that node. Called in depth-first order.\r\n   */\n\n\n  ImmutableTree.prototype.foreach = function (f) {\n    this.foreach_(newEmptyPath(), f);\n  };\n\n  ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\n    this.children.inorderTraversal(function (childName, childTree) {\n      childTree.foreach_(pathChild(currentRelativePath, childName), f);\n    });\n\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  };\n\n  ImmutableTree.prototype.foreachChild = function (f) {\n    this.children.inorderTraversal(function (childName, childTree) {\n      if (childTree.value) {\n        f(childName, childTree.value);\n      }\n    });\n  };\n\n  return ImmutableTree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ListenComplete =\n/** @class */\nfunction () {\n  function ListenComplete(source, path) {\n    this.source = source;\n    this.path = path;\n    /** @inheritDoc */\n\n    this.type = OperationType.LISTEN_COMPLETE;\n  }\n\n  ListenComplete.prototype.operationForChild = function (childName) {\n    if (pathIsEmpty(this.path)) {\n      return new ListenComplete(this.source, newEmptyPath());\n    } else {\n      return new ListenComplete(this.source, pathPopFront(this.path));\n    }\n  };\n\n  return ListenComplete;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Overwrite =\n/** @class */\nfunction () {\n  function Overwrite(source, path, snap) {\n    this.source = source;\n    this.path = path;\n    this.snap = snap;\n    /** @inheritDoc */\n\n    this.type = OperationType.OVERWRITE;\n  }\n\n  Overwrite.prototype.operationForChild = function (childName) {\n    if (pathIsEmpty(this.path)) {\n      return new Overwrite(this.source, newEmptyPath(), this.snap.getImmediateChild(childName));\n    } else {\n      return new Overwrite(this.source, pathPopFront(this.path), this.snap);\n    }\n  };\n\n  return Overwrite;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Merge =\n/** @class */\nfunction () {\n  function Merge(\n  /** @inheritDoc */\n  source,\n  /** @inheritDoc */\n  path,\n  /** @inheritDoc */\n  children) {\n    this.source = source;\n    this.path = path;\n    this.children = children;\n    /** @inheritDoc */\n\n    this.type = OperationType.MERGE;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  Merge.prototype.operationForChild = function (childName) {\n    if (pathIsEmpty(this.path)) {\n      var childTree = this.children.subtree(new Path(childName));\n\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, newEmptyPath(), childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, newEmptyPath(), childTree);\n      }\n    } else {\n      assert(pathGetFront(this.path) === childName, \"Can't get a merge for a child not on the path of the operation\");\n      return new Merge(this.source, pathPopFront(this.path), this.children);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  Merge.prototype.toString = function () {\n    return 'Operation(' + this.path + ': ' + this.source.toString() + ' merge: ' + this.children.toString() + ')';\n  };\n\n  return Merge;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\n\n\nvar CacheNode =\n/** @class */\nfunction () {\n  function CacheNode(node_, fullyInitialized_, filtered_) {\n    this.node_ = node_;\n    this.fullyInitialized_ = fullyInitialized_;\n    this.filtered_ = filtered_;\n  }\n  /**\r\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n   */\n\n\n  CacheNode.prototype.isFullyInitialized = function () {\n    return this.fullyInitialized_;\n  };\n  /**\r\n   * Returns whether this node is potentially missing children due to a filter applied to the node\r\n   */\n\n\n  CacheNode.prototype.isFiltered = function () {\n    return this.filtered_;\n  };\n\n  CacheNode.prototype.isCompleteForPath = function (path) {\n    if (pathIsEmpty(path)) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    var childKey = pathGetFront(path);\n    return this.isCompleteForChild(childKey);\n  };\n\n  CacheNode.prototype.isCompleteForChild = function (key) {\n    return this.isFullyInitialized() && !this.filtered_ || this.node_.hasChild(key);\n  };\n\n  CacheNode.prototype.getNode = function () {\n    return this.node_;\n  };\n\n  return CacheNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n */\n\n\nvar ViewCache =\n/** @class */\nfunction () {\n  function ViewCache(eventCache_, serverCache_) {\n    this.eventCache_ = eventCache_;\n    this.serverCache_ = serverCache_;\n  }\n\n  ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\n    return new ViewCache(new CacheNode(eventSnap, complete, filtered), this.serverCache_);\n  };\n\n  ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\n    return new ViewCache(this.eventCache_, new CacheNode(serverSnap, complete, filtered));\n  };\n\n  ViewCache.prototype.getEventCache = function () {\n    return this.eventCache_;\n  };\n\n  ViewCache.prototype.getCompleteEventSnap = function () {\n    return this.eventCache_.isFullyInitialized() ? this.eventCache_.getNode() : null;\n  };\n\n  ViewCache.prototype.getServerCache = function () {\n    return this.serverCache_;\n  };\n\n  ViewCache.prototype.getCompleteServerSnap = function () {\n    return this.serverCache_.isFullyInitialized() ? this.serverCache_.getNode() : null;\n  };\n\n  return ViewCache;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ChildChangeAccumulator =\n/** @class */\nfunction () {\n  function ChildChangeAccumulator() {\n    this.changeMap = new Map();\n  }\n\n  ChildChangeAccumulator.prototype.trackChildChange = function (change) {\n    var type = change.type;\n    var childKey = change.childName;\n    assert(type === \"child_added\"\n    /* CHILD_ADDED */\n    || type === \"child_changed\"\n    /* CHILD_CHANGED */\n    || type === \"child_removed\"\n    /* CHILD_REMOVED */\n    , 'Only child changes supported for tracking');\n    assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\n    var oldChange = this.changeMap.get(childKey);\n\n    if (oldChange) {\n      var oldType = oldChange.type;\n\n      if (type === \"child_added\"\n      /* CHILD_ADDED */\n      && oldType === \"child_removed\"\n      /* CHILD_REMOVED */\n      ) {\n          this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.snapshotNode));\n        } else if (type === \"child_removed\"\n      /* CHILD_REMOVED */\n      && oldType === \"child_added\"\n      /* CHILD_ADDED */\n      ) {\n          this.changeMap.delete(childKey);\n        } else if (type === \"child_removed\"\n      /* CHILD_REMOVED */\n      && oldType === \"child_changed\"\n      /* CHILD_CHANGED */\n      ) {\n          this.changeMap.set(childKey, changeChildRemoved(childKey, oldChange.oldSnap));\n        } else if (type === \"child_changed\"\n      /* CHILD_CHANGED */\n      && oldType === \"child_added\"\n      /* CHILD_ADDED */\n      ) {\n          this.changeMap.set(childKey, changeChildAdded(childKey, change.snapshotNode));\n        } else if (type === \"child_changed\"\n      /* CHILD_CHANGED */\n      && oldType === \"child_changed\"\n      /* CHILD_CHANGED */\n      ) {\n          this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap));\n        } else {\n        throw assertionError('Illegal combination of changes: ' + change + ' occurred after ' + oldChange);\n      }\n    } else {\n      this.changeMap.set(childKey, change);\n    }\n  };\n\n  ChildChangeAccumulator.prototype.getChanges = function () {\n    return Array.from(this.changeMap.values());\n  };\n\n  return ChildChangeAccumulator;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\n\n\nvar NoCompleteChildSource_ =\n/** @class */\nfunction () {\n  function NoCompleteChildSource_() {}\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\n    return null;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\n    return null;\n  };\n\n  return NoCompleteChildSource_;\n}();\n/**\r\n * Singleton instance.\r\n */\n\n\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n */\n\nvar WriteTreeCompleteChildSource =\n/** @class */\nfunction () {\n  function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\n    if (optCompleteServerCache_ === void 0) {\n      optCompleteServerCache_ = null;\n    }\n\n    this.writes_ = writes_;\n    this.viewCache_ = viewCache_;\n    this.optCompleteServerCache_ = optCompleteServerCache_;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\n    var node = this.viewCache_.getEventCache();\n\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      var serverNode = this.optCompleteServerCache_ != null ? new CacheNode(this.optCompleteServerCache_, true, false) : this.viewCache_.getServerCache();\n      return this.writes_.calcCompleteChild(childKey, serverNode);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\n    var completeServerData = this.optCompleteServerCache_ != null ? this.optCompleteServerCache_ : this.viewCache_.getCompleteServerSnap();\n    var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\n\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  };\n\n  return WriteTreeCompleteChildSource;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ProcessorResult =\n/** @class */\nfunction () {\n  function ProcessorResult(viewCache, changes) {\n    this.viewCache = viewCache;\n    this.changes = changes;\n  }\n\n  return ProcessorResult;\n}();\n/**\r\n */\n\n\nvar ViewProcessor =\n/** @class */\nfunction () {\n  function ViewProcessor(filter_) {\n    this.filter_ = filter_;\n  }\n\n  ViewProcessor.prototype.assertIndexed = function (viewCache) {\n    assert(viewCache.getEventCache().getNode().isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\n    assert(viewCache.getServerCache().getNode().isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\n  };\n\n  ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\n    var accumulator = new ChildChangeAccumulator();\n    var newViewCache, filterServerNode;\n\n    if (operation.type === OperationType.OVERWRITE) {\n      var overwrite = operation;\n\n      if (overwrite.source.fromUser) {\n        newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\n      } else {\n        assert(overwrite.source.fromServer, 'Unknown source.'); // We filter the node if it's a tagged update or the node has been previously filtered  and the\n        // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n        // again\n\n        filterServerNode = overwrite.source.tagged || oldViewCache.getServerCache().isFiltered() && !pathIsEmpty(overwrite.path);\n        newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\n      }\n    } else if (operation.type === OperationType.MERGE) {\n      var merge = operation;\n\n      if (merge.source.fromUser) {\n        newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\n      } else {\n        assert(merge.source.fromServer, 'Unknown source.'); // We filter the node if it's a tagged update or the node has been previously filtered\n\n        filterServerNode = merge.source.tagged || oldViewCache.getServerCache().isFiltered();\n        newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\n      }\n    } else if (operation.type === OperationType.ACK_USER_WRITE) {\n      var ackUserWrite = operation;\n\n      if (!ackUserWrite.revert) {\n        newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\n      } else {\n        newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\n      }\n    } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n      newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\n    } else {\n      throw assertionError('Unknown operation type: ' + operation.type);\n    }\n\n    var changes = accumulator.getChanges();\n    ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\n    return new ProcessorResult(newViewCache, changes);\n  };\n\n  ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\n    var eventSnap = newViewCache.getEventCache();\n\n    if (eventSnap.isFullyInitialized()) {\n      var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n      var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\n\n      if (accumulator.length > 0 || !oldViewCache.getEventCache().isFullyInitialized() || isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap) || !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\n        accumulator.push(changeValue(newViewCache.getCompleteEventSnap()));\n      }\n    }\n  };\n\n  ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\n    var oldEventSnap = viewCache.getEventCache();\n\n    if (writesCache.shadowingWrite(changePath) != null) {\n      // we have a shadowing write, ignore changes\n      return viewCache;\n    } else {\n      var newEventCache = void 0,\n          serverNode = void 0;\n\n      if (pathIsEmpty(changePath)) {\n        // TODO: figure out how this plays with \"sliding ack windows\"\n        assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\n\n        if (viewCache.getServerCache().isFiltered()) {\n          // We need to special case this, because we need to only apply writes to complete children, or\n          // we might end up raising events for incomplete children. If the server data is filtered deep\n          // writes cannot be guaranteed to be complete\n          var serverCache = viewCache.getCompleteServerSnap();\n          var completeChildren = serverCache instanceof ChildrenNode ? serverCache : ChildrenNode.EMPTY_NODE;\n          var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\n          newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\n        } else {\n          var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n          newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\n        }\n      } else {\n        var childKey = pathGetFront(changePath);\n\n        if (childKey === '.priority') {\n          assert(pathGetLength(changePath) === 1, \"Can't have a priority with additional path components\");\n          var oldEventNode = oldEventSnap.getNode();\n          serverNode = viewCache.getServerCache().getNode(); // we might have overwrites for this priority\n\n          var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\n\n          if (updatedPriority != null) {\n            newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\n          } else {\n            // priority didn't change, keep old node\n            newEventCache = oldEventSnap.getNode();\n          }\n        } else {\n          var childChangePath = pathPopFront(changePath); // update child\n\n          var newEventChild = void 0;\n\n          if (oldEventSnap.isCompleteForChild(childKey)) {\n            serverNode = viewCache.getServerCache().getNode();\n            var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\n\n            if (eventChildUpdate != null) {\n              newEventChild = oldEventSnap.getNode().getImmediateChild(childKey).updateChild(childChangePath, eventChildUpdate);\n            } else {\n              // Nothing changed, just keep the old child\n              newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n            }\n          } else {\n            newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\n          }\n\n          if (newEventChild != null) {\n            newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\n          } else {\n            // no complete child available or no change\n            newEventCache = oldEventSnap.getNode();\n          }\n        }\n      }\n\n      return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath), this.filter_.filtersNodes());\n    }\n  };\n\n  ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\n    var oldServerSnap = oldViewCache.getServerCache();\n    var newServerCache;\n    var serverFilter = filterServerNode ? this.filter_ : this.filter_.getIndexedFilter();\n\n    if (pathIsEmpty(changePath)) {\n      newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\n    } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n      // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n      var newServerNode = oldServerSnap.getNode().updateChild(changePath, changedSnap);\n      newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\n    } else {\n      var childKey = pathGetFront(changePath);\n\n      if (!oldServerSnap.isCompleteForPath(changePath) && pathGetLength(changePath) > 1) {\n        // We don't update incomplete nodes with updates intended for other listeners\n        return oldViewCache;\n      }\n\n      var childChangePath = pathPopFront(changePath);\n      var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n      var newChildNode = childNode.updateChild(childChangePath, changedSnap);\n\n      if (childKey === '.priority') {\n        newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\n      } else {\n        newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\n      }\n    }\n\n    var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath), serverFilter.filtersNodes());\n    var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\n    return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\n  };\n\n  ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\n    var oldEventSnap = oldViewCache.getEventCache();\n    var newViewCache, newEventCache;\n    var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\n\n    if (pathIsEmpty(changePath)) {\n      newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\n      newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\n    } else {\n      var childKey = pathGetFront(changePath);\n\n      if (childKey === '.priority') {\n        newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\n        newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\n      } else {\n        var childChangePath = pathPopFront(changePath);\n        var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n        var newChild = void 0;\n\n        if (pathIsEmpty(childChangePath)) {\n          // Child overwrite, we can replace the child\n          newChild = changedSnap;\n        } else {\n          var childNode = source.getCompleteChild(childKey);\n\n          if (childNode != null) {\n            if (pathGetBack(childChangePath) === '.priority' && childNode.getChild(pathParent(childChangePath)).isEmpty()) {\n              // This is a priority update on an empty node. If this node exists on the server, the\n              // server will send down the priority in the update, so ignore for now\n              newChild = childNode;\n            } else {\n              newChild = childNode.updateChild(childChangePath, changedSnap);\n            }\n          } else {\n            // There is no complete child node available\n            newChild = ChildrenNode.EMPTY_NODE;\n          }\n        }\n\n        if (!oldChild.equals(newChild)) {\n          var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\n          newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\n        } else {\n          newViewCache = oldViewCache;\n        }\n      }\n    }\n\n    return newViewCache;\n  };\n\n  ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\n    return viewCache.getEventCache().isCompleteForChild(childKey);\n  };\n\n  ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\n    var _this = this; // HACK: In the case of a limit query, there may be some changes that bump things out of the\n    // window leaving room for new items.  It's important we process these changes first, so we\n    // iterate the changes twice, first processing any that affect items currently in view.\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n    // not the other.\n\n\n    var curViewCache = viewCache;\n    changedChildren.foreach(function (relativePath, childNode) {\n      var writePath = pathChild(path, relativePath);\n\n      if (ViewProcessor.cacheHasChild_(viewCache, pathGetFront(writePath))) {\n        curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n      }\n    });\n    changedChildren.foreach(function (relativePath, childNode) {\n      var writePath = pathChild(path, relativePath);\n\n      if (!ViewProcessor.cacheHasChild_(viewCache, pathGetFront(writePath))) {\n        curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n      }\n    });\n    return curViewCache;\n  };\n\n  ViewProcessor.prototype.applyMerge_ = function (node, merge) {\n    merge.foreach(function (relativePath, childNode) {\n      node = node.updateChild(relativePath, childNode);\n    });\n    return node;\n  };\n\n  ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\n    var _this = this; // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n    // wait for the complete data update coming soon.\n\n\n    if (viewCache.getServerCache().getNode().isEmpty() && !viewCache.getServerCache().isFullyInitialized()) {\n      return viewCache;\n    } // HACK: In the case of a limit query, there may be some changes that bump things out of the\n    // window leaving room for new items.  It's important we process these changes first, so we\n    // iterate the changes twice, first processing any that affect items currently in view.\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n    // not the other.\n\n\n    var curViewCache = viewCache;\n    var viewMergeTree;\n\n    if (pathIsEmpty(path)) {\n      viewMergeTree = changedChildren;\n    } else {\n      viewMergeTree = new ImmutableTree(null).setTree(path, changedChildren);\n    }\n\n    var serverNode = viewCache.getServerCache().getNode();\n    viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\n      if (serverNode.hasChild(childKey)) {\n        var serverChild = viewCache.getServerCache().getNode().getImmediateChild(childKey);\n\n        var newChild = _this.applyMerge_(serverChild, childTree);\n\n        curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n      }\n    });\n    viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\n      var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) && childMergeTree.value == null;\n\n      if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n        var serverChild = viewCache.getServerCache().getNode().getImmediateChild(childKey);\n\n        var newChild = _this.applyMerge_(serverChild, childMergeTree);\n\n        curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n      }\n    });\n    return curViewCache;\n  };\n\n  ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\n    if (writesCache.shadowingWrite(ackPath) != null) {\n      return viewCache;\n    } // Only filter server node if it is currently filtered\n\n\n    var filterServerNode = viewCache.getServerCache().isFiltered(); // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n    // now that it won't be shadowed.\n\n    var serverCache = viewCache.getServerCache();\n\n    if (affectedTree.value != null) {\n      // This is an overwrite.\n      if (pathIsEmpty(ackPath) && serverCache.isFullyInitialized() || serverCache.isCompleteForPath(ackPath)) {\n        return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\n      } else if (pathIsEmpty(ackPath)) {\n        // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n        // should just re-apply whatever we have in our cache as a merge.\n        var changedChildren_1 = new ImmutableTree(null);\n        serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\n          changedChildren_1 = changedChildren_1.set(new Path(name), node);\n        });\n        return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\n      } else {\n        return viewCache;\n      }\n    } else {\n      // This is a merge.\n      var changedChildren_2 = new ImmutableTree(null);\n      affectedTree.foreach(function (mergePath, value) {\n        var serverCachePath = pathChild(ackPath, mergePath);\n\n        if (serverCache.isCompleteForPath(serverCachePath)) {\n          changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\n        }\n      });\n      return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\n    }\n  };\n\n  ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\n    var oldServerNode = viewCache.getServerCache();\n    var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || pathIsEmpty(path), oldServerNode.isFiltered());\n    return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\n  };\n\n  ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\n    var complete;\n\n    if (writesCache.shadowingWrite(path) != null) {\n      return viewCache;\n    } else {\n      var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\n      var oldEventCache = viewCache.getEventCache().getNode();\n      var newEventCache = void 0;\n\n      if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\n        var newNode = void 0;\n\n        if (viewCache.getServerCache().isFullyInitialized()) {\n          newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n        } else {\n          var serverChildren = viewCache.getServerCache().getNode();\n          assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\n          newNode = writesCache.calcCompleteEventChildren(serverChildren);\n        }\n\n        newNode = newNode;\n        newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\n      } else {\n        var childKey = pathGetFront(path);\n        var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\n\n        if (newChild == null && viewCache.getServerCache().isCompleteForChild(childKey)) {\n          newChild = oldEventCache.getImmediateChild(childKey);\n        }\n\n        if (newChild != null) {\n          newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, pathPopFront(path), source, accumulator);\n        } else if (viewCache.getEventCache().getNode().hasChild(childKey)) {\n          // No complete child available, delete the existing one, if any\n          newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, pathPopFront(path), source, accumulator);\n        } else {\n          newEventCache = oldEventCache;\n        }\n\n        if (newEventCache.isEmpty() && viewCache.getServerCache().isFullyInitialized()) {\n          // We might have reverted all child writes. Maybe the old event was a leaf node\n          complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n\n          if (complete.isLeafNode()) {\n            newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\n          }\n        }\n      }\n\n      complete = viewCache.getServerCache().isFullyInitialized() || writesCache.shadowingWrite(newEmptyPath()) != null;\n      return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\n    }\n  };\n\n  return ViewProcessor;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n */\n\n\nvar EventGenerator =\n/** @class */\nfunction () {\n  function EventGenerator(query_) {\n    this.query_ = query_;\n    this.index_ = this.query_.getQueryParams().getIndex();\n  }\n\n  return EventGenerator;\n}();\n/**\r\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n *\r\n * Notes:\r\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n *    our index.\r\n *  - prevName will be calculated based on the index ordering.\r\n */\n\n\nfunction eventGeneratorGenerateEventsForChanges(eventGenerator, changes, eventCache, eventRegistrations) {\n  var events = [];\n  var moves = [];\n  changes.forEach(function (change) {\n    if (change.type === \"child_changed\"\n    /* CHILD_CHANGED */\n    && eventGenerator.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\n      moves.push(changeChildMoved(change.childName, change.snapshotNode));\n    }\n  });\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_removed\"\n  /* CHILD_REMOVED */\n  , changes, eventRegistrations, eventCache);\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_added\"\n  /* CHILD_ADDED */\n  , changes, eventRegistrations, eventCache);\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_moved\"\n  /* CHILD_MOVED */\n  , moves, eventRegistrations, eventCache);\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_changed\"\n  /* CHILD_CHANGED */\n  , changes, eventRegistrations, eventCache);\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"value\"\n  /* VALUE */\n  , changes, eventRegistrations, eventCache);\n  return events;\n}\n/**\r\n * Given changes of a single change type, generate the corresponding events.\r\n */\n\n\nfunction eventGeneratorGenerateEventsForType(eventGenerator, events, eventType, changes, registrations, eventCache) {\n  var filteredChanges = changes.filter(function (change) {\n    return change.type === eventType;\n  });\n  filteredChanges.sort(function (a, b) {\n    return eventGeneratorCompareChanges(eventGenerator, a, b);\n  });\n  filteredChanges.forEach(function (change) {\n    var materializedChange = eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache);\n    registrations.forEach(function (registration) {\n      if (registration.respondsTo(change.type)) {\n        events.push(registration.createEvent(materializedChange, eventGenerator.query_));\n      }\n    });\n  });\n}\n\nfunction eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache) {\n  if (change.type === 'value' || change.type === 'child_removed') {\n    return change;\n  } else {\n    change.prevName = eventCache.getPredecessorChildName(change.childName, change.snapshotNode, eventGenerator.index_);\n    return change;\n  }\n}\n\nfunction eventGeneratorCompareChanges(eventGenerator, a, b) {\n  if (a.childName == null || b.childName == null) {\n    throw assertionError('Should only compare child_ events.');\n  }\n\n  var aWrapped = new NamedNode(a.childName, a.snapshotNode);\n  var bWrapped = new NamedNode(b.childName, b.snapshotNode);\n  return eventGenerator.index_.compare(aWrapped, bWrapped);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n */\n\n\nvar View =\n/** @class */\nfunction () {\n  function View(query_, initialViewCache) {\n    this.query_ = query_;\n    this.eventRegistrations_ = [];\n    var params = this.query_.getQueryParams();\n    var indexFilter = new IndexedFilter(params.getIndex());\n    var filter = queryParamsGetNodeFilter(params);\n    this.processor_ = new ViewProcessor(filter);\n    var initialServerCache = initialViewCache.getServerCache();\n    var initialEventCache = initialViewCache.getEventCache(); // Don't filter server node with other filter than index, wait for tagged listen\n\n    var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\n    var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\n    var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\n    var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\n    this.viewCache_ = new ViewCache(newEventCache, newServerCache);\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n\n  View.prototype.getQuery = function () {\n    return this.query_;\n  };\n\n  View.prototype.getServerCache = function () {\n    return this.viewCache_.getServerCache().getNode();\n  };\n\n  View.prototype.getCompleteNode = function () {\n    return this.viewCache_.getCompleteEventSnap();\n  };\n\n  View.prototype.getCompleteServerCache = function (path) {\n    var cache = this.viewCache_.getCompleteServerSnap();\n\n    if (cache) {\n      // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n      // we need to see if it contains the child we're interested in.\n      if (this.query_.getQueryParams().loadsAllData() || !pathIsEmpty(path) && !cache.getImmediateChild(pathGetFront(path)).isEmpty()) {\n        return cache.getChild(path);\n      }\n    }\n\n    return null;\n  };\n\n  View.prototype.isEmpty = function () {\n    return this.eventRegistrations_.length === 0;\n  };\n\n  View.prototype.addEventRegistration = function (eventRegistration) {\n    this.eventRegistrations_.push(eventRegistration);\n  };\n  /**\r\n   * @param eventRegistration If null, remove all callbacks.\r\n   * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n   * @return Cancel events, if cancelError was provided.\r\n   */\n\n\n  View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\n    var cancelEvents = [];\n\n    if (cancelError) {\n      assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\n      var path_1 = this.query_.path;\n      this.eventRegistrations_.forEach(function (registration) {\n        var maybeEvent = registration.createCancelEvent(cancelError, path_1);\n\n        if (maybeEvent) {\n          cancelEvents.push(maybeEvent);\n        }\n      });\n    }\n\n    if (eventRegistration) {\n      var remaining = [];\n\n      for (var i = 0; i < this.eventRegistrations_.length; ++i) {\n        var existing = this.eventRegistrations_[i];\n\n        if (!existing.matches(eventRegistration)) {\n          remaining.push(existing);\n        } else if (eventRegistration.hasAnyCallback()) {\n          // We're removing just this one\n          remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\n          break;\n        }\n      }\n\n      this.eventRegistrations_ = remaining;\n    } else {\n      this.eventRegistrations_ = [];\n    }\n\n    return cancelEvents;\n  };\n  /**\r\n   * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n   */\n\n\n  View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\n    if (operation.type === OperationType.MERGE && operation.source.queryId !== null) {\n      assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\n      assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\n    }\n\n    var oldViewCache = this.viewCache_;\n    var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\n    this.processor_.assertIndexed(result.viewCache);\n    assert(result.viewCache.getServerCache().isFullyInitialized() || !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\n    this.viewCache_ = result.viewCache;\n    return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\n  };\n\n  View.prototype.getInitialEvents = function (registration) {\n    var eventSnap = this.viewCache_.getEventCache();\n    var initialChanges = [];\n\n    if (!eventSnap.getNode().isLeafNode()) {\n      var eventNode = eventSnap.getNode();\n      eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n        initialChanges.push(changeChildAdded(key, childNode));\n      });\n    }\n\n    if (eventSnap.isFullyInitialized()) {\n      initialChanges.push(changeValue(eventSnap.getNode()));\n    }\n\n    return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\n  };\n\n  View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\n    var registrations = eventRegistration ? [eventRegistration] : this.eventRegistrations_;\n    return eventGeneratorGenerateEventsForChanges(this.eventGenerator_, changes, eventCache, registrations);\n  };\n\n  return View;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __referenceConstructor$1;\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\n\n\nvar SyncPoint =\n/** @class */\nfunction () {\n  function SyncPoint() {\n    /**\r\n     * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n     * queryId and the value is the View for that query.\r\n     *\r\n     * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n     */\n    this.views = new Map();\n  }\n\n  Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\n    get: function () {\n      assert(__referenceConstructor$1, 'Reference.ts has not been loaded');\n      return __referenceConstructor$1;\n    },\n    set: function (val) {\n      assert(!__referenceConstructor$1, '__referenceConstructor has already been defined');\n      __referenceConstructor$1 = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  SyncPoint.prototype.isEmpty = function () {\n    return this.views.size === 0;\n  };\n\n  SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\n    var e_1, _a;\n\n    var queryId = operation.source.queryId;\n\n    if (queryId !== null) {\n      var view = this.views.get(queryId);\n      assert(view != null, 'SyncTree gave us an op for an invalid query.');\n      return view.applyOperation(operation, writesCache, optCompleteServerCache);\n    } else {\n      var events = [];\n\n      try {\n        for (var _b = __values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var view = _c.value;\n          events = events.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      return events;\n    }\n  };\n  /**\r\n   * Get a view for the specified query.\r\n   *\r\n   * @param query The query to return a view for\r\n   * @param writesCache\r\n   * @param serverCache\r\n   * @param serverCacheComplete\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncPoint.prototype.getView = function (query, writesCache, serverCache, serverCacheComplete) {\n    var queryId = query.queryIdentifier();\n    var view = this.views.get(queryId);\n\n    if (!view) {\n      // TODO: make writesCache take flag for complete server node\n      var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\n      var eventCacheComplete = false;\n\n      if (eventCache) {\n        eventCacheComplete = true;\n      } else if (serverCache instanceof ChildrenNode) {\n        eventCache = writesCache.calcCompleteEventChildren(serverCache);\n        eventCacheComplete = false;\n      } else {\n        eventCache = ChildrenNode.EMPTY_NODE;\n        eventCacheComplete = false;\n      }\n\n      var viewCache = new ViewCache(new CacheNode(eventCache, eventCacheComplete, false), new CacheNode(serverCache, serverCacheComplete, false));\n      return new View(query, viewCache);\n    }\n\n    return view;\n  };\n  /**\r\n   * Add an event callback for the specified query.\r\n   *\r\n   * @param query\r\n   * @param eventRegistration\r\n   * @param writesCache\r\n   * @param serverCache Complete server cache, if we have it.\r\n   * @param serverCacheComplete\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\n    var view = this.getView(query, writesCache, serverCache, serverCacheComplete);\n\n    if (!this.views.has(query.queryIdentifier())) {\n      this.views.set(query.queryIdentifier(), view);\n    } // This is guaranteed to exist now, we just created anything that was missing\n\n\n    view.addEventRegistration(eventRegistration);\n    return view.getInitialEvents(eventRegistration);\n  };\n  /**\r\n   * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n   *\r\n   * If query is the default query, we'll check all views for the specified eventRegistration.\r\n   * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n   *\r\n   * @param eventRegistration If null, remove all callbacks.\r\n   * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n   * @return removed queries and any cancel events\r\n   */\n\n\n  SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\n    var e_2, _a;\n\n    var queryId = query.queryIdentifier();\n    var removed = [];\n    var cancelEvents = [];\n    var hadCompleteView = this.hasCompleteView();\n\n    if (queryId === 'default') {\n      try {\n        // When you do ref.off(...), we search all views for the registration to remove.\n        for (var _b = __values(this.views.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var _d = __read(_c.value, 2),\n              viewQueryId = _d[0],\n              view = _d[1];\n\n          cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\n\n          if (view.isEmpty()) {\n            this.views.delete(viewQueryId); // We'll deal with complete views later.\n\n            if (!view.getQuery().getQueryParams().loadsAllData()) {\n              removed.push(view.getQuery());\n            }\n          }\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    } else {\n      // remove the callback from the specific view.\n      var view = this.views.get(queryId);\n\n      if (view) {\n        cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\n\n        if (view.isEmpty()) {\n          this.views.delete(queryId); // We'll deal with complete views later.\n\n          if (!view.getQuery().getQueryParams().loadsAllData()) {\n            removed.push(view.getQuery());\n          }\n        }\n      }\n    }\n\n    if (hadCompleteView && !this.hasCompleteView()) {\n      // We removed our last complete view.\n      removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\n    }\n\n    return {\n      removed: removed,\n      events: cancelEvents\n    };\n  };\n\n  SyncPoint.prototype.getQueryViews = function () {\n    var e_3, _a;\n\n    var result = [];\n\n    try {\n      for (var _b = __values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var view = _c.value;\n\n        if (!view.getQuery().getQueryParams().loadsAllData()) {\n          result.push(view);\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    return result;\n  };\n  /**\r\n   * @param path The path to the desired complete snapshot\r\n   * @return A complete cache, if it exists\r\n   */\n\n\n  SyncPoint.prototype.getCompleteServerCache = function (path) {\n    var e_4, _a;\n\n    var serverCache = null;\n\n    try {\n      for (var _b = __values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var view = _c.value;\n        serverCache = serverCache || view.getCompleteServerCache(path);\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    return serverCache;\n  };\n\n  SyncPoint.prototype.viewForQuery = function (query) {\n    var params = query.getQueryParams();\n\n    if (params.loadsAllData()) {\n      return this.getCompleteView();\n    } else {\n      var queryId = query.queryIdentifier();\n      return this.views.get(queryId);\n    }\n  };\n\n  SyncPoint.prototype.viewExistsForQuery = function (query) {\n    return this.viewForQuery(query) != null;\n  };\n\n  SyncPoint.prototype.hasCompleteView = function () {\n    return this.getCompleteView() != null;\n  };\n\n  SyncPoint.prototype.getCompleteView = function () {\n    var e_5, _a;\n\n    try {\n      for (var _b = __values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var view = _c.value;\n\n        if (view.getQuery().getQueryParams().loadsAllData()) {\n          return view;\n        }\n      }\n    } catch (e_5_1) {\n      e_5 = {\n        error: e_5_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_5) throw e_5.error;\n      }\n    }\n\n    return null;\n  };\n\n  return SyncPoint;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\n\n\nvar CompoundWrite =\n/** @class */\nfunction () {\n  function CompoundWrite(writeTree_) {\n    this.writeTree_ = writeTree_;\n  }\n\n  CompoundWrite.empty = function () {\n    return new CompoundWrite(new ImmutableTree(null));\n  };\n\n  return CompoundWrite;\n}();\n\nfunction compoundWriteAddWrite(compoundWrite, path, node) {\n  if (pathIsEmpty(path)) {\n    return new CompoundWrite(new ImmutableTree(node));\n  } else {\n    var rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n\n    if (rootmost != null) {\n      var rootMostPath = rootmost.path;\n      var value = rootmost.value;\n      var relativePath = newRelativePath(rootMostPath, path);\n      value = value.updateChild(relativePath, node);\n      return new CompoundWrite(compoundWrite.writeTree_.set(rootMostPath, value));\n    } else {\n      var subtree = new ImmutableTree(node);\n      var newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\n      return new CompoundWrite(newWriteTree);\n    }\n  }\n}\n\nfunction compoundWriteAddWrites(compoundWrite, path, updates) {\n  var newWrite = compoundWrite;\n  each(updates, function (childKey, node) {\n    newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\n  });\n  return newWrite;\n}\n/**\r\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n * location, which must be removed by calling this method with that path.\r\n *\r\n * @param compoundWrite The CompoundWrite to remove.\r\n * @param path The path at which a write and all deeper writes should be removed\r\n * @return The new CompoundWrite with the removed path\r\n */\n\n\nfunction compoundWriteRemoveWrite(compoundWrite, path) {\n  if (pathIsEmpty(path)) {\n    return CompoundWrite.empty();\n  } else {\n    var newWriteTree = compoundWrite.writeTree_.setTree(path, new ImmutableTree(null));\n    return new CompoundWrite(newWriteTree);\n  }\n}\n/**\r\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n * considered \"complete\".\r\n *\r\n * @param compoundWrite The CompoundWrite to check.\r\n * @param path The path to check for\r\n * @return Whether there is a complete write at that path\r\n */\n\n\nfunction compoundWriteHasCompleteWrite(compoundWrite, path) {\n  return compoundWriteGetCompleteNode(compoundWrite, path) != null;\n}\n/**\r\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n * writes from deeper paths, but will return child nodes from a more shallow path.\r\n *\r\n * @param compoundWrite The CompoundWrite to get the node from.\r\n * @param path The path to get a complete write\r\n * @return The node if complete at that path, or null otherwise.\r\n */\n\n\nfunction compoundWriteGetCompleteNode(compoundWrite, path) {\n  var rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n\n  if (rootmost != null) {\n    return compoundWrite.writeTree_.get(rootmost.path).getChild(newRelativePath(rootmost.path, path));\n  } else {\n    return null;\n  }\n}\n/**\r\n * Returns all children that are guaranteed to be a complete overwrite.\r\n *\r\n * @param compoundWrite The CompoundWrite to get children from.\r\n * @return A list of all complete children.\r\n */\n\n\nfunction compoundWriteGetCompleteChildren(compoundWrite) {\n  var children = [];\n  var node = compoundWrite.writeTree_.value;\n\n  if (node != null) {\n    // If it's a leaf node, it has no children; so nothing to do.\n    if (!node.isLeafNode()) {\n      node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n        children.push(new NamedNode(childName, childNode));\n      });\n    }\n  } else {\n    compoundWrite.writeTree_.children.inorderTraversal(function (childName, childTree) {\n      if (childTree.value != null) {\n        children.push(new NamedNode(childName, childTree.value));\n      }\n    });\n  }\n\n  return children;\n}\n\nfunction compoundWriteChildCompoundWrite(compoundWrite, path) {\n  if (pathIsEmpty(path)) {\n    return compoundWrite;\n  } else {\n    var shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\n\n    if (shadowingNode != null) {\n      return new CompoundWrite(new ImmutableTree(shadowingNode));\n    } else {\n      return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\n    }\n  }\n}\n/**\r\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n * @return Whether this CompoundWrite is empty\r\n */\n\n\nfunction compoundWriteIsEmpty(compoundWrite) {\n  return compoundWrite.writeTree_.isEmpty();\n}\n/**\r\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n * node\r\n * @param node The node to apply this CompoundWrite to\r\n * @return The node with all writes applied\r\n */\n\n\nfunction compoundWriteApply(compoundWrite, node) {\n  return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\n}\n\nfunction applySubtreeWrite(relativePath, writeTree, node) {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    var priorityWrite_1 = null;\n    writeTree.children.inorderTraversal(function (childKey, childTree) {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\n        priorityWrite_1 = childTree.value;\n      } else {\n        node = applySubtreeWrite(pathChild(relativePath, childKey), childTree, node);\n      }\n    }); // If there was a priority write, we only apply it if the node is not empty\n\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\n      node = node.updateChild(pathChild(relativePath, '.priority'), priorityWrite_1);\n    }\n\n    return node;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n */\n\n\nvar WriteTree =\n/** @class */\nfunction () {\n  function WriteTree() {\n    /**\r\n     * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n     * applyLocally=false or writes that are completely shadowed by other writes.\r\n     */\n    this.visibleWrites_ = CompoundWrite.empty();\n    /**\r\n     * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n     * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n     * used by transactions).\r\n     */\n\n    this.allWrites_ = [];\n    this.lastWriteId_ = -1;\n  }\n  /**\r\n   * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n   *\r\n   */\n\n\n  WriteTree.prototype.childWrites = function (path) {\n    return new WriteTreeRef(path, this);\n  };\n  /**\r\n   * Record a new overwrite from user code.\r\n   *\r\n   * @param visible This is set to false by some transactions. It should be excluded from event caches\r\n   */\n\n\n  WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\n    assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\n\n    if (visible === undefined) {\n      visible = true;\n    }\n\n    this.allWrites_.push({\n      path: path,\n      snap: snap,\n      writeId: writeId,\n      visible: visible\n    });\n\n    if (visible) {\n      this.visibleWrites_ = compoundWriteAddWrite(this.visibleWrites_, path, snap);\n    }\n\n    this.lastWriteId_ = writeId;\n  };\n  /**\r\n   * Record a new merge from user code.\r\n   */\n\n\n  WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\n    assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\n    this.allWrites_.push({\n      path: path,\n      children: changedChildren,\n      writeId: writeId,\n      visible: true\n    });\n    this.visibleWrites_ = compoundWriteAddWrites(this.visibleWrites_, path, changedChildren);\n    this.lastWriteId_ = writeId;\n  };\n\n  WriteTree.prototype.getWrite = function (writeId) {\n    for (var i = 0; i < this.allWrites_.length; i++) {\n      var record = this.allWrites_[i];\n\n      if (record.writeId === writeId) {\n        return record;\n      }\n    }\n\n    return null;\n  };\n  /**\r\n   * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n   * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n   *\r\n   * @return true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n   * events as a result).\r\n   */\n\n\n  WriteTree.prototype.removeWrite = function (writeId) {\n    // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n    // out of order.\n    //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n    //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n    var _this = this;\n\n    var idx = this.allWrites_.findIndex(function (s) {\n      return s.writeId === writeId;\n    });\n    assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n    var writeToRemove = this.allWrites_[idx];\n    this.allWrites_.splice(idx, 1);\n    var removedWriteWasVisible = writeToRemove.visible;\n    var removedWriteOverlapsWithOtherWrites = false;\n    var i = this.allWrites_.length - 1;\n\n    while (removedWriteWasVisible && i >= 0) {\n      var currentWrite = this.allWrites_[i];\n\n      if (currentWrite.visible) {\n        if (i >= idx && this.recordContainsPath_(currentWrite, writeToRemove.path)) {\n          // The removed write was completely shadowed by a subsequent write.\n          removedWriteWasVisible = false;\n        } else if (pathContains(writeToRemove.path, currentWrite.path)) {\n          // Either we're covering some writes or they're covering part of us (depending on which came first).\n          removedWriteOverlapsWithOtherWrites = true;\n        }\n      }\n\n      i--;\n    }\n\n    if (!removedWriteWasVisible) {\n      return false;\n    } else if (removedWriteOverlapsWithOtherWrites) {\n      // There's some shadowing going on. Just rebuild the visible writes from scratch.\n      this.resetTree_();\n      return true;\n    } else {\n      // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n      if (writeToRemove.snap) {\n        this.visibleWrites_ = compoundWriteRemoveWrite(this.visibleWrites_, writeToRemove.path);\n      } else {\n        var children = writeToRemove.children;\n        each(children, function (childName) {\n          _this.visibleWrites_ = compoundWriteRemoveWrite(_this.visibleWrites_, pathChild(writeToRemove.path, childName));\n        });\n      }\n\n      return true;\n    }\n  };\n  /**\r\n   * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n   * No server data is considered.\r\n   *\r\n   */\n\n\n  WriteTree.prototype.getCompleteWriteData = function (path) {\n    return compoundWriteGetCompleteNode(this.visibleWrites_, path);\n  };\n  /**\r\n   * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n   * writes), attempt to calculate a complete snapshot for the given path\r\n   *\r\n   * @param writeIdsToExclude An optional set to be excluded\r\n   * @param includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n   */\n\n\n  WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n    if (!writeIdsToExclude && !includeHiddenWrites) {\n      var shadowingNode = compoundWriteGetCompleteNode(this.visibleWrites_, treePath);\n\n      if (shadowingNode != null) {\n        return shadowingNode;\n      } else {\n        var subMerge = compoundWriteChildCompoundWrite(this.visibleWrites_, treePath);\n\n        if (compoundWriteIsEmpty(subMerge)) {\n          return completeServerCache;\n        } else if (completeServerCache == null && !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())) {\n          // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n          return null;\n        } else {\n          var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n          return compoundWriteApply(subMerge, layeredCache);\n        }\n      }\n    } else {\n      var merge = compoundWriteChildCompoundWrite(this.visibleWrites_, treePath);\n\n      if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\n        return completeServerCache;\n      } else {\n        // If the server cache is null, and we don't have a complete cache, we need to return null\n        if (!includeHiddenWrites && completeServerCache == null && !compoundWriteHasCompleteWrite(merge, newEmptyPath())) {\n          return null;\n        } else {\n          var filter = function (write) {\n            return (write.visible || includeHiddenWrites) && (!writeIdsToExclude || !~writeIdsToExclude.indexOf(write.writeId)) && (pathContains(write.path, treePath) || pathContains(treePath, write.path));\n          };\n\n          var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\n          var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n          return compoundWriteApply(mergeAtPath, layeredCache);\n        }\n      }\n    }\n  };\n  /**\r\n   * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n   * Used when creating new views, to pre-fill their complete event children snapshot.\r\n   */\n\n\n  WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\n    var completeChildren = ChildrenNode.EMPTY_NODE;\n    var topLevelSet = compoundWriteGetCompleteNode(this.visibleWrites_, treePath);\n\n    if (topLevelSet) {\n      if (!topLevelSet.isLeafNode()) {\n        // we're shadowing everything. Return the children.\n        topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\n          completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\n        });\n      }\n\n      return completeChildren;\n    } else if (completeServerChildren) {\n      // Layer any children we have on top of this\n      // We know we don't have a top-level set, so just enumerate existing children\n      var merge_1 = compoundWriteChildCompoundWrite(this.visibleWrites_, treePath);\n      completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n        var node = compoundWriteApply(compoundWriteChildCompoundWrite(merge_1, new Path(childName)), childNode);\n        completeChildren = completeChildren.updateImmediateChild(childName, node);\n      }); // Add any complete children we have from the set\n\n      compoundWriteGetCompleteChildren(merge_1).forEach(function (namedNode) {\n        completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n      });\n      return completeChildren;\n    } else {\n      // We don't have anything to layer on top of. Layer on any children we have\n      // Note that we can return an empty snap if we have a defined delete\n      var merge = compoundWriteChildCompoundWrite(this.visibleWrites_, treePath);\n      compoundWriteGetCompleteChildren(merge).forEach(function (namedNode) {\n        completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n      });\n      return completeChildren;\n    }\n  };\n  /**\r\n   * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n   * applied to the event cache.\r\n   *\r\n   * Possibilities:\r\n   *\r\n   * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n   *\r\n   * 2. Some write is completely shadowing. No events to be raised\r\n   *\r\n   * 3. Is partially shadowed. Events\r\n   *\r\n   * Either existingEventSnap or existingServerSnap must exist\r\n   */\n\n\n  WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\n    assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\n    var path = pathChild(treePath, childPath);\n\n    if (compoundWriteHasCompleteWrite(this.visibleWrites_, path)) {\n      // At this point we can probably guarantee that we're in case 2, meaning no events\n      // May need to check visibility while doing the findRootMostValueAndPath call\n      return null;\n    } else {\n      // No complete shadowing. We're either partially shadowing or not shadowing at all.\n      var childMerge = compoundWriteChildCompoundWrite(this.visibleWrites_, path);\n\n      if (compoundWriteIsEmpty(childMerge)) {\n        // We're not shadowing at all. Case 1\n        return existingServerSnap.getChild(childPath);\n      } else {\n        // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n        // However this is tricky to find out, since user updates don't necessary change the server\n        // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n        // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n        // only check if the updates change the serverNode.\n        // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n        return compoundWriteApply(childMerge, existingServerSnap.getChild(childPath));\n      }\n    }\n  };\n  /**\r\n   * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n   * complete child for this ChildKey.\r\n   */\n\n\n  WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\n    var path = pathChild(treePath, childKey);\n    var shadowingNode = compoundWriteGetCompleteNode(this.visibleWrites_, path);\n\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      if (existingServerSnap.isCompleteForChild(childKey)) {\n        var childMerge = compoundWriteChildCompoundWrite(this.visibleWrites_, path);\n        return compoundWriteApply(childMerge, existingServerSnap.getNode().getImmediateChild(childKey));\n      } else {\n        return null;\n      }\n    }\n  };\n  /**\r\n   * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n   * a higher path, this will return the child of that write relative to the write and this path.\r\n   * Returns null if there is no write at this path.\r\n   */\n\n\n  WriteTree.prototype.shadowingWrite = function (path) {\n    return compoundWriteGetCompleteNode(this.visibleWrites_, path);\n  };\n  /**\r\n   * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n   * the window, but may now be in the window.\r\n   */\n\n\n  WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\n    var toIterate;\n    var merge = compoundWriteChildCompoundWrite(this.visibleWrites_, treePath);\n    var shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\n\n    if (shadowingNode != null) {\n      toIterate = shadowingNode;\n    } else if (completeServerData != null) {\n      toIterate = compoundWriteApply(merge, completeServerData);\n    } else {\n      // no children to iterate on\n      return [];\n    }\n\n    toIterate = toIterate.withIndex(index);\n\n    if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n      var nodes = [];\n      var cmp = index.getCompare();\n      var iter = reverse ? toIterate.getReverseIteratorFrom(startPost, index) : toIterate.getIteratorFrom(startPost, index);\n      var next = iter.getNext();\n\n      while (next && nodes.length < count) {\n        if (cmp(next, startPost) !== 0) {\n          nodes.push(next);\n        }\n\n        next = iter.getNext();\n      }\n\n      return nodes;\n    } else {\n      return [];\n    }\n  };\n\n  WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\n    if (writeRecord.snap) {\n      return pathContains(writeRecord.path, path);\n    } else {\n      for (var childName in writeRecord.children) {\n        if (writeRecord.children.hasOwnProperty(childName) && pathContains(pathChild(writeRecord.path, childName), path)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  };\n  /**\r\n   * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n   */\n\n\n  WriteTree.prototype.resetTree_ = function () {\n    this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, newEmptyPath());\n\n    if (this.allWrites_.length > 0) {\n      this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\n    } else {\n      this.lastWriteId_ = -1;\n    }\n  };\n  /**\r\n   * The default filter used when constructing the tree. Keep everything that's visible.\r\n   */\n\n\n  WriteTree.DefaultFilter_ = function (write) {\n    return write.visible;\n  };\n  /**\r\n   * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n   * event data at that path.\r\n   */\n\n\n  WriteTree.layerTree_ = function (writes, filter, treeRoot) {\n    var compoundWrite = CompoundWrite.empty();\n\n    for (var i = 0; i < writes.length; ++i) {\n      var write = writes[i]; // Theory, a later set will either:\n      // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n      // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n\n      if (filter(write)) {\n        var writePath = write.path;\n        var relativePath = void 0;\n\n        if (write.snap) {\n          if (pathContains(treeRoot, writePath)) {\n            relativePath = newRelativePath(treeRoot, writePath);\n            compoundWrite = compoundWriteAddWrite(compoundWrite, relativePath, write.snap);\n          } else if (pathContains(writePath, treeRoot)) {\n            relativePath = newRelativePath(writePath, treeRoot);\n            compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), write.snap.getChild(relativePath));\n          } else ;\n        } else if (write.children) {\n          if (pathContains(treeRoot, writePath)) {\n            relativePath = newRelativePath(treeRoot, writePath);\n            compoundWrite = compoundWriteAddWrites(compoundWrite, relativePath, write.children);\n          } else if (pathContains(writePath, treeRoot)) {\n            relativePath = newRelativePath(writePath, treeRoot);\n\n            if (pathIsEmpty(relativePath)) {\n              compoundWrite = compoundWriteAddWrites(compoundWrite, newEmptyPath(), write.children);\n            } else {\n              var child = safeGet(write.children, pathGetFront(relativePath));\n\n              if (child) {\n                // There exists a child in this node that matches the root path\n                var deepNode = child.getChild(pathPopFront(relativePath));\n                compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), deepNode);\n              }\n            }\n          } else ;\n        } else {\n          throw assertionError('WriteRecord should have .snap or .children');\n        }\n      }\n    }\n\n    return compoundWrite;\n  };\n\n  return WriteTree;\n}();\n/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n */\n\n\nvar WriteTreeRef =\n/** @class */\nfunction () {\n  function WriteTreeRef(path, writeTree) {\n    this.treePath_ = path;\n    this.writeTree_ = writeTree;\n  }\n  /**\r\n   * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n   * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n   * can lead to a more expensive calculation.\r\n   *\r\n   * @param writeIdsToExclude Optional writes to exclude.\r\n   * @param includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n   */\n\n\n  WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n    return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\n  };\n  /**\r\n   * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n   * mix of the given server data and write data.\r\n   *\r\n   */\n\n\n  WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\n    return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\n  };\n  /**\r\n   * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n   * if anything, needs to be applied to the event cache.\r\n   *\r\n   * Possibilities:\r\n   *\r\n   * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n   *\r\n   * 2. Some write is completely shadowing. No events to be raised\r\n   *\r\n   * 3. Is partially shadowed. Events should be raised\r\n   *\r\n   * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n   *\r\n   *\r\n   */\n\n\n  WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\n    return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\n  };\n  /**\r\n   * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n   * a higher path, this will return the child of that write relative to the write and this path.\r\n   * Returns null if there is no write at this path.\r\n   *\r\n   */\n\n\n  WriteTreeRef.prototype.shadowingWrite = function (path) {\n    return this.writeTree_.shadowingWrite(pathChild(this.treePath_, path));\n  };\n  /**\r\n   * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n   * the window, but may now be in the window\r\n   */\n\n\n  WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\n    return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\n  };\n  /**\r\n   * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n   * complete child for this ChildKey.\r\n   */\n\n\n  WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\n    return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\n  };\n  /**\r\n   * Return a WriteTreeRef for a child.\r\n   */\n\n\n  WriteTreeRef.prototype.child = function (childName) {\n    return new WriteTreeRef(pathChild(this.treePath_, childName), this.writeTree_);\n  };\n\n  return WriteTreeRef;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n */\n\n\nvar SyncTree =\n/** @class */\nfunction () {\n  /**\r\n   * @param listenProvider_ Used by SyncTree to start / stop listening\r\n   *   to server data.\r\n   */\n  function SyncTree(listenProvider_) {\n    this.listenProvider_ = listenProvider_;\n    /**\r\n     * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n     */\n\n    this.syncPointTree_ = new ImmutableTree(null);\n    /**\r\n     * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n     */\n\n    this.pendingWriteTree_ = new WriteTree();\n    this.tagToQueryMap = new Map();\n    this.queryToTagMap = new Map();\n  }\n  /**\r\n   * Apply the data changes for a user-generated set() or transaction() call.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\n    // Record pending write.\n    this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\n\n    if (!visible) {\n      return [];\n    } else {\n      return this.applyOperationToSyncPoints_(new Overwrite(newOperationSourceUser(), path, newData));\n    }\n  };\n  /**\r\n   * Apply the data from a user-generated update() call\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\n    // Record pending merge.\n    this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\n    var changeTree = ImmutableTree.fromObject(changedChildren);\n    return this.applyOperationToSyncPoints_(new Merge(newOperationSourceUser(), path, changeTree));\n  };\n  /**\r\n   * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n   *\r\n   * @param revert True if the given write failed and needs to be reverted\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.ackUserWrite = function (writeId, revert) {\n    if (revert === void 0) {\n      revert = false;\n    }\n\n    var write = this.pendingWriteTree_.getWrite(writeId);\n    var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\n\n    if (!needToReevaluate) {\n      return [];\n    } else {\n      var affectedTree_1 = new ImmutableTree(null);\n\n      if (write.snap != null) {\n        // overwrite\n        affectedTree_1 = affectedTree_1.set(newEmptyPath(), true);\n      } else {\n        each(write.children, function (pathString) {\n          affectedTree_1 = affectedTree_1.set(new Path(pathString), true);\n        });\n      }\n\n      return this.applyOperationToSyncPoints_(new AckUserWrite(write.path, affectedTree_1, revert));\n    }\n  };\n  /**\r\n   * Apply new server data for the specified path..\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyServerOverwrite = function (path, newData) {\n    return this.applyOperationToSyncPoints_(new Overwrite(newOperationSourceServer(), path, newData));\n  };\n  /**\r\n   * Apply new server data to be merged in at the specified path.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\n    var changeTree = ImmutableTree.fromObject(changedChildren);\n    return this.applyOperationToSyncPoints_(new Merge(newOperationSourceServer(), path, changeTree));\n  };\n  /**\r\n   * Apply a listen complete for a query\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyListenComplete = function (path) {\n    return this.applyOperationToSyncPoints_(new ListenComplete(newOperationSourceServer(), path));\n  };\n  /**\r\n   * Apply new server data for the specified tagged query.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\n    var queryKey = this.queryKeyForTag_(tag);\n\n    if (queryKey != null) {\n      var r = SyncTree.parseQueryKey_(queryKey);\n      var queryPath = r.path,\n          queryId = r.queryId;\n      var relativePath = newRelativePath(queryPath, path);\n      var op = new Overwrite(newOperationSourceServerTaggedQuery(queryId), relativePath, snap);\n      return this.applyTaggedOperation_(queryPath, op);\n    } else {\n      // Query must have been removed already\n      return [];\n    }\n  };\n  /**\r\n   * Apply server data to be merged in for the specified tagged query.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\n    var queryKey = this.queryKeyForTag_(tag);\n\n    if (queryKey) {\n      var r = SyncTree.parseQueryKey_(queryKey);\n      var queryPath = r.path,\n          queryId = r.queryId;\n      var relativePath = newRelativePath(queryPath, path);\n      var changeTree = ImmutableTree.fromObject(changedChildren);\n      var op = new Merge(newOperationSourceServerTaggedQuery(queryId), relativePath, changeTree);\n      return this.applyTaggedOperation_(queryPath, op);\n    } else {\n      // We've already removed the query. No big deal, ignore the update\n      return [];\n    }\n  };\n  /**\r\n   * Apply a listen complete for a tagged query\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\n    var queryKey = this.queryKeyForTag_(tag);\n\n    if (queryKey) {\n      var r = SyncTree.parseQueryKey_(queryKey);\n      var queryPath = r.path,\n          queryId = r.queryId;\n      var relativePath = newRelativePath(queryPath, path);\n      var op = new ListenComplete(newOperationSourceServerTaggedQuery(queryId), relativePath);\n      return this.applyTaggedOperation_(queryPath, op);\n    } else {\n      // We've already removed the query. No big deal, ignore the update\n      return [];\n    }\n  };\n  /**\r\n   * Add an event callback for the specified query.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\n    var path = query.path;\n    var serverCache = null;\n    var foundAncestorDefaultView = false; // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\n\n    this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\n      var relativePath = newRelativePath(pathToSyncPoint, path);\n      serverCache = serverCache || sp.getCompleteServerCache(relativePath);\n      foundAncestorDefaultView = foundAncestorDefaultView || sp.hasCompleteView();\n    });\n    var syncPoint = this.syncPointTree_.get(path);\n\n    if (!syncPoint) {\n      syncPoint = new SyncPoint();\n      this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\n    } else {\n      foundAncestorDefaultView = foundAncestorDefaultView || syncPoint.hasCompleteView();\n      serverCache = serverCache || syncPoint.getCompleteServerCache(newEmptyPath());\n    }\n\n    var serverCacheComplete;\n\n    if (serverCache != null) {\n      serverCacheComplete = true;\n    } else {\n      serverCacheComplete = false;\n      serverCache = ChildrenNode.EMPTY_NODE;\n      var subtree = this.syncPointTree_.subtree(path);\n      subtree.foreachChild(function (childName, childSyncPoint) {\n        var completeCache = childSyncPoint.getCompleteServerCache(newEmptyPath());\n\n        if (completeCache) {\n          serverCache = serverCache.updateImmediateChild(childName, completeCache);\n        }\n      });\n    }\n\n    var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\n\n    if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\n      // We need to track a tag for this query\n      var queryKey = SyncTree.makeQueryKey_(query);\n      assert(!this.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\n      var tag = SyncTree.getNextQueryTag_();\n      this.queryToTagMap.set(queryKey, tag);\n      this.tagToQueryMap.set(tag, queryKey);\n    }\n\n    var writesCache = this.pendingWriteTree_.childWrites(path);\n    var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\n\n    if (!viewAlreadyExists && !foundAncestorDefaultView) {\n      var view = syncPoint.viewForQuery(query);\n      events = events.concat(this.setupListener_(query, view));\n    }\n\n    return events;\n  };\n  /**\r\n   * Remove event callback(s).\r\n   *\r\n   * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n   * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n   *\r\n   * @param eventRegistration If null, all callbacks are removed.\r\n   * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n   * @return Cancel events, if cancelError was provided.\r\n   */\n\n\n  SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\n    var _this = this; // Find the syncPoint first. Then deal with whether or not it has matching listeners\n\n\n    var path = query.path;\n    var maybeSyncPoint = this.syncPointTree_.get(path);\n    var cancelEvents = []; // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n    // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n    // not loadsAllData().\n\n    if (maybeSyncPoint && (query.queryIdentifier() === 'default' || maybeSyncPoint.viewExistsForQuery(query))) {\n      var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\n\n      if (maybeSyncPoint.isEmpty()) {\n        this.syncPointTree_ = this.syncPointTree_.remove(path);\n      }\n\n      var removed = removedAndEvents.removed;\n      cancelEvents = removedAndEvents.events; // We may have just removed one of many listeners and can short-circuit this whole process\n      // We may also not have removed a default listener, in which case all of the descendant listeners should already be\n      // properly set up.\n      //\n      // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n      // queryId === 'default'\n\n      var removingDefault = -1 !== removed.findIndex(function (query) {\n        return query.getQueryParams().loadsAllData();\n      });\n      var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\n        return parentSyncPoint.hasCompleteView();\n      });\n\n      if (removingDefault && !covered) {\n        var subtree = this.syncPointTree_.subtree(path); // There are potentially child listeners. Determine what if any listens we need to send before executing the\n        // removal\n\n        if (!subtree.isEmpty()) {\n          // We need to fold over our subtree and collect the listeners to send\n          var newViews = this.collectDistinctViewsForSubTree_(subtree); // Ok, we've collected all the listens we need. Set them up.\n\n          for (var i = 0; i < newViews.length; ++i) {\n            var view = newViews[i],\n                newQuery = view.getQuery();\n            var listener = this.createListenerForView_(view);\n            this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\n          }\n        }\n      } // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n      // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n      // Also, note that if we have a cancelError, it's already been removed at the provider level.\n\n\n      if (!covered && removed.length > 0 && !cancelError) {\n        // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n        // default. Otherwise, we need to iterate through and cancel each individual query\n        if (removingDefault) {\n          // We don't tag default listeners\n          var defaultTag = null;\n          this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\n        } else {\n          removed.forEach(function (queryToRemove) {\n            var tagToRemove = _this.queryToTagMap.get(SyncTree.makeQueryKey_(queryToRemove));\n\n            _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\n          });\n        }\n      } // Now, clear all of the tags we're tracking for the removed listens\n\n\n      this.removeTags_(removed);\n    }\n\n    return cancelEvents;\n  };\n  /**\r\n   * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n   * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n   * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n   *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n   *\r\n   * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n   *\r\n   * @param path The path to the data we want\r\n   * @param writeIdsToExclude A specific set to be excluded\r\n   */\n\n\n  SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\n    var includeHiddenSets = true;\n    var writeTree = this.pendingWriteTree_;\n    var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\n      var relativePath = newRelativePath(pathSoFar, path);\n      var serverCache = syncPoint.getCompleteServerCache(relativePath);\n\n      if (serverCache) {\n        return serverCache;\n      }\n    });\n    return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\n  };\n\n  SyncTree.prototype.getServerValue = function (query) {\n    var path = query.path;\n    var serverCache = null; // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\n\n    this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\n      var relativePath = newRelativePath(pathToSyncPoint, path);\n      serverCache = serverCache || sp.getCompleteServerCache(relativePath);\n    });\n    var syncPoint = this.syncPointTree_.get(path);\n\n    if (!syncPoint) {\n      syncPoint = new SyncPoint();\n      this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\n    } else {\n      serverCache = serverCache || syncPoint.getCompleteServerCache(newEmptyPath());\n    }\n\n    var serverCacheComplete = serverCache != null;\n    var serverCacheNode = serverCacheComplete ? new CacheNode(serverCache, true, false) : null;\n    var writesCache = this.pendingWriteTree_.childWrites(query.path);\n    var view = syncPoint.getView(query, writesCache, serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE, serverCacheComplete);\n    return view.getCompleteNode();\n  };\n  /**\r\n   * This collapses multiple unfiltered views into a single view, since we only need a single\r\n   * listener for them.\r\n   */\n\n\n  SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\n    return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n      if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\n        var completeView = maybeChildSyncPoint.getCompleteView();\n        return [completeView];\n      } else {\n        // No complete view here, flatten any deeper listens into an array\n        var views_1 = [];\n\n        if (maybeChildSyncPoint) {\n          views_1 = maybeChildSyncPoint.getQueryViews();\n        }\n\n        each(childMap, function (_key, childViews) {\n          views_1 = views_1.concat(childViews);\n        });\n        return views_1;\n      }\n    });\n  };\n\n  SyncTree.prototype.removeTags_ = function (queries) {\n    for (var j = 0; j < queries.length; ++j) {\n      var removedQuery = queries[j];\n\n      if (!removedQuery.getQueryParams().loadsAllData()) {\n        // We should have a tag for this\n        var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\n        var removedQueryTag = this.queryToTagMap.get(removedQueryKey);\n        this.queryToTagMap.delete(removedQueryKey);\n        this.tagToQueryMap.delete(removedQueryTag);\n      }\n    }\n  };\n  /**\r\n   * Normalizes a query to a query we send the server for listening\r\n   *\r\n   * @return The normalized query\r\n   */\n\n\n  SyncTree.queryForListening_ = function (query) {\n    if (query.getQueryParams().loadsAllData() && !query.getQueryParams().isDefault()) {\n      // We treat queries that load all data as default queries\n      // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n      // from Query\n      return query.getRef();\n    } else {\n      return query;\n    }\n  };\n  /**\r\n   * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n   *\r\n   * @return This method can return events to support synchronous data sources\r\n   */\n\n\n  SyncTree.prototype.setupListener_ = function (query, view) {\n    var path = query.path;\n    var tag = this.tagForQuery_(query);\n    var listener = this.createListenerForView_(view);\n    var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\n    var subtree = this.syncPointTree_.subtree(path); // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n    // may need to shadow other listens as well.\n\n    if (tag) {\n      assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\n    } else {\n      // Shadow everything at or below this location, this is a default listener.\n      var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n        if (!pathIsEmpty(relativePath) && maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\n          return [maybeChildSyncPoint.getCompleteView().getQuery()];\n        } else {\n          // No default listener here, flatten any deeper queries into an array\n          var queries_1 = [];\n\n          if (maybeChildSyncPoint) {\n            queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) {\n              return view.getQuery();\n            }));\n          }\n\n          each(childMap, function (_key, childQueries) {\n            queries_1 = queries_1.concat(childQueries);\n          });\n          return queries_1;\n        }\n      });\n\n      for (var i = 0; i < queriesToStop.length; ++i) {\n        var queryToStop = queriesToStop[i];\n        this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\n      }\n    }\n\n    return events;\n  };\n\n  SyncTree.prototype.createListenerForView_ = function (view) {\n    var _this = this;\n\n    var query = view.getQuery();\n    var tag = this.tagForQuery_(query);\n    return {\n      hashFn: function () {\n        var cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\n        return cache.hash();\n      },\n      onComplete: function (status) {\n        if (status === 'ok') {\n          if (tag) {\n            return _this.applyTaggedListenComplete(query.path, tag);\n          } else {\n            return _this.applyListenComplete(query.path);\n          }\n        } else {\n          // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n          // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n          var error = errorForServerCode(status, query);\n          return _this.removeEventRegistration(query,\n          /*eventRegistration*/\n          null, error);\n        }\n      }\n    };\n  };\n  /**\r\n   * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n   */\n\n\n  SyncTree.makeQueryKey_ = function (query) {\n    return query.path.toString() + '$' + query.queryIdentifier();\n  };\n  /**\r\n   * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n   */\n\n\n  SyncTree.parseQueryKey_ = function (queryKey) {\n    var splitIndex = queryKey.indexOf('$');\n    assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\n    return {\n      queryId: queryKey.substr(splitIndex + 1),\n      path: new Path(queryKey.substr(0, splitIndex))\n    };\n  };\n  /**\r\n   * Return the query associated with the given tag, if we have one\r\n   */\n\n\n  SyncTree.prototype.queryKeyForTag_ = function (tag) {\n    return this.tagToQueryMap.get(tag);\n  };\n  /**\r\n   * Return the tag associated with the given query.\r\n   */\n\n\n  SyncTree.prototype.tagForQuery_ = function (query) {\n    var queryKey = SyncTree.makeQueryKey_(query);\n    return this.queryToTagMap.get(queryKey);\n  };\n  /**\r\n   * Static accessor for query tags.\r\n   */\n\n\n  SyncTree.getNextQueryTag_ = function () {\n    return SyncTree.nextQueryTag_++;\n  };\n  /**\r\n   * A helper method to apply tagged operations\r\n   */\n\n\n  SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\n    var syncPoint = this.syncPointTree_.get(queryPath);\n    assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n    var writesCache = this.pendingWriteTree_.childWrites(queryPath);\n    return syncPoint.applyOperation(operation, writesCache,\n    /*serverCache=*/\n    null);\n  };\n  /**\r\n   * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n   *\r\n   * NOTES:\r\n   * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n   *\r\n   * - We call applyOperation() on each SyncPoint passing three things:\r\n   *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n   *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n   *   3. A snapshot Node with cached server data, if we have it.\r\n   *\r\n   * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n   */\n\n\n  SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\n    return this.applyOperationHelper_(operation, this.syncPointTree_,\n    /*serverCache=*/\n    null, this.pendingWriteTree_.childWrites(newEmptyPath()));\n  };\n  /**\r\n   * Recursive helper for applyOperationToSyncPoints_\r\n   */\n\n\n  SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\n    if (pathIsEmpty(operation.path)) {\n      return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\n    } else {\n      var syncPoint = syncPointTree.get(newEmptyPath()); // If we don't have cached server data, see if we can get it from this SyncPoint.\n\n      if (serverCache == null && syncPoint != null) {\n        serverCache = syncPoint.getCompleteServerCache(newEmptyPath());\n      }\n\n      var events = [];\n      var childName = pathGetFront(operation.path);\n      var childOperation = operation.operationForChild(childName);\n      var childTree = syncPointTree.children.get(childName);\n\n      if (childTree && childOperation) {\n        var childServerCache = serverCache ? serverCache.getImmediateChild(childName) : null;\n        var childWritesCache = writesCache.child(childName);\n        events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\n      }\n\n      if (syncPoint) {\n        events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\n      }\n\n      return events;\n    }\n  };\n  /**\r\n   * Recursive helper for applyOperationToSyncPoints_\r\n   */\n\n\n  SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\n    var _this = this;\n\n    var syncPoint = syncPointTree.get(newEmptyPath()); // If we don't have cached server data, see if we can get it from this SyncPoint.\n\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPoint.getCompleteServerCache(newEmptyPath());\n    }\n\n    var events = [];\n    syncPointTree.children.inorderTraversal(function (childName, childTree) {\n      var childServerCache = serverCache ? serverCache.getImmediateChild(childName) : null;\n      var childWritesCache = writesCache.child(childName);\n      var childOperation = operation.operationForChild(childName);\n\n      if (childOperation) {\n        events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\n      }\n    });\n\n    if (syncPoint) {\n      events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\n    }\n\n    return events;\n  };\n  /**\r\n   * Static tracker for next query tag.\r\n   */\n\n\n  SyncTree.nextQueryTag_ = 1;\n  return SyncTree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n */\n\n\nvar SnapshotHolder =\n/** @class */\nfunction () {\n  function SnapshotHolder() {\n    this.rootNode_ = ChildrenNode.EMPTY_NODE;\n  }\n\n  SnapshotHolder.prototype.getNode = function (path) {\n    return this.rootNode_.getChild(path);\n  };\n\n  SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  };\n\n  return SnapshotHolder;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Tracks a collection of stats.\r\n */\n\n\nvar StatsCollection =\n/** @class */\nfunction () {\n  function StatsCollection() {\n    this.counters_ = {};\n  }\n\n  StatsCollection.prototype.incrementCounter = function (name, amount) {\n    if (amount === void 0) {\n      amount = 1;\n    }\n\n    if (!contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n\n    this.counters_[name] += amount;\n  };\n\n  StatsCollection.prototype.get = function () {\n    return deepCopy(this.counters_);\n  };\n\n  return StatsCollection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar StatsManager =\n/** @class */\nfunction () {\n  function StatsManager() {}\n\n  StatsManager.getCollection = function (repoInfo) {\n    var hashString = repoInfo.toString();\n\n    if (!this.collections_[hashString]) {\n      this.collections_[hashString] = new StatsCollection();\n    }\n\n    return this.collections_[hashString];\n  };\n\n  StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\n    var hashString = repoInfo.toString();\n\n    if (!this.reporters_[hashString]) {\n      this.reporters_[hashString] = creatorFunction();\n    }\n\n    return this.reporters_[hashString];\n  };\n\n  StatsManager.collections_ = {};\n  StatsManager.reporters_ = {};\n  return StatsManager;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n */\n\n\nvar StatsListener =\n/** @class */\nfunction () {\n  function StatsListener(collection_) {\n    this.collection_ = collection_;\n    this.last_ = null;\n  }\n\n  StatsListener.prototype.get = function () {\n    var newStats = this.collection_.get();\n\n    var delta = __assign({}, newStats);\n\n    if (this.last_) {\n      each(this.last_, function (stat, value) {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n\n    this.last_ = newStats;\n    return delta;\n  };\n\n  return StatsListener;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\n\n\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\nvar FIRST_STATS_MAX_TIME = 30 * 1000; // We'll continue to report stats on average every 5 minutes.\n\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n\nvar StatsReporter =\n/** @class */\nfunction () {\n  /**\r\n   * @param collection\r\n   * @param server_\r\n   */\n  function StatsReporter(collection, server_) {\n    this.server_ = server_;\n    this.statsToReport_ = {};\n    this.statsListener_ = new StatsListener(collection);\n    var timeout = FIRST_STATS_MIN_TIME + (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  StatsReporter.prototype.includeStat = function (stat) {\n    this.statsToReport_[stat] = true;\n  };\n\n  StatsReporter.prototype.reportStats_ = function () {\n    var _this = this;\n\n    var stats = this.statsListener_.get();\n    var reportedStats = {};\n    var haveStatsToReport = false;\n    each(stats, function (stat, value) {\n      if (value > 0 && contains(_this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    } // queue our next run.\n\n\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\n  };\n\n  return StatsReporter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n */\n\n\nvar EventQueue =\n/** @class */\nfunction () {\n  function EventQueue() {\n    this.eventLists_ = [];\n    /**\r\n     * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n     */\n\n    this.recursionDepth_ = 0;\n  }\n\n  return EventQueue;\n}();\n/**\r\n * @param eventDataList The new events to queue.\r\n */\n\n\nfunction eventQueueQueueEvents(eventQueue, eventDataList) {\n  // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n  var currList = null;\n\n  for (var i = 0; i < eventDataList.length; i++) {\n    var data = eventDataList[i];\n    var path = data.getPath();\n\n    if (currList !== null && !pathEquals(path, currList.path)) {\n      eventQueue.eventLists_.push(currList);\n      currList = null;\n    }\n\n    if (currList === null) {\n      currList = {\n        events: [],\n        path: path\n      };\n    }\n\n    currList.events.push(data);\n  }\n\n  if (currList) {\n    eventQueue.eventLists_.push(currList);\n  }\n}\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n * for the specified path.\r\n *\r\n * It is assumed that the new events are all for the specified path.\r\n *\r\n * @param path The path to raise events for.\r\n * @param eventDataList The new events to raise.\r\n */\n\n\nfunction eventQueueRaiseEventsAtPath(eventQueue, path, eventDataList) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, function (eventPath) {\n    return pathEquals(eventPath, path);\n  });\n}\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n * locations related to the specified change path (i.e. all ancestors and descendants).\r\n *\r\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n *\r\n * @param changedPath The path to raise events for.\r\n * @param eventDataList The events to raise\r\n */\n\n\nfunction eventQueueRaiseEventsForChangedPath(eventQueue, changedPath, eventDataList) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, function (eventPath) {\n    return pathContains(eventPath, changedPath) || pathContains(changedPath, eventPath);\n  });\n}\n\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, predicate) {\n  eventQueue.recursionDepth_++;\n  var sentAll = true;\n\n  for (var i = 0; i < eventQueue.eventLists_.length; i++) {\n    var eventList = eventQueue.eventLists_[i];\n\n    if (eventList) {\n      var eventPath = eventList.path;\n\n      if (predicate(eventPath)) {\n        eventListRaise(eventQueue.eventLists_[i]);\n        eventQueue.eventLists_[i] = null;\n      } else {\n        sentAll = false;\n      }\n    }\n  }\n\n  if (sentAll) {\n    eventQueue.eventLists_ = [];\n  }\n\n  eventQueue.recursionDepth_--;\n}\n/**\r\n * Iterates through the list and raises each event\r\n */\n\n\nfunction eventListRaise(eventList) {\n  for (var i = 0; i < eventList.events.length; i++) {\n    var eventData = eventList.events[i];\n\n    if (eventData !== null) {\n      eventList.events[i] = null;\n      var eventFn = eventData.getEventRunner();\n\n      if (logger) {\n        log('event: ' + eventData.toString());\n      }\n\n      exceptionGuard(eventFn);\n    }\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\n\n\nvar EventEmitter =\n/** @class */\nfunction () {\n  function EventEmitter(allowedEvents_) {\n    this.allowedEvents_ = allowedEvents_;\n    this.listeners_ = {};\n    assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\n  }\n  /**\r\n   * To be called by derived classes to trigger events.\r\n   */\n\n\n  EventEmitter.prototype.trigger = function (eventType) {\n    var varArgs = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      varArgs[_i - 1] = arguments[_i];\n    }\n\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      var listeners = __spread(this.listeners_[eventType]);\n\n      for (var i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  };\n\n  EventEmitter.prototype.on = function (eventType, callback, context) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({\n      callback: callback,\n      context: context\n    });\n    var eventData = this.getInitialEvent(eventType);\n\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  };\n\n  EventEmitter.prototype.off = function (eventType, callback, context) {\n    this.validateEventType_(eventType);\n    var listeners = this.listeners_[eventType] || [];\n\n    for (var i = 0; i < listeners.length; i++) {\n      if (listeners[i].callback === callback && (!context || context === listeners[i].context)) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  };\n\n  EventEmitter.prototype.validateEventType_ = function (eventType) {\n    assert(this.allowedEvents_.find(function (et) {\n      return et === eventType;\n    }), 'Unknown event: ' + eventType);\n  };\n\n  return EventEmitter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar VisibilityMonitor =\n/** @class */\nfunction (_super) {\n  __extends(VisibilityMonitor, _super);\n\n  function VisibilityMonitor() {\n    var _this = _super.call(this, ['visible']) || this;\n\n    var hidden;\n    var visibilityChange;\n\n    if (typeof document !== 'undefined' && typeof document.addEventListener !== 'undefined') {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    } // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n\n\n    _this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(visibilityChange, function () {\n        var visible = !document[hidden];\n\n        if (visible !== _this.visible_) {\n          _this.visible_ = visible;\n\n          _this.trigger('visible', visible);\n        }\n      }, false);\n    }\n\n    return _this;\n  }\n\n  VisibilityMonitor.getInstance = function () {\n    return new VisibilityMonitor();\n  };\n\n  VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\n    assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  };\n\n  return VisibilityMonitor;\n}(EventEmitter);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n */\n\n\nvar OnlineMonitor =\n/** @class */\nfunction (_super) {\n  __extends(OnlineMonitor, _super);\n\n  function OnlineMonitor() {\n    var _this = _super.call(this, ['online']) || this;\n\n    _this.online_ = true; // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n\n    if (typeof window !== 'undefined' && typeof window.addEventListener !== 'undefined' && !isMobileCordova()) {\n      window.addEventListener('online', function () {\n        if (!_this.online_) {\n          _this.online_ = true;\n\n          _this.trigger('online', true);\n        }\n      }, false);\n      window.addEventListener('offline', function () {\n        if (_this.online_) {\n          _this.online_ = false;\n\n          _this.trigger('online', false);\n        }\n      }, false);\n    }\n\n    return _this;\n  }\n\n  OnlineMonitor.getInstance = function () {\n    return new OnlineMonitor();\n  };\n\n  OnlineMonitor.prototype.getInitialEvent = function (eventType) {\n    assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  };\n\n  OnlineMonitor.prototype.currentlyOnline = function () {\n    return this.online_;\n  };\n\n  return OnlineMonitor;\n}(EventEmitter);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n */\n\n\nvar PacketReceiver =\n/** @class */\nfunction () {\n  /**\r\n   * @param onMessage_\r\n   */\n  function PacketReceiver(onMessage_) {\n    this.onMessage_ = onMessage_;\n    this.pendingResponses = [];\n    this.currentResponseNum = 0;\n    this.closeAfterResponse = -1;\n    this.onClose = null;\n  }\n\n  PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  };\n  /**\r\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n   * browsers will respond in the same order as the requests we sent\r\n   */\n\n\n  PacketReceiver.prototype.handleResponse = function (requestNum, data) {\n    var _this = this;\n\n    this.pendingResponses[requestNum] = data;\n\n    var _loop_1 = function () {\n      var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\n      delete this_1.pendingResponses[this_1.currentResponseNum];\n\n      var _loop_2 = function (i) {\n        if (toProcess[i]) {\n          exceptionGuard(function () {\n            _this.onMessage_(toProcess[i]);\n          });\n        }\n      };\n\n      for (var i = 0; i < toProcess.length; ++i) {\n        _loop_2(i);\n      }\n\n      if (this_1.currentResponseNum === this_1.closeAfterResponse) {\n        if (this_1.onClose) {\n          this_1.onClose();\n          this_1.onClose = null;\n        }\n\n        return \"break\";\n      }\n\n      this_1.currentResponseNum++;\n    };\n\n    var this_1 = this;\n\n    while (this.pendingResponses[this.currentResponseNum]) {\n      var state_1 = _loop_1();\n\n      if (state_1 === \"break\") break;\n    }\n  };\n\n  return PacketReceiver;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// URL query parameters associated with longpolling\n\n\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe'; //Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\n\nvar MAX_URL_DATA_SIZE = 1870;\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\n\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n */\n\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n */\n\nvar LP_CONNECT_TIMEOUT = 30000;\n/**\r\n * This class manages a single long-polling connection.\r\n */\n\nvar BrowserPollConnection =\n/** @class */\nfunction () {\n  /**\r\n   * @param connId An identifier for this connection, used for logging\r\n   * @param repoInfo The info for the endpoint to send data to.\r\n   * @param applicationId The Firebase App ID for this project.\r\n   * @param transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n   *                                         transport session\r\n   * @param lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n   *                                     connection previously\r\n   */\n  function BrowserPollConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\n    this.connId = connId;\n    this.repoInfo = repoInfo;\n    this.applicationId = applicationId;\n    this.transportSessionId = transportSessionId;\n    this.lastSessionId = lastSessionId;\n    this.bytesSent = 0;\n    this.bytesReceived = 0;\n    this.everConnected_ = false;\n    this.log_ = logWrapper(connId);\n    this.stats_ = StatsManager.getCollection(repoInfo);\n\n    this.urlFn = function (params) {\n      return repoInfo.connectionURL(LONG_POLLING, params);\n    };\n  }\n  /**\r\n   * @param onMessage Callback when messages arrive\r\n   * @param onDisconnect Callback with connection lost.\r\n   */\n\n\n  BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\n    var _this = this;\n\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n    this.connectTimeoutTimer_ = setTimeout(function () {\n      _this.log_('Timed out trying to connect.'); // Make sure we clear the host cache\n\n\n      _this.onClosed_();\n\n      _this.connectTimeoutTimer_ = null; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT)); // Ensure we delay the creation of the iframe until the DOM is loaded.\n\n    executeWhenDOMReady(function () {\n      if (_this.isClosed_) {\n        return;\n      } //Set up a callback that gets triggered once a connection is set up.\n\n\n      _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var _a = __read(args, 5),\n            command = _a[0],\n            arg1 = _a[1],\n            arg2 = _a[2],\n            arg3 = _a[3],\n            arg4 = _a[4];\n\n        _this.incrementIncomingBytes_(args);\n\n        if (!_this.scriptTagHolder) {\n          return; // we closed the connection.\n        }\n\n        if (_this.connectTimeoutTimer_) {\n          clearTimeout(_this.connectTimeoutTimer_);\n          _this.connectTimeoutTimer_ = null;\n        }\n\n        _this.everConnected_ = true;\n\n        if (command === FIREBASE_LONGPOLL_START_PARAM) {\n          _this.id = arg1;\n          _this.password = arg2;\n        } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n          // Don't clear the host cache. We got a response from the server, so we know it's reachable\n          if (arg1) {\n            // We aren't expecting any more data (other than what the server's already in the process of sending us\n            // through our already open polls), so don't send any more.\n            _this.scriptTagHolder.sendNewPolls = false; // arg1 in this case is the last response number sent by the server. We should try to receive\n            // all of the responses up to this one before closing\n\n            _this.myPacketOrderer.closeAfter(arg1, function () {\n              _this.onClosed_();\n            });\n          } else {\n            _this.onClosed_();\n          }\n        } else {\n          throw new Error('Unrecognized command received: ' + command);\n        }\n      }, function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var _a = __read(args, 2),\n            pN = _a[0],\n            data = _a[1];\n\n        _this.incrementIncomingBytes_(args);\n\n        _this.myPacketOrderer.handleResponse(pN, data);\n      }, function () {\n        _this.onClosed_();\n      }, _this.urlFn); //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n\n      var urlParams = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\n\n      if (_this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n      if (_this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\n      }\n\n      if (_this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\n      }\n\n      if (_this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = _this.applicationId;\n      }\n\n      if (typeof location !== 'undefined' && location.hostname && FORGE_DOMAIN_RE.test(location.hostname)) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n\n      var connectURL = _this.urlFn(urlParams);\n\n      _this.log_('Connecting via long-poll to ' + connectURL);\n\n      _this.scriptTagHolder.addTag(connectURL, function () {\n        /* do nothing */\n      });\n    });\n  };\n  /**\r\n   * Call this when a handshake has completed successfully and we want to consider the connection established\r\n   */\n\n\n  BrowserPollConnection.prototype.start = function () {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  };\n  /**\r\n   * Forces long polling to be considered as a potential transport\r\n   */\n\n\n  BrowserPollConnection.forceAllow = function () {\n    BrowserPollConnection.forceAllow_ = true;\n  };\n  /**\r\n   * Forces longpolling to not be considered as a potential transport\r\n   */\n\n\n  BrowserPollConnection.forceDisallow = function () {\n    BrowserPollConnection.forceDisallow_ = true;\n  }; // Static method, use string literal so it can be accessed in a generic way\n\n\n  BrowserPollConnection.isAvailable = function () {\n    if (isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return !BrowserPollConnection.forceDisallow_ && typeof document !== 'undefined' && document.createElement != null && !isChromeExtensionContentScript() && !isWindowsStoreApp();\n    }\n  };\n  /**\r\n   * No-op for polling\r\n   */\n\n\n  BrowserPollConnection.prototype.markConnectionHealthy = function () {};\n  /**\r\n   * Stops polling and cleans up the iframe\r\n   */\n\n\n  BrowserPollConnection.prototype.shutdown_ = function () {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    } //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n\n\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  };\n  /**\r\n   * Triggered when this transport is closed\r\n   */\n\n\n  BrowserPollConnection.prototype.onClosed_ = function () {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  };\n  /**\r\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n   * that we've left.\r\n   */\n\n\n  BrowserPollConnection.prototype.close = function () {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  };\n  /**\r\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n   * broken into chunks (since URLs have a small maximum length).\r\n   * @param data The JSON data to transmit.\r\n   */\n\n\n  BrowserPollConnection.prototype.send = function (data) {\n    var dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length); //first, lets get the base64-encoded data\n\n    var base64data = base64Encode(dataStr); //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE); //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n\n    for (var i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\n      this.curSegmentNum++;\n    }\n  };\n  /**\r\n   * This is how we notify the server that we're leaving.\r\n   * We aren't able to send requests with DHTML on a window close event, but we can\r\n   * trigger XHR requests in some browsers (everything but Opera basically).\r\n   */\n\n\n  BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\n    if (isNodeSdk()) {\n      return;\n    }\n\n    this.myDisconnFrame = document.createElement('iframe');\n    var urlParams = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n    document.body.appendChild(this.myDisconnFrame);\n  };\n  /**\r\n   * Used to track the bytes received by this client\r\n   */\n\n\n  BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    var bytesReceived = stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  };\n\n  return BrowserPollConnection;\n}();\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n *********************************************************************************************/\n\n\nvar FirebaseIFrameScriptHolder =\n/** @class */\nfunction () {\n  /**\r\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n   */\n  function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\n    this.onDisconnect = onDisconnect;\n    this.urlFn = urlFn; //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n    //problems in some browsers.\n\n    this.outstandingRequests = new Set(); //A queue of the pending segments waiting for transmission to the server.\n\n    this.pendingSegs = []; //A serial number. We use this for two things:\n    // 1) A way to ensure the browser doesn't cache responses to polls\n    // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n    //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n    //    JSONP code in the order it was added to the iframe.\n\n    this.currentSerial = Math.floor(Math.random() * 100000000); // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n    // incoming data from the server that we're waiting for).\n\n    this.sendNewPolls = true;\n\n    if (!isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\n      window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB; //Create an iframe for us to add script tags to.\n\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_(); // Set the iframe's contents.\n\n      var script = ''; // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n\n      if (this.myIFrame.src && this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\n        var currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n\n      var iframeContents = '<html><body>' + script + '</body></html>';\n\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n\n        if (e.stack) {\n          log(e.stack);\n        }\n\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n  /**\r\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n   * actually use.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.createIFrame_ = function () {\n    var iframe = document.createElement('iframe');\n    iframe.style.display = 'none'; // This is necessary in order to initialize the document inside the iframe\n\n    if (document.body) {\n      document.body.appendChild(iframe);\n\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        var a = iframe.contentWindow.document;\n\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        var domain = document.domain;\n        iframe.src = \"javascript:void((function(){document.open();document.domain='\" + domain + \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    } // Get the document of the iframe in a browser-specific way.\n\n\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if (iframe.document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = iframe.document; //others?\n    }\n\n    return iframe;\n  };\n  /**\r\n   * Cancel all outstanding queries and remove the frame.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.close = function () {\n    var _this = this; //Mark this iframe as dead, so no new requests are sent.\n\n\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\n      this.myIFrame.doc.body.innerHTML = '';\n      setTimeout(function () {\n        if (_this.myIFrame !== null) {\n          document.body.removeChild(_this.myIFrame);\n          _this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    } // Protect from being called recursively.\n\n\n    var onDisconnect = this.onDisconnect;\n\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  };\n  /**\r\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n   * @param id - The ID of this connection\r\n   * @param pw - The password for this connection\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true; //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n\n    while (this.newRequest_()) {}\n  };\n  /**\r\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n   * too many outstanding requests and we are still alive.\r\n   *\r\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n   * needed.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (this.alive && this.sendNewPolls && this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\n      //construct our url\n      this.currentSerial++;\n      var urlParams = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      var theURL = this.urlFn(urlParams); //Now add as much data as we can.\n\n      var curDataString = '';\n      var i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        var nextSeg = this.pendingSegs[0];\n\n        if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <= MAX_URL_DATA_SIZE) {\n          //great, the segment will fit. Lets append it.\n          var theSeg = this.pendingSegs.shift();\n          curDataString = curDataString + '&' + FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM + i + '=' + theSeg.seg + '&' + FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET + i + '=' + theSeg.ts + '&' + FIREBASE_LONGPOLL_DATA_PARAM + i + '=' + theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /**\r\n   * Queue a packet for transmission to the server.\r\n   * @param segnum - A sequential id for this packet segment used for reassembly\r\n   * @param totalsegs - The total number of segments in this packet\r\n   * @param data - The data for this segment.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({\n      seg: segnum,\n      ts: totalsegs,\n      d: data\n    }); //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n\n    if (this.alive) {\n      this.newRequest_();\n    }\n  };\n  /**\r\n   * Add a script tag for a regular long-poll request.\r\n   * @param url - The URL of the script tag.\r\n   * @param serial - The serial number of the request.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\n    var _this = this; //remember that we sent this request.\n\n\n    this.outstandingRequests.add(serial);\n\n    var doNewRequest = function () {\n      _this.outstandingRequests.delete(serial);\n\n      _this.newRequest_();\n    }; // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n\n\n    var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\n\n    var readyStateCB = function () {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout); // Trigger a new request so we can continue receiving data.\n\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  };\n  /**\r\n   * Add an arbitrary script tag to the iframe.\r\n   * @param url - The URL for the script tag source.\r\n   * @param loadCB - A callback to be triggered once the script has loaded.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\n    var _this = this;\n\n    if (isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(function () {\n        try {\n          // if we're already closed, don't add this poll\n          if (!_this.sendNewPolls) {\n            return;\n          }\n\n          var newScript_1 = _this.myIFrame.doc.createElement('script');\n\n          newScript_1.type = 'text/javascript';\n          newScript_1.async = true;\n          newScript_1.src = url; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n          newScript_1.onload = newScript_1.onreadystatechange = function () {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rstate = newScript_1.readyState;\n\n            if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              newScript_1.onload = newScript_1.onreadystatechange = null;\n\n              if (newScript_1.parentNode) {\n                newScript_1.parentNode.removeChild(newScript_1);\n              }\n\n              loadCB();\n            }\n          };\n\n          newScript_1.onerror = function () {\n            log('Long-poll script failed to load: ' + url);\n            _this.sendNewPolls = false;\n\n            _this.close();\n          };\n\n          _this.myIFrame.doc.body.appendChild(newScript_1);\n        } catch (e) {// TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  };\n\n  return FirebaseIFrameScriptHolder;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** The semver (www.semver.org) version of the SDK. */\n\n\nvar SDK_VERSION = ''; // SDK_VERSION should be set before any database instance is created\n\nfunction setSDKVersion(version) {\n  SDK_VERSION = version;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\nvar WebSocketImpl = null;\n\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n */\n\n\nvar WebSocketConnection =\n/** @class */\nfunction () {\n  /**\r\n   * @param connId identifier for this transport\r\n   * @param repoInfo The info for the websocket endpoint.\r\n   * @param applicationId The Firebase App ID for this project.\r\n   * @param transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n   *                                         session\r\n   * @param lastSessionId Optional lastSessionId if there was a previous connection\r\n   */\n  function WebSocketConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\n    this.connId = connId;\n    this.applicationId = applicationId;\n    this.keepaliveTimer = null;\n    this.frames = null;\n    this.totalFrames = 0;\n    this.bytesSent = 0;\n    this.bytesReceived = 0;\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = StatsManager.getCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\n    this.nodeAdmin = repoInfo.nodeAdmin;\n  }\n  /**\r\n   * @param repoInfo The info for the websocket endpoint.\r\n   * @param transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n   *                                         session\r\n   * @param lastSessionId Optional lastSessionId if there was a previous connection\r\n   * @return connection url\r\n   */\n\n\n  WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\n    var urlParams = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (!isNodeSdk() && typeof location !== 'undefined' && location.hostname && FORGE_DOMAIN_RE.test(location.hostname)) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n\n    return repoInfo.connectionURL(WEBSOCKET, urlParams);\n  };\n  /**\r\n   * @param onMessage Callback when messages arrive\r\n   * @param onDisconnect Callback with connection lost.\r\n   */\n\n\n  WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\n    var _this = this;\n\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n    this.log_('Websocket connecting to ' + this.connURL);\n    this.everConnected_ = false; // Assume failure until proven otherwise.\n\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      if (isNodeSdk()) {\n        var device = this.nodeAdmin ? 'AdminNode' : 'Node'; // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n\n        var options = {\n          headers: {\n            'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + SDK_VERSION + \"/\" + process.platform + \"/\" + device,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        }; // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n\n        var env = process['env'];\n        var proxy = this.connURL.indexOf('wss://') === 0 ? env['HTTPS_PROXY'] || env['https_proxy'] : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = {\n            origin: proxy\n          };\n        }\n\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      } else {\n        var options = {\n          headers: {\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      }\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      var error = e.message || e.data;\n\n      if (error) {\n        this.log_(error);\n      }\n\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = function () {\n      _this.log_('Websocket connected.');\n\n      _this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = function () {\n      _this.log_('Websocket connection was disconnected.');\n\n      _this.mySock = null;\n\n      _this.onClosed_();\n    };\n\n    this.mySock.onmessage = function (m) {\n      _this.handleIncomingFrame(m);\n    };\n\n    this.mySock.onerror = function (e) {\n      _this.log_('WebSocket error.  Closing connection.'); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n      var error = e.message || e.data;\n\n      if (error) {\n        _this.log_(error);\n      }\n\n      _this.onClosed_();\n    };\n  };\n  /**\r\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n   */\n\n\n  WebSocketConnection.prototype.start = function () {};\n\n  WebSocketConnection.forceDisallow = function () {\n    WebSocketConnection.forceDisallow_ = true;\n  };\n\n  WebSocketConnection.isAvailable = function () {\n    var isOldAndroid = false;\n\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return !isOldAndroid && WebSocketImpl !== null && !WebSocketConnection.forceDisallow_;\n  };\n  /**\r\n   * Returns true if we previously failed to connect with this transport.\r\n   */\n\n\n  WebSocketConnection.previouslyFailed = function () {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return PersistentStorage.isInMemoryStorage || PersistentStorage.get('previous_websocket_failure') === true;\n  };\n\n  WebSocketConnection.prototype.markConnectionHealthy = function () {\n    PersistentStorage.remove('previous_websocket_failure');\n  };\n\n  WebSocketConnection.prototype.appendFrame_ = function (data) {\n    this.frames.push(data);\n\n    if (this.frames.length === this.totalFrames) {\n      var fullMess = this.frames.join('');\n      this.frames = null;\n      var jsonMess = jsonEval(fullMess); //handle the message\n\n      this.onMessage(jsonMess);\n    }\n  };\n  /**\r\n   * @param frameCount The number of frames we are expecting from the server\r\n   */\n\n\n  WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  };\n  /**\r\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n   * @return Any remaining data to be process, or null if there is none\r\n   */\n\n\n  WebSocketConnection.prototype.extractFrameCount_ = function (data) {\n    assert(this.frames === null, 'We already have a frame buffer'); // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n\n    if (data.length <= 6) {\n      var frameCount = Number(data);\n\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n\n    this.handleNewFrameCount_(1);\n    return data;\n  };\n  /**\r\n   * Process a websocket frame that has arrived from the server.\r\n   * @param mess The frame data\r\n   */\n\n\n  WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n\n    var data = mess['data'];\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      var remainingData = this.extractFrameCount_(data);\n\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  };\n  /**\r\n   * Send a message to the server\r\n   * @param data The JSON object to transmit\r\n   */\n\n\n  WebSocketConnection.prototype.send = function (data) {\n    this.resetKeepAlive();\n    var dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length); //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE); //Send the length header\n\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    } //Send the actual data in segments.\n\n\n    for (var i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  };\n\n  WebSocketConnection.prototype.shutdown_ = function () {\n    this.isClosed_ = true;\n\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  };\n\n  WebSocketConnection.prototype.onClosed_ = function () {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_(); // since this is an internal close, trigger the close listener\n\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  };\n  /**\r\n   * External-facing close handler.\r\n   * Close the websocket and kill the connection.\r\n   */\n\n\n  WebSocketConnection.prototype.close = function () {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  };\n  /**\r\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n   * the last activity.\r\n   */\n\n\n  WebSocketConnection.prototype.resetKeepAlive = function () {\n    var _this = this;\n\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(function () {\n      //If there has been no websocket activity for a while, send a no-op\n      if (_this.mySock) {\n        _this.sendString_('0');\n      }\n\n      _this.resetKeepAlive(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\n  };\n  /**\r\n   * Send a string over the websocket.\r\n   *\r\n   * @param str String to send.\r\n   */\n\n\n  WebSocketConnection.prototype.sendString_ = function (str) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  };\n  /**\r\n   * Number of response before we consider the connection \"healthy.\"\r\n   */\n\n\n  WebSocketConnection.responsesRequiredToBeHealthy = 2;\n  /**\r\n   * Time to wait for the connection te become healthy before giving up.\r\n   */\n\n  WebSocketConnection.healthyTimeout = 30000;\n  return WebSocketConnection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n */\n\n\nvar TransportManager =\n/** @class */\nfunction () {\n  /**\r\n   * @param repoInfo Metadata around the namespace we're connecting to\r\n   */\n  function TransportManager(repoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\n    get: function () {\n      return [BrowserPollConnection, WebSocketConnection];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  TransportManager.prototype.initTransports_ = function (repoInfo) {\n    var e_1, _a;\n\n    var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\n    var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\n      }\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      var transports = this.transports_ = [];\n\n      try {\n        for (var _b = __values(TransportManager.ALL_TRANSPORTS), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var transport = _c.value;\n\n          if (transport && transport['isAvailable']()) {\n            transports.push(transport);\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n  };\n  /**\r\n   * @return The constructor for the initial transport to use\r\n   */\n\n\n  TransportManager.prototype.initialTransport = function () {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  };\n  /**\r\n   * @return The constructor for the next transport, or null\r\n   */\n\n\n  TransportManager.prototype.upgradeTransport = function () {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  };\n\n  return TransportManager;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Abort upgrade attempt if it takes longer than 60s.\n\n\nvar UPGRADE_TIMEOUT = 60000; // For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\n\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000; // If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\n\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\nvar MESSAGE_TYPE = 't';\nvar MESSAGE_DATA = 'd';\nvar CONTROL_SHUTDOWN = 's';\nvar CONTROL_RESET = 'r';\nvar CONTROL_ERROR = 'e';\nvar CONTROL_PONG = 'o';\nvar SWITCH_ACK = 'a';\nvar END_TRANSMISSION = 'n';\nvar PING = 'p';\nvar SERVER_HELLO = 'h';\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n */\n\nvar Connection =\n/** @class */\nfunction () {\n  /**\r\n   * @param id - an id for this connection\r\n   * @param repoInfo_ - the info for the endpoint to connect to\r\n   * @param applicationId_ - the Firebase App ID for this project\r\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n   */\n  function Connection(id, repoInfo_, applicationId_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\n    this.id = id;\n    this.repoInfo_ = repoInfo_;\n    this.applicationId_ = applicationId_;\n    this.onMessage_ = onMessage_;\n    this.onReady_ = onReady_;\n    this.onDisconnect_ = onDisconnect_;\n    this.onKill_ = onKill_;\n    this.lastSessionId = lastSessionId;\n    this.connectionCount = 0;\n    this.pendingDataMessages = [];\n    this.state_ = 0\n    /* CONNECTING */\n    ;\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n  /**\r\n   * Starts a connection attempt\r\n   */\n\n\n  Connection.prototype.start_ = function () {\n    var _this = this;\n\n    var conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, undefined, this.lastSessionId); // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n    var onMessageReceived = this.connReceiver_(this.conn_);\n    var onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n    /*\r\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n     * still have the context of your originating frame.\r\n     */\n\n    setTimeout(function () {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n    var healthyTimeoutMS = conn['healthyTimeout'] || 0;\n\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(function () {\n        _this.healthyTimeout_ = null;\n\n        if (!_this.isHealthy_) {\n          if (_this.conn_ && _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\n            _this.log_('Connection exceeded healthy timeout but has received ' + _this.conn_.bytesReceived + ' bytes.  Marking connection healthy.');\n\n            _this.isHealthy_ = true;\n\n            _this.conn_.markConnectionHealthy();\n          } else if (_this.conn_ && _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\n            _this.log_('Connection exceeded healthy timeout but has sent ' + _this.conn_.bytesSent + ' bytes.  Leaving connection alive.'); // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n\n          } else {\n            _this.log_('Closing unhealthy connection after timeout.');\n\n            _this.close();\n          }\n        } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      }, Math.floor(healthyTimeoutMS));\n    }\n  };\n\n  Connection.prototype.nextTransportId_ = function () {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  };\n\n  Connection.prototype.disconnReceiver_ = function (conn) {\n    var _this = this;\n\n    return function (everConnected) {\n      if (conn === _this.conn_) {\n        _this.onConnectionLost_(everConnected);\n      } else if (conn === _this.secondaryConn_) {\n        _this.log_('Secondary connection lost.');\n\n        _this.onSecondaryConnectionLost_();\n      } else {\n        _this.log_('closing an old connection');\n      }\n    };\n  };\n\n  Connection.prototype.connReceiver_ = function (conn) {\n    var _this = this;\n\n    return function (message) {\n      if (_this.state_ !== 2\n      /* DISCONNECTED */\n      ) {\n          if (conn === _this.rx_) {\n            _this.onPrimaryMessageReceived_(message);\n          } else if (conn === _this.secondaryConn_) {\n            _this.onSecondaryMessageReceived_(message);\n          } else {\n            _this.log_('message on old connection');\n          }\n        }\n    };\n  };\n  /**\r\n   * @param dataMsg An arbitrary data message to be sent to the server\r\n   */\n\n\n  Connection.prototype.sendRequest = function (dataMsg) {\n    // wrap in a data message envelope and send it on\n    var msg = {\n      t: 'd',\n      d: dataMsg\n    };\n    this.sendData_(msg);\n  };\n\n  Connection.prototype.tryCleanupConnection = function () {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null; // the server will shutdown the old connection\n    }\n  };\n\n  Connection.prototype.onSecondaryControl_ = function (controlData) {\n    if (MESSAGE_TYPE in controlData) {\n      var cmd = controlData[MESSAGE_TYPE];\n\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close(); // If we were already using this connection for something, than we need to fully close\n\n        if (this.tx_ === this.secondaryConn_ || this.rx_ === this.secondaryConn_) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  };\n\n  Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\n    var layer = requireKey('t', parsedData);\n    var data = requireKey('d', parsedData);\n\n    if (layer === 'c') {\n      this.onSecondaryControl_(data);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  };\n\n  Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({\n        t: 'c',\n        d: {\n          t: PING,\n          d: {}\n        }\n      });\n    }\n  };\n\n  Connection.prototype.proceedWithUpgrade_ = function () {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start(); // send ack\n\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({\n      t: 'c',\n      d: {\n        t: SWITCH_ACK,\n        d: {}\n      }\n    }); // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n\n    this.log_('Ending transmission on primary');\n    this.conn_.send({\n      t: 'c',\n      d: {\n        t: END_TRANSMISSION,\n        d: {}\n      }\n    });\n    this.tx_ = this.secondaryConn_;\n    this.tryCleanupConnection();\n  };\n\n  Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    var layer = requireKey('t', parsedData);\n    var data = requireKey('d', parsedData);\n\n    if (layer === 'c') {\n      this.onControl_(data);\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  };\n\n  Connection.prototype.onDataMessage_ = function (message) {\n    this.onPrimaryResponse_(); // We don't do anything with data messages, just kick them up a level\n\n    this.onMessage_(message);\n  };\n\n  Connection.prototype.onPrimaryResponse_ = function () {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  };\n\n  Connection.prototype.onControl_ = function (controlData) {\n    var cmd = requireKey(MESSAGE_TYPE, controlData);\n\n    if (MESSAGE_DATA in controlData) {\n      var payload = controlData[MESSAGE_DATA];\n\n      if (cmd === SERVER_HELLO) {\n        this.onHandshake_(payload);\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n\n        for (var i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  };\n  /**\r\n   * @param handshake The handshake data returned from the server\r\n   */\n\n\n  Connection.prototype.onHandshake_ = function (handshake) {\n    var timestamp = handshake.ts;\n    var version = handshake.v;\n    var host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.updateHost(host); // if we've already closed the connection, then don't bother trying to progress further\n\n    if (this.state_ === 0\n    /* CONNECTING */\n    ) {\n        this.conn_.start();\n        this.onConnectionEstablished_(this.conn_, timestamp);\n\n        if (PROTOCOL_VERSION !== version) {\n          warn('Protocol version mismatch detected');\n        } // TODO: do we want to upgrade? when? maybe a delay?\n\n\n        this.tryStartUpgrade_();\n      }\n  };\n\n  Connection.prototype.tryStartUpgrade_ = function () {\n    var conn = this.transportManager_.upgradeTransport();\n\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  };\n\n  Connection.prototype.startUpgrade_ = function (conn) {\n    var _this = this;\n\n    this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.sessionId); // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n\n    this.secondaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n    var onMessage = this.connReceiver_(this.secondaryConn_);\n    var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect); // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n\n    setTimeoutNonBlocking(function () {\n      if (_this.secondaryConn_) {\n        _this.log_('Timed out trying to upgrade.');\n\n        _this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  };\n\n  Connection.prototype.onReset_ = function (host) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.updateHost(host); // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n\n    if (this.state_ === 1\n    /* CONNECTED */\n    ) {\n        this.close();\n      } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  };\n\n  Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\n    var _this = this;\n\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = 1\n    /* CONNECTED */\n    ;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    } // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n\n\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(function () {\n        _this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  };\n\n  Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === 1\n    /* CONNECTED */\n    ) {\n        this.log_('sending ping on primary.');\n        this.sendData_({\n          t: 'c',\n          d: {\n            t: PING,\n            d: {}\n          }\n        });\n      }\n  };\n\n  Connection.prototype.onSecondaryConnectionLost_ = function () {\n    var conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  };\n  /**\r\n   * @param everConnected Whether or not the connection ever reached a server. Used to determine if\r\n   * we should flush the host cache\r\n   */\n\n\n  Connection.prototype.onConnectionLost_ = function (everConnected) {\n    this.conn_ = null; // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n\n    if (!everConnected && this.state_ === 0\n    /* CONNECTING */\n    ) {\n        this.log_('Realtime connection failed.'); // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n\n        if (this.repoInfo_.isCacheableHost()) {\n          PersistentStorage.remove('host:' + this.repoInfo_.host); // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n\n          this.repoInfo_.internalHost = this.repoInfo_.host;\n        }\n      } else if (this.state_ === 1\n    /* CONNECTED */\n    ) {\n        this.log_('Realtime connection lost.');\n      }\n\n    this.close();\n  };\n\n  Connection.prototype.onConnectionShutdown_ = function (reason) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    } // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n\n\n    this.onDisconnect_ = null;\n    this.close();\n  };\n\n  Connection.prototype.sendData_ = function (data) {\n    if (this.state_ !== 1\n    /* CONNECTED */\n    ) {\n        throw 'Connection is not connected';\n      } else {\n      this.tx_.send(data);\n    }\n  };\n  /**\r\n   * Cleans up this connection, calling the appropriate callbacks\r\n   */\n\n\n  Connection.prototype.close = function () {\n    if (this.state_ !== 2\n    /* DISCONNECTED */\n    ) {\n        this.log_('Closing realtime connection.');\n        this.state_ = 2\n        /* DISCONNECTED */\n        ;\n        this.closeConnections_();\n\n        if (this.onDisconnect_) {\n          this.onDisconnect_();\n          this.onDisconnect_ = null;\n        }\n      }\n  };\n\n  Connection.prototype.closeConnections_ = function () {\n    this.log_('Shutting down all connections');\n\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  };\n\n  return Connection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\n\n\nvar ServerActions =\n/** @class */\nfunction () {\n  function ServerActions() {}\n\n  ServerActions.prototype.put = function (pathString, data, onComplete, hash) {};\n\n  ServerActions.prototype.merge = function (pathString, data, onComplete, hash) {};\n  /**\r\n   * Refreshes the auth token for the current connection.\r\n   * @param token The authentication token\r\n   */\n\n\n  ServerActions.prototype.refreshAuthToken = function (token) {};\n\n  ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) {};\n\n  ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) {};\n\n  ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) {};\n\n  ServerActions.prototype.reportStats = function (stats) {};\n\n  return ServerActions;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar RECONNECT_MIN_DELAY = 1000;\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\n\nvar GET_CONNECT_TIMEOUT = 3 * 1000;\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\n\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\n\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill'; // If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\n\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\n\nvar PersistentConnection =\n/** @class */\nfunction (_super) {\n  __extends(PersistentConnection, _super);\n  /**\r\n   * @param repoInfo_ Data about the namespace we are connecting to\r\n   * @param applicationId_ The Firebase App ID for this project\r\n   * @param onDataUpdate_ A callback for new data from the server\r\n   */\n\n\n  function PersistentConnection(repoInfo_, applicationId_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\n    var _this = _super.call(this) || this;\n\n    _this.repoInfo_ = repoInfo_;\n    _this.applicationId_ = applicationId_;\n    _this.onDataUpdate_ = onDataUpdate_;\n    _this.onConnectStatus_ = onConnectStatus_;\n    _this.onServerInfoUpdate_ = onServerInfoUpdate_;\n    _this.authTokenProvider_ = authTokenProvider_;\n    _this.authOverride_ = authOverride_; // Used for diagnostic logging.\n\n    _this.id = PersistentConnection.nextPersistentConnectionId_++;\n    _this.log_ = logWrapper('p:' + _this.id + ':');\n    _this.interruptReasons_ = {};\n    /** Map<path, Map<queryId, ListenSpec>> */\n\n    _this.listens = new Map();\n    _this.outstandingPuts_ = [];\n    _this.outstandingGets_ = [];\n    _this.outstandingPutCount_ = 0;\n    _this.outstandingGetCount_ = 0;\n    _this.onDisconnectRequestQueue_ = [];\n    _this.connected_ = false;\n    _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n    _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n    _this.securityDebugCallback_ = null;\n    _this.lastSessionId = null;\n    _this.establishConnectionTimer_ = null;\n    _this.visible_ = false; // Before we get connected, we keep a queue of pending messages to send.\n\n    _this.requestCBHash_ = {};\n    _this.requestNumber_ = 0;\n    _this.realtime_ = null;\n    _this.authToken_ = null;\n    _this.forceTokenRefresh_ = false;\n    _this.invalidAuthTokenCount_ = 0;\n    _this.firstConnection_ = true;\n    _this.lastConnectionAttemptTime_ = null;\n    _this.lastConnectionEstablishedTime_ = null;\n\n    if (authOverride_ && !isNodeSdk()) {\n      throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\n    }\n\n    _this.scheduleConnect_(0);\n\n    VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\n    }\n\n    return _this;\n  }\n\n  PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\n    var curReqNum = ++this.requestNumber_;\n    var msg = {\n      r: curReqNum,\n      a: action,\n      b: body\n    };\n    this.log_(stringify(msg));\n    assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\n    this.realtime_.sendRequest(msg);\n\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  };\n\n  PersistentConnection.prototype.get = function (query) {\n    var _this = this;\n\n    var deferred = new Deferred();\n    var request = {\n      p: query.path.toString(),\n      q: query.queryObject()\n    };\n    var outstandingGet = {\n      action: 'g',\n      request: request,\n      onComplete: function (message) {\n        var payload = message['d'];\n\n        if (message['s'] === 'ok') {\n          _this.onDataUpdate_(request['p'], payload,\n          /*isMerge*/\n          false,\n          /*tag*/\n          null);\n\n          deferred.resolve(payload);\n        } else {\n          deferred.reject(payload);\n        }\n      }\n    };\n    this.outstandingGets_.push(outstandingGet);\n    this.outstandingGetCount_++;\n    var index = this.outstandingGets_.length - 1;\n\n    if (!this.connected_) {\n      setTimeout(function () {\n        var get = _this.outstandingGets_[index];\n\n        if (get === undefined || outstandingGet !== get) {\n          return;\n        }\n\n        delete _this.outstandingGets_[index];\n        _this.outstandingGetCount_--;\n\n        if (_this.outstandingGetCount_ === 0) {\n          _this.outstandingGets_ = [];\n        }\n\n        _this.log_('get ' + index + ' timed out on connection');\n\n        deferred.reject(new Error('Client is offline.'));\n      }, GET_CONNECT_TIMEOUT);\n    }\n\n    if (this.connected_) {\n      this.sendGet_(index);\n    }\n\n    return deferred.promise;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n    var queryId = query.queryIdentifier();\n    var pathString = query.path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n\n    assert(query.getQueryParams().isDefault() || !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\n    assert(!this.listens.get(pathString).has(queryId), 'listen() called twice for same path/queryId.');\n    var listenSpec = {\n      onComplete: onComplete,\n      hashFn: currentHashFn,\n      query: query,\n      tag: tag\n    };\n    this.listens.get(pathString).set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  };\n\n  PersistentConnection.prototype.sendGet_ = function (index) {\n    var _this = this;\n\n    var get = this.outstandingGets_[index];\n    this.sendRequest('g', get.request, function (message) {\n      delete _this.outstandingGets_[index];\n      _this.outstandingGetCount_--;\n\n      if (_this.outstandingGetCount_ === 0) {\n        _this.outstandingGets_ = [];\n      }\n\n      if (get.onComplete) {\n        get.onComplete(message);\n      }\n    });\n  };\n\n  PersistentConnection.prototype.sendListen_ = function (listenSpec) {\n    var _this = this;\n\n    var query = listenSpec.query;\n    var pathString = query.path.toString();\n    var queryId = query.queryIdentifier();\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    var req = {\n      /*path*/\n      p: pathString\n    };\n    var action = 'q'; // Only bother to send query if it's non-default.\n\n    if (listenSpec.tag) {\n      req['q'] = query.queryObject();\n      req['t'] = listenSpec.tag;\n    }\n\n    req[\n    /*hash*/\n    'h'] = listenSpec.hashFn();\n    this.sendRequest(action, req, function (message) {\n      var payload = message[\n      /*data*/\n      'd'];\n      var status = message[\n      /*status*/\n      's']; // print warnings in any case...\n\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      var currentListenSpec = _this.listens.get(pathString) && _this.listens.get(pathString).get(queryId); // only trigger actions if the listen hasn't been removed and readded\n\n\n      if (currentListenSpec === listenSpec) {\n        _this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          _this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  };\n\n  PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\n    if (payload && typeof payload === 'object' && contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var warnings = safeGet(payload, 'w');\n\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        var indexSpec = '\".indexOn\": \"' + query.getQueryParams().getIndex().toString() + '\"';\n        var indexPath = query.path.toString();\n        warn(\"Using an unspecified index. Your data will be downloaded and \" + (\"filtered on the client. Consider adding \" + indexSpec + \" at \") + (indexPath + \" to your security rules for better performance.\"));\n      }\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.refreshAuthToken = function (token) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, function () {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  };\n\n  PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    var isFirebaseSecret = credential && credential.length === 40;\n\n    if (isFirebaseSecret || isAdmin(credential)) {\n      this.log_('Admin auth credential detected.  Reducing max reconnect time.');\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  };\n  /**\r\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n   * a auth revoked (the connection is closed).\r\n   */\n\n\n  PersistentConnection.prototype.tryAuth = function () {\n    var _this = this;\n\n    if (this.connected_ && this.authToken_) {\n      var token_1 = this.authToken_;\n      var authMethod = isValidFormat(token_1) ? 'auth' : 'gauth';\n      var requestData = {\n        cred: token_1\n      };\n\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n\n      this.sendRequest(authMethod, requestData, function (res) {\n        var status = res[\n        /*status*/\n        's'];\n        var data = res[\n        /*data*/\n        'd'] || 'error';\n\n        if (_this.authToken_ === token_1) {\n          if (status === 'ok') {\n            _this.invalidAuthTokenCount_ = 0;\n          } else {\n            // Triggers reconnect and force refresh for auth token\n            _this.onAuthRevoked_(status, data);\n          }\n        }\n      });\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.unlisten = function (query, tag) {\n    var pathString = query.path.toString();\n    var queryId = query.queryIdentifier();\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n    assert(query.getQueryParams().isDefault() || !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\n    var listen = this.removeListen_(pathString, queryId);\n\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\n    }\n  };\n\n  PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n    var req = {\n      /*path*/\n      p: pathString\n    };\n    var action = 'n'; // Only bother sending queryId if it's non-default.\n\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'o',\n        data: data,\n        onComplete: onComplete\n      });\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'om',\n        data: data,\n        onComplete: onComplete\n      });\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'oc',\n        data: null,\n        onComplete: onComplete\n      });\n    }\n  };\n\n  PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\n    var request = {\n      /*path*/\n      p: pathString,\n\n      /*data*/\n      d: data\n    };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, function (response) {\n      if (onComplete) {\n        setTimeout(function () {\n          onComplete(response[\n          /*status*/\n          's'], response[\n          /* data */\n          'd']);\n        }, Math.floor(0));\n      }\n    });\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  };\n\n  PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\n    var request = {\n      /*path*/\n      p: pathString,\n\n      /*data*/\n      d: data\n    };\n\n    if (hash !== undefined) {\n      request[\n      /*hash*/\n      'h'] = hash;\n    } // TODO: Only keep track of the most recent put for a given path?\n\n\n    this.outstandingPuts_.push({\n      action: action,\n      request: request,\n      onComplete: onComplete\n    });\n    this.outstandingPutCount_++;\n    var index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  };\n\n  PersistentConnection.prototype.sendPut_ = function (index) {\n    var _this = this;\n\n    var action = this.outstandingPuts_[index].action;\n    var request = this.outstandingPuts_[index].request;\n    var onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n    this.sendRequest(action, request, function (message) {\n      _this.log_(action + ' response', message);\n\n      delete _this.outstandingPuts_[index];\n      _this.outstandingPutCount_--; // Clean up array occasionally.\n\n      if (_this.outstandingPutCount_ === 0) {\n        _this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) {\n        onComplete(message[\n        /*status*/\n        's'], message[\n        /* data */\n        'd']);\n      }\n    });\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.reportStats = function (stats) {\n    var _this = this; // If we're not connected, we just drop the stats.\n\n\n    if (this.connected_) {\n      var request = {\n        /*counters*/\n        c: stats\n      };\n      this.log_('reportStats', request);\n      this.sendRequest(\n      /*stats*/\n      's', request, function (result) {\n        var status = result[\n        /*status*/\n        's'];\n\n        if (status !== 'ok') {\n          var errorReason = result[\n          /* data */\n          'd'];\n\n          _this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  };\n\n  PersistentConnection.prototype.onDataMessage_ = function (message) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + stringify(message));\n      var reqNum = message['r'];\n      var onResponse = this.requestCBHash_[reqNum];\n\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[\n        /*body*/\n        'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'], message['b']);\n    }\n  };\n\n  PersistentConnection.prototype.onDataPush_ = function (action, body) {\n    this.log_('handleServerMessage', action, body);\n\n    if (action === 'd') {\n      this.onDataUpdate_(body[\n      /*path*/\n      'p'], body[\n      /*data*/\n      'd'],\n      /*isMerge*/\n      false, body['t']);\n    } else if (action === 'm') {\n      this.onDataUpdate_(body[\n      /*path*/\n      'p'], body[\n      /*data*/\n      'd'],\n      /*isMerge=*/\n      true, body['t']);\n    } else if (action === 'c') {\n      this.onListenRevoked_(body[\n      /*path*/\n      'p'], body[\n      /*query*/\n      'q']);\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(body[\n      /*status code*/\n      's'], body[\n      /* explanation */\n      'd']);\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error('Unrecognized action received from server: ' + stringify(action) + '\\nAre you using the latest client?');\n    }\n  };\n\n  PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  };\n\n  PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\n    var _this = this;\n\n    assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    } // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n\n    this.establishConnectionTimer_ = setTimeout(function () {\n      _this.establishConnectionTimer_ = null;\n\n      _this.establishConnection_(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    }, Math.floor(timeout));\n  };\n\n  PersistentConnection.prototype.onVisible_ = function (visible) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (visible && !this.visible_ && this.reconnectDelay_ === this.maxReconnectDelay_) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n\n    this.visible_ = visible;\n  };\n\n  PersistentConnection.prototype.onOnline_ = function (online) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null; // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n\n    this.cancelSentTransactions_(); // Clear out the pending requests.\n\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\n\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\n      var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\n      reconnectDelay = Math.random() * reconnectDelay;\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay); // Adjust reconnect delay for next time.\n\n      this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\n    }\n\n    this.onConnectStatus_(false);\n  };\n\n  PersistentConnection.prototype.establishConnection_ = function () {\n    var _this = this;\n\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      var onDataMessage_1 = this.onDataMessage_.bind(this);\n      var onReady_1 = this.onReady_.bind(this);\n      var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\n      var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      var self_1 = this;\n      var lastSessionId_1 = this.lastSessionId;\n      var canceled_1 = false;\n      var connection_1 = null;\n\n      var closeFn_1 = function () {\n        if (connection_1) {\n          connection_1.close();\n        } else {\n          canceled_1 = true;\n          onDisconnect_1();\n        }\n      };\n\n      var sendRequestFn = function (msg) {\n        assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\n        connection_1.sendRequest(msg);\n      };\n\n      this.realtime_ = {\n        close: closeFn_1,\n        sendRequest: sendRequestFn\n      };\n      var forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false; // First fetch auth token, and establish connection after fetching the token was successful\n\n      this.authTokenProvider_.getToken(forceRefresh).then(function (result) {\n        if (!canceled_1) {\n          log('getToken() completed. Creating connection.');\n          self_1.authToken_ = result && result.accessToken;\n          connection_1 = new Connection(connId_1, self_1.repoInfo_, self_1.applicationId_, onDataMessage_1, onReady_1, onDisconnect_1,\n          /* onKill= */\n          function (reason) {\n            warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\n            self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\n          }, lastSessionId_1);\n        } else {\n          log('getToken() completed but was canceled');\n        }\n      }).then(null, function (error) {\n        self_1.log_('Failed to get token: ' + error);\n\n        if (!canceled_1) {\n          if (_this.repoInfo_.nodeAdmin) {\n            // This may be a critical error for the Admin Node.js SDK, so log a warning.\n            // But getToken() may also just have temporarily failed, so we still want to\n            // continue retrying.\n            warn(error);\n          }\n\n          closeFn_1();\n        }\n      });\n    }\n  };\n\n  PersistentConnection.prototype.interrupt = function (reason) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.resume = function (reason) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n\n    if (isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  };\n\n  PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\n    var delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({\n      serverTimeOffset: delta\n    });\n  };\n\n  PersistentConnection.prototype.cancelSentTransactions_ = function () {\n    for (var i = 0; i < this.outstandingPuts_.length; i++) {\n      var put = this.outstandingPuts_[i];\n\n      if (put &&\n      /*hash*/\n      'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    } // Clean up array occasionally.\n\n\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  };\n\n  PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    var queryId;\n\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(function (q) {\n        return ObjectToUniqueKey(q);\n      }).join('$');\n    }\n\n    var listen = this.removeListen_(pathString, queryId);\n\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  };\n\n  PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\n    var normalizedPathString = new Path(pathString).toString(); // normalize path.\n\n    var listen;\n\n    if (this.listens.has(normalizedPathString)) {\n      var map = this.listens.get(normalizedPathString);\n      listen = map.get(queryId);\n      map.delete(queryId);\n\n      if (map.size === 0) {\n        this.listens.delete(normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n\n    return listen;\n  };\n\n  PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n\n      if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS; // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\n      }\n    }\n  };\n\n  PersistentConnection.prototype.restoreState_ = function () {\n    var e_1, _a, e_2, _b; //Re-authenticate ourselves if we have a credential stored.\n\n\n    this.tryAuth();\n\n    try {\n      // Puts depend on having received the corresponding data update from the server before they complete, so we must\n      // make sure to send listens before puts.\n      for (var _c = __values(this.listens.values()), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var queries = _d.value;\n\n        try {\n          for (var _e = (e_2 = void 0, __values(queries.values())), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var listenSpec = _f.value;\n            this.sendListen_(listenSpec);\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    for (var i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      var request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\n    }\n\n    for (var i = 0; i < this.outstandingGets_.length; i++) {\n      if (this.outstandingGets_[i]) {\n        this.sendGet_(i);\n      }\n    }\n  };\n  /**\r\n   * Sends client stats for first connection\r\n   */\n\n\n  PersistentConnection.prototype.sendConnectStats_ = function () {\n    var stats = {};\n    var clientName = 'js';\n\n    if (isNodeSdk()) {\n      if (this.repoInfo_.nodeAdmin) {\n        clientName = 'admin_node';\n      } else {\n        clientName = 'node';\n      }\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n\n    this.reportStats(stats);\n  };\n\n  PersistentConnection.prototype.shouldReconnect_ = function () {\n    var online = OnlineMonitor.getInstance().currentlyOnline();\n    return isEmpty(this.interruptReasons_) && online;\n  };\n\n  PersistentConnection.nextPersistentConnectionId_ = 0;\n  /**\r\n   * Counter for number of connections created. Mainly used for tagging in the logs\r\n   */\n\n  PersistentConnection.nextConnectionId_ = 0;\n  return PersistentConnection;\n}(ServerActions);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\n\n\nvar ReadonlyRestClient =\n/** @class */\nfunction (_super) {\n  __extends(ReadonlyRestClient, _super);\n  /**\r\n   * @param repoInfo_ Data about the namespace we are connecting to\r\n   * @param onDataUpdate_ A callback for new data from the server\r\n   */\n\n\n  function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\n    var _this = _super.call(this) || this;\n\n    _this.repoInfo_ = repoInfo_;\n    _this.onDataUpdate_ = onDataUpdate_;\n    _this.authTokenProvider_ = authTokenProvider_;\n    /** @private {function(...[*])} */\n\n    _this.log_ = logWrapper('p:rest:');\n    /**\r\n     * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n     * that's been removed. :-/\r\n     */\n\n    _this.listens_ = {};\n    return _this;\n  }\n\n  ReadonlyRestClient.prototype.reportStats = function (stats) {\n    throw new Error('Method not implemented.');\n  };\n\n  ReadonlyRestClient.getListenId_ = function (query, tag) {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\n      return query.path.toString();\n    }\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n    var _this = this;\n\n    var pathString = query.path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier()); // Mark this listener so we can tell if it's removed.\n\n    var listenId = ReadonlyRestClient.getListenId_(query, tag);\n    var thisListen = {};\n    this.listens_[listenId] = thisListen;\n    var queryStringParameters = queryParamsToRestQueryStringParameters(query.getQueryParams());\n    this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\n      var data = result;\n\n      if (error === 404) {\n        data = null;\n        error = null;\n      }\n\n      if (error === null) {\n        _this.onDataUpdate_(pathString, data,\n        /*isMerge=*/\n        false, tag);\n      }\n\n      if (safeGet(_this.listens_, listenId) === thisListen) {\n        var status_1;\n\n        if (!error) {\n          status_1 = 'ok';\n        } else if (error === 401) {\n          status_1 = 'permission_denied';\n        } else {\n          status_1 = 'rest_error:' + error;\n        }\n\n        onComplete(status_1, null);\n      }\n    });\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.unlisten = function (query, tag) {\n    var listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  };\n\n  ReadonlyRestClient.prototype.get = function (query) {\n    var _this = this;\n\n    var queryStringParameters = queryParamsToRestQueryStringParameters(query.getQueryParams());\n    var pathString = query.path.toString();\n    var deferred = new Deferred();\n    this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\n      var data = result;\n\n      if (error === 404) {\n        data = null;\n        error = null;\n      }\n\n      if (error === null) {\n        _this.onDataUpdate_(pathString, data,\n        /*isMerge=*/\n        false,\n        /*tag=*/\n        null);\n\n        deferred.resolve(data);\n      } else {\n        deferred.reject(new Error(data));\n      }\n    });\n    return deferred.promise;\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.refreshAuthToken = function (token) {// no-op since we just always call getToken.\n  };\n  /**\r\n   * Performs a REST request to the given path, with the provided query string parameters,\r\n   * and any auth credentials we have.\r\n   */\n\n\n  ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\n    var _this = this;\n\n    if (queryStringParameters === void 0) {\n      queryStringParameters = {};\n    }\n\n    queryStringParameters['format'] = 'export';\n    this.authTokenProvider_.getToken(\n    /*forceRefresh=*/\n    false).then(function (authTokenData) {\n      var authToken = authTokenData && authTokenData.accessToken;\n\n      if (authToken) {\n        queryStringParameters['auth'] = authToken;\n      }\n\n      var url = (_this.repoInfo_.secure ? 'https://' : 'http://') + _this.repoInfo_.host + pathString + '?' + 'ns=' + _this.repoInfo_.namespace + querystring(queryStringParameters);\n\n      _this.log_('Sending REST request for ' + url);\n\n      var xhr = new XMLHttpRequest();\n\n      xhr.onreadystatechange = function () {\n        if (callback && xhr.readyState === 4) {\n          _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\n\n          var res = null;\n\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              res = jsonEval(xhr.responseText);\n            } catch (e) {\n              warn('Failed to parse JSON response for ' + url + ': ' + xhr.responseText);\n            }\n\n            callback(null, res);\n          } else {\n            // 401 and 404 are expected.\n            if (xhr.status !== 401 && xhr.status !== 404) {\n              warn('Got unsuccessful REST response for ' + url + ' Status: ' + xhr.status);\n            }\n\n            callback(xhr.status);\n          }\n\n          callback = null;\n        }\n      };\n\n      xhr.open('GET', url,\n      /*asynchronous=*/\n      true);\n      xhr.send();\n    });\n  };\n\n  return ReadonlyRestClient;\n}(ServerActions);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Node in a Tree.\r\n */\n\n\nvar TreeNode =\n/** @class */\nfunction () {\n  function TreeNode() {\n    // TODO: Consider making accessors that create children and value lazily or\n    // separate Internal / Leaf 'types'.\n    this.children = {};\n    this.childCount = 0;\n    this.value = null;\n  }\n\n  return TreeNode;\n}();\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\n\n\nvar Tree =\n/** @class */\nfunction () {\n  /**\r\n   * @param name_ Optional name of the node.\r\n   * @param parent_ Optional parent node.\r\n   * @param node_ Optional node to wrap.\r\n   */\n  function Tree(name_, parent_, node_) {\n    if (name_ === void 0) {\n      name_ = '';\n    }\n\n    if (parent_ === void 0) {\n      parent_ = null;\n    }\n\n    if (node_ === void 0) {\n      node_ = new TreeNode();\n    }\n\n    this.name_ = name_;\n    this.parent_ = parent_;\n    this.node_ = node_;\n  }\n  /**\r\n   * Returns a sub-Tree for the given path.\r\n   *\r\n   * @param pathObj Path to look up.\r\n   * @return Tree for path.\r\n   */\n\n\n  Tree.prototype.subTree = function (pathObj) {\n    // TODO: Require pathObj to be Path?\n    var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n    var child = this,\n        next = pathGetFront(path);\n\n    while (next !== null) {\n      var childNode = safeGet(child.node_.children, next) || new TreeNode();\n      child = new Tree(next, child, childNode);\n      path = pathPopFront(path);\n      next = pathGetFront(path);\n    }\n\n    return child;\n  };\n  /**\r\n   * Returns the data associated with this tree node.\r\n   *\r\n   * @return The data or null if no data exists.\r\n   */\n\n\n  Tree.prototype.getValue = function () {\n    return this.node_.value;\n  };\n  /**\r\n   * Sets data to this tree node.\r\n   *\r\n   * @param value Value to set.\r\n   */\n\n\n  Tree.prototype.setValue = function (value) {\n    assert(typeof value !== 'undefined', 'Cannot set value to undefined');\n    this.node_.value = value;\n    this.updateParents_();\n  };\n  /**\r\n   * Clears the contents of the tree node (its value and all children).\r\n   */\n\n\n  Tree.prototype.clear = function () {\n    this.node_.value = null;\n    this.node_.children = {};\n    this.node_.childCount = 0;\n    this.updateParents_();\n  };\n  /**\r\n   * @return Whether the tree has any children.\r\n   */\n\n\n  Tree.prototype.hasChildren = function () {\n    return this.node_.childCount > 0;\n  };\n  /**\r\n   * @return Whethe rthe tree is empty (no value or children).\r\n   */\n\n\n  Tree.prototype.isEmpty = function () {\n    return this.getValue() === null && !this.hasChildren();\n  };\n  /**\r\n   * Calls action for each child of this tree node.\r\n   *\r\n   * @param action Action to be called for each child.\r\n   */\n\n\n  Tree.prototype.forEachChild = function (action) {\n    var _this = this;\n\n    each(this.node_.children, function (child, childTree) {\n      action(new Tree(child, _this, childTree));\n    });\n  };\n  /**\r\n   * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n   *\r\n   * @param action Action to be called for each child.\r\n   * @param includeSelf Whether to call action on this node as well. Defaults to\r\n   *   false.\r\n   * @param childrenFirst Whether to call action on children before calling it on\r\n   *   parent.\r\n   */\n\n\n  Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\n    if (includeSelf && !childrenFirst) {\n      action(this);\n    }\n\n    this.forEachChild(function (child) {\n      child.forEachDescendant(action,\n      /*includeSelf=*/\n      true, childrenFirst);\n    });\n\n    if (includeSelf && childrenFirst) {\n      action(this);\n    }\n  };\n  /**\r\n   * Calls action on each ancestor node.\r\n   *\r\n   * @param action Action to be called on each parent; return\r\n   *   true to abort.\r\n   * @param includeSelf Whether to call action on this node as well.\r\n   * @return true if the action callback returned true.\r\n   */\n\n\n  Tree.prototype.forEachAncestor = function (action, includeSelf) {\n    var node = includeSelf ? this : this.parent();\n\n    while (node !== null) {\n      if (action(node)) {\n        return true;\n      }\n\n      node = node.parent();\n    }\n\n    return false;\n  };\n  /**\r\n   * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n   * is found, action is called on it and traversal does not continue inside the node.\r\n   * Action is *not* called on this node.\r\n   *\r\n   * @param action Action to be called for each child.\r\n   */\n\n\n  Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\n    this.forEachChild(function (child) {\n      if (child.getValue() !== null) {\n        action(child);\n      } else {\n        child.forEachImmediateDescendantWithValue(action);\n      }\n    });\n  };\n  /**\r\n   * @return The path of this tree node, as a Path.\r\n   */\n\n\n  Tree.prototype.path = function () {\n    return new Path(this.parent_ === null ? this.name_ : this.parent_.path() + '/' + this.name_);\n  };\n  /**\r\n   * @return The name of the tree node.\r\n   */\n\n\n  Tree.prototype.name = function () {\n    return this.name_;\n  };\n  /**\r\n   * @return The parent tree node, or null if this is the root of the tree.\r\n   */\n\n\n  Tree.prototype.parent = function () {\n    return this.parent_;\n  };\n  /**\r\n   * Adds or removes this child from its parent based on whether it's empty or not.\r\n   */\n\n\n  Tree.prototype.updateParents_ = function () {\n    if (this.parent_ !== null) {\n      this.parent_.updateChild_(this.name_, this);\n    }\n  };\n  /**\r\n   * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n   *\r\n   * @param childName The name of the child to update.\r\n   * @param child The child to update.\r\n   */\n\n\n  Tree.prototype.updateChild_ = function (childName, child) {\n    var childEmpty = child.isEmpty();\n    var childExists = contains(this.node_.children, childName);\n\n    if (childEmpty && childExists) {\n      delete this.node_.children[childName];\n      this.node_.childCount--;\n      this.updateParents_();\n    } else if (!childEmpty && !childExists) {\n      this.node_.children[childName] = child.node_;\n      this.node_.childCount++;\n      this.updateParents_();\n    }\n  };\n\n  return Tree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar INTERRUPT_REASON = 'repo_interrupt';\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it. Among other\r\n * things this ensure that if there's ever a bug causing a mismatch between\r\n * client / server hashes for some data, we won't retry indefinitely.\r\n */\n\nvar MAX_TRANSACTION_RETRIES = 25;\nvar TransactionStatus;\n\n(function (TransactionStatus) {\n  // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n  // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n  // mismatched hash.\n  TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\"; // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n  // or rejected yet).\n\n  TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\"; // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n  // removed when we get a chance to prune completed ones.\n\n  TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\"; // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n  // If it comes back as unsuccessful, we'll abort it.\n\n  TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\"; // Temporary state used to mark transactions that need to be aborted.\n\n  TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\n})(TransactionStatus || (TransactionStatus = {}));\n/**\r\n * A connection to a single data repository.\r\n */\n\n\nvar Repo =\n/** @class */\nfunction () {\n  function Repo(repoInfo_, forceRestClient_, app, authTokenProvider_) {\n    this.repoInfo_ = repoInfo_;\n    this.forceRestClient_ = forceRestClient_;\n    this.app = app;\n    this.authTokenProvider_ = authTokenProvider_;\n    this.dataUpdateCount = 0;\n    this.statsListener_ = null;\n    this.eventQueue_ = new EventQueue();\n    this.nextWriteId_ = 1;\n    this.interceptServerDataCallback_ = null;\n    /** A list of data pieces and paths to be set when this client disconnects. */\n\n    this.onDisconnect_ = new SparseSnapshotTree();\n    /** Stores queues of outstanding transactions for Firebase locations. */\n\n    this.transactionQueueTree_ = new Tree(); // TODO: This should be @private but it's used by test_access.js and internal.js\n\n    this.persistentConnection_ = null; // This key is intentionally not updated if RepoInfo is later changed or replaced\n\n    this.key = this.repoInfo_.toURLString();\n  }\n\n  Repo.prototype.start = function () {\n    var _this = this;\n\n    this.stats_ = StatsManager.getCollection(this.repoInfo_);\n\n    if (this.forceRestClient_ || beingCrawled()) {\n      this.server_ = new ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), this.authTokenProvider_); // Minor hack: Fire onConnect immediately, since there's no actual connection.\n\n      setTimeout(this.onConnectStatus_.bind(this, true), 0);\n    } else {\n      var authOverride = this.app.options['databaseAuthVariableOverride']; // Validate authOverride\n\n      if (typeof authOverride !== 'undefined' && authOverride !== null) {\n        if (typeof authOverride !== 'object') {\n          throw new Error('Only objects are supported for option databaseAuthVariableOverride');\n        }\n\n        try {\n          stringify(authOverride);\n        } catch (e) {\n          throw new Error('Invalid authOverride provided: ' + e);\n        }\n      }\n\n      this.persistentConnection_ = new PersistentConnection(this.repoInfo_, this.app.options.appId, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), this.authTokenProvider_, authOverride);\n      this.server_ = this.persistentConnection_;\n    }\n\n    this.authTokenProvider_.addTokenChangeListener(function (token) {\n      _this.server_.refreshAuthToken(token);\n    }); // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n    // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n\n    this.statsReporter_ = StatsManager.getOrCreateReporter(this.repoInfo_, function () {\n      return new StatsReporter(_this.stats_, _this.server_);\n    }); // Used for .info.\n\n    this.infoData_ = new SnapshotHolder();\n    this.infoSyncTree_ = new SyncTree({\n      startListening: function (query, tag, currentHashFn, onComplete) {\n        var infoEvents = [];\n\n        var node = _this.infoData_.getNode(query.path); // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n        // on initial data...\n\n\n        if (!node.isEmpty()) {\n          infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\n          setTimeout(function () {\n            onComplete('ok');\n          }, 0);\n        }\n\n        return infoEvents;\n      },\n      stopListening: function () {}\n    });\n    this.updateInfo_('connected', false);\n    this.serverSyncTree_ = new SyncTree({\n      startListening: function (query, tag, currentHashFn, onComplete) {\n        _this.server_.listen(query, currentHashFn, tag, function (status, data) {\n          var events = onComplete(status, data);\n          eventQueueRaiseEventsForChangedPath(_this.eventQueue_, query.path, events);\n        }); // No synchronous events for network-backed sync trees\n\n\n        return [];\n      },\n      stopListening: function (query, tag) {\n        _this.server_.unlisten(query, tag);\n      }\n    });\n  };\n  /**\r\n   * @return The URL corresponding to the root of this Firebase.\r\n   */\n\n\n  Repo.prototype.toString = function () {\n    return (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host;\n  };\n  /**\r\n   * @return The namespace represented by the repo.\r\n   */\n\n\n  Repo.prototype.name = function () {\n    return this.repoInfo_.namespace;\n  };\n  /**\r\n   * @return The time in milliseconds, taking the server offset into account if we have one.\r\n   */\n\n\n  Repo.prototype.serverTime = function () {\n    var offsetNode = this.infoData_.getNode(new Path('.info/serverTimeOffset'));\n    var offset = offsetNode.val() || 0;\n    return new Date().getTime() + offset;\n  };\n  /**\r\n   * Generate ServerValues using some variables from the repo object.\r\n   */\n\n\n  Repo.prototype.generateServerValues = function () {\n    return generateWithValues({\n      timestamp: this.serverTime()\n    });\n  };\n  /**\r\n   * Called by realtime when we get new messages from the server.\r\n   */\n\n\n  Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\n    // For testing.\n    this.dataUpdateCount++;\n    var path = new Path(pathString);\n    data = this.interceptServerDataCallback_ ? this.interceptServerDataCallback_(pathString, data) : data;\n    var events = [];\n\n    if (tag) {\n      if (isMerge) {\n        var taggedChildren = map(data, function (raw) {\n          return nodeFromJSON$1(raw);\n        });\n        events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\n      } else {\n        var taggedSnap = nodeFromJSON$1(data);\n        events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\n      }\n    } else if (isMerge) {\n      var changedChildren = map(data, function (raw) {\n        return nodeFromJSON$1(raw);\n      });\n      events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\n    } else {\n      var snap = nodeFromJSON$1(data);\n      events = this.serverSyncTree_.applyServerOverwrite(path, snap);\n    }\n\n    var affectedPath = path;\n\n    if (events.length > 0) {\n      // Since we have a listener outstanding for each transaction, receiving any events\n      // is a proxy for some change having occurred.\n      affectedPath = this.rerunTransactions_(path);\n    }\n\n    eventQueueRaiseEventsForChangedPath(this.eventQueue_, affectedPath, events);\n  }; // TODO: This should be @private but it's used by test_access.js and internal.js\n\n\n  Repo.prototype.interceptServerData_ = function (callback) {\n    this.interceptServerDataCallback_ = callback;\n  };\n\n  Repo.prototype.onConnectStatus_ = function (connectStatus) {\n    this.updateInfo_('connected', connectStatus);\n\n    if (connectStatus === false) {\n      this.runOnDisconnectEvents_();\n    }\n  };\n\n  Repo.prototype.onServerInfoUpdate_ = function (updates) {\n    var _this = this;\n\n    each(updates, function (key, value) {\n      _this.updateInfo_(key, value);\n    });\n  };\n\n  Repo.prototype.updateInfo_ = function (pathString, value) {\n    var path = new Path('/.info/' + pathString);\n    var newNode = nodeFromJSON$1(value);\n    this.infoData_.updateSnapshot(path, newNode);\n    var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\n    eventQueueRaiseEventsForChangedPath(this.eventQueue_, path, events);\n  };\n\n  Repo.prototype.getNextWriteId_ = function () {\n    return this.nextWriteId_++;\n  };\n  /**\r\n   * The purpose of `getValue` is to return the latest known value\r\n   * satisfying `query`.\r\n   *\r\n   * This method will first check for in-memory cached values\r\n   * belonging to active listeners. If they are found, such values\r\n   * are considered to be the most up-to-date.\r\n   *\r\n   * If the client is not connected, this method will try to\r\n   * establish a connection and request the value for `query`. If\r\n   * the client is not able to retrieve the query result, it reports\r\n   * an error.\r\n   *\r\n   * @param query - The query to surface a value for.\r\n   */\n\n\n  Repo.prototype.getValue = function (query) {\n    var _this = this; // Only active queries are cached. There is no persisted cache.\n\n\n    var cached = this.serverSyncTree_.getServerValue(query);\n\n    if (cached != null) {\n      return Promise.resolve(new DataSnapshot(cached, query.getRef(), query.getQueryParams().getIndex()));\n    }\n\n    return this.server_.get(query).then(function (payload) {\n      var node = nodeFromJSON$1(payload);\n\n      var events = _this.serverSyncTree_.applyServerOverwrite(query.path, node);\n\n      eventQueueRaiseEventsAtPath(_this.eventQueue_, query.path, events);\n      return Promise.resolve(new DataSnapshot(node, query.getRef(), query.getQueryParams().getIndex()));\n    }, function (err) {\n      _this.log_('get for query ' + stringify(query) + ' failed: ' + err);\n\n      return Promise.reject(new Error(err));\n    });\n  };\n\n  Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\n    var _this = this;\n\n    this.log_('set', {\n      path: path.toString(),\n      value: newVal,\n      priority: newPriority\n    }); // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n    // (b) store unresolved paths on JSON parse\n\n    var serverValues = this.generateServerValues();\n    var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\n    var existing = this.serverSyncTree_.calcCompleteEventCache(path);\n    var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\n    var writeId = this.getNextWriteId_();\n    var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\n    eventQueueQueueEvents(this.eventQueue_, events);\n    this.server_.put(path.toString(), newNodeUnresolved.val(\n    /*export=*/\n    true), function (status, errorReason) {\n      var success = status === 'ok';\n\n      if (!success) {\n        warn('set at ' + path + ' failed: ' + status);\n      }\n\n      var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\n\n      eventQueueRaiseEventsForChangedPath(_this.eventQueue_, path, clearEvents);\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n    var affectedPath = this.abortTransactions_(path);\n    this.rerunTransactions_(affectedPath); // We queued the events above, so just flush the queue here\n\n    eventQueueRaiseEventsForChangedPath(this.eventQueue_, affectedPath, []);\n  };\n\n  Repo.prototype.update = function (path, childrenToMerge, onComplete) {\n    var _this = this;\n\n    this.log_('update', {\n      path: path.toString(),\n      value: childrenToMerge\n    }); // Start with our existing data and merge each child into it.\n\n    var empty = true;\n    var serverValues = this.generateServerValues();\n    var changedChildren = {};\n    each(childrenToMerge, function (changedKey, changedValue) {\n      empty = false;\n      changedChildren[changedKey] = resolveDeferredValueTree(pathChild(path, changedKey), nodeFromJSON$1(changedValue), _this.serverSyncTree_, serverValues);\n    });\n\n    if (!empty) {\n      var writeId_1 = this.getNextWriteId_();\n      var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\n      eventQueueQueueEvents(this.eventQueue_, events);\n      this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\n        var success = status === 'ok';\n\n        if (!success) {\n          warn('update at ' + path + ' failed: ' + status);\n        }\n\n        var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\n\n        var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\n        eventQueueRaiseEventsForChangedPath(_this.eventQueue_, affectedPath, clearEvents);\n\n        _this.callOnCompleteCallback(onComplete, status, errorReason);\n      });\n      each(childrenToMerge, function (changedPath) {\n        var affectedPath = _this.abortTransactions_(pathChild(path, changedPath));\n\n        _this.rerunTransactions_(affectedPath);\n      }); // We queued the events above, so just flush the queue here\n\n      eventQueueRaiseEventsForChangedPath(this.eventQueue_, path, []);\n    } else {\n      log(\"update() called with empty data.  Don't do anything.\");\n      this.callOnCompleteCallback(onComplete, 'ok');\n    }\n  };\n  /**\r\n   * Applies all of the changes stored up in the onDisconnect_ tree.\r\n   */\n\n\n  Repo.prototype.runOnDisconnectEvents_ = function () {\n    var _this = this;\n\n    this.log_('onDisconnectEvents');\n    var serverValues = this.generateServerValues();\n    var resolvedOnDisconnectTree = new SparseSnapshotTree();\n    this.onDisconnect_.forEachTree(newEmptyPath(), function (path, node) {\n      var resolved = resolveDeferredValueTree(path, node, _this.serverSyncTree_, serverValues);\n      resolvedOnDisconnectTree.remember(path, resolved);\n    });\n    var events = [];\n    resolvedOnDisconnectTree.forEachTree(newEmptyPath(), function (path, snap) {\n      events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\n\n      var affectedPath = _this.abortTransactions_(path);\n\n      _this.rerunTransactions_(affectedPath);\n    });\n    this.onDisconnect_ = new SparseSnapshotTree();\n    eventQueueRaiseEventsForChangedPath(this.eventQueue_, newEmptyPath(), events);\n  };\n\n  Repo.prototype.onDisconnectCancel = function (path, onComplete) {\n    var _this = this;\n\n    this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\n      if (status === 'ok') {\n        _this.onDisconnect_.forget(path);\n      }\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  };\n\n  Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\n    var _this = this;\n\n    var newNode = nodeFromJSON$1(value);\n    this.server_.onDisconnectPut(path.toString(), newNode.val(\n    /*export=*/\n    true), function (status, errorReason) {\n      if (status === 'ok') {\n        _this.onDisconnect_.remember(path, newNode);\n      }\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  };\n\n  Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\n    var _this = this;\n\n    var newNode = nodeFromJSON$1(value, priority);\n    this.server_.onDisconnectPut(path.toString(), newNode.val(\n    /*export=*/\n    true), function (status, errorReason) {\n      if (status === 'ok') {\n        _this.onDisconnect_.remember(path, newNode);\n      }\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  };\n\n  Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\n    var _this = this;\n\n    if (isEmpty(childrenToMerge)) {\n      log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n      this.callOnCompleteCallback(onComplete, 'ok');\n      return;\n    }\n\n    this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\n      if (status === 'ok') {\n        each(childrenToMerge, function (childName, childNode) {\n          var newChildNode = nodeFromJSON$1(childNode);\n\n          _this.onDisconnect_.remember(pathChild(path, childName), newChildNode);\n        });\n      }\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  };\n\n  Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\n    var events;\n\n    if (pathGetFront(query.path) === '.info') {\n      events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\n    } else {\n      events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\n    }\n\n    eventQueueRaiseEventsAtPath(this.eventQueue_, query.path, events);\n  };\n\n  Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\n    // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n    // a little bit by handling the return values anyways.\n    var events;\n\n    if (pathGetFront(query.path) === '.info') {\n      events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\n    } else {\n      events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\n    }\n\n    eventQueueRaiseEventsAtPath(this.eventQueue_, query.path, events);\n  };\n\n  Repo.prototype.interrupt = function () {\n    if (this.persistentConnection_) {\n      this.persistentConnection_.interrupt(INTERRUPT_REASON);\n    }\n  };\n\n  Repo.prototype.resume = function () {\n    if (this.persistentConnection_) {\n      this.persistentConnection_.resume(INTERRUPT_REASON);\n    }\n  };\n\n  Repo.prototype.stats = function (showDelta) {\n    if (showDelta === void 0) {\n      showDelta = false;\n    }\n\n    if (typeof console === 'undefined') {\n      return;\n    }\n\n    var stats;\n\n    if (showDelta) {\n      if (!this.statsListener_) {\n        this.statsListener_ = new StatsListener(this.stats_);\n      }\n\n      stats = this.statsListener_.get();\n    } else {\n      stats = this.stats_.get();\n    }\n\n    var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\n      return Math.max(currentValue.length, previousValue);\n    }, 0);\n    each(stats, function (stat, value) {\n      var paddedStat = stat; // pad stat names to be the same length (plus 2 extra spaces).\n\n      for (var i = stat.length; i < longestName + 2; i++) {\n        paddedStat += ' ';\n      }\n\n      console.log(paddedStat + value);\n    });\n  };\n\n  Repo.prototype.statsIncrementCounter = function (metric) {\n    this.stats_.incrementCounter(metric);\n    this.statsReporter_.includeStat(metric);\n  };\n\n  Repo.prototype.log_ = function () {\n    var varArgs = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      varArgs[_i] = arguments[_i];\n    }\n\n    var prefix = '';\n\n    if (this.persistentConnection_) {\n      prefix = this.persistentConnection_.id + ':';\n    }\n\n    log.apply(void 0, __spread([prefix], varArgs));\n  };\n\n  Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\n    if (callback) {\n      exceptionGuard(function () {\n        if (status === 'ok') {\n          callback(null);\n        } else {\n          var code = (status || 'error').toUpperCase();\n          var message = code;\n\n          if (errorReason) {\n            message += ': ' + errorReason;\n          }\n\n          var error = new Error(message); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n          error.code = code;\n          callback(error);\n        }\n      });\n    }\n  };\n\n  Object.defineProperty(Repo.prototype, \"database\", {\n    get: function () {\n      return this.__database || (this.__database = new Database(this));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Creates a new transaction, adds it to the transactions we're tracking, and\r\n   * sends it to the server if possible.\r\n   *\r\n   * @param path Path at which to do transaction.\r\n   * @param transactionUpdate Update callback.\r\n   * @param onComplete Completion callback.\r\n   * @param applyLocally Whether or not to make intermediate results visible\r\n   */\n\n  Repo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\n    this.log_('transaction on ' + path); // Add a watch to make sure we get server updates.\n\n    var valueCallback = function () {};\n\n    var watchRef = new Reference(this, path);\n    watchRef.on('value', valueCallback);\n\n    var unwatcher = function () {\n      watchRef.off('value', valueCallback);\n    }; // Initialize transaction.\n\n\n    var transaction = {\n      path: path,\n      update: transactionUpdate,\n      onComplete: onComplete,\n      // One of TransactionStatus enums.\n      status: null,\n      // Used when combining transactions at different locations to figure out\n      // which one goes first.\n      order: LUIDGenerator(),\n      // Whether to raise local events for this transaction.\n      applyLocally: applyLocally,\n      // Count of how many times we've retried the transaction.\n      retryCount: 0,\n      // Function to call to clean up our .on() listener.\n      unwatcher: unwatcher,\n      // Stores why a transaction was aborted.\n      abortReason: null,\n      currentWriteId: null,\n      currentInputSnapshot: null,\n      currentOutputSnapshotRaw: null,\n      currentOutputSnapshotResolved: null\n    }; // Run transaction initially.\n\n    var currentState = this.getLatestState_(path);\n    transaction.currentInputSnapshot = currentState;\n    var newVal = transaction.update(currentState.val());\n\n    if (newVal === undefined) {\n      // Abort transaction.\n      transaction.unwatcher();\n      transaction.currentOutputSnapshotRaw = null;\n      transaction.currentOutputSnapshotResolved = null;\n\n      if (transaction.onComplete) {\n        // We just set the input snapshot, so this cast should be safe\n        var snapshot = new DataSnapshot(transaction.currentInputSnapshot, new Reference(this, transaction.path), PRIORITY_INDEX);\n        transaction.onComplete(null, false, snapshot);\n      }\n    } else {\n      validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path); // Mark as run and add to our queue.\n\n      transaction.status = TransactionStatus.RUN;\n      var queueNode = this.transactionQueueTree_.subTree(path);\n      var nodeQueue = queueNode.getValue() || [];\n      nodeQueue.push(transaction);\n      queueNode.setValue(nodeQueue); // Update visibleData and raise events\n      // Note: We intentionally raise events after updating all of our\n      // transaction state, since the user could start new transactions from the\n      // event callbacks.\n\n      var priorityForNode = void 0;\n\n      if (typeof newVal === 'object' && newVal !== null && contains(newVal, '.priority')) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        priorityForNode = safeGet(newVal, '.priority');\n        assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' + 'Priority must be a valid string, finite number, server value, or null.');\n      } else {\n        var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) || ChildrenNode.EMPTY_NODE;\n        priorityForNode = currentNode.getPriority().val();\n      }\n\n      var serverValues = this.generateServerValues();\n      var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\n      var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\n      transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n      transaction.currentOutputSnapshotResolved = newNode;\n      transaction.currentWriteId = this.getNextWriteId_();\n      var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\n      eventQueueRaiseEventsForChangedPath(this.eventQueue_, path, events);\n      this.sendReadyTransactions_();\n    }\n  };\n  /**\r\n   * @param excludeSets A specific set to exclude\r\n   */\n\n\n  Repo.prototype.getLatestState_ = function (path, excludeSets) {\n    return this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) || ChildrenNode.EMPTY_NODE;\n  };\n  /**\r\n   * Sends any already-run transactions that aren't waiting for outstanding\r\n   * transactions to complete.\r\n   *\r\n   * Externally it's called with no arguments, but it calls itself recursively\r\n   * with a particular transactionQueueTree node to recurse through the tree.\r\n   *\r\n   * @param node transactionQueueTree node to start at.\r\n   */\n\n\n  Repo.prototype.sendReadyTransactions_ = function (node) {\n    var _this = this;\n\n    if (node === void 0) {\n      node = this.transactionQueueTree_;\n    } // Before recursing, make sure any completed transactions are removed.\n\n\n    if (!node) {\n      this.pruneCompletedTransactionsBelowNode_(node);\n    }\n\n    if (node.getValue() !== null) {\n      var queue = this.buildTransactionQueue_(node);\n      assert(queue.length > 0, 'Sending zero length transaction queue');\n      var allRun = queue.every(function (transaction) {\n        return transaction.status === TransactionStatus.RUN;\n      }); // If they're all run (and not sent), we can send them.  Else, we must wait.\n\n      if (allRun) {\n        this.sendTransactionQueue_(node.path(), queue);\n      }\n    } else if (node.hasChildren()) {\n      node.forEachChild(function (childNode) {\n        _this.sendReadyTransactions_(childNode);\n      });\n    }\n  };\n  /**\r\n   * Given a list of run transactions, send them to the server and then handle\r\n   * the result (success or failure).\r\n   *\r\n   * @param path The location of the queue.\r\n   * @param queue Queue of transactions under the specified location.\r\n   */\n\n\n  Repo.prototype.sendTransactionQueue_ = function (path, queue) {\n    var _this = this; // Mark transactions as sent and increment retry count!\n\n\n    var setsToIgnore = queue.map(function (txn) {\n      return txn.currentWriteId;\n    });\n    var latestState = this.getLatestState_(path, setsToIgnore);\n    var snapToSend = latestState;\n    var latestHash = latestState.hash();\n\n    for (var i = 0; i < queue.length; i++) {\n      var txn = queue[i];\n      assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\n      txn.status = TransactionStatus.SENT;\n      txn.retryCount++;\n      var relativePath = newRelativePath(path, txn.path); // If we've gotten to this point, the output snapshot must be defined.\n\n      snapToSend = snapToSend.updateChild(relativePath\n      /** @type {!Node} */\n      , txn.currentOutputSnapshotRaw);\n    }\n\n    var dataToSend = snapToSend.val(true);\n    var pathToSend = path; // Send the put.\n\n    this.server_.put(pathToSend.toString(), dataToSend, function (status) {\n      _this.log_('transaction put response', {\n        path: pathToSend.toString(),\n        status: status\n      });\n\n      var events = [];\n\n      if (status === 'ok') {\n        // Queue up the callbacks and fire them after cleaning up all of our\n        // transaction state, since the callback could trigger more\n        // transactions or sets.\n        var callbacks = [];\n\n        for (var i = 0; i < queue.length; i++) {\n          queue[i].status = TransactionStatus.COMPLETED;\n          events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\n\n          if (queue[i].onComplete) {\n            // We never unset the output snapshot, and given that this\n            // transaction is complete, it should be set\n            var node = queue[i].currentOutputSnapshotResolved;\n            var ref = new Reference(_this, queue[i].path);\n            var snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\n            callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\n          }\n\n          queue[i].unwatcher();\n        } // Now remove the completed transactions.\n\n\n        _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path)); // There may be pending transactions that we can now send.\n\n\n        _this.sendReadyTransactions_();\n\n        eventQueueRaiseEventsForChangedPath(_this.eventQueue_, path, events); // Finally, trigger onComplete callbacks.\n\n        for (var i = 0; i < callbacks.length; i++) {\n          exceptionGuard(callbacks[i]);\n        }\n      } else {\n        // transactions are no longer sent.  Update their status appropriately.\n        if (status === 'datastale') {\n          for (var i = 0; i < queue.length; i++) {\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n              queue[i].status = TransactionStatus.NEEDS_ABORT;\n            } else {\n              queue[i].status = TransactionStatus.RUN;\n            }\n          }\n        } else {\n          warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\n\n          for (var i = 0; i < queue.length; i++) {\n            queue[i].status = TransactionStatus.NEEDS_ABORT;\n            queue[i].abortReason = status;\n          }\n        }\n\n        _this.rerunTransactions_(path);\n      }\n    }, latestHash);\n  };\n  /**\r\n   * Finds all transactions dependent on the data at changedPath and reruns them.\r\n   *\r\n   * Should be called any time cached data changes.\r\n   *\r\n   * Return the highest path that was affected by rerunning transactions. This\r\n   * is the path at which events need to be raised for.\r\n   *\r\n   * @param changedPath The path in mergedData that changed.\r\n   * @return The rootmost path that was affected by rerunning transactions.\r\n   */\n\n\n  Repo.prototype.rerunTransactions_ = function (changedPath) {\n    var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\n    var path = rootMostTransactionNode.path();\n    var queue = this.buildTransactionQueue_(rootMostTransactionNode);\n    this.rerunTransactionQueue_(queue, path);\n    return path;\n  };\n  /**\r\n   * Does all the work of rerunning transactions (as well as cleans up aborted\r\n   * transactions and whatnot).\r\n   *\r\n   * @param queue The queue of transactions to run.\r\n   * @param path The path the queue is for.\r\n   */\n\n\n  Repo.prototype.rerunTransactionQueue_ = function (queue, path) {\n    if (queue.length === 0) {\n      return; // Nothing to do!\n    } // Queue up the callbacks and fire them after cleaning up all of our\n    // transaction state, since the callback could trigger more transactions or\n    // sets.\n\n\n    var callbacks = [];\n    var events = []; // Ignore all of the sets we're going to re-run.\n\n    var txnsToRerun = queue.filter(function (q) {\n      return q.status === TransactionStatus.RUN;\n    });\n    var setsToIgnore = txnsToRerun.map(function (q) {\n      return q.currentWriteId;\n    });\n\n    for (var i = 0; i < queue.length; i++) {\n      var transaction = queue[i];\n      var relativePath = newRelativePath(path, transaction.path);\n      var abortTransaction = false,\n          abortReason = void 0;\n      assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\n\n      if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n        abortTransaction = true;\n        abortReason = transaction.abortReason;\n        events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n      } else if (transaction.status === TransactionStatus.RUN) {\n        if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\n          abortTransaction = true;\n          abortReason = 'maxretry';\n          events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n        } else {\n          // This code reruns a transaction\n          var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\n          transaction.currentInputSnapshot = currentNode;\n          var newData = queue[i].update(currentNode.val());\n\n          if (newData !== undefined) {\n            validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\n            var newDataNode = nodeFromJSON$1(newData);\n            var hasExplicitPriority = typeof newData === 'object' && newData != null && contains(newData, '.priority');\n\n            if (!hasExplicitPriority) {\n              // Keep the old priority if there wasn't a priority explicitly specified.\n              newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n            }\n\n            var oldWriteId = transaction.currentWriteId;\n            var serverValues = this.generateServerValues();\n            var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\n            transaction.currentOutputSnapshotRaw = newDataNode;\n            transaction.currentOutputSnapshotResolved = newNodeResolved;\n            transaction.currentWriteId = this.getNextWriteId_(); // Mutates setsToIgnore in place\n\n            setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n            events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\n            events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\n          } else {\n            abortTransaction = true;\n            abortReason = 'nodata';\n            events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n          }\n        }\n      }\n\n      eventQueueRaiseEventsForChangedPath(this.eventQueue_, path, events);\n      events = [];\n\n      if (abortTransaction) {\n        // Abort.\n        queue[i].status = TransactionStatus.COMPLETED; // Removing a listener can trigger pruning which can muck with\n        // mergedData/visibleData (as it prunes data). So defer the unwatcher\n        // until we're done.\n\n        (function (unwatcher) {\n          setTimeout(unwatcher, Math.floor(0));\n        })(queue[i].unwatcher);\n\n        if (queue[i].onComplete) {\n          if (abortReason === 'nodata') {\n            var ref = new Reference(this, queue[i].path); // We set this field immediately, so it's safe to cast to an actual snapshot\n\n            var lastInput\n            /** @type {!Node} */\n            = queue[i].currentInputSnapshot;\n            var snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\n            callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\n          } else {\n            callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\n          }\n        }\n      }\n    } // Clean up completed transactions.\n\n\n    this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_); // Now fire callbacks, now that we're in a good, known state.\n\n    for (var i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    } // Try to send the transaction result to the server.\n\n\n    this.sendReadyTransactions_();\n  };\n  /**\r\n   * Returns the rootmost ancestor node of the specified path that has a pending\r\n   * transaction on it, or just returns the node for the given path if there are\r\n   * no pending transactions on any ancestor.\r\n   *\r\n   * @param path The location to start at.\r\n   * @return The rootmost node with a transaction.\r\n   */\n\n\n  Repo.prototype.getAncestorTransactionNode_ = function (path) {\n    var front; // Start at the root and walk deeper into the tree towards path until we\n    // find a node with pending transactions.\n\n    var transactionNode = this.transactionQueueTree_;\n    front = pathGetFront(path);\n\n    while (front !== null && transactionNode.getValue() === null) {\n      transactionNode = transactionNode.subTree(front);\n      path = pathPopFront(path);\n      front = pathGetFront(path);\n    }\n\n    return transactionNode;\n  };\n  /**\r\n   * Builds the queue of all transactions at or below the specified\r\n   * transactionNode.\r\n   *\r\n   * @param transactionNode\r\n   * @return The generated queue.\r\n   */\n\n\n  Repo.prototype.buildTransactionQueue_ = function (transactionNode) {\n    // Walk any child transaction queues and aggregate them into a single queue.\n    var transactionQueue = [];\n    this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue); // Sort them by the order the transactions were created.\n\n    transactionQueue.sort(function (a, b) {\n      return a.order - b.order;\n    });\n    return transactionQueue;\n  };\n\n  Repo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\n    var _this = this;\n\n    var nodeQueue = node.getValue();\n\n    if (nodeQueue !== null) {\n      for (var i = 0; i < nodeQueue.length; i++) {\n        queue.push(nodeQueue[i]);\n      }\n    }\n\n    node.forEachChild(function (child) {\n      _this.aggregateTransactionQueuesForNode_(child, queue);\n    });\n  };\n  /**\r\n   * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n   */\n\n\n  Repo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\n    var _this = this;\n\n    var queue = node.getValue();\n\n    if (queue) {\n      var to = 0;\n\n      for (var from = 0; from < queue.length; from++) {\n        if (queue[from].status !== TransactionStatus.COMPLETED) {\n          queue[to] = queue[from];\n          to++;\n        }\n      }\n\n      queue.length = to;\n      node.setValue(queue.length > 0 ? queue : null);\n    }\n\n    node.forEachChild(function (childNode) {\n      _this.pruneCompletedTransactionsBelowNode_(childNode);\n    });\n  };\n  /**\r\n   * Aborts all transactions on ancestors or descendants of the specified path.\r\n   * Called when doing a set() or update() since we consider them incompatible\r\n   * with transactions.\r\n   *\r\n   * @param path Path for which we want to abort related transactions.\r\n   */\n\n\n  Repo.prototype.abortTransactions_ = function (path) {\n    var _this = this;\n\n    var affectedPath = this.getAncestorTransactionNode_(path).path();\n    var transactionNode = this.transactionQueueTree_.subTree(path);\n    transactionNode.forEachAncestor(function (node) {\n      _this.abortTransactionsOnNode_(node);\n    });\n    this.abortTransactionsOnNode_(transactionNode);\n    transactionNode.forEachDescendant(function (node) {\n      _this.abortTransactionsOnNode_(node);\n    });\n    return affectedPath;\n  };\n  /**\r\n   * Abort transactions stored in this transaction queue node.\r\n   *\r\n   * @param node Node to abort transactions for.\r\n   */\n\n\n  Repo.prototype.abortTransactionsOnNode_ = function (node) {\n    var queue = node.getValue();\n\n    if (queue !== null) {\n      // Queue up the callbacks and fire them after cleaning up all of our\n      // transaction state, since the callback could trigger more transactions\n      // or sets.\n      var callbacks = []; // Go through queue.  Any already-sent transactions must be marked for\n      // abort, while the unsent ones can be immediately aborted and removed.\n\n      var events = [];\n      var lastSent = -1;\n\n      for (var i = 0; i < queue.length; i++) {\n        if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) ;else if (queue[i].status === TransactionStatus.SENT) {\n          assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\n          lastSent = i; // Mark transaction for abort when it comes back.\n\n          queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n          queue[i].abortReason = 'set';\n        } else {\n          assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort'); // We can abort it immediately.\n\n          queue[i].unwatcher();\n          events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\n\n          if (queue[i].onComplete) {\n            var snapshot = null;\n            callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\n          }\n        }\n      }\n\n      if (lastSent === -1) {\n        // We're not waiting for any sent transactions.  We can clear the queue.\n        node.setValue(null);\n      } else {\n        // Remove the transactions we aborted.\n        queue.length = lastSent + 1;\n      } // Now fire the callbacks.\n\n\n      eventQueueRaiseEventsForChangedPath(this.eventQueue_, node.path(), events);\n\n      for (var i = 0; i < callbacks.length; i++) {\n        exceptionGuard(callbacks[i]);\n      }\n    }\n  };\n\n  return Repo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Reference =\n/** @class */\nfunction (_super) {\n  __extends(Reference, _super);\n  /**\r\n   * Call options:\r\n   *   new Reference(Repo, Path) or\r\n   *   new Reference(url: string, string|RepoManager)\r\n   *\r\n   * Externally - this is the firebase.database.Reference type.\r\n   */\n\n\n  function Reference(repo, path) {\n    var _this = this;\n\n    if (!(repo instanceof Repo)) {\n      throw new Error('new Reference() no longer supported - use app.database().');\n    } // call Query's constructor, passing in the repo and path.\n\n\n    _this = _super.call(this, repo, path, new QueryParams(), false) || this;\n    return _this;\n  }\n  /** @return {?string} */\n\n\n  Reference.prototype.getKey = function () {\n    validateArgCount('Reference.key', 0, 0, arguments.length);\n\n    if (pathIsEmpty(this.path)) {\n      return null;\n    } else {\n      return pathGetBack(this.path);\n    }\n  };\n\n  Reference.prototype.child = function (pathString) {\n    validateArgCount('Reference.child', 1, 1, arguments.length);\n\n    if (typeof pathString === 'number') {\n      pathString = String(pathString);\n    } else if (!(pathString instanceof Path)) {\n      if (pathGetFront(this.path) === null) {\n        validateRootPathString('Reference.child', 1, pathString, false);\n      } else {\n        validatePathString('Reference.child', 1, pathString, false);\n      }\n    }\n\n    return new Reference(this.repo, pathChild(this.path, pathString));\n  };\n  /** @return {?Reference} */\n\n\n  Reference.prototype.getParent = function () {\n    validateArgCount('Reference.parent', 0, 0, arguments.length);\n    var parentPath = pathParent(this.path);\n    return parentPath === null ? null : new Reference(this.repo, parentPath);\n  };\n  /** @return {!Reference} */\n\n\n  Reference.prototype.getRoot = function () {\n    validateArgCount('Reference.root', 0, 0, arguments.length);\n    var ref = this;\n\n    while (ref.getParent() !== null) {\n      ref = ref.getParent();\n    }\n\n    return ref;\n  };\n  /** @return {!Database} */\n\n\n  Reference.prototype.databaseProp = function () {\n    return this.repo.database;\n  };\n\n  Reference.prototype.set = function (newVal, onComplete) {\n    validateArgCount('Reference.set', 1, 2, arguments.length);\n    validateWritablePath('Reference.set', this.path);\n    validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\n    validateCallback('Reference.set', 2, onComplete, true);\n    var deferred = new Deferred();\n    this.repo.setWithPriority(this.path, newVal,\n    /*priority=*/\n    null, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n\n  Reference.prototype.update = function (objectToMerge, onComplete) {\n    validateArgCount('Reference.update', 1, 2, arguments.length);\n    validateWritablePath('Reference.update', this.path);\n\n    if (Array.isArray(objectToMerge)) {\n      var newObjectToMerge = {};\n\n      for (var i = 0; i < objectToMerge.length; ++i) {\n        newObjectToMerge['' + i] = objectToMerge[i];\n      }\n\n      objectToMerge = newObjectToMerge;\n      warn('Passing an Array to Firebase.update() is deprecated. ' + 'Use set() if you want to overwrite the existing data, or ' + 'an Object with integer keys if you really do want to ' + 'only update some of the children.');\n    }\n\n    validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\n    validateCallback('Reference.update', 2, onComplete, true);\n    var deferred = new Deferred();\n    this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n\n  Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\n    validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\n    validateWritablePath('Reference.setWithPriority', this.path);\n    validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\n    validatePriority('Reference.setWithPriority', 2, newPriority, false);\n    validateCallback('Reference.setWithPriority', 3, onComplete, true);\n\n    if (this.getKey() === '.length' || this.getKey() === '.keys') {\n      throw 'Reference.setWithPriority failed: ' + this.getKey() + ' is a read-only object.';\n    }\n\n    var deferred = new Deferred();\n    this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n\n  Reference.prototype.remove = function (onComplete) {\n    validateArgCount('Reference.remove', 0, 1, arguments.length);\n    validateWritablePath('Reference.remove', this.path);\n    validateCallback('Reference.remove', 1, onComplete, true);\n    return this.set(null, onComplete);\n  };\n\n  Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\n    validateArgCount('Reference.transaction', 1, 3, arguments.length);\n    validateWritablePath('Reference.transaction', this.path);\n    validateCallback('Reference.transaction', 1, transactionUpdate, false);\n    validateCallback('Reference.transaction', 2, onComplete, true); // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\n    // to expose it.\n\n    validateBoolean('Reference.transaction', 3, applyLocally, true);\n\n    if (this.getKey() === '.length' || this.getKey() === '.keys') {\n      throw 'Reference.transaction failed: ' + this.getKey() + ' is a read-only object.';\n    }\n\n    if (applyLocally === undefined) {\n      applyLocally = true;\n    }\n\n    var deferred = new Deferred();\n\n    if (typeof onComplete === 'function') {\n      deferred.promise.catch(function () {});\n    }\n\n    var promiseComplete = function (error, committed, snapshot) {\n      if (error) {\n        deferred.reject(error);\n      } else {\n        deferred.resolve(new TransactionResult(committed, snapshot));\n      }\n\n      if (typeof onComplete === 'function') {\n        onComplete(error, committed, snapshot);\n      }\n    };\n\n    this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\n    return deferred.promise;\n  };\n\n  Reference.prototype.setPriority = function (priority, onComplete) {\n    validateArgCount('Reference.setPriority', 1, 2, arguments.length);\n    validateWritablePath('Reference.setPriority', this.path);\n    validatePriority('Reference.setPriority', 1, priority, false);\n    validateCallback('Reference.setPriority', 2, onComplete, true);\n    var deferred = new Deferred();\n    this.repo.setWithPriority(pathChild(this.path, '.priority'), priority, null, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n\n  Reference.prototype.push = function (value, onComplete) {\n    validateArgCount('Reference.push', 0, 2, arguments.length);\n    validateWritablePath('Reference.push', this.path);\n    validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\n    validateCallback('Reference.push', 2, onComplete, true);\n    var now = this.repo.serverTime();\n    var name = nextPushId(now); // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\n    // We use child() to create handles to two different references. The first is turned into a\n    // ThennableReference below by adding then() and catch() methods and is used as the\n    // return value of push(). The second remains a regular Reference and is used as the fulfilled\n    // value of the first ThennableReference.\n\n    var thennablePushRef = this.child(name);\n    var pushRef = this.child(name);\n    var promise;\n\n    if (value != null) {\n      promise = thennablePushRef.set(value, onComplete).then(function () {\n        return pushRef;\n      });\n    } else {\n      promise = Promise.resolve(pushRef);\n    }\n\n    thennablePushRef.then = promise.then.bind(promise);\n    thennablePushRef.catch = promise.then.bind(promise, undefined);\n\n    if (typeof onComplete === 'function') {\n      promise.catch(function () {});\n    }\n\n    return thennablePushRef;\n  };\n\n  Reference.prototype.onDisconnect = function () {\n    validateWritablePath('Reference.onDisconnect', this.path);\n    return new OnDisconnect(this.repo, this.path);\n  };\n\n  Object.defineProperty(Reference.prototype, \"database\", {\n    get: function () {\n      return this.databaseProp();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"key\", {\n    get: function () {\n      return this.getKey();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"parent\", {\n    get: function () {\n      return this.getParent();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"root\", {\n    get: function () {\n      return this.getRoot();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Reference;\n}(Query);\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\n\n\nQuery.__referenceConstructor = Reference;\nSyncPoint.__referenceConstructor = Reference;\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\n\nvar FirebaseAuthTokenProvider =\n/** @class */\nfunction () {\n  function FirebaseAuthTokenProvider(app_, authProvider_) {\n    var _this = this;\n\n    this.app_ = app_;\n    this.authProvider_ = authProvider_;\n    this.auth_ = null;\n    this.auth_ = authProvider_.getImmediate({\n      optional: true\n    });\n\n    if (!this.auth_) {\n      authProvider_.get().then(function (auth) {\n        return _this.auth_ = auth;\n      });\n    }\n  }\n\n  FirebaseAuthTokenProvider.prototype.getToken = function (forceRefresh) {\n    if (!this.auth_) {\n      return Promise.resolve(null);\n    }\n\n    return this.auth_.getToken(forceRefresh).catch(function (error) {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  };\n\n  FirebaseAuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      setTimeout(function () {\n        return listener(null);\n      }, 0);\n      this.authProvider_.get().then(function (auth) {\n        return auth.addAuthTokenListener(listener);\n      });\n    }\n  };\n\n  FirebaseAuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\n    this.authProvider_.get().then(function (auth) {\n      return auth.removeAuthTokenListener(listener);\n    });\n  };\n\n  FirebaseAuthTokenProvider.prototype.notifyForInvalidToken = function () {\n    var errorMessage = 'Provided authentication credentials for the app named \"' + this.app_.name + '\" are invalid. This usually indicates your app was not ' + 'initialized correctly. ';\n\n    if ('credential' in this.app_.options) {\n      errorMessage += 'Make sure the \"credential\" property provided to initializeApp() ' + 'is authorized to access the specified \"databaseURL\" and is from the correct ' + 'project.';\n    } else if ('serviceAccount' in this.app_.options) {\n      errorMessage += 'Make sure the \"serviceAccount\" property provided to initializeApp() ' + 'is authorized to access the specified \"databaseURL\" and is from the correct ' + 'project.';\n    } else {\n      errorMessage += 'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' + 'initializeApp() match the values provided for your app at ' + 'https://console.firebase.google.com/.';\n    }\n\n    warn(errorMessage);\n  };\n\n  return FirebaseAuthTokenProvider;\n}();\n/* Auth token provider that the Admin SDK uses to connect to the Emulator. */\n\n\nvar EmulatorAdminTokenProvider =\n/** @class */\nfunction () {\n  function EmulatorAdminTokenProvider() {}\n\n  EmulatorAdminTokenProvider.prototype.getToken = function (forceRefresh) {\n    return Promise.resolve({\n      accessToken: EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN\n    });\n  };\n\n  EmulatorAdminTokenProvider.prototype.addTokenChangeListener = function (listener) {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN);\n  };\n\n  EmulatorAdminTokenProvider.prototype.removeTokenChangeListener = function (listener) {};\n\n  EmulatorAdminTokenProvider.prototype.notifyForInvalidToken = function () {};\n\n  EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN = 'owner';\n  return EmulatorAdminTokenProvider;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This variable is also defined in the firebase node.js admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\n\n\nvar FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n\nvar _staticInstance;\n/**\r\n * Creates and caches Repo instances.\r\n */\n\n\nvar RepoManager =\n/** @class */\nfunction () {\n  function RepoManager() {\n    this.repos_ = {};\n    /**\r\n     * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n     */\n\n    this.useRestClient_ = false;\n  }\n\n  RepoManager.getInstance = function () {\n    if (!_staticInstance) {\n      _staticInstance = new RepoManager();\n    }\n\n    return _staticInstance;\n  }; // TODO(koss): Remove these functions unless used in tests?\n\n\n  RepoManager.prototype.interrupt = function () {\n    var e_1, _a, e_2, _b;\n\n    try {\n      for (var _c = __values(Object.keys(this.repos_)), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var appName = _d.value;\n\n        try {\n          for (var _e = (e_2 = void 0, __values(Object.keys(this.repos_[appName]))), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var dbUrl = _f.value;\n            this.repos_[appName][dbUrl].interrupt();\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  RepoManager.prototype.resume = function () {\n    var e_3, _a, e_4, _b;\n\n    try {\n      for (var _c = __values(Object.keys(this.repos_)), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var appName = _d.value;\n\n        try {\n          for (var _e = (e_4 = void 0, __values(Object.keys(this.repos_[appName]))), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var dbUrl = _f.value;\n            this.repos_[appName][dbUrl].resume();\n          }\n        } catch (e_4_1) {\n          e_4 = {\n            error: e_4_1\n          };\n        } finally {\n          try {\n            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n          } finally {\n            if (e_4) throw e_4.error;\n          }\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n  };\n  /**\r\n   * Update an existing repo in place to point to a new host/port.\r\n   */\n\n\n  RepoManager.prototype.applyEmulatorSettings = function (repo, host, port) {\n    repo.repoInfo_ = new RepoInfo(host + \":\" + port,\n    /* secure= */\n    false, repo.repoInfo_.namespace, repo.repoInfo_.webSocketOnly, repo.repoInfo_.nodeAdmin, repo.repoInfo_.persistenceKey, repo.repoInfo_.includeNamespaceInQueryParams);\n\n    if (repo.repoInfo_.nodeAdmin) {\n      repo.authTokenProvider_ = new EmulatorAdminTokenProvider();\n    }\n  };\n  /**\r\n   * This function should only ever be called to CREATE a new database instance.\r\n   */\n\n\n  RepoManager.prototype.databaseFromApp = function (app, authProvider, url, nodeAdmin) {\n    var dbUrl = url || app.options.databaseURL;\n\n    if (dbUrl === undefined) {\n      if (!app.options.projectId) {\n        fatal(\"Can't determine Firebase Database URL. Be sure to include \" + ' a Project ID when calling firebase.initializeApp().');\n      }\n\n      log('Using default host for project ', app.options.projectId);\n      dbUrl = app.options.projectId + \"-default-rtdb.firebaseio.com\";\n    }\n\n    var parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n    var repoInfo = parsedUrl.repoInfo;\n    var isEmulator;\n    var dbEmulatorHost = undefined;\n\n    if (typeof process !== 'undefined') {\n      dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n    }\n\n    if (dbEmulatorHost) {\n      isEmulator = true;\n      dbUrl = \"http://\" + dbEmulatorHost + \"?ns=\" + repoInfo.namespace;\n      parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n      repoInfo = parsedUrl.repoInfo;\n    } else {\n      isEmulator = !parsedUrl.repoInfo.secure;\n    }\n\n    var authTokenProvider = nodeAdmin && isEmulator ? new EmulatorAdminTokenProvider() : new FirebaseAuthTokenProvider(app, authProvider);\n    validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\n\n    if (!pathIsEmpty(parsedUrl.path)) {\n      fatal('Database URL must point to the root of a Firebase Database ' + '(not including a child path).');\n    }\n\n    var repo = this.createRepo(repoInfo, app, authTokenProvider);\n    return repo.database;\n  };\n  /**\r\n   * Remove the repo and make sure it is disconnected.\r\n   *\r\n   */\n\n\n  RepoManager.prototype.deleteRepo = function (repo) {\n    var appRepos = safeGet(this.repos_, repo.app.name); // This should never happen...\n\n    if (!appRepos || safeGet(appRepos, repo.key) !== repo) {\n      fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\n    }\n\n    repo.interrupt();\n    delete appRepos[repo.key];\n  };\n  /**\r\n   * Ensures a repo doesn't already exist and then creates one using the\r\n   * provided app.\r\n   *\r\n   * @param repoInfo The metadata about the Repo\r\n   * @return The Repo object for the specified server / repoName.\r\n   */\n\n\n  RepoManager.prototype.createRepo = function (repoInfo, app, authTokenProvider) {\n    var appRepos = safeGet(this.repos_, app.name);\n\n    if (!appRepos) {\n      appRepos = {};\n      this.repos_[app.name] = appRepos;\n    }\n\n    var repo = safeGet(appRepos, repoInfo.toURLString());\n\n    if (repo) {\n      fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\n    }\n\n    repo = new Repo(repoInfo, this.useRestClient_, app, authTokenProvider);\n    appRepos[repoInfo.toURLString()] = repo;\n    return repo;\n  };\n  /**\r\n   * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n   */\n\n\n  RepoManager.prototype.forceRestClient = function (forceRestClient) {\n    this.useRestClient_ = forceRestClient;\n  };\n\n  return RepoManager;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Class representing a firebase database.\r\n */\n\n\nvar Database =\n/** @class */\nfunction () {\n  /**\r\n   * The constructor should not be called by users of our public API.\r\n   */\n  function Database(repoInternal_) {\n    var _this = this;\n\n    this.repoInternal_ = repoInternal_;\n    /** Track if the instance has been used (root or repo accessed) */\n\n    this.instanceStarted_ = false;\n    this.INTERNAL = {\n      delete: function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            this.checkDeleted_('delete');\n            RepoManager.getInstance().deleteRepo(this.repo_);\n            this.repoInternal_ = null;\n            this.rootInternal_ = null;\n            return [2\n            /*return*/\n            ];\n          });\n        });\n      }\n    };\n\n    if (!(repoInternal_ instanceof Repo)) {\n      fatal(\"Don't call new Database() directly - please use firebase.database().\");\n    }\n  }\n\n  Object.defineProperty(Database.prototype, \"repo_\", {\n    get: function () {\n      if (!this.instanceStarted_) {\n        this.repoInternal_.start();\n        this.instanceStarted_ = true;\n      }\n\n      return this.repoInternal_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Database.prototype, \"root_\", {\n    get: function () {\n      if (!this.rootInternal_) {\n        this.rootInternal_ = new Reference(this.repo_, newEmptyPath());\n      }\n\n      return this.rootInternal_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Database.prototype, \"app\", {\n    get: function () {\n      return this.repo_.app;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Modify this instance to communicate with the Realtime Database emulator.\r\n   *\r\n   * <p>Note: This method must be called before performing any other operation.\r\n   *\r\n   * @param host the emulator host (ex: localhost)\r\n   * @param port the emulator port (ex: 8080)\r\n   */\n\n  Database.prototype.useEmulator = function (host, port) {\n    this.checkDeleted_('useEmulator');\n\n    if (this.instanceStarted_) {\n      fatal('Cannot call useEmulator() after instance has already been initialized.');\n      return;\n    } // Modify the repo to apply emulator settings\n\n\n    RepoManager.getInstance().applyEmulatorSettings(this.repoInternal_, host, port);\n  };\n\n  Database.prototype.ref = function (path) {\n    this.checkDeleted_('ref');\n    validateArgCount('database.ref', 0, 1, arguments.length);\n\n    if (path instanceof Reference) {\n      return this.refFromURL(path.toString());\n    }\n\n    return path !== undefined ? this.root_.child(path) : this.root_;\n  };\n  /**\r\n   * Returns a reference to the root or the path specified in url.\r\n   * We throw a exception if the url is not in the same domain as the\r\n   * current repo.\r\n   * @return Firebase reference.\r\n   */\n\n\n  Database.prototype.refFromURL = function (url) {\n    /** @const {string} */\n    var apiName = 'database.refFromURL';\n    this.checkDeleted_(apiName);\n    validateArgCount(apiName, 1, 1, arguments.length);\n    var parsedURL = parseRepoInfo(url, this.repo_.repoInfo_.nodeAdmin);\n    validateUrl(apiName, 1, parsedURL);\n    var repoInfo = parsedURL.repoInfo;\n\n    if (!this.repo_.repoInfo_.isCustomHost() && repoInfo.host !== this.repo_.repoInfo_.host) {\n      fatal(apiName + ': Host name does not match the current database: ' + '(found ' + repoInfo.host + ' but expected ' + this.repo_.repoInfo_.host + ')');\n    }\n\n    return this.ref(parsedURL.path.toString());\n  };\n\n  Database.prototype.checkDeleted_ = function (apiName) {\n    if (this.repoInternal_ === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  }; // Make individual repo go offline.\n\n\n  Database.prototype.goOffline = function () {\n    validateArgCount('database.goOffline', 0, 0, arguments.length);\n    this.checkDeleted_('goOffline');\n    this.repo_.interrupt();\n  };\n\n  Database.prototype.goOnline = function () {\n    validateArgCount('database.goOnline', 0, 0, arguments.length);\n    this.checkDeleted_('goOnline');\n    this.repo_.resume();\n  };\n\n  Database.ServerValue = {\n    TIMESTAMP: {\n      '.sv': 'timestamp'\n    },\n    increment: function (delta) {\n      return {\n        '.sv': {\n          'increment': delta\n        }\n      };\n    }\n  };\n  return Database;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n */\n\n\nvar forceLongPolling = function () {\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n};\n\nvar forceWebSockets = function () {\n  BrowserPollConnection.forceDisallow();\n};\n/* Used by App Manager */\n\n\nvar isWebSocketsAvailable = function () {\n  return WebSocketConnection['isAvailable']();\n};\n\nvar setSecurityDebugCallback = function (ref, callback) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ref.repo.persistentConnection_.securityDebugCallback_ = callback;\n};\n\nvar stats = function (ref, showDelta) {\n  ref.repo.stats(showDelta);\n};\n\nvar statsIncrementCounter = function (ref, metric) {\n  ref.repo.statsIncrementCounter(metric);\n};\n\nvar dataUpdateCount = function (ref) {\n  return ref.repo.dataUpdateCount;\n};\n\nvar interceptServerData = function (ref, callback) {\n  return ref.repo.interceptServerData_(callback);\n};\n/**\r\n * Used by console to create a database based on the app,\r\n * passed database URL and a custom auth implementation.\r\n *\r\n * @param app A valid FirebaseApp-like object\r\n * @param url A valid Firebase databaseURL\r\n * @param version custom version e.g. firebase-admin version\r\n * @param customAuthImpl custom auth implementation\r\n */\n\n\nfunction initStandalone(_a) {\n  var app = _a.app,\n      url = _a.url,\n      version = _a.version,\n      customAuthImpl = _a.customAuthImpl,\n      namespace = _a.namespace,\n      _b = _a.nodeAdmin,\n      nodeAdmin = _b === void 0 ? false : _b;\n  setSDKVersion(version);\n  /**\r\n   * ComponentContainer('database-standalone') is just a placeholder that doesn't perform\r\n   * any actual function.\r\n   */\n\n  var authProvider = new Provider('auth-internal', new ComponentContainer('database-standalone'));\n  authProvider.setComponent(new Component('auth-internal', function () {\n    return customAuthImpl;\n  }, \"PRIVATE\"\n  /* PRIVATE */\n  ));\n  return {\n    instance: RepoManager.getInstance().databaseFromApp(app, authProvider, url, nodeAdmin),\n    namespace: namespace\n  };\n}\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData,\n  initStandalone: initStandalone\n});\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar DataConnection = PersistentConnection; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\n  this.sendRequest('q', {\n    p: pathString\n  }, onComplete);\n}; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nPersistentConnection.prototype.echo = function (data, onEcho) {\n  this.sendRequest('echo', {\n    d: data\n  }, onEcho);\n}; // RealTimeConnection properties that we use in tests.\n\n\nvar RealTimeConnection = Connection;\n\nvar hijackHash = function (newHash) {\n  var oldPut = PersistentConnection.prototype.put;\n\n  PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n\nvar ConnectionTarget = RepoInfo;\n\nvar queryIdentifier = function (query) {\n  return query.queryIdentifier();\n};\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n */\n\n\nvar forceRestClient = function (forceRestClient) {\n  RepoManager.getInstance().forceRestClient(forceRestClient);\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  forceRestClient: forceRestClient\n});\nvar name = \"@firebase/database\";\nvar version = \"0.9.4\";\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar ServerValue = Database.ServerValue;\n\nfunction registerDatabase(instance) {\n  // set SDK_VERSION\n  setSDKVersion(instance.SDK_VERSION); // Register the Database Service with the 'firebase' namespace.\n\n  var namespace = instance.INTERNAL.registerComponent(new Component('database', function (container, url) {\n    /* Dependencies */\n    // getImmediate for FirebaseApp will always succeed\n    var app = container.getProvider('app').getImmediate();\n    var authProvider = container.getProvider('auth-internal');\n    return RepoManager.getInstance().databaseFromApp(app, authProvider, url);\n  }, \"PUBLIC\"\n  /* PUBLIC */\n  ).setServiceProps( // firebase.database namespace properties\n  {\n    Reference: Reference,\n    Query: Query,\n    Database: Database,\n    DataSnapshot: DataSnapshot,\n    enableLogging: enableLogging,\n    INTERNAL: INTERNAL,\n    ServerValue: ServerValue,\n    TEST_ACCESS: TEST_ACCESS\n  }).setMultipleInstances(true));\n  instance.registerVersion(name, version);\n\n  if (isNodeSdk()) {\n    module.exports = namespace;\n  }\n}\n\nregisterDatabase(firebase);\nexport { DataSnapshot, Database, OnDisconnect, Query, Reference, ServerValue, enableLogging, registerDatabase };","map":{"version":3,"sources":["C:/Users/joann/Desktop/Capstone/comfybake-app/node_modules/@firebase/database/dist/index.esm.js"],"names":["firebase","__spread","__values","__extends","__assign","__read","__awaiter","__generator","stringify","jsonEval","contains","assert","base64","stringToByteArray","Sha1","isNodeSdk","stringLength","errorPrefix","validateArgCount","validateCallback","Deferred","assertionError","safeGet","map","validateContextObject","deepCopy","isMobileCordova","base64Encode","isAdmin","isValidFormat","isEmpty","isReactNative","querystring","Logger","LogLevel","Provider","ComponentContainer","Component","DOMStorageWrapper","domStorage_","prefix_","prototype","set","key","value","removeItem","prefixedName_","setItem","get","storedVal","getItem","remove","name","toString","MemoryStorage","cache_","isInMemoryStorage","createStoragefor","domStorageName","window","domStorage","e","PersistentStorage","SessionStorage","logClient","LUIDGenerator","id","sha1","str","utf8Bytes","update","sha1Bytes","digest","encodeByteArray","buildLogMessage_","varArgs","_i","arguments","length","message","i","arg","Array","isArray","apply","logger","firstLog_","enableLogging","logger_","persistent","logLevel","VERBOSE","log","bind","logWrapper","prefix","error","fatal","Error","warn","warnIfPageIsSecure","location","protocol","indexOf","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","executeWhenDOMReady","fn","document","readyState","called_1","wrappedFn_1","body","setTimeout","Math","floor","addEventListener","attachEvent","MIN_NAME","MAX_NAME","nameCompare","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","k","push","sort","splitStringBySize","segsize","len","dataSegs","c","substring","each","hasOwnProperty","doubleToIEEE754String","v","ebits","fbits","bias","s","f","ln","Infinity","abs","pow","min","LN2","round","bits","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","isChromeExtensionContentScript","test","href","isWindowsStoreApp","Windows","UI","errorForServerCode","code","query","reason","path","toUpperCase","INTEGER_REGEXP_","RegExp","INTEGER_32_MIN","INTEGER_32_MAX","intVal","exceptionGuard","stack","beingCrawled","userAgent","search","setTimeoutNonBlocking","time","timeout","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","pathString","newEmptyPath","pathGetFront","pathGetLength","pathPopFront","pathGetBack","pathToUrlEncodedString","encodeURIComponent","String","pathSlice","begin","slice","pathParent","pieces","pathChild","childPathObj","childPieces","pathIsEmpty","newRelativePath","outerPath","innerPath","outer","inner","pathCompare","left","right","leftKeys","rightKeys","cmp","pathEquals","other","j","pathContains","ValidationPath","errorPrefix_","parts_","byteLength_","max","checkValid_","Object","defineProperty","enumerable","configurable","child","pop","last","MAX_PATH_LENGTH_BYTES","MAX_PATH_DEPTH","toErrorString","PROTOCOL_VERSION","VERSION_PARAM","TRANSPORT_SESSION_PARAM","REFERER_PARAM","FORGE_REF","FORGE_DOMAIN_RE","LAST_SESSION_PARAM","APPLICATION_ID_PARAM","WEBSOCKET","LONG_POLLING","RepoInfo","host","secure","namespace","webSocketOnly","nodeAdmin","persistenceKey","includeNamespaceInQueryParams","domain","internalHost","needsQueryParam","isCustomHost","isCacheableHost","isDemoHost","updateHost","newHost","connectionURL","type","params","connURL","pairs","toURLString","decodePath","pathStringDecoded","piece","decodeURIComponent","replace","decodeQuery","queryString","e_1","_a","results","charAt","_b","_c","next","done","segment","kv","e_1_1","return","call","parseRepoInfo","dataURL","parsedUrl","parseDatabaseURL","scheme","repoInfo","subdomain","port","colonInd","slashInd","questionMarkInd","queryParams","hostWithoutPort","dotInd","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","MAX_LEAF_SIZE_","isValidKey","isValidPathString","isValidRootPathString","isValidPriority","priority","validateFirebaseDataArg","fnName","argumentNumber","optional","undefined","validateFirebaseData","path_","hasDotValue_1","hasActualChild_1","validateFirebaseMergePaths","mergePaths","curPath","prevPath","validateFirebaseMergeDataArg","errorPrefix$1","validatePriority","validateEventType","eventType","validateKey","validatePathString","validateRootPathString","validateWritablePath","validateUrl","validateBoolean","bool","OnDisconnect","repo_","cancel","onComplete","deferred","onDisconnectCancel","wrapCallback","promise","onDisconnectSet","setWithPriority","onDisconnectSetWithPriority","objectToMerge","newObjectToMerge","onDisconnectUpdate","TransactionResult","committed","snapshot","toJSON","PUSH_CHARS","MIN_PUSH_CHAR","MAX_PUSH_CHAR","MAX_KEY_LEN","nextPushId","lastPushTime","lastRandChars","now","duplicateTime","timeStampChars","random","successor","keyAsInt","i_1","source","sourcePlusOne","predecessor","repeat","NamedNode","node","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","__EMPTY_NODE","KeyIndex","_super","val","isDefinedOn","maxPost","makePost","indexValue","KEY_INDEX","MAX_NODE","setMaxNode","priorityHashText","validatePriorityNode","priorityNode","isLeafNode","getPriority","__childrenNodeConstructor","LeafNode","value_","priorityNode_","EMPTY_NODE","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","index","action","exportFormat","getValue","hash","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","equals","nodeFromJSON","MAX_NODE$1","setNodeFromJSON","setMaxNode$1","PriorityIndex","aPriority","bPriority","indexCmp","PRIORITY_INDEX","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","result","hasNext","peek","LLRBNode","color","RED","SortedMap","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","n","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","LOG_2","Base12Num","logBase2","num","bitMask","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","high","namedNode","middle","buildFrom12Array","base12","root","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","_defaultIndexMap","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","hasIndex","indexDefinition","addIndex","existingChildren","sawIndexedValue","iter","newIndex","indexName","newIndexSet","newIndexes","addToIndexes","_this","indexedChildren","existingSnap","newChildren","removeFromIndexes","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","ChildrenNode","children_","indexMap_","Default","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","array","toHash_1","childHash","idx","resolveIndex_","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","iterator","endPost","MAX_NODE$2","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","defineProperties","MAX","USE_HINZE","nodeFromJSON$1","json","jsonLeaf","children_1","childrenHavePriority_1","hinzeJsonObj","childSet","sortedChildSet","node_1","childData","ValueIndex","valueNode","VALUE_INDEX","PathIndex","indexPath_","extractChild","snap","aChild","bChild","DataSnapshot","node_","ref_","index_","exportVal","exists","childPathString","childPath","childRef","forEach","childrenNode","hasChildren","getKey","getRef","DataEvent","eventRegistration","prevName","getPath","ref","getParent","getEventType","getEventRunner","CancelEvent","ValueEventRegistration","callback_","cancelCallback_","context_","respondsTo","createEvent","change","getQueryParams","getIndex","snapshotNode","eventData","ctx","cancelCB_1","cb_1","createCancelEvent","matches","hasAnyCallback","ChildEventRegistration","callbacks_","eventToCheck","cancelCB_2","cb_2","otherKeys","thisKeys","otherCount","thisCount","otherKey","thisKey","every","changeValue","changeChildAdded","changeChildRemoved","changeChildChanged","oldSnap","changeChildMoved","IndexedFilter","newChild","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","filtered","self","hasStart","startName","getIndexStartName","getIndexStartValue","hasEnd","endName","getIndexEndName","getIndexEndValue","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","inRange","indexCompare_1","foundStartPost","childKey","childSnap","changeAccumulator","indexCmp_1","oldEventCache","newChildNamedNode","windowBoundary","oldChildSnap","nextChild","getChildAfterChild","compareNext","remainsInWindow","newEventCache","nextChildInRange","QueryParams","limitSet_","startSet_","startNameSet_","startAfterSet_","endSet_","endNameSet_","endBeforeSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","hasStartAfter","hasEndBefore","hasLimit","hasAnchoredLimit","loadsAllData","isDefault","queryParamsGetNodeFilter","queryParamsLimitToFirst","newLimit","newParams","queryParamsLimitToLast","queryParamsStartAt","queryParamsStartAfter","queryParamsEndAt","queryParamsEndBefore","queryParamsOrderBy","queryParamsToRestQueryStringParameters","qs","orderBy","queryParamsGetQueryObject","viewFrom","__referenceConstructor","Query","repo","queryParams_","orderByCalled_","validateQueryEndpoints_","startNode","endNode","tooManyArgsError","wrongArgTypeError","validateLimit_","validateNoPreviousOrderByCall_","on","callback","cancelCallbackOrContext","context","ret","getCancelAndContextArgs_","onValueEvent","callbacks","onChildEvent","cancelCallback","container","addEventCallbackForQuery","off","valueCallback","removeEventCallbackForQuery","once","userCallback","failureCallbackOrContext","firstCall","catch","onceCallback","resolve","err","reject","limitToFirst","limit","limitToLast","orderByChild","parsedPath","orderByKey","orderByPriority","orderByValue","startAt","startAfter","endAt","endBefore","equalTo","queryObject","queryIdentifier","isEqual","sameRepo","samePath","sameQueryIdentifier","cancelOrContext","ExistingValueProvider","DeferredValueProvider","syncTree","syncTree_","calcCompleteEventCache","generateWithValues","values","Date","getTime","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","JSON","op","existing","unused","delta","existingNode","leaf","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","SparseSnapshotTree","children","Map","find","size","has","remember","clear","forget","self_1","tree","safeToRemove","delete","forEachTree","prefixPath","func","OperationType","newOperationSourceUser","fromUser","fromServer","queryId","tagged","newOperationSourceServer","newOperationSourceServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","operationForChild","subtree","emptyChildrenSingleton","EmptyChildren","ImmutableTree","fromObject","findRootMostMatchingPathAndValue","relativePath","predicate","childExistingPathAndValue","fullPath","findRootMostValueAndPath","toSet","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","getNode","ViewCache","eventCache_","serverCache_","updateEventSnap","eventSnap","complete","updateServerSnap","serverSnap","getEventCache","getCompleteEventSnap","getServerCache","getCompleteServerSnap","ChildChangeAccumulator","changeMap","oldChange","oldType","getChanges","from","NoCompleteChildSource_","getCompleteChild","NO_COMPLETE_CHILD_SOURCE","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","calcCompleteChild","completeServerData","nodes","calcIndexedSlice","ProcessorResult","viewCache","changes","ViewProcessor","filter_","assertIndexed","applyOperation","oldViewCache","operation","writesCache","completeCache","accumulator","newViewCache","filterServerNode","overwrite","applyUserOverwrite_","applyServerOverwrite_","merge","applyUserMerge_","applyServerMerge_","ackUserWrite","ackUserWrite_","revertUserWrite_","listenComplete_","maybeAddValueEvent_","isLeafOrEmpty","oldCompleteSnap","generateEventCacheAfterServerEvent_","changePath","oldEventSnap","shadowingWrite","serverCache","completeChildren","completeEventChildren","calcCompleteEventChildren","completeNode","oldEventNode","updatedPriority","calcEventCacheAfterServerOverwrite","childChangePath","newEventChild","eventChildUpdate","changedSnap","oldServerSnap","newServerCache","serverFilter","newServerNode","newEventSnap","cacheHasChild_","changedChildren","curViewCache","writePath","applyMerge_","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","completeServerCache","serverChildren","EventGenerator","query_","eventGeneratorGenerateEventsForChanges","eventGenerator","eventCache","eventRegistrations","events","moves","eventGeneratorGenerateEventsForType","registrations","filteredChanges","filter","eventGeneratorCompareChanges","materializedChange","eventGeneratorMaterializeSingleChange","registration","aWrapped","bWrapped","View","initialViewCache","eventRegistrations_","indexFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","getQuery","getCompleteNode","getCompleteServerCache","cache","addEventRegistration","removeEventRegistration","cancelError","cancelEvents","path_1","maybeEvent","remaining","concat","generateEventsForChanges_","getInitialEvents","initialChanges","eventNode","__referenceConstructor$1","SyncPoint","views","optCompleteServerCache","view","getView","serverCacheComplete","eventCacheComplete","e_2","removed","hadCompleteView","hasCompleteView","entries","_d","viewQueryId","e_2_1","getQueryViews","e_3","e_3_1","e_4","e_4_1","viewForQuery","getCompleteView","viewExistsForQuery","e_5","e_5_1","CompoundWrite","writeTree_","empty","compoundWriteAddWrite","compoundWrite","rootmost","rootMostPath","newWriteTree","compoundWriteAddWrites","updates","newWrite","compoundWriteRemoveWrite","compoundWriteHasCompleteWrite","compoundWriteGetCompleteNode","compoundWriteGetCompleteChildren","compoundWriteChildCompoundWrite","shadowingNode","compoundWriteIsEmpty","compoundWriteApply","applySubtreeWrite","writeTree","priorityWrite_1","WriteTree","visibleWrites_","allWrites_","lastWriteId_","childWrites","WriteTreeRef","addOverwrite","writeId","visible","addMerge","getWrite","record","removeWrite","findIndex","writeToRemove","splice","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","recordContainsPath_","resetTree_","getCompleteWriteData","treePath","writeIdsToExclude","includeHiddenWrites","subMerge","layeredCache","write","mergeAtPath","layerTree_","completeServerChildren","topLevelSet","merge_1","existingEventSnap","existingServerSnap","childMerge","toIterate","writeRecord","DefaultFilter_","writes","treeRoot","deepNode","treePath_","existingServerCache","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","applyUserOverwrite","newData","applyOperationToSyncPoints_","applyUserMerge","changeTree","needToReevaluate","affectedTree_1","applyServerOverwrite","applyServerMerge","applyListenComplete","applyTaggedQueryOverwrite","tag","queryKey","queryKeyForTag_","r","parseQueryKey_","queryPath","applyTaggedOperation_","applyTaggedQueryMerge","applyTaggedListenComplete","foundAncestorDefaultView","pathToSyncPoint","sp","syncPoint","childSyncPoint","viewAlreadyExists","makeQueryKey_","getNextQueryTag_","setupListener_","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","collectDistinctViewsForSubTree_","newQuery","listener","createListenerForView_","startListening","queryForListening_","tagForQuery_","hashFn","defaultTag","stopListening","queryToRemove","tagToRemove","removeTags_","includeHiddenSets","getServerValue","serverCacheNode","maybeChildSyncPoint","childMap","completeView","views_1","_key","childViews","queries","removedQuery","removedQueryKey","removedQueryTag","queriesToStop","queries_1","childQueries","queryToStop","status","splitIndex","nextQueryTag_","applyOperationHelper_","syncPointTree","applyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","SnapshotHolder","rootNode_","updateSnapshot","newSnapshotNode","StatsCollection","counters_","incrementCounter","amount","StatsManager","getCollection","hashString","collections_","getOrCreateReporter","creatorFunction","reporters_","StatsListener","collection_","last_","newStats","stat","FIRST_STATS_MIN_TIME","FIRST_STATS_MAX_TIME","REPORT_STATS_INTERVAL","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","includeStat","stats","reportedStats","haveStatsToReport","reportStats","EventQueue","eventLists_","recursionDepth_","eventQueueQueueEvents","eventQueue","eventDataList","currList","eventQueueRaiseEventsAtPath","eventQueueRaiseQueuedEventsMatchingPredicate","eventPath","eventQueueRaiseEventsForChangedPath","changedPath","sentAll","eventList","eventListRaise","eventFn","EventEmitter","allowedEvents_","listeners_","trigger","listeners","validateEventType_","getInitialEvent","et","VisibilityMonitor","hidden","visibilityChange","visible_","getInstance","OnlineMonitor","online_","currentlyOnline","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","handleResponse","requestNum","_loop_1","toProcess","this_1","_loop_2","state_1","FIREBASE_LONGPOLL_START_PARAM","FIREBASE_LONGPOLL_CLOSE_COMMAND","FIREBASE_LONGPOLL_COMMAND_CB_NAME","FIREBASE_LONGPOLL_DATA_CB_NAME","FIREBASE_LONGPOLL_ID_PARAM","FIREBASE_LONGPOLL_PW_PARAM","FIREBASE_LONGPOLL_SERIAL_PARAM","FIREBASE_LONGPOLL_CALLBACK_ID_PARAM","FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM","FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET","FIREBASE_LONGPOLL_DATA_PARAM","FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM","MAX_URL_DATA_SIZE","SEG_HEADER_SIZE","MAX_PAYLOAD_SIZE","KEEPALIVE_REQUEST_INTERVAL","LP_CONNECT_TIMEOUT","BrowserPollConnection","connId","applicationId","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","open","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","scriptTagHolder","FirebaseIFrameScriptHolder","args","command","arg1","arg2","arg3","arg4","incrementIncomingBytes_","clearTimeout","password","sendNewPolls","pN","urlParams","uniqueCallbackIdentifier","hostname","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","createElement","markConnectionHealthy","shutdown_","close","myDisconnFrame","removeChild","send","dataStr","base64data","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","Set","pendingSegs","currentSerial","myIFrame","createIFrame_","script","currentDomain","iframeContents","doc","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","newRequest_","theURL","curDataString","nextSeg","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","add","doNewRequest","keepaliveTimeout","readyStateCB","loadCB","doNodeLongPoll","newScript_1","async","onload","onreadystatechange","rstate","parentNode","onerror","SDK_VERSION","setSDKVersion","version","WEBSOCKET_MAX_FRAME_SIZE","WEBSOCKET_KEEPALIVE_INTERVAL","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","options","headers","process","platform","env","proxy","origin","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","isOldAndroid","navigator","oldAndroidRegex","oldAndroidMatch","match","parseFloat","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports","ALL_TRANSPORTS","transport","initialTransport","upgradeTransport","UPGRADE_TIMEOUT","DELAY_BEFORE_SENDING_EXTRA_REQUESTS","BYTES_SENT_HEALTHY_OVERRIDE","BYTES_RECEIVED_HEALTHY_OVERRIDE","MESSAGE_TYPE","MESSAGE_DATA","CONTROL_SHUTDOWN","CONTROL_RESET","CONTROL_ERROR","CONTROL_PONG","SWITCH_ACK","END_TRANSMISSION","PING","SERVER_HELLO","Connection","repoInfo_","applicationId_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","t","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","ServerActions","put","refreshAuthToken","token","onDisconnectPut","onDisconnectMerge","RECONNECT_MIN_DELAY","RECONNECT_MAX_DELAY_DEFAULT","GET_CONNECT_TIMEOUT","RECONNECT_MAX_DELAY_FOR_ADMINS","RECONNECT_DELAY_MULTIPLIER","RECONNECT_DELAY_RESET_TIMEOUT","SERVER_KILL_INTERRUPT_REASON","INVALID_AUTH_TOKEN_THRESHOLD","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","outstandingPuts_","outstandingGets_","outstandingPutCount_","outstandingGetCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","onVisible_","onOnline_","onResponse","curReqNum","request","p","q","outstandingGet","sendGet_","listen","currentHashFn","listenSpec","sendListen_","req","warnOnListenWarnings_","currentListenSpec","removeListen_","warnings","indexSpec","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isFirebaseSecret","token_1","authMethod","requestData","cred","res","onAuthRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","response","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectSucceeded","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","lastSessionId_1","canceled_1","connection_1","closeFn_1","sendRequestFn","forceRefresh","getToken","then","accessToken","interrupt","resume","serverTimeOffset","normalizedPathString","statusCode","explanation","notifyForInvalidToken","console","_e","_f","clientName","ReadonlyRestClient","listens_","getListenId_","listenId","thisListen","queryStringParameters","restRequest_","status_1","authTokenData","authToken","xhr","XMLHttpRequest","responseText","TreeNode","childCount","Tree","name_","parent_","subTree","pathObj","setValue","updateParents_","forEachDescendant","includeSelf","childrenFirst","forEachAncestor","parent","forEachImmediateDescendantWithValue","updateChild_","childEmpty","childExists","INTERRUPT_REASON","MAX_TRANSACTION_RETRIES","TransactionStatus","Repo","forceRestClient_","app","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","transactionQueueTree_","persistentConnection_","authOverride","appId","addTokenChangeListener","statsReporter_","infoData_","infoSyncTree_","infoEvents","updateInfo_","serverSyncTree_","serverTime","offsetNode","offset","generateServerValues","isMerge","taggedChildren","raw","taggedSnap","rerunTransactions_","interceptServerData_","connectStatus","runOnDisconnectEvents_","getNextWriteId_","cached","Promise","newVal","newNodeUnresolved","success","clearEvents","callOnCompleteCallback","abortTransactions_","childrenToMerge","changedKey","changedValue","writeId_1","resolvedOnDisconnectTree","resolved","showDelta","longestName","reduce","previousValue","currentValue","paddedStat","statsIncrementCounter","metric","__database","Database","startTransaction","transactionUpdate","applyLocally","watchRef","Reference","unwatcher","transaction","order","retryCount","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","getLatestState_","RUN","queueNode","nodeQueue","priorityForNode","currentNode","sendReadyTransactions_","excludeSets","pruneCompletedTransactionsBelowNode_","queue","buildTransactionQueue_","allRun","sendTransactionQueue_","setsToIgnore","txn","latestState","snapToSend","latestHash","SENT","dataToSend","pathToSend","COMPLETED","SENT_NEEDS_ABORT","NEEDS_ABORT","rootMostTransactionNode","getAncestorTransactionNode_","rerunTransactionQueue_","txnsToRerun","abortTransaction","newDataNode","hasExplicitPriority","oldWriteId","newNodeResolved","lastInput","transactionNode","transactionQueue","aggregateTransactionQueuesForNode_","to","abortTransactionsOnNode_","lastSent","parentPath","getRoot","databaseProp","database","promiseComplete","setPriority","thennablePushRef","pushRef","FirebaseAuthTokenProvider","app_","authProvider_","auth_","getImmediate","auth","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","errorMessage","EmulatorAdminTokenProvider","EMULATOR_AUTH_TOKEN","FIREBASE_DATABASE_EMULATOR_HOST_VAR","_staticInstance","RepoManager","repos_","useRestClient_","appName","dbUrl","applyEmulatorSettings","databaseFromApp","authProvider","databaseURL","projectId","isEmulator","dbEmulatorHost","authTokenProvider","createRepo","deleteRepo","appRepos","forceRestClient","repoInternal_","instanceStarted_","INTERNAL","checkDeleted_","rootInternal_","useEmulator","refFromURL","apiName","parsedURL","goOffline","goOnline","ServerValue","TIMESTAMP","increment","forceLongPolling","forceWebSockets","setSecurityDebugCallback","interceptServerData","initStandalone","customAuthImpl","setComponent","instance","freeze","__proto__","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","hijackHash","newHash","oldPut","ConnectionTarget","TEST_ACCESS","registerDatabase","registerComponent","getProvider","setServiceProps","setMultipleInstances","registerVersion","module","exports"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,eAArB;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,SAA7B,EAAwCC,QAAxC,EAAkDC,MAAlD,EAA0DC,SAA1D,EAAqEC,WAArE,QAAwF,OAAxF;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,QAA9B,EAAwCC,MAAxC,EAAgDC,MAAhD,EAAwDC,iBAAxD,EAA2EC,IAA3E,EAAiFC,SAAjF,EAA4FC,YAA5F,EAA0GC,WAA1G,EAAuHC,gBAAvH,EAAyIC,gBAAzI,EAA2JC,QAA3J,EAAqKC,cAArK,EAAqLC,OAArL,EAA8LC,GAA9L,EAAmMC,qBAAnM,EAA0NC,QAA1N,EAAoOC,eAApO,EAAqPC,YAArP,EAAmQC,OAAnQ,EAA4QC,aAA5Q,EAA2RC,OAA3R,EAAoSC,aAApS,EAAmTC,WAAnT,QAAsU,gBAAtU;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,kBAAjC;AACA,SAASC,QAAT,EAAmBC,kBAAnB,EAAuCC,SAAvC,QAAwD,qBAAxD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,iBAAiB;AAAG;AAAe,YAAY;AAC/C;AACJ;AACA;AACI,WAASA,iBAAT,CAA2BC,WAA3B,EAAwC;AACpC,SAAKA,WAAL,GAAmBA,WAAnB,CADoC,CAEpC;;AACA,SAAKC,OAAL,GAAe,WAAf;AACH;AACD;AACJ;AACA;AACA;;;AACIF,EAAAA,iBAAiB,CAACG,SAAlB,CAA4BC,GAA5B,GAAkC,UAAUC,GAAV,EAAeC,KAAf,EAAsB;AACpD,QAAIA,KAAK,IAAI,IAAb,EAAmB;AACf,WAAKL,WAAL,CAAiBM,UAAjB,CAA4B,KAAKC,aAAL,CAAmBH,GAAnB,CAA5B;AACH,KAFD,MAGK;AACD,WAAKJ,WAAL,CAAiBQ,OAAjB,CAAyB,KAAKD,aAAL,CAAmBH,GAAnB,CAAzB,EAAkDnC,SAAS,CAACoC,KAAD,CAA3D;AACH;AACJ,GAPD;AAQA;AACJ;AACA;;;AACIN,EAAAA,iBAAiB,CAACG,SAAlB,CAA4BO,GAA5B,GAAkC,UAAUL,GAAV,EAAe;AAC7C,QAAIM,SAAS,GAAG,KAAKV,WAAL,CAAiBW,OAAjB,CAAyB,KAAKJ,aAAL,CAAmBH,GAAnB,CAAzB,CAAhB;;AACA,QAAIM,SAAS,IAAI,IAAjB,EAAuB;AACnB,aAAO,IAAP;AACH,KAFD,MAGK;AACD,aAAOxC,QAAQ,CAACwC,SAAD,CAAf;AACH;AACJ,GARD;;AASAX,EAAAA,iBAAiB,CAACG,SAAlB,CAA4BU,MAA5B,GAAqC,UAAUR,GAAV,EAAe;AAChD,SAAKJ,WAAL,CAAiBM,UAAjB,CAA4B,KAAKC,aAAL,CAAmBH,GAAnB,CAA5B;AACH,GAFD;;AAGAL,EAAAA,iBAAiB,CAACG,SAAlB,CAA4BK,aAA5B,GAA4C,UAAUM,IAAV,EAAgB;AACxD,WAAO,KAAKZ,OAAL,GAAeY,IAAtB;AACH,GAFD;;AAGAd,EAAAA,iBAAiB,CAACG,SAAlB,CAA4BY,QAA5B,GAAuC,YAAY;AAC/C,WAAO,KAAKd,WAAL,CAAiBc,QAAjB,EAAP;AACH,GAFD;;AAGA,SAAOf,iBAAP;AACH,CA3CsC,EAAvC;AA6CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,IAAIgB,aAAa;AAAG;AAAe,YAAY;AAC3C,WAASA,aAAT,GAAyB;AACrB,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,iBAAL,GAAyB,IAAzB;AACH;;AACDF,EAAAA,aAAa,CAACb,SAAd,CAAwBC,GAAxB,GAA8B,UAAUC,GAAV,EAAeC,KAAf,EAAsB;AAChD,QAAIA,KAAK,IAAI,IAAb,EAAmB;AACf,aAAO,KAAKW,MAAL,CAAYZ,GAAZ,CAAP;AACH,KAFD,MAGK;AACD,WAAKY,MAAL,CAAYZ,GAAZ,IAAmBC,KAAnB;AACH;AACJ,GAPD;;AAQAU,EAAAA,aAAa,CAACb,SAAd,CAAwBO,GAAxB,GAA8B,UAAUL,GAAV,EAAe;AACzC,QAAIjC,QAAQ,CAAC,KAAK6C,MAAN,EAAcZ,GAAd,CAAZ,EAAgC;AAC5B,aAAO,KAAKY,MAAL,CAAYZ,GAAZ,CAAP;AACH;;AACD,WAAO,IAAP;AACH,GALD;;AAMAW,EAAAA,aAAa,CAACb,SAAd,CAAwBU,MAAxB,GAAiC,UAAUR,GAAV,EAAe;AAC5C,WAAO,KAAKY,MAAL,CAAYZ,GAAZ,CAAP;AACH,GAFD;;AAGA,SAAOW,aAAP;AACH,CAvBkC,EAAnC;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIG,gBAAgB,GAAG,UAAUC,cAAV,EAA0B;AAC7C,MAAI;AACA;AACA;AACA,QAAI,OAAOC,MAAP,KAAkB,WAAlB,IACA,OAAOA,MAAM,CAACD,cAAD,CAAb,KAAkC,WADtC,EACmD;AAC/C;AACA,UAAIE,UAAU,GAAGD,MAAM,CAACD,cAAD,CAAvB;AACAE,MAAAA,UAAU,CAACb,OAAX,CAAmB,mBAAnB,EAAwC,OAAxC;AACAa,MAAAA,UAAU,CAACf,UAAX,CAAsB,mBAAtB;AACA,aAAO,IAAIP,iBAAJ,CAAsBsB,UAAtB,CAAP;AACH;AACJ,GAXD,CAYA,OAAOC,CAAP,EAAU,CAAG,CAbgC,CAc7C;AACA;;;AACA,SAAO,IAAIP,aAAJ,EAAP;AACH,CAjBD;AAkBA;;;AACA,IAAIQ,iBAAiB,GAAGL,gBAAgB,CAAC,cAAD,CAAxC;AACA;;AACA,IAAIM,cAAc,GAAGN,gBAAgB,CAAC,gBAAD,CAArC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIO,SAAS,GAAG,IAAI/B,MAAJ,CAAW,oBAAX,CAAhB;AACA;AACA;AACA;;AACA,IAAIgC,aAAa,GAAI,YAAY;AAC7B,MAAIC,EAAE,GAAG,CAAT;AACA,SAAO,YAAY;AACf,WAAOA,EAAE,EAAT;AACH,GAFD;AAGH,CALmB,EAApB;AAMA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,IAAI,GAAG,UAAUC,GAAV,EAAe;AACtB,MAAIC,SAAS,GAAGxD,iBAAiB,CAACuD,GAAD,CAAjC;AACA,MAAID,IAAI,GAAG,IAAIrD,IAAJ,EAAX;AACAqD,EAAAA,IAAI,CAACG,MAAL,CAAYD,SAAZ;AACA,MAAIE,SAAS,GAAGJ,IAAI,CAACK,MAAL,EAAhB;AACA,SAAO5D,MAAM,CAAC6D,eAAP,CAAuBF,SAAvB,CAAP;AACH,CAND;;AAOA,IAAIG,gBAAgB,GAAG,YAAY;AAC/B,MAAIC,OAAO,GAAG,EAAd;;AACA,OAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGC,SAAS,CAACC,MAAhC,EAAwCF,EAAE,EAA1C,EAA8C;AAC1CD,IAAAA,OAAO,CAACC,EAAD,CAAP,GAAcC,SAAS,CAACD,EAAD,CAAvB;AACH;;AACD,MAAIG,OAAO,GAAG,EAAd;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,OAAO,CAACG,MAA5B,EAAoCE,CAAC,EAArC,EAAyC;AACrC,QAAIC,GAAG,GAAGN,OAAO,CAACK,CAAD,CAAjB;;AACA,QAAIE,KAAK,CAACC,OAAN,CAAcF,GAAd,KACCA,GAAG,IACA,OAAOA,GAAP,KAAe,QADlB,IAEG;AACA,WAAOA,GAAG,CAACH,MAAX,KAAsB,QAJ9B,EAIyC;AACrCC,MAAAA,OAAO,IAAIL,gBAAgB,CAACU,KAAjB,CAAuB,IAAvB,EAA6BH,GAA7B,CAAX;AACH,KAND,MAOK,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAC9BF,MAAAA,OAAO,IAAIvE,SAAS,CAACyE,GAAD,CAApB;AACH,KAFI,MAGA;AACDF,MAAAA,OAAO,IAAIE,GAAX;AACH;;AACDF,IAAAA,OAAO,IAAI,GAAX;AACH;;AACD,SAAOA,OAAP;AACH,CAxBD;AAyBA;AACA;AACA;;;AACA,IAAIM,MAAM,GAAG,IAAb;AACA;AACA;AACA;;AACA,IAAIC,SAAS,GAAG,IAAhB;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,aAAa,GAAG,UAAUC,OAAV,EAAmBC,UAAnB,EAA+B;AAC/C9E,EAAAA,MAAM,CAAC,CAAC8E,UAAD,IAAeD,OAAO,KAAK,IAA3B,IAAmCA,OAAO,KAAK,KAAhD,EAAuD,4CAAvD,CAAN;;AACA,MAAIA,OAAO,KAAK,IAAhB,EAAsB;AAClBxB,IAAAA,SAAS,CAAC0B,QAAV,GAAqBxD,QAAQ,CAACyD,OAA9B;AACAN,IAAAA,MAAM,GAAGrB,SAAS,CAAC4B,GAAV,CAAcC,IAAd,CAAmB7B,SAAnB,CAAT;;AACA,QAAIyB,UAAJ,EAAgB;AACZ1B,MAAAA,cAAc,CAACrB,GAAf,CAAmB,iBAAnB,EAAsC,IAAtC;AACH;AACJ,GAND,MAOK,IAAI,OAAO8C,OAAP,KAAmB,UAAvB,EAAmC;AACpCH,IAAAA,MAAM,GAAGG,OAAT;AACH,GAFI,MAGA;AACDH,IAAAA,MAAM,GAAG,IAAT;AACAtB,IAAAA,cAAc,CAACZ,MAAf,CAAsB,iBAAtB;AACH;AACJ,CAhBD;;AAiBA,IAAIyC,GAAG,GAAG,YAAY;AAClB,MAAIjB,OAAO,GAAG,EAAd;;AACA,OAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGC,SAAS,CAACC,MAAhC,EAAwCF,EAAE,EAA1C,EAA8C;AAC1CD,IAAAA,OAAO,CAACC,EAAD,CAAP,GAAcC,SAAS,CAACD,EAAD,CAAvB;AACH;;AACD,MAAIU,SAAS,KAAK,IAAlB,EAAwB;AACpBA,IAAAA,SAAS,GAAG,KAAZ;;AACA,QAAID,MAAM,KAAK,IAAX,IAAmBtB,cAAc,CAACf,GAAf,CAAmB,iBAAnB,MAA0C,IAAjE,EAAuE;AACnEuC,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH;AACJ;;AACD,MAAIF,MAAJ,EAAY;AACR,QAAIN,OAAO,GAAGL,gBAAgB,CAACU,KAAjB,CAAuB,IAAvB,EAA6BT,OAA7B,CAAd;AACAU,IAAAA,MAAM,CAACN,OAAD,CAAN;AACH;AACJ,CAfD;;AAgBA,IAAIe,UAAU,GAAG,UAAUC,MAAV,EAAkB;AAC/B,SAAO,YAAY;AACf,QAAIpB,OAAO,GAAG,EAAd;;AACA,SAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGC,SAAS,CAACC,MAAhC,EAAwCF,EAAE,EAA1C,EAA8C;AAC1CD,MAAAA,OAAO,CAACC,EAAD,CAAP,GAAcC,SAAS,CAACD,EAAD,CAAvB;AACH;;AACDgB,IAAAA,GAAG,CAACR,KAAJ,CAAU,KAAK,CAAf,EAAkBnF,QAAQ,CAAC,CAAC8F,MAAD,CAAD,EAAWpB,OAAX,CAA1B;AACH,GAND;AAOH,CARD;;AASA,IAAIqB,KAAK,GAAG,YAAY;AACpB,MAAIrB,OAAO,GAAG,EAAd;;AACA,OAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGC,SAAS,CAACC,MAAhC,EAAwCF,EAAE,EAA1C,EAA8C;AAC1CD,IAAAA,OAAO,CAACC,EAAD,CAAP,GAAcC,SAAS,CAACD,EAAD,CAAvB;AACH;;AACD,MAAIG,OAAO,GAAG,8BAA8BL,gBAAgB,CAACU,KAAjB,CAAuB,KAAK,CAA5B,EAA+BnF,QAAQ,CAAC0E,OAAD,CAAvC,CAA5C;AACAX,EAAAA,SAAS,CAACgC,KAAV,CAAgBjB,OAAhB;AACH,CAPD;;AAQA,IAAIkB,KAAK,GAAG,YAAY;AACpB,MAAItB,OAAO,GAAG,EAAd;;AACA,OAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGC,SAAS,CAACC,MAAhC,EAAwCF,EAAE,EAA1C,EAA8C;AAC1CD,IAAAA,OAAO,CAACC,EAAD,CAAP,GAAcC,SAAS,CAACD,EAAD,CAAvB;AACH;;AACD,MAAIG,OAAO,GAAG,2BAA2BL,gBAAgB,CAACU,KAAjB,CAAuB,KAAK,CAA5B,EAA+BnF,QAAQ,CAAC0E,OAAD,CAAvC,CAAzC;AACAX,EAAAA,SAAS,CAACgC,KAAV,CAAgBjB,OAAhB;AACA,QAAM,IAAImB,KAAJ,CAAUnB,OAAV,CAAN;AACH,CARD;;AASA,IAAIoB,IAAI,GAAG,YAAY;AACnB,MAAIxB,OAAO,GAAG,EAAd;;AACA,OAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGC,SAAS,CAACC,MAAhC,EAAwCF,EAAE,EAA1C,EAA8C;AAC1CD,IAAAA,OAAO,CAACC,EAAD,CAAP,GAAcC,SAAS,CAACD,EAAD,CAAvB;AACH;;AACD,MAAIG,OAAO,GAAG,uBAAuBL,gBAAgB,CAACU,KAAjB,CAAuB,KAAK,CAA5B,EAA+BnF,QAAQ,CAAC0E,OAAD,CAAvC,CAArC;AACAX,EAAAA,SAAS,CAACmC,IAAV,CAAepB,OAAf;AACH,CAPD;AAQA;AACA;AACA;AACA;;;AACA,IAAIqB,kBAAkB,GAAG,YAAY;AACjC;AACA,MAAI,OAAOzC,MAAP,KAAkB,WAAlB,IACAA,MAAM,CAAC0C,QADP,IAEA1C,MAAM,CAAC0C,QAAP,CAAgBC,QAFhB,IAGA3C,MAAM,CAAC0C,QAAP,CAAgBC,QAAhB,CAAyBC,OAAzB,CAAiC,QAAjC,MAA+C,CAAC,CAHpD,EAGuD;AACnDJ,IAAAA,IAAI,CAAC,kDACD,8CADA,CAAJ;AAEH;AACJ,CATD;AAUA;AACA;AACA;;;AACA,IAAIK,mBAAmB,GAAG,UAAUC,IAAV,EAAgB;AACtC,SAAQ,OAAOA,IAAP,KAAgB,QAAhB,KACHA,IAAI,KAAKA,IAAT,IAAiB;AACdA,EAAAA,IAAI,KAAKC,MAAM,CAACC,iBADnB,IAEGF,IAAI,KAAKC,MAAM,CAACE,iBAHhB,CAAR;AAIH,CALD;;AAMA,IAAIC,mBAAmB,GAAG,UAAUC,EAAV,EAAc;AACpC,MAAI/F,SAAS,MAAMgG,QAAQ,CAACC,UAAT,KAAwB,UAA3C,EAAuD;AACnDF,IAAAA,EAAE;AACL,GAFD,MAGK;AACD;AACA;AACA,QAAIG,QAAQ,GAAG,KAAf;;AACA,QAAIC,WAAW,GAAG,YAAY;AAC1B,UAAI,CAACH,QAAQ,CAACI,IAAd,EAAoB;AAChBC,QAAAA,UAAU,CAACF,WAAD,EAAcG,IAAI,CAACC,KAAL,CAAW,EAAX,CAAd,CAAV;AACA;AACH;;AACD,UAAI,CAACL,QAAL,EAAe;AACXA,QAAAA,QAAQ,GAAG,IAAX;AACAH,QAAAA,EAAE;AACL;AACJ,KATD;;AAUA,QAAIC,QAAQ,CAACQ,gBAAb,EAA+B;AAC3BR,MAAAA,QAAQ,CAACQ,gBAAT,CAA0B,kBAA1B,EAA8CL,WAA9C,EAA2D,KAA3D,EAD2B,CAE3B;;AACAvD,MAAAA,MAAM,CAAC4D,gBAAP,CAAwB,MAAxB,EAAgCL,WAAhC,EAA6C,KAA7C,EAH2B,CAI3B;AACH,KALD,MAMK,IAAIH,QAAQ,CAACS,WAAb,EAA0B;AAC3B;AACA;AACAT,MAAAA,QAAQ,CAACS,WAAT,CAAqB,oBAArB,EAA2C,YAAY;AACnD,YAAIT,QAAQ,CAACC,UAAT,KAAwB,UAA5B,EAAwC;AACpCE,UAAAA,WAAW;AACd;AACJ,OAJD,EAH2B,CAQ3B;AACA;;AACAvD,MAAAA,MAAM,CAAC6D,WAAP,CAAmB,QAAnB,EAA6BN,WAA7B,EAV2B,CAW3B;AACA;AACA;AACH;AACJ;AACJ,CAxCD;AAyCA;AACA;AACA;;;AACA,IAAIO,QAAQ,GAAG,YAAf;AACA;AACA;AACA;;AACA,IAAIC,QAAQ,GAAG,YAAf;AACA;AACA;AACA;;AACA,IAAIC,WAAW,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC9B,MAAID,CAAC,KAAKC,CAAV,EAAa;AACT,WAAO,CAAP;AACH,GAFD,MAGK,IAAID,CAAC,KAAKH,QAAN,IAAkBI,CAAC,KAAKH,QAA5B,EAAsC;AACvC,WAAO,CAAC,CAAR;AACH,GAFI,MAGA,IAAIG,CAAC,KAAKJ,QAAN,IAAkBG,CAAC,KAAKF,QAA5B,EAAsC;AACvC,WAAO,CAAP;AACH,GAFI,MAGA;AACD,QAAII,MAAM,GAAGC,WAAW,CAACH,CAAD,CAAxB;AAAA,QAA6BI,MAAM,GAAGD,WAAW,CAACF,CAAD,CAAjD;;AACA,QAAIC,MAAM,KAAK,IAAf,EAAqB;AACjB,UAAIE,MAAM,KAAK,IAAf,EAAqB;AACjB,eAAOF,MAAM,GAAGE,MAAT,KAAoB,CAApB,GAAwBJ,CAAC,CAAC9C,MAAF,GAAW+C,CAAC,CAAC/C,MAArC,GAA8CgD,MAAM,GAAGE,MAA9D;AACH,OAFD,MAGK;AACD,eAAO,CAAC,CAAR;AACH;AACJ,KAPD,MAQK,IAAIA,MAAM,KAAK,IAAf,EAAqB;AACtB,aAAO,CAAP;AACH,KAFI,MAGA;AACD,aAAOJ,CAAC,GAAGC,CAAJ,GAAQ,CAAC,CAAT,GAAa,CAApB;AACH;AACJ;AACJ,CA3BD;AA4BA;AACA;AACA;;;AACA,IAAII,aAAa,GAAG,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAChC,MAAID,CAAC,KAAKC,CAAV,EAAa;AACT,WAAO,CAAP;AACH,GAFD,MAGK,IAAID,CAAC,GAAGC,CAAR,EAAW;AACZ,WAAO,CAAC,CAAR;AACH,GAFI,MAGA;AACD,WAAO,CAAP;AACH;AACJ,CAVD;;AAWA,IAAIK,UAAU,GAAG,UAAUvF,GAAV,EAAewF,GAAf,EAAoB;AACjC,MAAIA,GAAG,IAAIxF,GAAG,IAAIwF,GAAlB,EAAuB;AACnB,WAAOA,GAAG,CAACxF,GAAD,CAAV;AACH,GAFD,MAGK;AACD,UAAM,IAAIuD,KAAJ,CAAU,2BAA2BvD,GAA3B,GAAiC,eAAjC,GAAmDnC,SAAS,CAAC2H,GAAD,CAAtE,CAAN;AACH;AACJ,CAPD;;AAQA,IAAIC,iBAAiB,GAAG,UAAUD,GAAV,EAAe;AACnC,MAAI,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,IAAvC,EAA6C;AACzC,WAAO3H,SAAS,CAAC2H,GAAD,CAAhB;AACH;;AACD,MAAIE,IAAI,GAAG,EAAX,CAJmC,CAKnC;;AACA,OAAK,IAAIC,CAAT,IAAcH,GAAd,EAAmB;AACfE,IAAAA,IAAI,CAACE,IAAL,CAAUD,CAAV;AACH,GARkC,CASnC;;;AACAD,EAAAA,IAAI,CAACG,IAAL;AACA,MAAI7F,GAAG,GAAG,GAAV;;AACA,OAAK,IAAIqC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqD,IAAI,CAACvD,MAAzB,EAAiCE,CAAC,EAAlC,EAAsC;AAClC,QAAIA,CAAC,KAAK,CAAV,EAAa;AACTrC,MAAAA,GAAG,IAAI,GAAP;AACH;;AACDA,IAAAA,GAAG,IAAInC,SAAS,CAAC6H,IAAI,CAACrD,CAAD,CAAL,CAAhB;AACArC,IAAAA,GAAG,IAAI,GAAP;AACAA,IAAAA,GAAG,IAAIyF,iBAAiB,CAACD,GAAG,CAACE,IAAI,CAACrD,CAAD,CAAL,CAAJ,CAAxB;AACH;;AACDrC,EAAAA,GAAG,IAAI,GAAP;AACA,SAAOA,GAAP;AACH,CAtBD;AAuBA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAI8F,iBAAiB,GAAG,UAAUrE,GAAV,EAAesE,OAAf,EAAwB;AAC5C,MAAIC,GAAG,GAAGvE,GAAG,CAACU,MAAd;;AACA,MAAI6D,GAAG,IAAID,OAAX,EAAoB;AAChB,WAAO,CAACtE,GAAD,CAAP;AACH;;AACD,MAAIwE,QAAQ,GAAG,EAAf;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAApB,EAAyBE,CAAC,IAAIH,OAA9B,EAAuC;AACnC,QAAIG,CAAC,GAAGH,OAAJ,GAAcC,GAAlB,EAAuB;AACnBC,MAAAA,QAAQ,CAACL,IAAT,CAAcnE,GAAG,CAAC0E,SAAJ,CAAcD,CAAd,EAAiBF,GAAjB,CAAd;AACH,KAFD,MAGK;AACDC,MAAAA,QAAQ,CAACL,IAAT,CAAcnE,GAAG,CAAC0E,SAAJ,CAAcD,CAAd,EAAiBA,CAAC,GAAGH,OAArB,CAAd;AACH;AACJ;;AACD,SAAOE,QAAP;AACH,CAfD;AAgBA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,IAAT,CAAcZ,GAAd,EAAmBrB,EAAnB,EAAuB;AACnB,OAAK,IAAInE,GAAT,IAAgBwF,GAAhB,EAAqB;AACjB,QAAIA,GAAG,CAACa,cAAJ,CAAmBrG,GAAnB,CAAJ,EAA6B;AACzBmE,MAAAA,EAAE,CAACnE,GAAD,EAAMwF,GAAG,CAACxF,GAAD,CAAT,CAAF;AACH;AACJ;AACJ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIsG,qBAAqB,GAAG,UAAUC,CAAV,EAAa;AACrCvI,EAAAA,MAAM,CAAC,CAAC6F,mBAAmB,CAAC0C,CAAD,CAArB,EAA0B,qBAA1B,CAAN,CADqC,CACmB;;AACxD,MAAIC,KAAK,GAAG,EAAZ;AAAA,MAAgBC,KAAK,GAAG,EAAxB;AACA,MAAIC,IAAI,GAAG,CAAC,KAAMF,KAAK,GAAG,CAAf,IAAqB,CAAhC;AACA,MAAIG,CAAJ,EAAOzF,CAAP,EAAU0F,CAAV,EAAaC,EAAb,EAAiBxE,CAAjB,CAJqC,CAKrC;AACA;;AACA,MAAIkE,CAAC,KAAK,CAAV,EAAa;AACTrF,IAAAA,CAAC,GAAG,CAAJ;AACA0F,IAAAA,CAAC,GAAG,CAAJ;AACAD,IAAAA,CAAC,GAAG,IAAIJ,CAAJ,KAAU,CAACO,QAAX,GAAsB,CAAtB,GAA0B,CAA9B;AACH,GAJD,MAKK;AACDH,IAAAA,CAAC,GAAGJ,CAAC,GAAG,CAAR;AACAA,IAAAA,CAAC,GAAG7B,IAAI,CAACqC,GAAL,CAASR,CAAT,CAAJ;;AACA,QAAIA,CAAC,IAAI7B,IAAI,CAACsC,GAAL,CAAS,CAAT,EAAY,IAAIN,IAAhB,CAAT,EAAgC;AAC5B;AACAG,MAAAA,EAAE,GAAGnC,IAAI,CAACuC,GAAL,CAASvC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACzB,GAAL,CAASsD,CAAT,IAAc7B,IAAI,CAACwC,GAA9B,CAAT,EAA6CR,IAA7C,CAAL;AACAxF,MAAAA,CAAC,GAAG2F,EAAE,GAAGH,IAAT;AACAE,MAAAA,CAAC,GAAGlC,IAAI,CAACyC,KAAL,CAAWZ,CAAC,GAAG7B,IAAI,CAACsC,GAAL,CAAS,CAAT,EAAYP,KAAK,GAAGI,EAApB,CAAJ,GAA8BnC,IAAI,CAACsC,GAAL,CAAS,CAAT,EAAYP,KAAZ,CAAzC,CAAJ;AACH,KALD,MAMK;AACD;AACAvF,MAAAA,CAAC,GAAG,CAAJ;AACA0F,MAAAA,CAAC,GAAGlC,IAAI,CAACyC,KAAL,CAAWZ,CAAC,GAAG7B,IAAI,CAACsC,GAAL,CAAS,CAAT,EAAY,IAAIN,IAAJ,GAAWD,KAAvB,CAAf,CAAJ;AACH;AACJ,GA1BoC,CA2BrC;;;AACA,MAAIW,IAAI,GAAG,EAAX;;AACA,OAAK/E,CAAC,GAAGoE,KAAT,EAAgBpE,CAAhB,EAAmBA,CAAC,IAAI,CAAxB,EAA2B;AACvB+E,IAAAA,IAAI,CAACxB,IAAL,CAAUgB,CAAC,GAAG,CAAJ,GAAQ,CAAR,GAAY,CAAtB;AACAA,IAAAA,CAAC,GAAGlC,IAAI,CAACC,KAAL,CAAWiC,CAAC,GAAG,CAAf,CAAJ;AACH;;AACD,OAAKvE,CAAC,GAAGmE,KAAT,EAAgBnE,CAAhB,EAAmBA,CAAC,IAAI,CAAxB,EAA2B;AACvB+E,IAAAA,IAAI,CAACxB,IAAL,CAAU1E,CAAC,GAAG,CAAJ,GAAQ,CAAR,GAAY,CAAtB;AACAA,IAAAA,CAAC,GAAGwD,IAAI,CAACC,KAAL,CAAWzD,CAAC,GAAG,CAAf,CAAJ;AACH;;AACDkG,EAAAA,IAAI,CAACxB,IAAL,CAAUe,CAAC,GAAG,CAAH,GAAO,CAAlB;AACAS,EAAAA,IAAI,CAACC,OAAL;AACA,MAAI5F,GAAG,GAAG2F,IAAI,CAACE,IAAL,CAAU,EAAV,CAAV,CAvCqC,CAwCrC;;AACA,MAAIC,aAAa,GAAG,EAApB;;AACA,OAAKlF,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoBA,CAAC,IAAI,CAAzB,EAA4B;AACxB,QAAImF,OAAO,GAAGC,QAAQ,CAAChG,GAAG,CAACiG,MAAJ,CAAWrF,CAAX,EAAc,CAAd,CAAD,EAAmB,CAAnB,CAAR,CAA8B3B,QAA9B,CAAuC,EAAvC,CAAd;;AACA,QAAI8G,OAAO,CAACrF,MAAR,KAAmB,CAAvB,EAA0B;AACtBqF,MAAAA,OAAO,GAAG,MAAMA,OAAhB;AACH;;AACDD,IAAAA,aAAa,GAAGA,aAAa,GAAGC,OAAhC;AACH;;AACD,SAAOD,aAAa,CAACI,WAAd,EAAP;AACH,CAlDD;AAmDA;AACA;AACA;AACA;;;AACA,IAAIC,8BAA8B,GAAG,YAAY;AAC7C,SAAO,CAAC,EAAE,OAAO5G,MAAP,KAAkB,QAAlB,IACNA,MAAM,CAAC,QAAD,CADA,IAENA,MAAM,CAAC,QAAD,CAAN,CAAiB,WAAjB,CAFM,IAGN,CAAC,UAAU6G,IAAV,CAAe7G,MAAM,CAAC0C,QAAP,CAAgBoE,IAA/B,CAHG,CAAR;AAIH,CALD;AAMA;AACA;AACA;;;AACA,IAAIC,iBAAiB,GAAG,YAAY;AAChC;AACA,SAAO,OAAOC,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACC,EAAf,KAAsB,QAA5D;AACH,CAHD;AAIA;AACA;AACA;;;AACA,IAAIC,kBAAkB,GAAG,UAAUC,IAAV,EAAgBC,KAAhB,EAAuB;AAC5C,MAAIC,MAAM,GAAG,eAAb;;AACA,MAAIF,IAAI,KAAK,SAAb,EAAwB;AACpBE,IAAAA,MAAM,GACF,iDACI,6CAFR;AAGH,GAJD,MAKK,IAAIF,IAAI,KAAK,mBAAb,EAAkC;AACnCE,IAAAA,MAAM,GAAG,4DAAT;AACH,GAFI,MAGA,IAAIF,IAAI,KAAK,aAAb,EAA4B;AAC7BE,IAAAA,MAAM,GAAG,4BAAT;AACH;;AACD,MAAIhF,KAAK,GAAG,IAAIE,KAAJ,CAAU4E,IAAI,GAAG,MAAP,GAAgBC,KAAK,CAACE,IAAN,CAAW5H,QAAX,EAAhB,GAAwC,IAAxC,GAA+C2H,MAAzD,CAAZ,CAb4C,CAc5C;;AACAhF,EAAAA,KAAK,CAAC8E,IAAN,GAAaA,IAAI,CAACI,WAAL,EAAb;AACA,SAAOlF,KAAP;AACH,CAjBD;AAkBA;AACA;AACA;;;AACA,IAAImF,eAAe,GAAG,IAAIC,MAAJ,CAAW,mBAAX,CAAtB;AACA;AACA;AACA;;AACA,IAAIC,cAAc,GAAG,CAAC,UAAtB;AACA;AACA;AACA;;AACA,IAAIC,cAAc,GAAG,UAArB;AACA;AACA;AACA;;AACA,IAAIvD,WAAW,GAAG,UAAU3D,GAAV,EAAe;AAC7B,MAAI+G,eAAe,CAACX,IAAhB,CAAqBpG,GAArB,CAAJ,EAA+B;AAC3B,QAAImH,MAAM,GAAG7E,MAAM,CAACtC,GAAD,CAAnB;;AACA,QAAImH,MAAM,IAAIF,cAAV,IAA4BE,MAAM,IAAID,cAA1C,EAA0D;AACtD,aAAOC,MAAP;AACH;AACJ;;AACD,SAAO,IAAP;AACH,CARD;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,cAAc,GAAG,UAAU1E,EAAV,EAAc;AAC/B,MAAI;AACAA,IAAAA,EAAE;AACL,GAFD,CAGA,OAAOjD,CAAP,EAAU;AACN;AACAuD,IAAAA,UAAU,CAAC,YAAY;AACnB;AACA;AACA;AACA;AACA,UAAIqE,KAAK,GAAG5H,CAAC,CAAC4H,KAAF,IAAW,EAAvB;AACAtF,MAAAA,IAAI,CAAC,wCAAD,EAA2CsF,KAA3C,CAAJ;AACA,YAAM5H,CAAN;AACH,KARS,EAQPwD,IAAI,CAACC,KAAL,CAAW,CAAX,CARO,CAAV;AASH;AACJ,CAhBD;AAiBA;AACA;AACA;;;AACA,IAAIoE,YAAY,GAAG,YAAY;AAC3B,MAAIC,SAAS,GAAI,OAAOhI,MAAP,KAAkB,QAAlB,IACbA,MAAM,CAAC,WAAD,CADO,IAEbA,MAAM,CAAC,WAAD,CAAN,CAAoB,WAApB,CAFY,IAGZ,EAHJ,CAD2B,CAK3B;AACA;AACA;AACA;;AACA,SAAQgI,SAAS,CAACC,MAAV,CAAiB,0FAAjB,KAAgH,CAAxH;AACH,CAVD;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,qBAAqB,GAAG,UAAU/E,EAAV,EAAcgF,IAAd,EAAoB;AAC5C,MAAIC,OAAO,GAAG3E,UAAU,CAACN,EAAD,EAAKgF,IAAL,CAAxB,CAD4C,CAE5C;;AACA,MAAI,OAAOC,OAAP,KAAmB,QAAnB,IAA+BA,OAAO,CAAC,OAAD,CAA1C,EAAqD;AACjD;AACAA,IAAAA,OAAO,CAAC,OAAD,CAAP;AACH;;AACD,SAAOA,OAAP;AACH,CARD;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,IAAI;AAAG;AAAe,YAAY;AAClC;AACJ;AACA;AACA;AACI,WAASA,IAAT,CAAcC,YAAd,EAA4BC,QAA5B,EAAsC;AAClC,QAAIA,QAAQ,KAAK,KAAK,CAAtB,EAAyB;AACrB,WAAKC,OAAL,GAAeF,YAAY,CAACG,KAAb,CAAmB,GAAnB,CAAf,CADqB,CAErB;;AACA,UAAIC,MAAM,GAAG,CAAb;;AACA,WAAK,IAAIrH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKmH,OAAL,CAAarH,MAAjC,EAAyCE,CAAC,EAA1C,EAA8C;AAC1C,YAAI,KAAKmH,OAAL,CAAanH,CAAb,EAAgBF,MAAhB,GAAyB,CAA7B,EAAgC;AAC5B,eAAKqH,OAAL,CAAaE,MAAb,IAAuB,KAAKF,OAAL,CAAanH,CAAb,CAAvB;AACAqH,UAAAA,MAAM;AACT;AACJ;;AACD,WAAKF,OAAL,CAAarH,MAAb,GAAsBuH,MAAtB;AACA,WAAKC,SAAL,GAAiB,CAAjB;AACH,KAZD,MAaK;AACD,WAAKH,OAAL,GAAeF,YAAf;AACA,WAAKK,SAAL,GAAiBJ,QAAjB;AACH;AACJ;;AACDF,EAAAA,IAAI,CAACvJ,SAAL,CAAeY,QAAf,GAA0B,YAAY;AAClC,QAAIkJ,UAAU,GAAG,EAAjB;;AACA,SAAK,IAAIvH,CAAC,GAAG,KAAKsH,SAAlB,EAA6BtH,CAAC,GAAG,KAAKmH,OAAL,CAAarH,MAA9C,EAAsDE,CAAC,EAAvD,EAA2D;AACvD,UAAI,KAAKmH,OAAL,CAAanH,CAAb,MAAoB,EAAxB,EAA4B;AACxBuH,QAAAA,UAAU,IAAI,MAAM,KAAKJ,OAAL,CAAanH,CAAb,CAApB;AACH;AACJ;;AACD,WAAOuH,UAAU,IAAI,GAArB;AACH,GARD;;AASA,SAAOP,IAAP;AACH,CAlCyB,EAA1B;;AAmCA,SAASQ,YAAT,GAAwB;AACpB,SAAO,IAAIR,IAAJ,CAAS,EAAT,CAAP;AACH;;AACD,SAASS,YAAT,CAAsBxB,IAAtB,EAA4B;AACxB,MAAIA,IAAI,CAACqB,SAAL,IAAkBrB,IAAI,CAACkB,OAAL,CAAarH,MAAnC,EAA2C;AACvC,WAAO,IAAP;AACH;;AACD,SAAOmG,IAAI,CAACkB,OAAL,CAAalB,IAAI,CAACqB,SAAlB,CAAP;AACH;AACD;AACA;AACA;;;AACA,SAASI,aAAT,CAAuBzB,IAAvB,EAA6B;AACzB,SAAOA,IAAI,CAACkB,OAAL,CAAarH,MAAb,GAAsBmG,IAAI,CAACqB,SAAlC;AACH;;AACD,SAASK,YAAT,CAAsB1B,IAAtB,EAA4B;AACxB,MAAIiB,QAAQ,GAAGjB,IAAI,CAACqB,SAApB;;AACA,MAAIJ,QAAQ,GAAGjB,IAAI,CAACkB,OAAL,CAAarH,MAA5B,EAAoC;AAChCoH,IAAAA,QAAQ;AACX;;AACD,SAAO,IAAIF,IAAJ,CAASf,IAAI,CAACkB,OAAd,EAAuBD,QAAvB,CAAP;AACH;;AACD,SAASU,WAAT,CAAqB3B,IAArB,EAA2B;AACvB,MAAIA,IAAI,CAACqB,SAAL,GAAiBrB,IAAI,CAACkB,OAAL,CAAarH,MAAlC,EAA0C;AACtC,WAAOmG,IAAI,CAACkB,OAAL,CAAalB,IAAI,CAACkB,OAAL,CAAarH,MAAb,GAAsB,CAAnC,CAAP;AACH;;AACD,SAAO,IAAP;AACH;;AACD,SAAS+H,sBAAT,CAAgC5B,IAAhC,EAAsC;AAClC,MAAIsB,UAAU,GAAG,EAAjB;;AACA,OAAK,IAAIvH,CAAC,GAAGiG,IAAI,CAACqB,SAAlB,EAA6BtH,CAAC,GAAGiG,IAAI,CAACkB,OAAL,CAAarH,MAA9C,EAAsDE,CAAC,EAAvD,EAA2D;AACvD,QAAIiG,IAAI,CAACkB,OAAL,CAAanH,CAAb,MAAoB,EAAxB,EAA4B;AACxBuH,MAAAA,UAAU,IAAI,MAAMO,kBAAkB,CAACC,MAAM,CAAC9B,IAAI,CAACkB,OAAL,CAAanH,CAAb,CAAD,CAAP,CAAtC;AACH;AACJ;;AACD,SAAOuH,UAAU,IAAI,GAArB;AACH;AACD;AACA;AACA;AACA;;;AACA,SAASS,SAAT,CAAmB/B,IAAnB,EAAyBgC,KAAzB,EAAgC;AAC5B,MAAIA,KAAK,KAAK,KAAK,CAAnB,EAAsB;AAAEA,IAAAA,KAAK,GAAG,CAAR;AAAY;;AACpC,SAAOhC,IAAI,CAACkB,OAAL,CAAae,KAAb,CAAmBjC,IAAI,CAACqB,SAAL,GAAiBW,KAApC,CAAP;AACH;;AACD,SAASE,UAAT,CAAoBlC,IAApB,EAA0B;AACtB,MAAIA,IAAI,CAACqB,SAAL,IAAkBrB,IAAI,CAACkB,OAAL,CAAarH,MAAnC,EAA2C;AACvC,WAAO,IAAP;AACH;;AACD,MAAIsI,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIpI,CAAC,GAAGiG,IAAI,CAACqB,SAAlB,EAA6BtH,CAAC,GAAGiG,IAAI,CAACkB,OAAL,CAAarH,MAAb,GAAsB,CAAvD,EAA0DE,CAAC,EAA3D,EAA+D;AAC3DoI,IAAAA,MAAM,CAAC7E,IAAP,CAAY0C,IAAI,CAACkB,OAAL,CAAanH,CAAb,CAAZ;AACH;;AACD,SAAO,IAAIgH,IAAJ,CAASoB,MAAT,EAAiB,CAAjB,CAAP;AACH;;AACD,SAASC,SAAT,CAAmBpC,IAAnB,EAAyBqC,YAAzB,EAAuC;AACnC,MAAIF,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIpI,CAAC,GAAGiG,IAAI,CAACqB,SAAlB,EAA6BtH,CAAC,GAAGiG,IAAI,CAACkB,OAAL,CAAarH,MAA9C,EAAsDE,CAAC,EAAvD,EAA2D;AACvDoI,IAAAA,MAAM,CAAC7E,IAAP,CAAY0C,IAAI,CAACkB,OAAL,CAAanH,CAAb,CAAZ;AACH;;AACD,MAAIsI,YAAY,YAAYtB,IAA5B,EAAkC;AAC9B,SAAK,IAAIhH,CAAC,GAAGsI,YAAY,CAAChB,SAA1B,EAAqCtH,CAAC,GAAGsI,YAAY,CAACnB,OAAb,CAAqBrH,MAA9D,EAAsEE,CAAC,EAAvE,EAA2E;AACvEoI,MAAAA,MAAM,CAAC7E,IAAP,CAAY+E,YAAY,CAACnB,OAAb,CAAqBnH,CAArB,CAAZ;AACH;AACJ,GAJD,MAKK;AACD,QAAIuI,WAAW,GAAGD,YAAY,CAAClB,KAAb,CAAmB,GAAnB,CAAlB;;AACA,SAAK,IAAIpH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuI,WAAW,CAACzI,MAAhC,EAAwCE,CAAC,EAAzC,EAA6C;AACzC,UAAIuI,WAAW,CAACvI,CAAD,CAAX,CAAeF,MAAf,GAAwB,CAA5B,EAA+B;AAC3BsI,QAAAA,MAAM,CAAC7E,IAAP,CAAYgF,WAAW,CAACvI,CAAD,CAAvB;AACH;AACJ;AACJ;;AACD,SAAO,IAAIgH,IAAJ,CAASoB,MAAT,EAAiB,CAAjB,CAAP;AACH;AACD;AACA;AACA;;;AACA,SAASI,WAAT,CAAqBvC,IAArB,EAA2B;AACvB,SAAOA,IAAI,CAACqB,SAAL,IAAkBrB,IAAI,CAACkB,OAAL,CAAarH,MAAtC;AACH;AACD;AACA;AACA;;;AACA,SAAS2I,eAAT,CAAyBC,SAAzB,EAAoCC,SAApC,EAA+C;AAC3C,MAAIC,KAAK,GAAGnB,YAAY,CAACiB,SAAD,CAAxB;AAAA,MAAqCG,KAAK,GAAGpB,YAAY,CAACkB,SAAD,CAAzD;;AACA,MAAIC,KAAK,KAAK,IAAd,EAAoB;AAChB,WAAOD,SAAP;AACH,GAFD,MAGK,IAAIC,KAAK,KAAKC,KAAd,EAAqB;AACtB,WAAOJ,eAAe,CAACd,YAAY,CAACe,SAAD,CAAb,EAA0Bf,YAAY,CAACgB,SAAD,CAAtC,CAAtB;AACH,GAFI,MAGA;AACD,UAAM,IAAIzH,KAAJ,CAAU,gCACZyH,SADY,GAEZ,kBAFY,GAGZ,aAHY,GAIZD,SAJY,GAKZ,GALE,CAAN;AAMH;AACJ;AACD;AACA;AACA;;;AACA,SAASI,WAAT,CAAqBC,IAArB,EAA2BC,KAA3B,EAAkC;AAC9B,MAAIC,QAAQ,GAAGjB,SAAS,CAACe,IAAD,EAAO,CAAP,CAAxB;AACA,MAAIG,SAAS,GAAGlB,SAAS,CAACgB,KAAD,EAAQ,CAAR,CAAzB;;AACA,OAAK,IAAIhJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiJ,QAAQ,CAACnJ,MAAb,IAAuBE,CAAC,GAAGkJ,SAAS,CAACpJ,MAArD,EAA6DE,CAAC,EAA9D,EAAkE;AAC9D,QAAImJ,GAAG,GAAGxG,WAAW,CAACsG,QAAQ,CAACjJ,CAAD,CAAT,EAAckJ,SAAS,CAAClJ,CAAD,CAAvB,CAArB;;AACA,QAAImJ,GAAG,KAAK,CAAZ,EAAe;AACX,aAAOA,GAAP;AACH;AACJ;;AACD,MAAIF,QAAQ,CAACnJ,MAAT,KAAoBoJ,SAAS,CAACpJ,MAAlC,EAA0C;AACtC,WAAO,CAAP;AACH;;AACD,SAAOmJ,QAAQ,CAACnJ,MAAT,GAAkBoJ,SAAS,CAACpJ,MAA5B,GAAqC,CAAC,CAAtC,GAA0C,CAAjD;AACH;AACD;AACA;AACA;;;AACA,SAASsJ,UAAT,CAAoBnD,IAApB,EAA0BoD,KAA1B,EAAiC;AAC7B,MAAI3B,aAAa,CAACzB,IAAD,CAAb,KAAwByB,aAAa,CAAC2B,KAAD,CAAzC,EAAkD;AAC9C,WAAO,KAAP;AACH;;AACD,OAAK,IAAIrJ,CAAC,GAAGiG,IAAI,CAACqB,SAAb,EAAwBgC,CAAC,GAAGD,KAAK,CAAC/B,SAAvC,EAAkDtH,CAAC,IAAIiG,IAAI,CAACkB,OAAL,CAAarH,MAApE,EAA4EE,CAAC,IAAIsJ,CAAC,EAAlF,EAAsF;AAClF,QAAIrD,IAAI,CAACkB,OAAL,CAAanH,CAAb,MAAoBqJ,KAAK,CAAClC,OAAN,CAAcmC,CAAd,CAAxB,EAA0C;AACtC,aAAO,KAAP;AACH;AACJ;;AACD,SAAO,IAAP;AACH;AACD;AACA;AACA;;;AACA,SAASC,YAAT,CAAsBtD,IAAtB,EAA4BoD,KAA5B,EAAmC;AAC/B,MAAIrJ,CAAC,GAAGiG,IAAI,CAACqB,SAAb;AACA,MAAIgC,CAAC,GAAGD,KAAK,CAAC/B,SAAd;;AACA,MAAII,aAAa,CAACzB,IAAD,CAAb,GAAsByB,aAAa,CAAC2B,KAAD,CAAvC,EAAgD;AAC5C,WAAO,KAAP;AACH;;AACD,SAAOrJ,CAAC,GAAGiG,IAAI,CAACkB,OAAL,CAAarH,MAAxB,EAAgC;AAC5B,QAAImG,IAAI,CAACkB,OAAL,CAAanH,CAAb,MAAoBqJ,KAAK,CAAClC,OAAN,CAAcmC,CAAd,CAAxB,EAA0C;AACtC,aAAO,KAAP;AACH;;AACD,MAAEtJ,CAAF;AACA,MAAEsJ,CAAF;AACH;;AACD,SAAO,IAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIE,cAAc;AAAG;AAAe,YAAY;AAC5C;AACJ;AACA;AACA;AACI,WAASA,cAAT,CAAwBvD,IAAxB,EAA8BwD,YAA9B,EAA4C;AACxC,SAAKA,YAAL,GAAoBA,YAApB;AACA,SAAKC,MAAL,GAAc1B,SAAS,CAAC/B,IAAD,EAAO,CAAP,CAAvB;AACA;;AACA,SAAK0D,WAAL,GAAmBtH,IAAI,CAACuH,GAAL,CAAS,CAAT,EAAY,KAAKF,MAAL,CAAY5J,MAAxB,CAAnB;;AACA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK0J,MAAL,CAAY5J,MAAhC,EAAwCE,CAAC,EAAzC,EAA6C;AACzC,WAAK2J,WAAL,IAAoB3N,YAAY,CAAC,KAAK0N,MAAL,CAAY1J,CAAZ,CAAD,CAAhC;AACH;;AACD,SAAK6J,WAAL;AACH;;AACDC,EAAAA,MAAM,CAACC,cAAP,CAAsBP,cAAtB,EAAsC,gBAAtC,EAAwD;AACpD;AACAxL,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,EAAP;AACH,KAJmD;AAKpDgM,IAAAA,UAAU,EAAE,KALwC;AAMpDC,IAAAA,YAAY,EAAE;AANsC,GAAxD;AAQAH,EAAAA,MAAM,CAACC,cAAP,CAAsBP,cAAtB,EAAsC,uBAAtC,EAA+D;AAC3D;AACAxL,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,GAAP;AACH,KAJ0D;AAK3DgM,IAAAA,UAAU,EAAE,KAL+C;AAM3DC,IAAAA,YAAY,EAAE;AAN6C,GAA/D;AAQA;;AACAT,EAAAA,cAAc,CAAC/L,SAAf,CAAyB8F,IAAzB,GAAgC,UAAU2G,KAAV,EAAiB;AAC7C;AACA,QAAI,KAAKR,MAAL,CAAY5J,MAAZ,GAAqB,CAAzB,EAA4B;AACxB,WAAK6J,WAAL,IAAoB,CAApB;AACH;;AACD,SAAKD,MAAL,CAAYnG,IAAZ,CAAiB2G,KAAjB;AACA,SAAKP,WAAL,IAAoB3N,YAAY,CAACkO,KAAD,CAAhC;AACA,SAAKL,WAAL;AACH,GARD;;AASAL,EAAAA,cAAc,CAAC/L,SAAf,CAAyB0M,GAAzB,GAA+B,YAAY;AACvC,QAAIC,IAAI,GAAG,KAAKV,MAAL,CAAYS,GAAZ,EAAX;AACA,SAAKR,WAAL,IAAoB3N,YAAY,CAACoO,IAAD,CAAhC,CAFuC,CAGvC;;AACA,QAAI,KAAKV,MAAL,CAAY5J,MAAZ,GAAqB,CAAzB,EAA4B;AACxB,WAAK6J,WAAL,IAAoB,CAApB;AACH;AACJ,GAPD;;AAQAH,EAAAA,cAAc,CAAC/L,SAAf,CAAyBoM,WAAzB,GAAuC,YAAY;AAC/C,QAAI,KAAKF,WAAL,GAAmBH,cAAc,CAACa,qBAAtC,EAA6D;AACzD,YAAM,IAAInJ,KAAJ,CAAU,KAAKuI,YAAL,GACZ,6BADY,GAEZD,cAAc,CAACa,qBAFH,GAGZ,UAHY,GAIZ,KAAKV,WAJO,GAKZ,IALE,CAAN;AAMH;;AACD,QAAI,KAAKD,MAAL,CAAY5J,MAAZ,GAAqB0J,cAAc,CAACc,cAAxC,EAAwD;AACpD,YAAM,IAAIpJ,KAAJ,CAAU,KAAKuI,YAAL,GACZ,gEADY,GAEZD,cAAc,CAACc,cAFH,GAGZ,+BAHY,GAIZ,KAAKC,aAAL,EAJE,CAAN;AAKH;AACJ,GAhBD;AAiBA;AACJ;AACA;;;AACIf,EAAAA,cAAc,CAAC/L,SAAf,CAAyB8M,aAAzB,GAAyC,YAAY;AACjD,QAAI,KAAKb,MAAL,CAAY5J,MAAZ,KAAuB,CAA3B,EAA8B;AAC1B,aAAO,EAAP;AACH;;AACD,WAAO,kBAAkB,KAAK4J,MAAL,CAAYzE,IAAZ,CAAiB,GAAjB,CAAlB,GAA0C,GAAjD;AACH,GALD;;AAMA,SAAOuE,cAAP;AACH,CA5EmC,EAApC;AA8EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIgB,gBAAgB,GAAG,GAAvB;AACA,IAAIC,aAAa,GAAG,GAApB;AACA,IAAIC,uBAAuB,GAAG,GAA9B;AACA,IAAIC,aAAa,GAAG,GAApB;AACA,IAAIC,SAAS,GAAG,GAAhB,C,CACA;AACA;;AACA,IAAIC,eAAe,GAAG,4EAAtB;AACA,IAAIC,kBAAkB,GAAG,IAAzB;AACA,IAAIC,oBAAoB,GAAG,GAA3B;AACA,IAAIC,SAAS,GAAG,WAAhB;AACA,IAAIC,YAAY,GAAG,cAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA,IAAIC,QAAQ;AAAG;AAAe,YAAY;AACtC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACI,WAASA,QAAT,CAAkBC,IAAlB,EAAwBC,MAAxB,EAAgCC,SAAhC,EAA2CC,aAA3C,EAA0DC,SAA1D,EAAqEC,cAArE,EAAqFC,6BAArF,EAAoH;AAChH,QAAIF,SAAS,KAAK,KAAK,CAAvB,EAA0B;AAAEA,MAAAA,SAAS,GAAG,KAAZ;AAAoB;;AAChD,QAAIC,cAAc,KAAK,KAAK,CAA5B,EAA+B;AAAEA,MAAAA,cAAc,GAAG,EAAjB;AAAsB;;AACvD,QAAIC,6BAA6B,KAAK,KAAK,CAA3C,EAA8C;AAAEA,MAAAA,6BAA6B,GAAG,KAAhC;AAAwC;;AACxF,SAAKL,MAAL,GAAcA,MAAd;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKC,aAAL,GAAqBA,aAArB;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKC,cAAL,GAAsBA,cAAtB;AACA,SAAKC,6BAAL,GAAqCA,6BAArC;AACA,SAAKN,IAAL,GAAYA,IAAI,CAAC7F,WAAL,EAAZ;AACA,SAAKoG,MAAL,GAAc,KAAKP,IAAL,CAAU9F,MAAV,CAAiB,KAAK8F,IAAL,CAAU5J,OAAV,CAAkB,GAAlB,IAAyB,CAA1C,CAAd;AACA,SAAKoK,YAAL,GACI7M,iBAAiB,CAACd,GAAlB,CAAsB,UAAUmN,IAAhC,KAAyC,KAAKA,IADlD;AAEH;;AACDD,EAAAA,QAAQ,CAACzN,SAAT,CAAmBmO,eAAnB,GAAqC,YAAY;AAC7C,WAAQ,KAAKT,IAAL,KAAc,KAAKQ,YAAnB,IACJ,KAAKE,YAAL,EADI,IAEJ,KAAKJ,6BAFT;AAGH,GAJD;;AAKAP,EAAAA,QAAQ,CAACzN,SAAT,CAAmBqO,eAAnB,GAAqC,YAAY;AAC7C,WAAO,KAAKH,YAAL,CAAkBtG,MAAlB,CAAyB,CAAzB,EAA4B,CAA5B,MAAmC,IAA1C;AACH,GAFD;;AAGA6F,EAAAA,QAAQ,CAACzN,SAAT,CAAmBsO,UAAnB,GAAgC,YAAY;AACxC,WAAO,KAAKL,MAAL,KAAgB,qBAAvB;AACH,GAFD;;AAGAR,EAAAA,QAAQ,CAACzN,SAAT,CAAmBoO,YAAnB,GAAkC,YAAY;AAC1C,WAAQ,KAAKH,MAAL,KAAgB,gBAAhB,IAAoC,KAAKA,MAAL,KAAgB,qBAA5D;AACH,GAFD;;AAGAR,EAAAA,QAAQ,CAACzN,SAAT,CAAmBuO,UAAnB,GAAgC,UAAUC,OAAV,EAAmB;AAC/C,QAAIA,OAAO,KAAK,KAAKN,YAArB,EAAmC;AAC/B,WAAKA,YAAL,GAAoBM,OAApB;;AACA,UAAI,KAAKH,eAAL,EAAJ,EAA4B;AACxBhN,QAAAA,iBAAiB,CAACpB,GAAlB,CAAsB,UAAU,KAAKyN,IAArC,EAA2C,KAAKQ,YAAhD;AACH;AACJ;AACJ,GAPD;AAQA;AACJ;AACA;AACA;AACA;AACA;;;AACIT,EAAAA,QAAQ,CAACzN,SAAT,CAAmByO,aAAnB,GAAmC,UAAUC,IAAV,EAAgBC,MAAhB,EAAwB;AACvDzQ,IAAAA,MAAM,CAAC,OAAOwQ,IAAP,KAAgB,QAAjB,EAA2B,4BAA3B,CAAN;AACAxQ,IAAAA,MAAM,CAAC,OAAOyQ,MAAP,KAAkB,QAAnB,EAA6B,8BAA7B,CAAN;AACA,QAAIC,OAAJ;;AACA,QAAIF,IAAI,KAAKnB,SAAb,EAAwB;AACpBqB,MAAAA,OAAO,GACH,CAAC,KAAKjB,MAAL,GAAc,QAAd,GAAyB,OAA1B,IAAqC,KAAKO,YAA1C,GAAyD,OAD7D;AAEH,KAHD,MAIK,IAAIQ,IAAI,KAAKlB,YAAb,EAA2B;AAC5BoB,MAAAA,OAAO,GACH,CAAC,KAAKjB,MAAL,GAAc,UAAd,GAA2B,SAA5B,IAAyC,KAAKO,YAA9C,GAA6D,OADjE;AAEH,KAHI,MAIA;AACD,YAAM,IAAIzK,KAAJ,CAAU,8BAA8BiL,IAAxC,CAAN;AACH;;AACD,QAAI,KAAKP,eAAL,EAAJ,EAA4B;AACxBQ,MAAAA,MAAM,CAAC,IAAD,CAAN,GAAe,KAAKf,SAApB;AACH;;AACD,QAAIiB,KAAK,GAAG,EAAZ;AACAvI,IAAAA,IAAI,CAACqI,MAAD,EAAS,UAAUzO,GAAV,EAAeC,KAAf,EAAsB;AAC/B0O,MAAAA,KAAK,CAAC/I,IAAN,CAAW5F,GAAG,GAAG,GAAN,GAAYC,KAAvB;AACH,KAFG,CAAJ;AAGA,WAAOyO,OAAO,GAAGC,KAAK,CAACrH,IAAN,CAAW,GAAX,CAAjB;AACH,GAvBD;AAwBA;;;AACAiG,EAAAA,QAAQ,CAACzN,SAAT,CAAmBY,QAAnB,GAA8B,YAAY;AACtC,QAAIe,GAAG,GAAG,KAAKmN,WAAL,EAAV;;AACA,QAAI,KAAKf,cAAT,EAAyB;AACrBpM,MAAAA,GAAG,IAAI,MAAM,KAAKoM,cAAX,GAA4B,GAAnC;AACH;;AACD,WAAOpM,GAAP;AACH,GAND;AAOA;;;AACA8L,EAAAA,QAAQ,CAACzN,SAAT,CAAmB8O,WAAnB,GAAiC,YAAY;AACzC,QAAIjL,QAAQ,GAAG,KAAK8J,MAAL,GAAc,UAAd,GAA2B,SAA1C;AACA,QAAIrF,KAAK,GAAG,KAAK0F,6BAAL,GACN,SAAS,KAAKJ,SADR,GAEN,EAFN;AAGA,WAAO,KAAK/J,QAAL,GAAgB,KAAK6J,IAArB,GAA4B,GAA5B,GAAkCpF,KAAzC;AACH,GAND;;AAOA,SAAOmF,QAAP;AACH,CA7F6B,EAA9B;AA+FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASsB,UAAT,CAAoBjF,UAApB,EAAgC;AAC5B,MAAIkF,iBAAiB,GAAG,EAAxB;AACA,MAAIrE,MAAM,GAAGb,UAAU,CAACH,KAAX,CAAiB,GAAjB,CAAb;;AACA,OAAK,IAAIpH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoI,MAAM,CAACtI,MAA3B,EAAmCE,CAAC,EAApC,EAAwC;AACpC,QAAIoI,MAAM,CAACpI,CAAD,CAAN,CAAUF,MAAV,GAAmB,CAAvB,EAA0B;AACtB,UAAI4M,KAAK,GAAGtE,MAAM,CAACpI,CAAD,CAAlB;;AACA,UAAI;AACA0M,QAAAA,KAAK,GAAGC,kBAAkB,CAACD,KAAK,CAACE,OAAN,CAAc,KAAd,EAAqB,GAArB,CAAD,CAA1B;AACH,OAFD,CAGA,OAAO/N,CAAP,EAAU,CAAG;;AACb4N,MAAAA,iBAAiB,IAAI,MAAMC,KAA3B;AACH;AACJ;;AACD,SAAOD,iBAAP;AACH;AACD;AACA;AACA;;;AACA,SAASI,WAAT,CAAqBC,WAArB,EAAkC;AAC9B,MAAIC,GAAJ,EAASC,EAAT;;AACA,MAAIC,OAAO,GAAG,EAAd;;AACA,MAAIH,WAAW,CAACI,MAAZ,CAAmB,CAAnB,MAA0B,GAA9B,EAAmC;AAC/BJ,IAAAA,WAAW,GAAGA,WAAW,CAAChJ,SAAZ,CAAsB,CAAtB,CAAd;AACH;;AACD,MAAI;AACA,SAAK,IAAIqJ,EAAE,GAAGjS,QAAQ,CAAC4R,WAAW,CAAC1F,KAAZ,CAAkB,GAAlB,CAAD,CAAjB,EAA2CgG,EAAE,GAAGD,EAAE,CAACE,IAAH,EAArD,EAAgE,CAACD,EAAE,CAACE,IAApE,EAA0EF,EAAE,GAAGD,EAAE,CAACE,IAAH,EAA/E,EAA0F;AACtF,UAAIE,OAAO,GAAGH,EAAE,CAACxP,KAAjB;;AACA,UAAI2P,OAAO,CAACzN,MAAR,KAAmB,CAAvB,EAA0B;AACtB;AACH;;AACD,UAAI0N,EAAE,GAAGD,OAAO,CAACnG,KAAR,CAAc,GAAd,CAAT;;AACA,UAAIoG,EAAE,CAAC1N,MAAH,KAAc,CAAlB,EAAqB;AACjBmN,QAAAA,OAAO,CAACN,kBAAkB,CAACa,EAAE,CAAC,CAAD,CAAH,CAAnB,CAAP,GAAqCb,kBAAkB,CAACa,EAAE,CAAC,CAAD,CAAH,CAAvD;AACH,OAFD,MAGK;AACDrM,QAAAA,IAAI,CAAC,4BAA4BoM,OAA5B,GAAsC,cAAtC,GAAuDT,WAAvD,GAAqE,GAAtE,CAAJ;AACH;AACJ;AACJ,GAdD,CAeA,OAAOW,KAAP,EAAc;AAAEV,IAAAA,GAAG,GAAG;AAAE/L,MAAAA,KAAK,EAAEyM;AAAT,KAAN;AAAyB,GAfzC,SAgBQ;AACJ,QAAI;AACA,UAAIL,EAAE,IAAI,CAACA,EAAE,CAACE,IAAV,KAAmBN,EAAE,GAAGG,EAAE,CAACO,MAA3B,CAAJ,EAAwCV,EAAE,CAACW,IAAH,CAAQR,EAAR;AAC3C,KAFD,SAGQ;AAAE,UAAIJ,GAAJ,EAAS,MAAMA,GAAG,CAAC/L,KAAV;AAAkB;AACxC;;AACD,SAAOiM,OAAP;AACH;;AACD,IAAIW,aAAa,GAAG,UAAUC,OAAV,EAAmBtC,SAAnB,EAA8B;AAC9C,MAAIuC,SAAS,GAAGC,gBAAgB,CAACF,OAAD,CAAhC;AAAA,MAA2CxC,SAAS,GAAGyC,SAAS,CAACzC,SAAjE;;AACA,MAAIyC,SAAS,CAACpC,MAAV,KAAqB,cAAzB,EAAyC;AACrCzK,IAAAA,KAAK,CAAC6M,SAAS,CAAC3C,IAAV,GACF,2BADE,GAEF,mDAFC,CAAL;AAGH,GAN6C,CAO9C;;;AACA,MAAI,CAAC,CAACE,SAAD,IAAcA,SAAS,KAAK,WAA7B,KACAyC,SAAS,CAACpC,MAAV,KAAqB,WADzB,EACsC;AAClCzK,IAAAA,KAAK,CAAC,8EAAD,CAAL;AACH;;AACD,MAAI,CAAC6M,SAAS,CAAC1C,MAAf,EAAuB;AACnBhK,IAAAA,kBAAkB;AACrB;;AACD,MAAIkK,aAAa,GAAGwC,SAAS,CAACE,MAAV,KAAqB,IAArB,IAA6BF,SAAS,CAACE,MAAV,KAAqB,KAAtE;AACA,SAAO;AACHC,IAAAA,QAAQ,EAAE,IAAI/C,QAAJ,CAAa4C,SAAS,CAAC3C,IAAvB,EAA6B2C,SAAS,CAAC1C,MAAvC,EAA+CC,SAA/C,EAA0DE,SAA1D,EAAqED,aAArE;AACV;AAAoB,MADV;AAEV;AAAmCD,IAAAA,SAAS,KAAKyC,SAAS,CAACI,SAFjD,CADP;AAIHjI,IAAAA,IAAI,EAAE,IAAIe,IAAJ,CAAS8G,SAAS,CAACvG,UAAnB;AAJH,GAAP;AAMH,CAtBD;;AAuBA,IAAIwG,gBAAgB,GAAG,UAAUF,OAAV,EAAmB;AACtC;AACA,MAAI1C,IAAI,GAAG,EAAX;AAAA,MAAeO,MAAM,GAAG,EAAxB;AAAA,MAA4BwC,SAAS,GAAG,EAAxC;AAAA,MAA4C3G,UAAU,GAAG,EAAzD;AAAA,MAA6D8D,SAAS,GAAG,EAAzE,CAFsC,CAGtC;;AACA,MAAID,MAAM,GAAG,IAAb;AAAA,MAAmB4C,MAAM,GAAG,OAA5B;AAAA,MAAqCG,IAAI,GAAG,GAA5C,CAJsC,CAKtC;;AACA,MAAI,OAAON,OAAP,KAAmB,QAAvB,EAAiC;AAC7B;AACA,QAAIO,QAAQ,GAAGP,OAAO,CAACtM,OAAR,CAAgB,IAAhB,CAAf;;AACA,QAAI6M,QAAQ,IAAI,CAAhB,EAAmB;AACfJ,MAAAA,MAAM,GAAGH,OAAO,CAAC/J,SAAR,CAAkB,CAAlB,EAAqBsK,QAAQ,GAAG,CAAhC,CAAT;AACAP,MAAAA,OAAO,GAAGA,OAAO,CAAC/J,SAAR,CAAkBsK,QAAQ,GAAG,CAA7B,CAAV;AACH,KAN4B,CAO7B;;;AACA,QAAIC,QAAQ,GAAGR,OAAO,CAACtM,OAAR,CAAgB,GAAhB,CAAf;;AACA,QAAI8M,QAAQ,KAAK,CAAC,CAAlB,EAAqB;AACjBA,MAAAA,QAAQ,GAAGR,OAAO,CAAC/N,MAAnB;AACH;;AACD,QAAIwO,eAAe,GAAGT,OAAO,CAACtM,OAAR,CAAgB,GAAhB,CAAtB;;AACA,QAAI+M,eAAe,KAAK,CAAC,CAAzB,EAA4B;AACxBA,MAAAA,eAAe,GAAGT,OAAO,CAAC/N,MAA1B;AACH;;AACDqL,IAAAA,IAAI,GAAG0C,OAAO,CAAC/J,SAAR,CAAkB,CAAlB,EAAqBzB,IAAI,CAACuC,GAAL,CAASyJ,QAAT,EAAmBC,eAAnB,CAArB,CAAP;;AACA,QAAID,QAAQ,GAAGC,eAAf,EAAgC;AAC5B;AACA/G,MAAAA,UAAU,GAAGiF,UAAU,CAACqB,OAAO,CAAC/J,SAAR,CAAkBuK,QAAlB,EAA4BC,eAA5B,CAAD,CAAvB;AACH;;AACD,QAAIC,WAAW,GAAG1B,WAAW,CAACgB,OAAO,CAAC/J,SAAR,CAAkBzB,IAAI,CAACuC,GAAL,CAASiJ,OAAO,CAAC/N,MAAjB,EAAyBwO,eAAzB,CAAlB,CAAD,CAA7B,CArB6B,CAsB7B;;AACAF,IAAAA,QAAQ,GAAGjD,IAAI,CAAC5J,OAAL,CAAa,GAAb,CAAX;;AACA,QAAI6M,QAAQ,IAAI,CAAhB,EAAmB;AACfhD,MAAAA,MAAM,GAAG4C,MAAM,KAAK,OAAX,IAAsBA,MAAM,KAAK,KAA1C;AACAG,MAAAA,IAAI,GAAG/I,QAAQ,CAAC+F,IAAI,CAACrH,SAAL,CAAesK,QAAQ,GAAG,CAA1B,CAAD,EAA+B,EAA/B,CAAf;AACH,KAHD,MAIK;AACDA,MAAAA,QAAQ,GAAGjD,IAAI,CAACrL,MAAhB;AACH;;AACD,QAAI0O,eAAe,GAAGrD,IAAI,CAACjD,KAAL,CAAW,CAAX,EAAckG,QAAd,CAAtB;;AACA,QAAII,eAAe,CAAClJ,WAAhB,OAAkC,WAAtC,EAAmD;AAC/CoG,MAAAA,MAAM,GAAG,WAAT;AACH,KAFD,MAGK,IAAI8C,eAAe,CAACpH,KAAhB,CAAsB,GAAtB,EAA2BtH,MAA3B,IAAqC,CAAzC,EAA4C;AAC7C4L,MAAAA,MAAM,GAAG8C,eAAT;AACH,KAFI,MAGA;AACD;AACA,UAAIC,MAAM,GAAGtD,IAAI,CAAC5J,OAAL,CAAa,GAAb,CAAb;AACA2M,MAAAA,SAAS,GAAG/C,IAAI,CAACrH,SAAL,CAAe,CAAf,EAAkB2K,MAAlB,EAA0BnJ,WAA1B,EAAZ;AACAoG,MAAAA,MAAM,GAAGP,IAAI,CAACrH,SAAL,CAAe2K,MAAM,GAAG,CAAxB,CAAT,CAJC,CAKD;;AACApD,MAAAA,SAAS,GAAG6C,SAAZ;AACH,KA7C4B,CA8C7B;;;AACA,QAAI,QAAQK,WAAZ,EAAyB;AACrBlD,MAAAA,SAAS,GAAGkD,WAAW,CAAC,IAAD,CAAvB;AACH;AACJ;;AACD,SAAO;AACHpD,IAAAA,IAAI,EAAEA,IADH;AAEHgD,IAAAA,IAAI,EAAEA,IAFH;AAGHzC,IAAAA,MAAM,EAAEA,MAHL;AAIHwC,IAAAA,SAAS,EAAEA,SAJR;AAKH9C,IAAAA,MAAM,EAAEA,MALL;AAMH4C,IAAAA,MAAM,EAAEA,MANL;AAOHzG,IAAAA,UAAU,EAAEA,UAPT;AAQH8D,IAAAA,SAAS,EAAEA;AARR,GAAP;AAUH,CAnED;AAqEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA,IAAIqD,kBAAkB,GAAG,gCAAzB;AACA;AACA;AACA;AACA;;AACA,IAAIC,mBAAmB,GAAG,8BAA1B;AACA;AACA;AACA;;AACA,IAAIC,cAAc,GAAG,KAAK,IAAL,GAAY,IAAjC;;AACA,IAAIC,UAAU,GAAG,UAAUlR,GAAV,EAAe;AAC5B,SAAQ,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,CAACmC,MAAJ,KAAe,CAA1C,IAA+C,CAAC4O,kBAAkB,CAAClJ,IAAnB,CAAwB7H,GAAxB,CAAxD;AACH,CAFD;;AAGA,IAAImR,iBAAiB,GAAG,UAAUvH,UAAV,EAAsB;AAC1C,SAAQ,OAAOA,UAAP,KAAsB,QAAtB,IACJA,UAAU,CAACzH,MAAX,KAAsB,CADlB,IAEJ,CAAC6O,mBAAmB,CAACnJ,IAApB,CAAyB+B,UAAzB,CAFL;AAGH,CAJD;;AAKA,IAAIwH,qBAAqB,GAAG,UAAUxH,UAAV,EAAsB;AAC9C,MAAIA,UAAJ,EAAgB;AACZ;AACAA,IAAAA,UAAU,GAAGA,UAAU,CAACqF,OAAX,CAAmB,kBAAnB,EAAuC,GAAvC,CAAb;AACH;;AACD,SAAOkC,iBAAiB,CAACvH,UAAD,CAAxB;AACH,CAND;;AAOA,IAAIyH,eAAe,GAAG,UAAUC,QAAV,EAAoB;AACtC,SAAQA,QAAQ,KAAK,IAAb,IACJ,OAAOA,QAAP,KAAoB,QADhB,IAEH,OAAOA,QAAP,KAAoB,QAApB,IAAgC,CAACzN,mBAAmB,CAACyN,QAAD,CAFjD,IAGHA,QAAQ,IACL,OAAOA,QAAP,KAAoB,QADvB,IAEG;AACAvT,EAAAA,QAAQ,CAACuT,QAAD,EAAW,KAAX,CANhB;AAOH,CARD;AASA;AACA;AACA;;;AACA,IAAIC,uBAAuB,GAAG,UAAUC,MAAV,EAAkBC,cAAlB,EAAkC3N,IAAlC,EAAwCwE,IAAxC,EAA8CoJ,QAA9C,EAAwD;AAClF,MAAIA,QAAQ,IAAI5N,IAAI,KAAK6N,SAAzB,EAAoC;AAChC;AACH;;AACDC,EAAAA,oBAAoB,CAACtT,WAAW,CAACkT,MAAD,EAASC,cAAT,EAAyBC,QAAzB,CAAZ,EAAgD5N,IAAhD,EAAsDwE,IAAtD,CAApB;AACH,CALD;AAMA;AACA;AACA;;;AACA,IAAIsJ,oBAAoB,GAAG,UAAUtT,WAAV,EAAuBwF,IAAvB,EAA6B+N,KAA7B,EAAoC;AAC3D,MAAIvJ,IAAI,GAAGuJ,KAAK,YAAYxI,IAAjB,GAAwB,IAAIwC,cAAJ,CAAmBgG,KAAnB,EAA0BvT,WAA1B,CAAxB,GAAiEuT,KAA5E;;AACA,MAAI/N,IAAI,KAAK6N,SAAb,EAAwB;AACpB,UAAM,IAAIpO,KAAJ,CAAUjF,WAAW,GAAG,qBAAd,GAAsCgK,IAAI,CAACsE,aAAL,EAAhD,CAAN;AACH;;AACD,MAAI,OAAO9I,IAAP,KAAgB,UAApB,EAAgC;AAC5B,UAAM,IAAIP,KAAJ,CAAUjF,WAAW,GACvB,sBADY,GAEZgK,IAAI,CAACsE,aAAL,EAFY,GAGZ,mBAHY,GAIZ9I,IAAI,CAACpD,QAAL,EAJE,CAAN;AAKH;;AACD,MAAImD,mBAAmB,CAACC,IAAD,CAAvB,EAA+B;AAC3B,UAAM,IAAIP,KAAJ,CAAUjF,WAAW,GAAG,WAAd,GAA4BwF,IAAI,CAACpD,QAAL,EAA5B,GAA8C,GAA9C,GAAoD4H,IAAI,CAACsE,aAAL,EAA9D,CAAN;AACH,GAd0D,CAe3D;;;AACA,MAAI,OAAO9I,IAAP,KAAgB,QAAhB,IACAA,IAAI,CAAC3B,MAAL,GAAc8O,cAAc,GAAG,CAD/B,IAEA5S,YAAY,CAACyF,IAAD,CAAZ,GAAqBmN,cAFzB,EAEyC;AACrC,UAAM,IAAI1N,KAAJ,CAAUjF,WAAW,GACvB,iCADY,GAEZ2S,cAFY,GAGZ,cAHY,GAIZ3I,IAAI,CAACsE,aAAL,EAJY,GAKZ,KALY,GAMZ9I,IAAI,CAACqC,SAAL,CAAe,CAAf,EAAkB,EAAlB,CANY,GAOZ,OAPE,CAAN;AAQH,GA3B0D,CA4B3D;AACA;;;AACA,MAAIrC,IAAI,IAAI,OAAOA,IAAP,KAAgB,QAA5B,EAAsC;AAClC,QAAIgO,aAAa,GAAG,KAApB;AACA,QAAIC,gBAAgB,GAAG,KAAvB;AACA3L,IAAAA,IAAI,CAACtC,IAAD,EAAO,UAAU9D,GAAV,EAAeC,KAAf,EAAsB;AAC7B,UAAID,GAAG,KAAK,QAAZ,EAAsB;AAClB8R,QAAAA,aAAa,GAAG,IAAhB;AACH,OAFD,MAGK,IAAI9R,GAAG,KAAK,WAAR,IAAuBA,GAAG,KAAK,KAAnC,EAA0C;AAC3C+R,QAAAA,gBAAgB,GAAG,IAAnB;;AACA,YAAI,CAACb,UAAU,CAAClR,GAAD,CAAf,EAAsB;AAClB,gBAAM,IAAIuD,KAAJ,CAAUjF,WAAW,GACvB,4BADY,GAEZ0B,GAFY,GAGZ,IAHY,GAIZsI,IAAI,CAACsE,aAAL,EAJY,GAKZ,oCALY,GAMZ,oDANE,CAAN;AAOH;AACJ;;AACDtE,MAAAA,IAAI,CAAC1C,IAAL,CAAU5F,GAAV;AACA4R,MAAAA,oBAAoB,CAACtT,WAAD,EAAc2B,KAAd,EAAqBqI,IAArB,CAApB;AACAA,MAAAA,IAAI,CAACkE,GAAL;AACH,KAnBG,CAAJ;;AAoBA,QAAIsF,aAAa,IAAIC,gBAArB,EAAuC;AACnC,YAAM,IAAIxO,KAAJ,CAAUjF,WAAW,GACvB,2BADY,GAEZgK,IAAI,CAACsE,aAAL,EAFY,GAGZ,kCAHE,CAAN;AAIH;AACJ;AACJ,CA5DD;AA6DA;AACA;AACA;;;AACA,IAAIoF,0BAA0B,GAAG,UAAU1T,WAAV,EAAuB2T,UAAvB,EAAmC;AAChE,MAAI5P,CAAJ,EAAO6P,OAAP;;AACA,OAAK7P,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG4P,UAAU,CAAC9P,MAA3B,EAAmCE,CAAC,EAApC,EAAwC;AACpC6P,IAAAA,OAAO,GAAGD,UAAU,CAAC5P,CAAD,CAApB;AACA,QAAIqD,IAAI,GAAG2E,SAAS,CAAC6H,OAAD,CAApB;;AACA,SAAK,IAAIvG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjG,IAAI,CAACvD,MAAzB,EAAiCwJ,CAAC,EAAlC,EAAsC;AAClC,UAAIjG,IAAI,CAACiG,CAAD,CAAJ,KAAY,WAAZ,IAA2BA,CAAC,KAAKjG,IAAI,CAACvD,MAAL,GAAc,CAAnD,EAAsD,CAAtD,KACK,IAAI,CAAC+O,UAAU,CAACxL,IAAI,CAACiG,CAAD,CAAL,CAAf,EAA0B;AAC3B,cAAM,IAAIpI,KAAJ,CAAUjF,WAAW,GACvB,2BADY,GAEZoH,IAAI,CAACiG,CAAD,CAFQ,GAGZ,YAHY,GAIZuG,OAAO,CAACxR,QAAR,EAJY,GAKZ,mCALY,GAMZ,oDANE,CAAN;AAOH;AACJ;AACJ,GAjB+D,CAkBhE;AACA;AACA;;;AACAuR,EAAAA,UAAU,CAACpM,IAAX,CAAgBsF,WAAhB;AACA,MAAIgH,QAAQ,GAAG,IAAf;;AACA,OAAK9P,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG4P,UAAU,CAAC9P,MAA3B,EAAmCE,CAAC,EAApC,EAAwC;AACpC6P,IAAAA,OAAO,GAAGD,UAAU,CAAC5P,CAAD,CAApB;;AACA,QAAI8P,QAAQ,KAAK,IAAb,IAAqBvG,YAAY,CAACuG,QAAD,EAAWD,OAAX,CAArC,EAA0D;AACtD,YAAM,IAAI3O,KAAJ,CAAUjF,WAAW,GACvB,kBADY,GAEZ6T,QAAQ,CAACzR,QAAT,EAFY,GAGZ,oCAHY,GAIZwR,OAAO,CAACxR,QAAR,EAJE,CAAN;AAKH;;AACDyR,IAAAA,QAAQ,GAAGD,OAAX;AACH;AACJ,CAlCD;AAmCA;AACA;AACA;AACA;;;AACA,IAAIE,4BAA4B,GAAG,UAAUZ,MAAV,EAAkBC,cAAlB,EAAkC3N,IAAlC,EAAwCwE,IAAxC,EAA8CoJ,QAA9C,EAAwD;AACvF,MAAIA,QAAQ,IAAI5N,IAAI,KAAK6N,SAAzB,EAAoC;AAChC;AACH;;AACD,MAAIU,aAAa,GAAG/T,WAAW,CAACkT,MAAD,EAASC,cAAT,EAAyBC,QAAzB,CAA/B;;AACA,MAAI,EAAE5N,IAAI,IAAI,OAAOA,IAAP,KAAgB,QAA1B,KAAuCvB,KAAK,CAACC,OAAN,CAAcsB,IAAd,CAA3C,EAAgE;AAC5D,UAAM,IAAIP,KAAJ,CAAU8O,aAAa,GAAG,wDAA1B,CAAN;AACH;;AACD,MAAIJ,UAAU,GAAG,EAAjB;AACA7L,EAAAA,IAAI,CAACtC,IAAD,EAAO,UAAU9D,GAAV,EAAeC,KAAf,EAAsB;AAC7B,QAAIiS,OAAO,GAAG,IAAI7I,IAAJ,CAASrJ,GAAT,CAAd;AACA4R,IAAAA,oBAAoB,CAACS,aAAD,EAAgBpS,KAAhB,EAAuByK,SAAS,CAACpC,IAAD,EAAO4J,OAAP,CAAhC,CAApB;;AACA,QAAIjI,WAAW,CAACiI,OAAD,CAAX,KAAyB,WAA7B,EAA0C;AACtC,UAAI,CAACb,eAAe,CAACpR,KAAD,CAApB,EAA6B;AACzB,cAAM,IAAIsD,KAAJ,CAAU8O,aAAa,GACzB,iCADY,GAEZH,OAAO,CAACxR,QAAR,EAFY,GAGZ,2BAHY,GAIZ,qEAJE,CAAN;AAKH;AACJ;;AACDuR,IAAAA,UAAU,CAACrM,IAAX,CAAgBsM,OAAhB;AACH,GAbG,CAAJ;AAcAF,EAAAA,0BAA0B,CAACK,aAAD,EAAgBJ,UAAhB,CAA1B;AACH,CAxBD;;AAyBA,IAAIK,gBAAgB,GAAG,UAAUd,MAAV,EAAkBC,cAAlB,EAAkCH,QAAlC,EAA4CI,QAA5C,EAAsD;AACzE,MAAIA,QAAQ,IAAIJ,QAAQ,KAAKK,SAA7B,EAAwC;AACpC;AACH;;AACD,MAAI9N,mBAAmB,CAACyN,QAAD,CAAvB,EAAmC;AAC/B,UAAM,IAAI/N,KAAJ,CAAUjF,WAAW,CAACkT,MAAD,EAASC,cAAT,EAAyBC,QAAzB,CAAX,GACZ,KADY,GAEZJ,QAAQ,CAAC5Q,QAAT,EAFY,GAGZ,oEAHY,GAIZ,yBAJE,CAAN;AAKH,GAVwE,CAWzE;;;AACA,MAAI,CAAC2Q,eAAe,CAACC,QAAD,CAApB,EAAgC;AAC5B,UAAM,IAAI/N,KAAJ,CAAUjF,WAAW,CAACkT,MAAD,EAASC,cAAT,EAAyBC,QAAzB,CAAX,GACZ,oCADY,GAEZ,mDAFE,CAAN;AAGH;AACJ,CAjBD;;AAkBA,IAAIa,iBAAiB,GAAG,UAAUf,MAAV,EAAkBC,cAAlB,EAAkCe,SAAlC,EAA6Cd,QAA7C,EAAuD;AAC3E,MAAIA,QAAQ,IAAIc,SAAS,KAAKb,SAA9B,EAAyC;AACrC;AACH;;AACD,UAAQa,SAAR;AACI,SAAK,OAAL;AACA,SAAK,aAAL;AACA,SAAK,eAAL;AACA,SAAK,eAAL;AACA,SAAK,aAAL;AACI;;AACJ;AACI,YAAM,IAAIjP,KAAJ,CAAUjF,WAAW,CAACkT,MAAD,EAASC,cAAT,EAAyBC,QAAzB,CAAX,GACZ,wEADY,GAEZ,oCAFE,CAAN;AARR;AAYH,CAhBD;;AAiBA,IAAIe,WAAW,GAAG,UAAUjB,MAAV,EAAkBC,cAAlB,EAAkCzR,GAAlC,EAAuC0R,QAAvC,EAAiD;AAC/D,MAAIA,QAAQ,IAAI1R,GAAG,KAAK2R,SAAxB,EAAmC;AAC/B;AACH;;AACD,MAAI,CAACT,UAAU,CAAClR,GAAD,CAAf,EAAsB;AAClB,UAAM,IAAIuD,KAAJ,CAAUjF,WAAW,CAACkT,MAAD,EAASC,cAAT,EAAyBC,QAAzB,CAAX,GACZ,wBADY,GAEZ1R,GAFY,GAGZ,kDAHY,GAIZ,kDAJE,CAAN;AAKH;AACJ,CAXD;;AAYA,IAAI0S,kBAAkB,GAAG,UAAUlB,MAAV,EAAkBC,cAAlB,EAAkC7H,UAAlC,EAA8C8H,QAA9C,EAAwD;AAC7E,MAAIA,QAAQ,IAAI9H,UAAU,KAAK+H,SAA/B,EAA0C;AACtC;AACH;;AACD,MAAI,CAACR,iBAAiB,CAACvH,UAAD,CAAtB,EAAoC;AAChC,UAAM,IAAIrG,KAAJ,CAAUjF,WAAW,CAACkT,MAAD,EAASC,cAAT,EAAyBC,QAAzB,CAAX,GACZ,yBADY,GAEZ9H,UAFY,GAGZ,yCAHY,GAIZ,2CAJE,CAAN;AAKH;AACJ,CAXD;;AAYA,IAAI+I,sBAAsB,GAAG,UAAUnB,MAAV,EAAkBC,cAAlB,EAAkC7H,UAAlC,EAA8C8H,QAA9C,EAAwD;AACjF,MAAI9H,UAAJ,EAAgB;AACZ;AACAA,IAAAA,UAAU,GAAGA,UAAU,CAACqF,OAAX,CAAmB,kBAAnB,EAAuC,GAAvC,CAAb;AACH;;AACDyD,EAAAA,kBAAkB,CAAClB,MAAD,EAASC,cAAT,EAAyB7H,UAAzB,EAAqC8H,QAArC,CAAlB;AACH,CAND;;AAOA,IAAIkB,oBAAoB,GAAG,UAAUpB,MAAV,EAAkBlJ,IAAlB,EAAwB;AAC/C,MAAIwB,YAAY,CAACxB,IAAD,CAAZ,KAAuB,OAA3B,EAAoC;AAChC,UAAM,IAAI/E,KAAJ,CAAUiO,MAAM,GAAG,2CAAnB,CAAN;AACH;AACJ,CAJD;;AAKA,IAAIqB,WAAW,GAAG,UAAUrB,MAAV,EAAkBC,cAAlB,EAAkCtB,SAAlC,EAA6C;AAC3D;AACA,MAAIvG,UAAU,GAAGuG,SAAS,CAAC7H,IAAV,CAAe5H,QAAf,EAAjB;;AACA,MAAI,EAAE,OAAOyP,SAAS,CAACG,QAAV,CAAmB9C,IAA1B,KAAmC,QAArC,KACA2C,SAAS,CAACG,QAAV,CAAmB9C,IAAnB,CAAwBrL,MAAxB,KAAmC,CADnC,IAEC,CAAC+O,UAAU,CAACf,SAAS,CAACG,QAAV,CAAmB5C,SAApB,CAAX,IACGyC,SAAS,CAACG,QAAV,CAAmB9C,IAAnB,CAAwB/D,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC,MAA0C,WAH9C,IAICG,UAAU,CAACzH,MAAX,KAAsB,CAAtB,IAA2B,CAACiP,qBAAqB,CAACxH,UAAD,CAJtD,EAIqE;AACjE,UAAM,IAAIrG,KAAJ,CAAUjF,WAAW,CAACkT,MAAD,EAASC,cAAT,EAAyB,KAAzB,CAAX,GACZ,mCADY,GAEZ,qDAFE,CAAN;AAGH;AACJ,CAZD;;AAaA,IAAIqB,eAAe,GAAG,UAAUtB,MAAV,EAAkBC,cAAlB,EAAkCsB,IAAlC,EAAwCrB,QAAxC,EAAkD;AACpE,MAAIA,QAAQ,IAAIqB,IAAI,KAAKpB,SAAzB,EAAoC;AAChC;AACH;;AACD,MAAI,OAAOoB,IAAP,KAAgB,SAApB,EAA+B;AAC3B,UAAM,IAAIxP,KAAJ,CAAUjF,WAAW,CAACkT,MAAD,EAASC,cAAT,EAAyBC,QAAzB,CAAX,GAAgD,oBAA1D,CAAN;AACH;AACJ,CAPD;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIsB,YAAY;AAAG;AAAe,YAAY;AAC1C,WAASA,YAAT,CAAsBC,KAAtB,EAA6BpB,KAA7B,EAAoC;AAChC,SAAKoB,KAAL,GAAaA,KAAb;AACA,SAAKpB,KAAL,GAAaA,KAAb;AACH;;AACDmB,EAAAA,YAAY,CAAClT,SAAb,CAAuBoT,MAAvB,GAAgC,UAAUC,UAAV,EAAsB;AAClD5U,IAAAA,gBAAgB,CAAC,qBAAD,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B2D,SAAS,CAACC,MAAxC,CAAhB;AACA3D,IAAAA,gBAAgB,CAAC,qBAAD,EAAwB,CAAxB,EAA2B2U,UAA3B,EAAuC,IAAvC,CAAhB;AACA,QAAIC,QAAQ,GAAG,IAAI3U,QAAJ,EAAf;AACA,SAAKwU,KAAL,CAAWI,kBAAX,CAA8B,KAAKxB,KAAnC,EAA0CuB,QAAQ,CAACE,YAAT,CAAsBH,UAAtB,CAA1C;AACA,WAAOC,QAAQ,CAACG,OAAhB;AACH,GAND;;AAOAP,EAAAA,YAAY,CAAClT,SAAb,CAAuBU,MAAvB,GAAgC,UAAU2S,UAAV,EAAsB;AAClD5U,IAAAA,gBAAgB,CAAC,qBAAD,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B2D,SAAS,CAACC,MAAxC,CAAhB;AACAyQ,IAAAA,oBAAoB,CAAC,qBAAD,EAAwB,KAAKf,KAA7B,CAApB;AACArT,IAAAA,gBAAgB,CAAC,qBAAD,EAAwB,CAAxB,EAA2B2U,UAA3B,EAAuC,IAAvC,CAAhB;AACA,QAAIC,QAAQ,GAAG,IAAI3U,QAAJ,EAAf;AACA,SAAKwU,KAAL,CAAWO,eAAX,CAA2B,KAAK3B,KAAhC,EAAuC,IAAvC,EAA6CuB,QAAQ,CAACE,YAAT,CAAsBH,UAAtB,CAA7C;AACA,WAAOC,QAAQ,CAACG,OAAhB;AACH,GAPD;;AAQAP,EAAAA,YAAY,CAAClT,SAAb,CAAuBC,GAAvB,GAA6B,UAAUE,KAAV,EAAiBkT,UAAjB,EAA6B;AACtD5U,IAAAA,gBAAgB,CAAC,kBAAD,EAAqB,CAArB,EAAwB,CAAxB,EAA2B2D,SAAS,CAACC,MAArC,CAAhB;AACAyQ,IAAAA,oBAAoB,CAAC,kBAAD,EAAqB,KAAKf,KAA1B,CAApB;AACAN,IAAAA,uBAAuB,CAAC,kBAAD,EAAqB,CAArB,EAAwBtR,KAAxB,EAA+B,KAAK4R,KAApC,EAA2C,KAA3C,CAAvB;AACArT,IAAAA,gBAAgB,CAAC,kBAAD,EAAqB,CAArB,EAAwB2U,UAAxB,EAAoC,IAApC,CAAhB;AACA,QAAIC,QAAQ,GAAG,IAAI3U,QAAJ,EAAf;AACA,SAAKwU,KAAL,CAAWO,eAAX,CAA2B,KAAK3B,KAAhC,EAAuC5R,KAAvC,EAA8CmT,QAAQ,CAACE,YAAT,CAAsBH,UAAtB,CAA9C;AACA,WAAOC,QAAQ,CAACG,OAAhB;AACH,GARD;;AASAP,EAAAA,YAAY,CAAClT,SAAb,CAAuB2T,eAAvB,GAAyC,UAAUxT,KAAV,EAAiBqR,QAAjB,EAA2B6B,UAA3B,EAAuC;AAC5E5U,IAAAA,gBAAgB,CAAC,8BAAD,EAAiC,CAAjC,EAAoC,CAApC,EAAuC2D,SAAS,CAACC,MAAjD,CAAhB;AACAyQ,IAAAA,oBAAoB,CAAC,8BAAD,EAAiC,KAAKf,KAAtC,CAApB;AACAN,IAAAA,uBAAuB,CAAC,8BAAD,EAAiC,CAAjC,EAAoCtR,KAApC,EAA2C,KAAK4R,KAAhD,EAAuD,KAAvD,CAAvB;AACAS,IAAAA,gBAAgB,CAAC,8BAAD,EAAiC,CAAjC,EAAoChB,QAApC,EAA8C,KAA9C,CAAhB;AACA9S,IAAAA,gBAAgB,CAAC,8BAAD,EAAiC,CAAjC,EAAoC2U,UAApC,EAAgD,IAAhD,CAAhB;AACA,QAAIC,QAAQ,GAAG,IAAI3U,QAAJ,EAAf;AACA,SAAKwU,KAAL,CAAWS,2BAAX,CAAuC,KAAK7B,KAA5C,EAAmD5R,KAAnD,EAA0DqR,QAA1D,EAAoE8B,QAAQ,CAACE,YAAT,CAAsBH,UAAtB,CAApE;AACA,WAAOC,QAAQ,CAACG,OAAhB;AACH,GATD;;AAUAP,EAAAA,YAAY,CAAClT,SAAb,CAAuB6B,MAAvB,GAAgC,UAAUgS,aAAV,EAAyBR,UAAzB,EAAqC;AACjE5U,IAAAA,gBAAgB,CAAC,qBAAD,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B2D,SAAS,CAACC,MAAxC,CAAhB;AACAyQ,IAAAA,oBAAoB,CAAC,qBAAD,EAAwB,KAAKf,KAA7B,CAApB;;AACA,QAAItP,KAAK,CAACC,OAAN,CAAcmR,aAAd,CAAJ,EAAkC;AAC9B,UAAIC,gBAAgB,GAAG,EAAvB;;AACA,WAAK,IAAIvR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsR,aAAa,CAACxR,MAAlC,EAA0C,EAAEE,CAA5C,EAA+C;AAC3CuR,QAAAA,gBAAgB,CAAC,KAAKvR,CAAN,CAAhB,GAA2BsR,aAAa,CAACtR,CAAD,CAAxC;AACH;;AACDsR,MAAAA,aAAa,GAAGC,gBAAhB;AACApQ,MAAAA,IAAI,CAAC,yHACD,0GADA,CAAJ;AAEH;;AACD4O,IAAAA,4BAA4B,CAAC,qBAAD,EAAwB,CAAxB,EAA2BuB,aAA3B,EAA0C,KAAK9B,KAA/C,EAAsD,KAAtD,CAA5B;AACArT,IAAAA,gBAAgB,CAAC,qBAAD,EAAwB,CAAxB,EAA2B2U,UAA3B,EAAuC,IAAvC,CAAhB;AACA,QAAIC,QAAQ,GAAG,IAAI3U,QAAJ,EAAf;AACA,SAAKwU,KAAL,CAAWY,kBAAX,CAA8B,KAAKhC,KAAnC,EAA0C8B,aAA1C,EAAyDP,QAAQ,CAACE,YAAT,CAAsBH,UAAtB,CAAzD;AACA,WAAOC,QAAQ,CAACG,OAAhB;AACH,GAjBD;;AAkBA,SAAOP,YAAP;AACH,CA1DiC,EAAlC;AA4DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIc,iBAAiB;AAAG;AAAe,YAAY;AAC/C;AACJ;AACA;AACI,WAASA,iBAAT,CAA2BC,SAA3B,EAAsCC,QAAtC,EAAgD;AAC5C,SAAKD,SAAL,GAAiBA,SAAjB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACH,GAP8C,CAQ/C;AACA;;;AACAF,EAAAA,iBAAiB,CAAChU,SAAlB,CAA4BmU,MAA5B,GAAqC,YAAY;AAC7C1V,IAAAA,gBAAgB,CAAC,0BAAD,EAA6B,CAA7B,EAAgC,CAAhC,EAAmC2D,SAAS,CAACC,MAA7C,CAAhB;AACA,WAAO;AAAE4R,MAAAA,SAAS,EAAE,KAAKA,SAAlB;AAA6BC,MAAAA,QAAQ,EAAE,KAAKA,QAAL,CAAcC,MAAd;AAAvC,KAAP;AACH,GAHD;;AAIA,SAAOH,iBAAP;AACH,CAfsC,EAAvC;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAII,UAAU,GAAG,kEAAjB;AACA,IAAIC,aAAa,GAAG,GAApB;AACA,IAAIC,aAAa,GAAG,GAApB;AACA,IAAIC,WAAW,GAAG,GAAlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,UAAU,GAAI,YAAY;AAC1B;AACA;AACA,MAAIC,YAAY,GAAG,CAAnB,CAH0B,CAI1B;AACA;AACA;AACA;;AACA,MAAIC,aAAa,GAAG,EAApB;AACA,SAAO,UAAUC,GAAV,EAAe;AAClB,QAAIC,aAAa,GAAGD,GAAG,KAAKF,YAA5B;AACAA,IAAAA,YAAY,GAAGE,GAAf;AACA,QAAIpS,CAAJ;AACA,QAAIsS,cAAc,GAAG,IAAIpS,KAAJ,CAAU,CAAV,CAArB;;AACA,SAAKF,CAAC,GAAG,CAAT,EAAYA,CAAC,IAAI,CAAjB,EAAoBA,CAAC,EAArB,EAAyB;AACrBsS,MAAAA,cAAc,CAACtS,CAAD,CAAd,GAAoB6R,UAAU,CAAC3E,MAAX,CAAkBkF,GAAG,GAAG,EAAxB,CAApB,CADqB,CAErB;AACA;;AACAA,MAAAA,GAAG,GAAG/P,IAAI,CAACC,KAAL,CAAW8P,GAAG,GAAG,EAAjB,CAAN;AACH;;AACDzW,IAAAA,MAAM,CAACyW,GAAG,KAAK,CAAT,EAAY,0BAAZ,CAAN;AACA,QAAIlT,EAAE,GAAGoT,cAAc,CAACrN,IAAf,CAAoB,EAApB,CAAT;;AACA,QAAI,CAACoN,aAAL,EAAoB;AAChB,WAAKrS,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoBA,CAAC,EAArB,EAAyB;AACrBmS,QAAAA,aAAa,CAACnS,CAAD,CAAb,GAAmBqC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACkQ,MAAL,KAAgB,EAA3B,CAAnB;AACH;AACJ,KAJD,MAKK;AACD;AACA;AACA,WAAKvS,CAAC,GAAG,EAAT,EAAaA,CAAC,IAAI,CAAL,IAAUmS,aAAa,CAACnS,CAAD,CAAb,KAAqB,EAA5C,EAAgDA,CAAC,EAAjD,EAAqD;AACjDmS,QAAAA,aAAa,CAACnS,CAAD,CAAb,GAAmB,CAAnB;AACH;;AACDmS,MAAAA,aAAa,CAACnS,CAAD,CAAb;AACH;;AACD,SAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoBA,CAAC,EAArB,EAAyB;AACrBd,MAAAA,EAAE,IAAI2S,UAAU,CAAC3E,MAAX,CAAkBiF,aAAa,CAACnS,CAAD,CAA/B,CAAN;AACH;;AACDrE,IAAAA,MAAM,CAACuD,EAAE,CAACY,MAAH,KAAc,EAAf,EAAmB,kCAAnB,CAAN;AACA,WAAOZ,EAAP;AACH,GA/BD;AAgCH,CAzCgB,EAAjB;;AA0CA,IAAIsT,SAAS,GAAG,UAAU7U,GAAV,EAAe;AAC3B,MAAIA,GAAG,KAAK,KAAK2I,cAAjB,EAAiC;AAC7B;AACA,WAAOwL,aAAP;AACH;;AACD,MAAIW,QAAQ,GAAG1P,WAAW,CAACpF,GAAD,CAA1B;;AACA,MAAI8U,QAAQ,IAAI,IAAhB,EAAsB;AAClB,WAAO,MAAMA,QAAQ,GAAG,CAAjB,CAAP;AACH;;AACD,MAAIpF,IAAI,GAAG,IAAInN,KAAJ,CAAUvC,GAAG,CAACmC,MAAd,CAAX;;AACA,OAAK,IAAI4S,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGrF,IAAI,CAACvN,MAA7B,EAAqC4S,GAAG,EAAxC,EAA4C;AACxCrF,IAAAA,IAAI,CAACqF,GAAD,CAAJ,GAAY/U,GAAG,CAACuP,MAAJ,CAAWwF,GAAX,CAAZ;AACH;;AACD,MAAIrF,IAAI,CAACvN,MAAL,GAAckS,WAAlB,EAA+B;AAC3B3E,IAAAA,IAAI,CAAC9J,IAAL,CAAUuO,aAAV;AACA,WAAOzE,IAAI,CAACpI,IAAL,CAAU,EAAV,CAAP;AACH;;AACD,MAAIjF,CAAC,GAAGqN,IAAI,CAACvN,MAAL,GAAc,CAAtB;;AACA,SAAOE,CAAC,IAAI,CAAL,IAAUqN,IAAI,CAACrN,CAAD,CAAJ,KAAY+R,aAA7B,EAA4C;AACxC/R,IAAAA,CAAC;AACJ,GApB0B,CAqB3B;AACA;;;AACA,MAAIA,CAAC,KAAK,CAAC,CAAX,EAAc;AACV,WAAO0C,QAAP;AACH;;AACD,MAAIiQ,MAAM,GAAGtF,IAAI,CAACrN,CAAD,CAAjB;AACA,MAAI4S,aAAa,GAAGf,UAAU,CAAC3E,MAAX,CAAkB2E,UAAU,CAACtQ,OAAX,CAAmBoR,MAAnB,IAA6B,CAA/C,CAApB;AACAtF,EAAAA,IAAI,CAACrN,CAAD,CAAJ,GAAU4S,aAAV;AACA,SAAOvF,IAAI,CAACnF,KAAL,CAAW,CAAX,EAAclI,CAAC,GAAG,CAAlB,EAAqBiF,IAArB,CAA0B,EAA1B,CAAP;AACH,CA9BD,C,CA+BA;;;AACA,IAAI4N,WAAW,GAAG,UAAUlV,GAAV,EAAe;AAC7B,MAAIA,GAAG,KAAK,KAAK0I,cAAjB,EAAiC;AAC7B,WAAO5D,QAAP;AACH;;AACD,MAAIgQ,QAAQ,GAAG1P,WAAW,CAACpF,GAAD,CAA1B;;AACA,MAAI8U,QAAQ,IAAI,IAAhB,EAAsB;AAClB,WAAO,MAAMA,QAAQ,GAAG,CAAjB,CAAP;AACH;;AACD,MAAIpF,IAAI,GAAG,IAAInN,KAAJ,CAAUvC,GAAG,CAACmC,MAAd,CAAX;;AACA,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqN,IAAI,CAACvN,MAAzB,EAAiCE,CAAC,EAAlC,EAAsC;AAClCqN,IAAAA,IAAI,CAACrN,CAAD,CAAJ,GAAUrC,GAAG,CAACuP,MAAJ,CAAWlN,CAAX,CAAV;AACH,GAX4B,CAY7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAIqN,IAAI,CAACA,IAAI,CAACvN,MAAL,GAAc,CAAf,CAAJ,KAA0BgS,aAA9B,EAA6C;AACzC,QAAIzE,IAAI,CAACvN,MAAL,KAAgB,CAApB,EAAuB;AACnB;AACA,aAAO,KAAKwG,cAAZ;AACH;;AACD,WAAO+G,IAAI,CAACA,IAAI,CAACvN,MAAL,GAAc,CAAf,CAAX;AACA,WAAOuN,IAAI,CAACpI,IAAL,CAAU,EAAV,CAAP;AACH,GA9B4B,CA+B7B;AACA;AACA;;;AACAoI,EAAAA,IAAI,CAACA,IAAI,CAACvN,MAAL,GAAc,CAAf,CAAJ,GAAwB+R,UAAU,CAAC3E,MAAX,CAAkB2E,UAAU,CAACtQ,OAAX,CAAmB8L,IAAI,CAACA,IAAI,CAACvN,MAAL,GAAc,CAAf,CAAvB,IAA4C,CAA9D,CAAxB;AACA,SAAOuN,IAAI,CAACpI,IAAL,CAAU,EAAV,IAAgB8M,aAAa,CAACe,MAAd,CAAqBd,WAAW,GAAG3E,IAAI,CAACvN,MAAxC,CAAvB;AACH,CApCD;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIiT,SAAS;AAAG;AAAe,YAAY;AACvC,WAASA,SAAT,CAAmB3U,IAAnB,EAAyB4U,IAAzB,EAA+B;AAC3B,SAAK5U,IAAL,GAAYA,IAAZ;AACA,SAAK4U,IAAL,GAAYA,IAAZ;AACH;;AACDD,EAAAA,SAAS,CAACE,IAAV,GAAiB,UAAU7U,IAAV,EAAgB4U,IAAhB,EAAsB;AACnC,WAAO,IAAID,SAAJ,CAAc3U,IAAd,EAAoB4U,IAApB,CAAP;AACH,GAFD;;AAGA,SAAOD,SAAP;AACH,CAT8B,EAA/B;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIG,KAAK;AAAG;AAAe,YAAY;AACnC,WAASA,KAAT,GAAiB,CAChB;AACD;AACJ;AACA;AACA;;;AACIA,EAAAA,KAAK,CAACzV,SAAN,CAAgB0V,UAAhB,GAA6B,YAAY;AACrC,WAAO,KAAKC,OAAL,CAAavS,IAAb,CAAkB,IAAlB,CAAP;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIqS,EAAAA,KAAK,CAACzV,SAAN,CAAgB4V,mBAAhB,GAAsC,UAAUC,OAAV,EAAmBC,OAAnB,EAA4B;AAC9D,QAAIC,UAAU,GAAG,IAAIT,SAAJ,CAActQ,QAAd,EAAwB6Q,OAAxB,CAAjB;AACA,QAAIG,UAAU,GAAG,IAAIV,SAAJ,CAActQ,QAAd,EAAwB8Q,OAAxB,CAAjB;AACA,WAAO,KAAKH,OAAL,CAAaI,UAAb,EAAyBC,UAAzB,MAAyC,CAAhD;AACH,GAJD;AAKA;AACJ;AACA;AACA;;;AACIP,EAAAA,KAAK,CAACzV,SAAN,CAAgBiW,OAAhB,GAA0B,YAAY;AAClC;AACA,WAAOX,SAAS,CAACY,GAAjB;AACH,GAHD;;AAIA,SAAOT,KAAP;AACH,CA/B0B,EAA3B;AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIU,YAAJ;;AACA,IAAIC,QAAQ;AAAG;AAAe,UAAUC,MAAV,EAAkB;AAC5C3Y,EAAAA,SAAS,CAAC0Y,QAAD,EAAWC,MAAX,CAAT;;AACA,WAASD,QAAT,GAAoB;AAChB,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAAC1T,KAAP,CAAa,IAAb,EAAmBP,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDiK,EAAAA,MAAM,CAACC,cAAP,CAAsB8J,QAAtB,EAAgC,cAAhC,EAAgD;AAC5C7V,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO4V,YAAP;AACH,KAH2C;AAI5ClW,IAAAA,GAAG,EAAE,UAAUqW,GAAV,EAAe;AAChBH,MAAAA,YAAY,GAAGG,GAAf;AACH,KAN2C;AAO5C/J,IAAAA,UAAU,EAAE,KAPgC;AAQ5CC,IAAAA,YAAY,EAAE;AAR8B,GAAhD;AAUA;AACJ;AACA;;AACI4J,EAAAA,QAAQ,CAACpW,SAAT,CAAmB2V,OAAnB,GAA6B,UAAUxQ,CAAV,EAAaC,CAAb,EAAgB;AACzC,WAAOF,WAAW,CAACC,CAAC,CAACxE,IAAH,EAASyE,CAAC,CAACzE,IAAX,CAAlB;AACH,GAFD;AAGA;AACJ;AACA;;;AACIyV,EAAAA,QAAQ,CAACpW,SAAT,CAAmBuW,WAAnB,GAAiC,UAAUhB,IAAV,EAAgB;AAC7C;AACA;AACA,UAAM3W,cAAc,CAAC,iDAAD,CAApB;AACH,GAJD;AAKA;AACJ;AACA;;;AACIwX,EAAAA,QAAQ,CAACpW,SAAT,CAAmB4V,mBAAnB,GAAyC,UAAUC,OAAV,EAAmBC,OAAnB,EAA4B;AACjE,WAAO,KAAP,CADiE,CACnD;AACjB,GAFD;AAGA;AACJ;AACA;;;AACIM,EAAAA,QAAQ,CAACpW,SAAT,CAAmBiW,OAAnB,GAA6B,YAAY;AACrC;AACA,WAAOX,SAAS,CAACY,GAAjB;AACH,GAHD;AAIA;AACJ;AACA;;;AACIE,EAAAA,QAAQ,CAACpW,SAAT,CAAmBwW,OAAnB,GAA6B,YAAY;AACrC;AACA;AACA,WAAO,IAAIlB,SAAJ,CAAcrQ,QAAd,EAAwBkR,YAAxB,CAAP;AACH,GAJD;;AAKAC,EAAAA,QAAQ,CAACpW,SAAT,CAAmByW,QAAnB,GAA8B,UAAUC,UAAV,EAAsB/V,IAAtB,EAA4B;AACtDzC,IAAAA,MAAM,CAAC,OAAOwY,UAAP,KAAsB,QAAvB,EAAiC,8CAAjC,CAAN,CADsD,CAEtD;;AACA,WAAO,IAAIpB,SAAJ,CAAcoB,UAAd,EAA0BP,YAA1B,CAAP;AACH,GAJD;AAKA;AACJ;AACA;;;AACIC,EAAAA,QAAQ,CAACpW,SAAT,CAAmBY,QAAnB,GAA8B,YAAY;AACtC,WAAO,MAAP;AACH,GAFD;;AAGA,SAAOwV,QAAP;AACH,CA9D6B,CA8D5BX,KA9D4B,CAA9B;;AA+DA,IAAIkB,SAAS,GAAG,IAAIP,QAAJ,EAAhB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIQ,QAAJ;;AACA,SAASC,UAAT,CAAoBP,GAApB,EAAyB;AACrBM,EAAAA,QAAQ,GAAGN,GAAX;AACH;;AACD,IAAIQ,gBAAgB,GAAG,UAAUtF,QAAV,EAAoB;AACvC,MAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAC9B,WAAO,YAAYhL,qBAAqB,CAACgL,QAAD,CAAxC;AACH,GAFD,MAGK;AACD,WAAO,YAAYA,QAAnB;AACH;AACJ,CAPD;AAQA;AACA;AACA;;;AACA,IAAIuF,oBAAoB,GAAG,UAAUC,YAAV,EAAwB;AAC/C,MAAIA,YAAY,CAACC,UAAb,EAAJ,EAA+B;AAC3B,QAAIX,GAAG,GAAGU,YAAY,CAACV,GAAb,EAAV;AACApY,IAAAA,MAAM,CAAC,OAAOoY,GAAP,KAAe,QAAf,IACH,OAAOA,GAAP,KAAe,QADZ,IAEF,OAAOA,GAAP,KAAe,QAAf,IAA2BrY,QAAQ,CAACqY,GAAD,EAAM,KAAN,CAFlC,EAEiD,sCAFjD,CAAN;AAGH,GALD,MAMK;AACDpY,IAAAA,MAAM,CAAC8Y,YAAY,KAAKJ,QAAjB,IAA6BI,YAAY,CAAC3X,OAAb,EAA9B,EAAsD,8BAAtD,CAAN;AACH,GAT8C,CAU/C;;;AACAnB,EAAAA,MAAM,CAAC8Y,YAAY,KAAKJ,QAAjB,IAA6BI,YAAY,CAACE,WAAb,GAA2B7X,OAA3B,EAA9B,EAAoE,oDAApE,CAAN;AACH,CAZD;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAI8X,yBAAJ;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,QAAQ;AAAG;AAAe,YAAY;AACtC;AACJ;AACA;AACA;AACA;AACI,WAASA,QAAT,CAAkBC,MAAlB,EAA0BC,aAA1B,EAAyC;AACrC,QAAIA,aAAa,KAAK,KAAK,CAA3B,EAA8B;AAAEA,MAAAA,aAAa,GAAGF,QAAQ,CAACD,yBAAT,CAAmCI,UAAnD;AAAgE;;AAChG,SAAKF,MAAL,GAAcA,MAAd;AACA,SAAKC,aAAL,GAAqBA,aAArB;AACA,SAAKE,SAAL,GAAiB,IAAjB;AACAtZ,IAAAA,MAAM,CAAC,KAAKmZ,MAAL,KAAgBxF,SAAhB,IAA6B,KAAKwF,MAAL,KAAgB,IAA9C,EAAoD,0DAApD,CAAN;AACAN,IAAAA,oBAAoB,CAAC,KAAKO,aAAN,CAApB;AACH;;AACDjL,EAAAA,MAAM,CAACC,cAAP,CAAsB8K,QAAtB,EAAgC,2BAAhC,EAA6D;AACzD7W,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO4W,yBAAP;AACH,KAHwD;AAIzDlX,IAAAA,GAAG,EAAE,UAAUqW,GAAV,EAAe;AAChBa,MAAAA,yBAAyB,GAAGb,GAA5B;AACH,KANwD;AAOzD/J,IAAAA,UAAU,EAAE,KAP6C;AAQzDC,IAAAA,YAAY,EAAE;AAR2C,GAA7D;AAUA;;AACA4K,EAAAA,QAAQ,CAACpX,SAAT,CAAmBiX,UAAnB,GAAgC,YAAY;AACxC,WAAO,IAAP;AACH,GAFD;AAGA;;;AACAG,EAAAA,QAAQ,CAACpX,SAAT,CAAmBkX,WAAnB,GAAiC,YAAY;AACzC,WAAO,KAAKI,aAAZ;AACH,GAFD;AAGA;;;AACAF,EAAAA,QAAQ,CAACpX,SAAT,CAAmByX,cAAnB,GAAoC,UAAUC,eAAV,EAA2B;AAC3D,WAAO,IAAIN,QAAJ,CAAa,KAAKC,MAAlB,EAA0BK,eAA1B,CAAP;AACH,GAFD;AAGA;;;AACAN,EAAAA,QAAQ,CAACpX,SAAT,CAAmB2X,iBAAnB,GAAuC,UAAUC,SAAV,EAAqB;AACxD;AACA,QAAIA,SAAS,KAAK,WAAlB,EAA+B;AAC3B,aAAO,KAAKN,aAAZ;AACH,KAFD,MAGK;AACD,aAAOF,QAAQ,CAACD,yBAAT,CAAmCI,UAA1C;AACH;AACJ,GARD;AASA;;;AACAH,EAAAA,QAAQ,CAACpX,SAAT,CAAmB6X,QAAnB,GAA8B,UAAUrP,IAAV,EAAgB;AAC1C,QAAIuC,WAAW,CAACvC,IAAD,CAAf,EAAuB;AACnB,aAAO,IAAP;AACH,KAFD,MAGK,IAAIwB,YAAY,CAACxB,IAAD,CAAZ,KAAuB,WAA3B,EAAwC;AACzC,aAAO,KAAK8O,aAAZ;AACH,KAFI,MAGA;AACD,aAAOF,QAAQ,CAACD,yBAAT,CAAmCI,UAA1C;AACH;AACJ,GAVD;AAWA;AACJ;AACA;;;AACIH,EAAAA,QAAQ,CAACpX,SAAT,CAAmB8X,QAAnB,GAA8B,YAAY;AACtC,WAAO,KAAP;AACH,GAFD;AAGA;;;AACAV,EAAAA,QAAQ,CAACpX,SAAT,CAAmB+X,uBAAnB,GAA6C,UAAUH,SAAV,EAAqBI,SAArB,EAAgC;AACzE,WAAO,IAAP;AACH,GAFD;AAGA;;;AACAZ,EAAAA,QAAQ,CAACpX,SAAT,CAAmBiY,oBAAnB,GAA0C,UAAUL,SAAV,EAAqBM,YAArB,EAAmC;AACzE,QAAIN,SAAS,KAAK,WAAlB,EAA+B;AAC3B,aAAO,KAAKH,cAAL,CAAoBS,YAApB,CAAP;AACH,KAFD,MAGK,IAAIA,YAAY,CAAC7Y,OAAb,MAA0BuY,SAAS,KAAK,WAA5C,EAAyD;AAC1D,aAAO,IAAP;AACH,KAFI,MAGA;AACD,aAAOR,QAAQ,CAACD,yBAAT,CAAmCI,UAAnC,CAA8CU,oBAA9C,CAAmEL,SAAnE,EAA8EM,YAA9E,EAA4FT,cAA5F,CAA2G,KAAKH,aAAhH,CAAP;AACH;AACJ,GAVD;AAWA;;;AACAF,EAAAA,QAAQ,CAACpX,SAAT,CAAmBmY,WAAnB,GAAiC,UAAU3P,IAAV,EAAgB0P,YAAhB,EAA8B;AAC3D,QAAIE,KAAK,GAAGpO,YAAY,CAACxB,IAAD,CAAxB;;AACA,QAAI4P,KAAK,KAAK,IAAd,EAAoB;AAChB,aAAOF,YAAP;AACH,KAFD,MAGK,IAAIA,YAAY,CAAC7Y,OAAb,MAA0B+Y,KAAK,KAAK,WAAxC,EAAqD;AACtD,aAAO,IAAP;AACH,KAFI,MAGA;AACDla,MAAAA,MAAM,CAACka,KAAK,KAAK,WAAV,IAAyBnO,aAAa,CAACzB,IAAD,CAAb,KAAwB,CAAlD,EAAqD,4CAArD,CAAN;AACA,aAAO,KAAKyP,oBAAL,CAA0BG,KAA1B,EAAiChB,QAAQ,CAACD,yBAAT,CAAmCI,UAAnC,CAA8CY,WAA9C,CAA0DjO,YAAY,CAAC1B,IAAD,CAAtE,EAA8E0P,YAA9E,CAAjC,CAAP;AACH;AACJ,GAZD;AAaA;;;AACAd,EAAAA,QAAQ,CAACpX,SAAT,CAAmBX,OAAnB,GAA6B,YAAY;AACrC,WAAO,KAAP;AACH,GAFD;AAGA;;;AACA+X,EAAAA,QAAQ,CAACpX,SAAT,CAAmBqY,WAAnB,GAAiC,YAAY;AACzC,WAAO,CAAP;AACH,GAFD;AAGA;;;AACAjB,EAAAA,QAAQ,CAACpX,SAAT,CAAmBsY,YAAnB,GAAkC,UAAUC,KAAV,EAAiBC,MAAjB,EAAyB;AACvD,WAAO,KAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACIpB,EAAAA,QAAQ,CAACpX,SAAT,CAAmBsW,GAAnB,GAAyB,UAAUmC,YAAV,EAAwB;AAC7C,QAAIA,YAAY,IAAI,CAAC,KAAKvB,WAAL,GAAmB7X,OAAnB,EAArB,EAAmD;AAC/C,aAAO;AACH,kBAAU,KAAKqZ,QAAL,EADP;AAEH,qBAAa,KAAKxB,WAAL,GAAmBZ,GAAnB;AAFV,OAAP;AAIH,KALD,MAMK;AACD,aAAO,KAAKoC,QAAL,EAAP;AACH;AACJ,GAVD;AAWA;;;AACAtB,EAAAA,QAAQ,CAACpX,SAAT,CAAmB2Y,IAAnB,GAA0B,YAAY;AAClC,QAAI,KAAKnB,SAAL,KAAmB,IAAvB,EAA6B;AACzB,UAAIoB,MAAM,GAAG,EAAb;;AACA,UAAI,CAAC,KAAKtB,aAAL,CAAmBjY,OAAnB,EAAL,EAAmC;AAC/BuZ,QAAAA,MAAM,IACF,cACI9B,gBAAgB,CAAC,KAAKQ,aAAL,CAAmBhB,GAAnB,EAAD,CADpB,GAEI,GAHR;AAIH;;AACD,UAAI5H,IAAI,GAAG,OAAO,KAAK2I,MAAvB;AACAuB,MAAAA,MAAM,IAAIlK,IAAI,GAAG,GAAjB;;AACA,UAAIA,IAAI,KAAK,QAAb,EAAuB;AACnBkK,QAAAA,MAAM,IAAIpS,qBAAqB,CAAC,KAAK6Q,MAAN,CAA/B;AACH,OAFD,MAGK;AACDuB,QAAAA,MAAM,IAAI,KAAKvB,MAAf;AACH;;AACD,WAAKG,SAAL,GAAiB9V,IAAI,CAACkX,MAAD,CAArB;AACH;;AACD,WAAO,KAAKpB,SAAZ;AACH,GApBD;AAqBA;AACJ;AACA;AACA;;;AACIJ,EAAAA,QAAQ,CAACpX,SAAT,CAAmB0Y,QAAnB,GAA8B,YAAY;AACtC,WAAO,KAAKrB,MAAZ;AACH,GAFD;AAGA;AACJ;AACA;;;AACID,EAAAA,QAAQ,CAACpX,SAAT,CAAmB6Y,SAAnB,GAA+B,UAAUjN,KAAV,EAAiB;AAC5C,QAAIA,KAAK,KAAKwL,QAAQ,CAACD,yBAAT,CAAmCI,UAAjD,EAA6D;AACzD,aAAO,CAAP;AACH,KAFD,MAGK,IAAI3L,KAAK,YAAYwL,QAAQ,CAACD,yBAA9B,EAAyD;AAC1D,aAAO,CAAC,CAAR;AACH,KAFI,MAGA;AACDjZ,MAAAA,MAAM,CAAC0N,KAAK,CAACqL,UAAN,EAAD,EAAqB,mBAArB,CAAN;AACA,aAAO,KAAK6B,kBAAL,CAAwBlN,KAAxB,CAAP;AACH;AACJ,GAXD;AAYA;AACJ;AACA;;;AACIwL,EAAAA,QAAQ,CAACpX,SAAT,CAAmB8Y,kBAAnB,GAAwC,UAAUC,SAAV,EAAqB;AACzD,QAAIC,aAAa,GAAG,OAAOD,SAAS,CAAC1B,MAArC;AACA,QAAI4B,YAAY,GAAG,OAAO,KAAK5B,MAA/B;AACA,QAAI6B,UAAU,GAAG9B,QAAQ,CAAC+B,gBAAT,CAA0BrV,OAA1B,CAAkCkV,aAAlC,CAAjB;AACA,QAAII,SAAS,GAAGhC,QAAQ,CAAC+B,gBAAT,CAA0BrV,OAA1B,CAAkCmV,YAAlC,CAAhB;AACA/a,IAAAA,MAAM,CAACgb,UAAU,IAAI,CAAf,EAAkB,wBAAwBF,aAA1C,CAAN;AACA9a,IAAAA,MAAM,CAACkb,SAAS,IAAI,CAAd,EAAiB,wBAAwBH,YAAzC,CAAN;;AACA,QAAIC,UAAU,KAAKE,SAAnB,EAA8B;AAC1B;AACA,UAAIH,YAAY,KAAK,QAArB,EAA+B;AAC3B;AACA,eAAO,CAAP;AACH,OAHD,MAIK;AACD;AACA,YAAI,KAAK5B,MAAL,GAAc0B,SAAS,CAAC1B,MAA5B,EAAoC;AAChC,iBAAO,CAAC,CAAR;AACH,SAFD,MAGK,IAAI,KAAKA,MAAL,KAAgB0B,SAAS,CAAC1B,MAA9B,EAAsC;AACvC,iBAAO,CAAP;AACH,SAFI,MAGA;AACD,iBAAO,CAAP;AACH;AACJ;AACJ,KAlBD,MAmBK;AACD,aAAO+B,SAAS,GAAGF,UAAnB;AACH;AACJ,GA7BD;AA8BA;AACJ;AACA;;;AACI9B,EAAAA,QAAQ,CAACpX,SAAT,CAAmBqZ,SAAnB,GAA+B,YAAY;AACvC,WAAO,IAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACIjC,EAAAA,QAAQ,CAACpX,SAAT,CAAmBsZ,SAAnB,GAA+B,YAAY;AACvC,WAAO,IAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACIlC,EAAAA,QAAQ,CAACpX,SAAT,CAAmBuZ,MAAnB,GAA4B,UAAU3N,KAAV,EAAiB;AACzC;AACR;AACA;AACQ,QAAIA,KAAK,KAAK,IAAd,EAAoB;AAChB,aAAO,IAAP;AACH,KAFD,MAGK,IAAIA,KAAK,CAACqL,UAAN,EAAJ,EAAwB;AACzB,UAAI8B,SAAS,GAAGnN,KAAhB;AACA,aAAQ,KAAKyL,MAAL,KAAgB0B,SAAS,CAAC1B,MAA1B,IACJ,KAAKC,aAAL,CAAmBiC,MAAnB,CAA0BR,SAAS,CAACzB,aAApC,CADJ;AAEH,KAJI,MAKA;AACD,aAAO,KAAP;AACH;AACJ,GAfD;AAgBA;AACJ;AACA;AACA;;;AACIF,EAAAA,QAAQ,CAAC+B,gBAAT,GAA4B,CAAC,QAAD,EAAW,SAAX,EAAsB,QAAtB,EAAgC,QAAhC,CAA5B;AACA,SAAO/B,QAAP;AACH,CA1O6B,EAA9B;AA4OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIoC,YAAJ;AACA,IAAIC,UAAJ;;AACA,SAASC,eAAT,CAAyBpD,GAAzB,EAA8B;AAC1BkD,EAAAA,YAAY,GAAGlD,GAAf;AACH;;AACD,SAASqD,YAAT,CAAsBrD,GAAtB,EAA2B;AACvBmD,EAAAA,UAAU,GAAGnD,GAAb;AACH;;AACD,IAAIsD,aAAa;AAAG;AAAe,UAAUvD,MAAV,EAAkB;AACjD3Y,EAAAA,SAAS,CAACkc,aAAD,EAAgBvD,MAAhB,CAAT;;AACA,WAASuD,aAAT,GAAyB;AACrB,WAAOvD,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAAC1T,KAAP,CAAa,IAAb,EAAmBP,SAAnB,CAAnB,IAAoD,IAA3D;AACH;AACD;AACJ;AACA;;;AACIwX,EAAAA,aAAa,CAAC5Z,SAAd,CAAwB2V,OAAxB,GAAkC,UAAUxQ,CAAV,EAAaC,CAAb,EAAgB;AAC9C,QAAIyU,SAAS,GAAG1U,CAAC,CAACoQ,IAAF,CAAO2B,WAAP,EAAhB;AACA,QAAI4C,SAAS,GAAG1U,CAAC,CAACmQ,IAAF,CAAO2B,WAAP,EAAhB;AACA,QAAI6C,QAAQ,GAAGF,SAAS,CAAChB,SAAV,CAAoBiB,SAApB,CAAf;;AACA,QAAIC,QAAQ,KAAK,CAAjB,EAAoB;AAChB,aAAO7U,WAAW,CAACC,CAAC,CAACxE,IAAH,EAASyE,CAAC,CAACzE,IAAX,CAAlB;AACH,KAFD,MAGK;AACD,aAAOoZ,QAAP;AACH;AACJ,GAVD;AAWA;AACJ;AACA;;;AACIH,EAAAA,aAAa,CAAC5Z,SAAd,CAAwBuW,WAAxB,GAAsC,UAAUhB,IAAV,EAAgB;AAClD,WAAO,CAACA,IAAI,CAAC2B,WAAL,GAAmB7X,OAAnB,EAAR;AACH,GAFD;AAGA;AACJ;AACA;;;AACIua,EAAAA,aAAa,CAAC5Z,SAAd,CAAwB4V,mBAAxB,GAA8C,UAAUC,OAAV,EAAmBC,OAAnB,EAA4B;AACtE,WAAO,CAACD,OAAO,CAACqB,WAAR,GAAsBqC,MAAtB,CAA6BzD,OAAO,CAACoB,WAAR,EAA7B,CAAR;AACH,GAFD;AAGA;AACJ;AACA;;;AACI0C,EAAAA,aAAa,CAAC5Z,SAAd,CAAwBiW,OAAxB,GAAkC,YAAY;AAC1C;AACA,WAAOX,SAAS,CAACY,GAAjB;AACH,GAHD;AAIA;AACJ;AACA;;;AACI0D,EAAAA,aAAa,CAAC5Z,SAAd,CAAwBwW,OAAxB,GAAkC,YAAY;AAC1C,WAAO,IAAIlB,SAAJ,CAAcrQ,QAAd,EAAwB,IAAImS,QAAJ,CAAa,iBAAb,EAAgCqC,UAAhC,CAAxB,CAAP;AACH,GAFD;;AAGAG,EAAAA,aAAa,CAAC5Z,SAAd,CAAwByW,QAAxB,GAAmC,UAAUC,UAAV,EAAsB/V,IAAtB,EAA4B;AAC3D,QAAIqW,YAAY,GAAGwC,YAAY,CAAC9C,UAAD,CAA/B;AACA,WAAO,IAAIpB,SAAJ,CAAc3U,IAAd,EAAoB,IAAIyW,QAAJ,CAAa,iBAAb,EAAgCJ,YAAhC,CAApB,CAAP;AACH,GAHD;AAIA;AACJ;AACA;;;AACI4C,EAAAA,aAAa,CAAC5Z,SAAd,CAAwBY,QAAxB,GAAmC,YAAY;AAC3C,WAAO,WAAP;AACH,GAFD;;AAGA,SAAOgZ,aAAP;AACH,CAvDkC,CAuDjCnE,KAvDiC,CAAnC;;AAwDA,IAAIuE,cAAc,GAAG,IAAIJ,aAAJ,EAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA,IAAIK,iBAAiB;AAAG;AAAe,YAAY;AAC/C;AACJ;AACA;AACA;AACA;AACI,WAASA,iBAAT,CAA2B1E,IAA3B,EAAiC2E,QAAjC,EAA2CC,UAA3C,EAAuDC,UAAvD,EAAmEC,gBAAnE,EAAqF;AACjF,QAAIA,gBAAgB,KAAK,KAAK,CAA9B,EAAiC;AAAEA,MAAAA,gBAAgB,GAAG,IAAnB;AAA0B;;AAC7D,SAAKD,UAAL,GAAkBA,UAAlB;AACA,SAAKC,gBAAL,GAAwBA,gBAAxB;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA,QAAI5O,GAAG,GAAG,CAAV;;AACA,WAAO,CAAC6J,IAAI,CAAClW,OAAL,EAAR,EAAwB;AACpBkW,MAAAA,IAAI,GAAGA,IAAP;AACA7J,MAAAA,GAAG,GAAGwO,QAAQ,GAAGC,UAAU,CAAC5E,IAAI,CAACrV,GAAN,EAAWga,QAAX,CAAb,GAAoC,CAAlD,CAFoB,CAGpB;;AACA,UAAIE,UAAJ,EAAgB;AACZ1O,QAAAA,GAAG,IAAI,CAAC,CAAR;AACH;;AACD,UAAIA,GAAG,GAAG,CAAV,EAAa;AACT;AACA,YAAI,KAAK0O,UAAT,EAAqB;AACjB7E,UAAAA,IAAI,GAAGA,IAAI,CAACjK,IAAZ;AACH,SAFD,MAGK;AACDiK,UAAAA,IAAI,GAAGA,IAAI,CAAChK,KAAZ;AACH;AACJ,OARD,MASK,IAAIG,GAAG,KAAK,CAAZ,EAAe;AAChB;AACA,aAAK4O,UAAL,CAAgBxU,IAAhB,CAAqByP,IAArB;AACA;AACH,OAJI,MAKA;AACD;AACA,aAAK+E,UAAL,CAAgBxU,IAAhB,CAAqByP,IAArB;;AACA,YAAI,KAAK6E,UAAT,EAAqB;AACjB7E,UAAAA,IAAI,GAAGA,IAAI,CAAChK,KAAZ;AACH,SAFD,MAGK;AACDgK,UAAAA,IAAI,GAAGA,IAAI,CAACjK,IAAZ;AACH;AACJ;AACJ;AACJ;;AACD2O,EAAAA,iBAAiB,CAACja,SAAlB,CAA4Bua,OAA5B,GAAsC,YAAY;AAC9C,QAAI,KAAKD,UAAL,CAAgBjY,MAAhB,KAA2B,CAA/B,EAAkC;AAC9B,aAAO,IAAP;AACH;;AACD,QAAIkT,IAAI,GAAG,KAAK+E,UAAL,CAAgB5N,GAAhB,EAAX;AACA,QAAI8N,MAAJ;;AACA,QAAI,KAAKH,gBAAT,EAA2B;AACvBG,MAAAA,MAAM,GAAG,KAAKH,gBAAL,CAAsB9E,IAAI,CAACrV,GAA3B,EAAgCqV,IAAI,CAACpV,KAArC,CAAT;AACH,KAFD,MAGK;AACDqa,MAAAA,MAAM,GAAG;AAAEta,QAAAA,GAAG,EAAEqV,IAAI,CAACrV,GAAZ;AAAiBC,QAAAA,KAAK,EAAEoV,IAAI,CAACpV;AAA7B,OAAT;AACH;;AACD,QAAI,KAAKia,UAAT,EAAqB;AACjB7E,MAAAA,IAAI,GAAGA,IAAI,CAACjK,IAAZ;;AACA,aAAO,CAACiK,IAAI,CAAClW,OAAL,EAAR,EAAwB;AACpB,aAAKib,UAAL,CAAgBxU,IAAhB,CAAqByP,IAArB;AACAA,QAAAA,IAAI,GAAGA,IAAI,CAAChK,KAAZ;AACH;AACJ,KAND,MAOK;AACDgK,MAAAA,IAAI,GAAGA,IAAI,CAAChK,KAAZ;;AACA,aAAO,CAACgK,IAAI,CAAClW,OAAL,EAAR,EAAwB;AACpB,aAAKib,UAAL,CAAgBxU,IAAhB,CAAqByP,IAArB;AACAA,QAAAA,IAAI,GAAGA,IAAI,CAACjK,IAAZ;AACH;AACJ;;AACD,WAAOkP,MAAP;AACH,GA3BD;;AA4BAP,EAAAA,iBAAiB,CAACja,SAAlB,CAA4Bya,OAA5B,GAAsC,YAAY;AAC9C,WAAO,KAAKH,UAAL,CAAgBjY,MAAhB,GAAyB,CAAhC;AACH,GAFD;;AAGA4X,EAAAA,iBAAiB,CAACja,SAAlB,CAA4B0a,IAA5B,GAAmC,YAAY;AAC3C,QAAI,KAAKJ,UAAL,CAAgBjY,MAAhB,KAA2B,CAA/B,EAAkC;AAC9B,aAAO,IAAP;AACH;;AACD,QAAIkT,IAAI,GAAG,KAAK+E,UAAL,CAAgB,KAAKA,UAAL,CAAgBjY,MAAhB,GAAyB,CAAzC,CAAX;;AACA,QAAI,KAAKgY,gBAAT,EAA2B;AACvB,aAAO,KAAKA,gBAAL,CAAsB9E,IAAI,CAACrV,GAA3B,EAAgCqV,IAAI,CAACpV,KAArC,CAAP;AACH,KAFD,MAGK;AACD,aAAO;AAAED,QAAAA,GAAG,EAAEqV,IAAI,CAACrV,GAAZ;AAAiBC,QAAAA,KAAK,EAAEoV,IAAI,CAACpV;AAA7B,OAAP;AACH;AACJ,GAXD;;AAYA,SAAO8Z,iBAAP;AACH,CAzFsC,EAAvC;AA0FA;AACA;AACA;;;AACA,IAAIU,QAAQ;AAAG;AAAe,YAAY;AACtC;AACJ;AACA;AACA;AACA;AACA;AACA;AACI,WAASA,QAAT,CAAkBza,GAAlB,EAAuBC,KAAvB,EAA8Bya,KAA9B,EAAqCtP,IAArC,EAA2CC,KAA3C,EAAkD;AAC9C,SAAKrL,GAAL,GAAWA,GAAX;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKya,KAAL,GAAaA,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAwBD,QAAQ,CAACE,GAA9C;AACA,SAAKvP,IAAL,GACIA,IAAI,IAAI,IAAR,GAAeA,IAAf,GAAsBwP,SAAS,CAACvD,UADpC;AAEA,SAAKhM,KAAL,GACIA,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAwBuP,SAAS,CAACvD,UADtC;AAEH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIoD,EAAAA,QAAQ,CAAC3a,SAAT,CAAmB+a,IAAnB,GAA0B,UAAU7a,GAAV,EAAeC,KAAf,EAAsBya,KAAtB,EAA6BtP,IAA7B,EAAmCC,KAAnC,EAA0C;AAChE,WAAO,IAAIoP,QAAJ,CAAaza,GAAG,IAAI,IAAP,GAAcA,GAAd,GAAoB,KAAKA,GAAtC,EAA2CC,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAwB,KAAKA,KAAxE,EAA+Eya,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAwB,KAAKA,KAA5G,EAAmHtP,IAAI,IAAI,IAAR,GAAeA,IAAf,GAAsB,KAAKA,IAA9I,EAAoJC,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAwB,KAAKA,KAAjL,CAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACIoP,EAAAA,QAAQ,CAAC3a,SAAT,CAAmBgb,KAAnB,GAA2B,YAAY;AACnC,WAAO,KAAK1P,IAAL,CAAU0P,KAAV,KAAoB,CAApB,GAAwB,KAAKzP,KAAL,CAAWyP,KAAX,EAA/B;AACH,GAFD;AAGA;AACJ;AACA;;;AACIL,EAAAA,QAAQ,CAAC3a,SAAT,CAAmBX,OAAnB,GAA6B,YAAY;AACrC,WAAO,KAAP;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIsb,EAAAA,QAAQ,CAAC3a,SAAT,CAAmBib,gBAAnB,GAAsC,UAAUzC,MAAV,EAAkB;AACpD,WAAQ,KAAKlN,IAAL,CAAU2P,gBAAV,CAA2BzC,MAA3B,KACJ,CAAC,CAACA,MAAM,CAAC,KAAKtY,GAAN,EAAW,KAAKC,KAAhB,CADJ,IAEJ,KAAKoL,KAAL,CAAW0P,gBAAX,CAA4BzC,MAA5B,CAFJ;AAGH,GAJD;AAKA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACImC,EAAAA,QAAQ,CAAC3a,SAAT,CAAmBkb,gBAAnB,GAAsC,UAAU1C,MAAV,EAAkB;AACpD,WAAQ,KAAKjN,KAAL,CAAW2P,gBAAX,CAA4B1C,MAA5B,KACJA,MAAM,CAAC,KAAKtY,GAAN,EAAW,KAAKC,KAAhB,CADF,IAEJ,KAAKmL,IAAL,CAAU4P,gBAAV,CAA2B1C,MAA3B,CAFJ;AAGH,GAJD;AAKA;AACJ;AACA;;;AACImC,EAAAA,QAAQ,CAAC3a,SAAT,CAAmBmb,IAAnB,GAA0B,YAAY;AAClC,QAAI,KAAK7P,IAAL,CAAUjM,OAAV,EAAJ,EAAyB;AACrB,aAAO,IAAP;AACH,KAFD,MAGK;AACD,aAAO,KAAKiM,IAAL,CAAU6P,IAAV,EAAP;AACH;AACJ,GAPD;AAQA;AACJ;AACA;;;AACIR,EAAAA,QAAQ,CAAC3a,SAAT,CAAmBob,MAAnB,GAA4B,YAAY;AACpC,WAAO,KAAKD,IAAL,GAAYjb,GAAnB;AACH,GAFD;AAGA;AACJ;AACA;;;AACIya,EAAAA,QAAQ,CAAC3a,SAAT,CAAmBqb,MAAnB,GAA4B,YAAY;AACpC,QAAI,KAAK9P,KAAL,CAAWlM,OAAX,EAAJ,EAA0B;AACtB,aAAO,KAAKa,GAAZ;AACH,KAFD,MAGK;AACD,aAAO,KAAKqL,KAAL,CAAW8P,MAAX,EAAP;AACH;AACJ,GAPD;AAQA;AACJ;AACA;AACA;AACA;AACA;;;AACIV,EAAAA,QAAQ,CAAC3a,SAAT,CAAmBsb,MAAnB,GAA4B,UAAUpb,GAAV,EAAeC,KAAf,EAAsBga,UAAtB,EAAkC;AAC1D,QAAIoB,CAAC,GAAG,IAAR;AACA,QAAI7P,GAAG,GAAGyO,UAAU,CAACja,GAAD,EAAMqb,CAAC,CAACrb,GAAR,CAApB;;AACA,QAAIwL,GAAG,GAAG,CAAV,EAAa;AACT6P,MAAAA,CAAC,GAAGA,CAAC,CAACR,IAAF,CAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyBQ,CAAC,CAACjQ,IAAF,CAAOgQ,MAAP,CAAcpb,GAAd,EAAmBC,KAAnB,EAA0Bga,UAA1B,CAAzB,EAAgE,IAAhE,CAAJ;AACH,KAFD,MAGK,IAAIzO,GAAG,KAAK,CAAZ,EAAe;AAChB6P,MAAAA,CAAC,GAAGA,CAAC,CAACR,IAAF,CAAO,IAAP,EAAa5a,KAAb,EAAoB,IAApB,EAA0B,IAA1B,EAAgC,IAAhC,CAAJ;AACH,KAFI,MAGA;AACDob,MAAAA,CAAC,GAAGA,CAAC,CAACR,IAAF,CAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+BQ,CAAC,CAAChQ,KAAF,CAAQ+P,MAAR,CAAepb,GAAf,EAAoBC,KAApB,EAA2Bga,UAA3B,CAA/B,CAAJ;AACH;;AACD,WAAOoB,CAAC,CAACC,MAAF,EAAP;AACH,GAbD;AAcA;AACJ;AACA;;;AACIb,EAAAA,QAAQ,CAAC3a,SAAT,CAAmByb,UAAnB,GAAgC,YAAY;AACxC,QAAI,KAAKnQ,IAAL,CAAUjM,OAAV,EAAJ,EAAyB;AACrB,aAAOyb,SAAS,CAACvD,UAAjB;AACH;;AACD,QAAIgE,CAAC,GAAG,IAAR;;AACA,QAAI,CAACA,CAAC,CAACjQ,IAAF,CAAOoQ,MAAP,EAAD,IAAoB,CAACH,CAAC,CAACjQ,IAAF,CAAOA,IAAP,CAAYoQ,MAAZ,EAAzB,EAA+C;AAC3CH,MAAAA,CAAC,GAAGA,CAAC,CAACI,YAAF,EAAJ;AACH;;AACDJ,IAAAA,CAAC,GAAGA,CAAC,CAACR,IAAF,CAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyBQ,CAAC,CAACjQ,IAAF,CAAOmQ,UAAP,EAAzB,EAA8C,IAA9C,CAAJ;AACA,WAAOF,CAAC,CAACC,MAAF,EAAP;AACH,GAVD;AAWA;AACJ;AACA;AACA;AACA;;;AACIb,EAAAA,QAAQ,CAAC3a,SAAT,CAAmBU,MAAnB,GAA4B,UAAUR,GAAV,EAAeia,UAAf,EAA2B;AACnD,QAAIoB,CAAJ,EAAOK,QAAP;AACAL,IAAAA,CAAC,GAAG,IAAJ;;AACA,QAAIpB,UAAU,CAACja,GAAD,EAAMqb,CAAC,CAACrb,GAAR,CAAV,GAAyB,CAA7B,EAAgC;AAC5B,UAAI,CAACqb,CAAC,CAACjQ,IAAF,CAAOjM,OAAP,EAAD,IAAqB,CAACkc,CAAC,CAACjQ,IAAF,CAAOoQ,MAAP,EAAtB,IAAyC,CAACH,CAAC,CAACjQ,IAAF,CAAOA,IAAP,CAAYoQ,MAAZ,EAA9C,EAAoE;AAChEH,QAAAA,CAAC,GAAGA,CAAC,CAACI,YAAF,EAAJ;AACH;;AACDJ,MAAAA,CAAC,GAAGA,CAAC,CAACR,IAAF,CAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyBQ,CAAC,CAACjQ,IAAF,CAAO5K,MAAP,CAAcR,GAAd,EAAmBia,UAAnB,CAAzB,EAAyD,IAAzD,CAAJ;AACH,KALD,MAMK;AACD,UAAIoB,CAAC,CAACjQ,IAAF,CAAOoQ,MAAP,EAAJ,EAAqB;AACjBH,QAAAA,CAAC,GAAGA,CAAC,CAACM,YAAF,EAAJ;AACH;;AACD,UAAI,CAACN,CAAC,CAAChQ,KAAF,CAAQlM,OAAR,EAAD,IAAsB,CAACkc,CAAC,CAAChQ,KAAF,CAAQmQ,MAAR,EAAvB,IAA2C,CAACH,CAAC,CAAChQ,KAAF,CAAQD,IAAR,CAAaoQ,MAAb,EAAhD,EAAuE;AACnEH,QAAAA,CAAC,GAAGA,CAAC,CAACO,aAAF,EAAJ;AACH;;AACD,UAAI3B,UAAU,CAACja,GAAD,EAAMqb,CAAC,CAACrb,GAAR,CAAV,KAA2B,CAA/B,EAAkC;AAC9B,YAAIqb,CAAC,CAAChQ,KAAF,CAAQlM,OAAR,EAAJ,EAAuB;AACnB,iBAAOyb,SAAS,CAACvD,UAAjB;AACH,SAFD,MAGK;AACDqE,UAAAA,QAAQ,GAAGL,CAAC,CAAChQ,KAAF,CAAQ4P,IAAR,EAAX;AACAI,UAAAA,CAAC,GAAGA,CAAC,CAACR,IAAF,CAAOa,QAAQ,CAAC1b,GAAhB,EAAqB0b,QAAQ,CAACzb,KAA9B,EAAqC,IAArC,EAA2C,IAA3C,EAAiDob,CAAC,CAAChQ,KAAF,CAAQkQ,UAAR,EAAjD,CAAJ;AACH;AACJ;;AACDF,MAAAA,CAAC,GAAGA,CAAC,CAACR,IAAF,CAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+BQ,CAAC,CAAChQ,KAAF,CAAQ7K,MAAR,CAAeR,GAAf,EAAoBia,UAApB,CAA/B,CAAJ;AACH;;AACD,WAAOoB,CAAC,CAACC,MAAF,EAAP;AACH,GA5BD;AA6BA;AACJ;AACA;;;AACIb,EAAAA,QAAQ,CAAC3a,SAAT,CAAmB0b,MAAnB,GAA4B,YAAY;AACpC,WAAO,KAAKd,KAAZ;AACH,GAFD;AAGA;AACJ;AACA;;;AACID,EAAAA,QAAQ,CAAC3a,SAAT,CAAmBwb,MAAnB,GAA4B,YAAY;AACpC,QAAID,CAAC,GAAG,IAAR;;AACA,QAAIA,CAAC,CAAChQ,KAAF,CAAQmQ,MAAR,MAAoB,CAACH,CAAC,CAACjQ,IAAF,CAAOoQ,MAAP,EAAzB,EAA0C;AACtCH,MAAAA,CAAC,GAAGA,CAAC,CAACQ,WAAF,EAAJ;AACH;;AACD,QAAIR,CAAC,CAACjQ,IAAF,CAAOoQ,MAAP,MAAmBH,CAAC,CAACjQ,IAAF,CAAOA,IAAP,CAAYoQ,MAAZ,EAAvB,EAA6C;AACzCH,MAAAA,CAAC,GAAGA,CAAC,CAACM,YAAF,EAAJ;AACH;;AACD,QAAIN,CAAC,CAACjQ,IAAF,CAAOoQ,MAAP,MAAmBH,CAAC,CAAChQ,KAAF,CAAQmQ,MAAR,EAAvB,EAAyC;AACrCH,MAAAA,CAAC,GAAGA,CAAC,CAACS,UAAF,EAAJ;AACH;;AACD,WAAOT,CAAP;AACH,GAZD;AAaA;AACJ;AACA;;;AACIZ,EAAAA,QAAQ,CAAC3a,SAAT,CAAmB2b,YAAnB,GAAkC,YAAY;AAC1C,QAAIJ,CAAC,GAAG,KAAKS,UAAL,EAAR;;AACA,QAAIT,CAAC,CAAChQ,KAAF,CAAQD,IAAR,CAAaoQ,MAAb,EAAJ,EAA2B;AACvBH,MAAAA,CAAC,GAAGA,CAAC,CAACR,IAAF,CAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+BQ,CAAC,CAAChQ,KAAF,CAAQsQ,YAAR,EAA/B,CAAJ;AACAN,MAAAA,CAAC,GAAGA,CAAC,CAACQ,WAAF,EAAJ;AACAR,MAAAA,CAAC,GAAGA,CAAC,CAACS,UAAF,EAAJ;AACH;;AACD,WAAOT,CAAP;AACH,GARD;AASA;AACJ;AACA;;;AACIZ,EAAAA,QAAQ,CAAC3a,SAAT,CAAmB8b,aAAnB,GAAmC,YAAY;AAC3C,QAAIP,CAAC,GAAG,KAAKS,UAAL,EAAR;;AACA,QAAIT,CAAC,CAACjQ,IAAF,CAAOA,IAAP,CAAYoQ,MAAZ,EAAJ,EAA0B;AACtBH,MAAAA,CAAC,GAAGA,CAAC,CAACM,YAAF,EAAJ;AACAN,MAAAA,CAAC,GAAGA,CAAC,CAACS,UAAF,EAAJ;AACH;;AACD,WAAOT,CAAP;AACH,GAPD;AAQA;AACJ;AACA;;;AACIZ,EAAAA,QAAQ,CAAC3a,SAAT,CAAmB+b,WAAnB,GAAiC,YAAY;AACzC,QAAIE,EAAE,GAAG,KAAKlB,IAAL,CAAU,IAAV,EAAgB,IAAhB,EAAsBJ,QAAQ,CAACE,GAA/B,EAAoC,IAApC,EAA0C,KAAKtP,KAAL,CAAWD,IAArD,CAAT;AACA,WAAO,KAAKC,KAAL,CAAWwP,IAAX,CAAgB,IAAhB,EAAsB,IAAtB,EAA4B,KAAKH,KAAjC,EAAwCqB,EAAxC,EAA4C,IAA5C,CAAP;AACH,GAHD;AAIA;AACJ;AACA;;;AACItB,EAAAA,QAAQ,CAAC3a,SAAT,CAAmB6b,YAAnB,GAAkC,YAAY;AAC1C,QAAIK,EAAE,GAAG,KAAKnB,IAAL,CAAU,IAAV,EAAgB,IAAhB,EAAsBJ,QAAQ,CAACE,GAA/B,EAAoC,KAAKvP,IAAL,CAAUC,KAA9C,EAAqD,IAArD,CAAT;AACA,WAAO,KAAKD,IAAL,CAAUyP,IAAV,CAAe,IAAf,EAAqB,IAArB,EAA2B,KAAKH,KAAhC,EAAuC,IAAvC,EAA6CsB,EAA7C,CAAP;AACH,GAHD;AAIA;AACJ;AACA;;;AACIvB,EAAAA,QAAQ,CAAC3a,SAAT,CAAmBgc,UAAnB,GAAgC,YAAY;AACxC,QAAI1Q,IAAI,GAAG,KAAKA,IAAL,CAAUyP,IAAV,CAAe,IAAf,EAAqB,IAArB,EAA2B,CAAC,KAAKzP,IAAL,CAAUsP,KAAtC,EAA6C,IAA7C,EAAmD,IAAnD,CAAX;AACA,QAAIrP,KAAK,GAAG,KAAKA,KAAL,CAAWwP,IAAX,CAAgB,IAAhB,EAAsB,IAAtB,EAA4B,CAAC,KAAKxP,KAAL,CAAWqP,KAAxC,EAA+C,IAA/C,EAAqD,IAArD,CAAZ;AACA,WAAO,KAAKG,IAAL,CAAU,IAAV,EAAgB,IAAhB,EAAsB,CAAC,KAAKH,KAA5B,EAAmCtP,IAAnC,EAAyCC,KAAzC,CAAP;AACH,GAJD;AAKA;AACJ;AACA;AACA;AACA;;;AACIoP,EAAAA,QAAQ,CAAC3a,SAAT,CAAmBmc,cAAnB,GAAoC,YAAY;AAC5C,QAAIC,UAAU,GAAG,KAAKC,MAAL,EAAjB;AACA,WAAOzX,IAAI,CAACsC,GAAL,CAAS,GAAT,EAAckV,UAAd,KAA6B,KAAKpB,KAAL,KAAe,CAAnD;AACH,GAHD;;AAIAL,EAAAA,QAAQ,CAAC3a,SAAT,CAAmBqc,MAAnB,GAA4B,YAAY;AACpC,QAAI,KAAKX,MAAL,MAAiB,KAAKpQ,IAAL,CAAUoQ,MAAV,EAArB,EAAyC;AACrC,YAAM,IAAIjY,KAAJ,CAAU,4BAA4B,KAAKvD,GAAjC,GAAuC,GAAvC,GAA6C,KAAKC,KAAlD,GAA0D,GAApE,CAAN;AACH;;AACD,QAAI,KAAKoL,KAAL,CAAWmQ,MAAX,EAAJ,EAAyB;AACrB,YAAM,IAAIjY,KAAJ,CAAU,qBAAqB,KAAKvD,GAA1B,GAAgC,GAAhC,GAAsC,KAAKC,KAA3C,GAAmD,UAA7D,CAAN;AACH;;AACD,QAAIic,UAAU,GAAG,KAAK9Q,IAAL,CAAU+Q,MAAV,EAAjB;;AACA,QAAID,UAAU,KAAK,KAAK7Q,KAAL,CAAW8Q,MAAX,EAAnB,EAAwC;AACpC,YAAM,IAAI5Y,KAAJ,CAAU,qBAAV,CAAN;AACH,KAFD,MAGK;AACD,aAAO2Y,UAAU,IAAI,KAAKV,MAAL,KAAgB,CAAhB,GAAoB,CAAxB,CAAjB;AACH;AACJ,GAdD;;AAeAf,EAAAA,QAAQ,CAACE,GAAT,GAAe,IAAf;AACAF,EAAAA,QAAQ,CAAC2B,KAAT,GAAiB,KAAjB;AACA,SAAO3B,QAAP;AACH,CAnQ6B,EAA9B;AAoQA;AACA;AACA;;;AACA,IAAI4B,aAAa;AAAG;AAAe,YAAY;AAC3C,WAASA,aAAT,GAAyB,CACxB;AACD;AACJ;AACA;AACA;AACA;;;AACIA,EAAAA,aAAa,CAACvc,SAAd,CAAwB+a,IAAxB,GAA+B,UAAU7a,GAAV,EAAeC,KAAf,EAAsBya,KAAtB,EAA6BtP,IAA7B,EAAmCC,KAAnC,EAA0C;AACrE,WAAO,IAAP;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIgR,EAAAA,aAAa,CAACvc,SAAd,CAAwBsb,MAAxB,GAAiC,UAAUpb,GAAV,EAAeC,KAAf,EAAsBga,UAAtB,EAAkC;AAC/D,WAAO,IAAIQ,QAAJ,CAAaza,GAAb,EAAkBC,KAAlB,EAAyB,IAAzB,CAAP;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIoc,EAAAA,aAAa,CAACvc,SAAd,CAAwBU,MAAxB,GAAiC,UAAUR,GAAV,EAAeia,UAAf,EAA2B;AACxD,WAAO,IAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACIoC,EAAAA,aAAa,CAACvc,SAAd,CAAwBgb,KAAxB,GAAgC,YAAY;AACxC,WAAO,CAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACIuB,EAAAA,aAAa,CAACvc,SAAd,CAAwBX,OAAxB,GAAkC,YAAY;AAC1C,WAAO,IAAP;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIkd,EAAAA,aAAa,CAACvc,SAAd,CAAwBib,gBAAxB,GAA2C,UAAUzC,MAAV,EAAkB;AACzD,WAAO,KAAP;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI+D,EAAAA,aAAa,CAACvc,SAAd,CAAwBkb,gBAAxB,GAA2C,UAAU1C,MAAV,EAAkB;AACzD,WAAO,KAAP;AACH,GAFD;;AAGA+D,EAAAA,aAAa,CAACvc,SAAd,CAAwBob,MAAxB,GAAiC,YAAY;AACzC,WAAO,IAAP;AACH,GAFD;;AAGAmB,EAAAA,aAAa,CAACvc,SAAd,CAAwBqb,MAAxB,GAAiC,YAAY;AACzC,WAAO,IAAP;AACH,GAFD;;AAGAkB,EAAAA,aAAa,CAACvc,SAAd,CAAwBqc,MAAxB,GAAiC,YAAY;AACzC,WAAO,CAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACIE,EAAAA,aAAa,CAACvc,SAAd,CAAwB0b,MAAxB,GAAiC,YAAY;AACzC,WAAO,KAAP;AACH,GAFD;;AAGA,SAAOa,aAAP;AACH,CAlFkC,EAAnC;AAmFA;AACA;AACA;AACA;;;AACA,IAAIzB,SAAS;AAAG;AAAe,YAAY;AACvC;AACJ;AACA;AACA;AACI,WAASA,SAAT,CAAmB0B,WAAnB,EAAgCC,KAAhC,EAAuC;AACnC,QAAIA,KAAK,KAAK,KAAK,CAAnB,EAAsB;AAAEA,MAAAA,KAAK,GAAG3B,SAAS,CAACvD,UAAlB;AAA+B;;AACvD,SAAKiF,WAAL,GAAmBA,WAAnB;AACA,SAAKC,KAAL,GAAaA,KAAb;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI3B,EAAAA,SAAS,CAAC9a,SAAV,CAAoBsb,MAApB,GAA6B,UAAUpb,GAAV,EAAeC,KAAf,EAAsB;AAC/C,WAAO,IAAI2a,SAAJ,CAAc,KAAK0B,WAAnB,EAAgC,KAAKC,KAAL,CAClCnB,MADkC,CAC3Bpb,GAD2B,EACtBC,KADsB,EACf,KAAKqc,WADU,EAElCzB,IAFkC,CAE7B,IAF6B,EAEvB,IAFuB,EAEjBJ,QAAQ,CAAC2B,KAFQ,EAED,IAFC,EAEK,IAFL,CAAhC,CAAP;AAGH,GAJD;AAKA;AACJ;AACA;AACA;AACA;AACA;;;AACIxB,EAAAA,SAAS,CAAC9a,SAAV,CAAoBU,MAApB,GAA6B,UAAUR,GAAV,EAAe;AACxC,WAAO,IAAI4a,SAAJ,CAAc,KAAK0B,WAAnB,EAAgC,KAAKC,KAAL,CAClC/b,MADkC,CAC3BR,GAD2B,EACtB,KAAKsc,WADiB,EAElCzB,IAFkC,CAE7B,IAF6B,EAEvB,IAFuB,EAEjBJ,QAAQ,CAAC2B,KAFQ,EAED,IAFC,EAEK,IAFL,CAAhC,CAAP;AAGH,GAJD;AAKA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIxB,EAAAA,SAAS,CAAC9a,SAAV,CAAoBO,GAApB,GAA0B,UAAUL,GAAV,EAAe;AACrC,QAAIwL,GAAJ;AACA,QAAI6J,IAAI,GAAG,KAAKkH,KAAhB;;AACA,WAAO,CAAClH,IAAI,CAAClW,OAAL,EAAR,EAAwB;AACpBqM,MAAAA,GAAG,GAAG,KAAK8Q,WAAL,CAAiBtc,GAAjB,EAAsBqV,IAAI,CAACrV,GAA3B,CAAN;;AACA,UAAIwL,GAAG,KAAK,CAAZ,EAAe;AACX,eAAO6J,IAAI,CAACpV,KAAZ;AACH,OAFD,MAGK,IAAIuL,GAAG,GAAG,CAAV,EAAa;AACd6J,QAAAA,IAAI,GAAGA,IAAI,CAACjK,IAAZ;AACH,OAFI,MAGA,IAAII,GAAG,GAAG,CAAV,EAAa;AACd6J,QAAAA,IAAI,GAAGA,IAAI,CAAChK,KAAZ;AACH;AACJ;;AACD,WAAO,IAAP;AACH,GAhBD;AAiBA;AACJ;AACA;AACA;AACA;;;AACIuP,EAAAA,SAAS,CAAC9a,SAAV,CAAoB0c,iBAApB,GAAwC,UAAUxc,GAAV,EAAe;AACnD,QAAIwL,GAAJ;AAAA,QAAS6J,IAAI,GAAG,KAAKkH,KAArB;AAAA,QAA4BE,WAAW,GAAG,IAA1C;;AACA,WAAO,CAACpH,IAAI,CAAClW,OAAL,EAAR,EAAwB;AACpBqM,MAAAA,GAAG,GAAG,KAAK8Q,WAAL,CAAiBtc,GAAjB,EAAsBqV,IAAI,CAACrV,GAA3B,CAAN;;AACA,UAAIwL,GAAG,KAAK,CAAZ,EAAe;AACX,YAAI,CAAC6J,IAAI,CAACjK,IAAL,CAAUjM,OAAV,EAAL,EAA0B;AACtBkW,UAAAA,IAAI,GAAGA,IAAI,CAACjK,IAAZ;;AACA,iBAAO,CAACiK,IAAI,CAAChK,KAAL,CAAWlM,OAAX,EAAR,EAA8B;AAC1BkW,YAAAA,IAAI,GAAGA,IAAI,CAAChK,KAAZ;AACH;;AACD,iBAAOgK,IAAI,CAACrV,GAAZ;AACH,SAND,MAOK,IAAIyc,WAAJ,EAAiB;AAClB,iBAAOA,WAAW,CAACzc,GAAnB;AACH,SAFI,MAGA;AACD,iBAAO,IAAP,CADC,CACY;AAChB;AACJ,OAdD,MAeK,IAAIwL,GAAG,GAAG,CAAV,EAAa;AACd6J,QAAAA,IAAI,GAAGA,IAAI,CAACjK,IAAZ;AACH,OAFI,MAGA,IAAII,GAAG,GAAG,CAAV,EAAa;AACdiR,QAAAA,WAAW,GAAGpH,IAAd;AACAA,QAAAA,IAAI,GAAGA,IAAI,CAAChK,KAAZ;AACH;AACJ;;AACD,UAAM,IAAI9H,KAAJ,CAAU,uEAAV,CAAN;AACH,GA5BD;AA6BA;AACJ;AACA;;;AACIqX,EAAAA,SAAS,CAAC9a,SAAV,CAAoBX,OAApB,GAA8B,YAAY;AACtC,WAAO,KAAKod,KAAL,CAAWpd,OAAX,EAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACIyb,EAAAA,SAAS,CAAC9a,SAAV,CAAoBgb,KAApB,GAA4B,YAAY;AACpC,WAAO,KAAKyB,KAAL,CAAWzB,KAAX,EAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACIF,EAAAA,SAAS,CAAC9a,SAAV,CAAoBob,MAApB,GAA6B,YAAY;AACrC,WAAO,KAAKqB,KAAL,CAAWrB,MAAX,EAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACIN,EAAAA,SAAS,CAAC9a,SAAV,CAAoBqb,MAApB,GAA6B,YAAY;AACrC,WAAO,KAAKoB,KAAL,CAAWpB,MAAX,EAAP;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIP,EAAAA,SAAS,CAAC9a,SAAV,CAAoBib,gBAApB,GAAuC,UAAUzC,MAAV,EAAkB;AACrD,WAAO,KAAKiE,KAAL,CAAWxB,gBAAX,CAA4BzC,MAA5B,CAAP;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIsC,EAAAA,SAAS,CAAC9a,SAAV,CAAoBkb,gBAApB,GAAuC,UAAU1C,MAAV,EAAkB;AACrD,WAAO,KAAKiE,KAAL,CAAWvB,gBAAX,CAA4B1C,MAA5B,CAAP;AACH,GAFD;AAGA;AACJ;AACA;AACA;;;AACIsC,EAAAA,SAAS,CAAC9a,SAAV,CAAoB4c,WAApB,GAAkC,UAAUC,eAAV,EAA2B;AACzD,WAAO,IAAI5C,iBAAJ,CAAsB,KAAKwC,KAA3B,EAAkC,IAAlC,EAAwC,KAAKD,WAA7C,EAA0D,KAA1D,EAAiEK,eAAjE,CAAP;AACH,GAFD;;AAGA/B,EAAAA,SAAS,CAAC9a,SAAV,CAAoB8c,eAApB,GAAsC,UAAU5c,GAAV,EAAe2c,eAAf,EAAgC;AAClE,WAAO,IAAI5C,iBAAJ,CAAsB,KAAKwC,KAA3B,EAAkCvc,GAAlC,EAAuC,KAAKsc,WAA5C,EAAyD,KAAzD,EAAgEK,eAAhE,CAAP;AACH,GAFD;;AAGA/B,EAAAA,SAAS,CAAC9a,SAAV,CAAoB+c,sBAApB,GAA6C,UAAU7c,GAAV,EAAe2c,eAAf,EAAgC;AACzE,WAAO,IAAI5C,iBAAJ,CAAsB,KAAKwC,KAA3B,EAAkCvc,GAAlC,EAAuC,KAAKsc,WAA5C,EAAyD,IAAzD,EAA+DK,eAA/D,CAAP;AACH,GAFD;;AAGA/B,EAAAA,SAAS,CAAC9a,SAAV,CAAoBgd,kBAApB,GAAyC,UAAUH,eAAV,EAA2B;AAChE,WAAO,IAAI5C,iBAAJ,CAAsB,KAAKwC,KAA3B,EAAkC,IAAlC,EAAwC,KAAKD,WAA7C,EAA0D,IAA1D,EAAgEK,eAAhE,CAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACI/B,EAAAA,SAAS,CAACvD,UAAV,GAAuB,IAAIgF,aAAJ,EAAvB;AACA,SAAOzB,SAAP;AACH,CAhK8B,EAA/B;AAkKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAImC,KAAK,GAAGrY,IAAI,CAACzB,GAAL,CAAS,CAAT,CAAZ;;AACA,IAAI+Z,SAAS;AAAG;AAAe,YAAY;AACvC,WAASA,SAAT,CAAmB7a,MAAnB,EAA2B;AACvB,QAAI8a,QAAQ,GAAG,UAAUC,GAAV,EAAe;AAC1B;AACA,aAAOzV,QAAQ,CAAE/C,IAAI,CAACzB,GAAL,CAASia,GAAT,IAAgBH,KAAlB,EAA0B,EAA1B,CAAf;AACH,KAHD;;AAIA,QAAII,OAAO,GAAG,UAAU/V,IAAV,EAAgB;AAAE,aAAOK,QAAQ,CAAClF,KAAK,CAAC6E,IAAI,GAAG,CAAR,CAAL,CAAgBE,IAAhB,CAAqB,GAArB,CAAD,EAA4B,CAA5B,CAAf;AAAgD,KAAhF;;AACA,SAAKwT,KAAL,GAAamC,QAAQ,CAAC9a,MAAM,GAAG,CAAV,CAArB;AACA,SAAKib,QAAL,GAAgB,KAAKtC,KAAL,GAAa,CAA7B;AACA,QAAIuC,IAAI,GAAGF,OAAO,CAAC,KAAKrC,KAAN,CAAlB;AACA,SAAKwC,KAAL,GAAcnb,MAAM,GAAG,CAAV,GAAekb,IAA5B;AACH;;AACDL,EAAAA,SAAS,CAACld,SAAV,CAAoByd,YAApB,GAAmC,YAAY;AAC3C;AACA,QAAIjD,MAAM,GAAG,EAAE,KAAKgD,KAAL,GAAc,OAAO,KAAKF,QAA5B,CAAb;AACA,SAAKA,QAAL;AACA,WAAO9C,MAAP;AACH,GALD;;AAMA,SAAO0C,SAAP;AACH,CAnB8B,EAA/B;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIQ,aAAa,GAAG,UAAUC,SAAV,EAAqBjS,GAArB,EAA0BkS,KAA1B,EAAiCC,SAAjC,EAA4C;AAC5DF,EAAAA,SAAS,CAAC5X,IAAV,CAAe2F,GAAf;;AACA,MAAIoS,iBAAiB,GAAG,UAAUC,GAAV,EAAeC,IAAf,EAAqB;AACzC,QAAI3b,MAAM,GAAG2b,IAAI,GAAGD,GAApB;AACA,QAAIE,SAAJ;AACA,QAAI/d,GAAJ;;AACA,QAAImC,MAAM,KAAK,CAAf,EAAkB;AACd,aAAO,IAAP;AACH,KAFD,MAGK,IAAIA,MAAM,KAAK,CAAf,EAAkB;AACnB4b,MAAAA,SAAS,GAAGN,SAAS,CAACI,GAAD,CAArB;AACA7d,MAAAA,GAAG,GAAG0d,KAAK,GAAGA,KAAK,CAACK,SAAD,CAAR,GAAsBA,SAAjC;AACA,aAAO,IAAItD,QAAJ,CAAaza,GAAb,EAAkB+d,SAAS,CAAC1I,IAA5B,EAAkCoF,QAAQ,CAAC2B,KAA3C,EAAkD,IAAlD,EAAwD,IAAxD,CAAP;AACH,KAJI,MAKA;AACD;AACA,UAAI4B,MAAM,GAAGvW,QAAQ,CAAEtF,MAAM,GAAG,CAAX,EAAe,EAAf,CAAR,GAA6B0b,GAA1C;AACA,UAAIzS,IAAI,GAAGwS,iBAAiB,CAACC,GAAD,EAAMG,MAAN,CAA5B;AACA,UAAI3S,KAAK,GAAGuS,iBAAiB,CAACI,MAAM,GAAG,CAAV,EAAaF,IAAb,CAA7B;AACAC,MAAAA,SAAS,GAAGN,SAAS,CAACO,MAAD,CAArB;AACAhe,MAAAA,GAAG,GAAG0d,KAAK,GAAGA,KAAK,CAACK,SAAD,CAAR,GAAsBA,SAAjC;AACA,aAAO,IAAItD,QAAJ,CAAaza,GAAb,EAAkB+d,SAAS,CAAC1I,IAA5B,EAAkCoF,QAAQ,CAAC2B,KAA3C,EAAkDhR,IAAlD,EAAwDC,KAAxD,CAAP;AACH;AACJ,GArBD;;AAsBA,MAAI4S,gBAAgB,GAAG,UAAUC,MAAV,EAAkB;AACrC,QAAI7I,IAAI,GAAG,IAAX;AACA,QAAI8I,IAAI,GAAG,IAAX;AACA,QAAI9F,KAAK,GAAGoF,SAAS,CAACtb,MAAtB;;AACA,QAAIic,YAAY,GAAG,UAAUC,SAAV,EAAqB3D,KAArB,EAA4B;AAC3C,UAAImD,GAAG,GAAGxF,KAAK,GAAGgG,SAAlB;AACA,UAAIP,IAAI,GAAGzF,KAAX;AACAA,MAAAA,KAAK,IAAIgG,SAAT;AACA,UAAIC,SAAS,GAAGV,iBAAiB,CAACC,GAAG,GAAG,CAAP,EAAUC,IAAV,CAAjC;AACA,UAAIC,SAAS,GAAGN,SAAS,CAACI,GAAD,CAAzB;AACA,UAAI7d,GAAG,GAAG0d,KAAK,GAAGA,KAAK,CAACK,SAAD,CAAR,GAAsBA,SAArC;AACAQ,MAAAA,aAAa,CAAC,IAAI9D,QAAJ,CAAaza,GAAb,EAAkB+d,SAAS,CAAC1I,IAA5B,EAAkCqF,KAAlC,EAAyC,IAAzC,EAA+C4D,SAA/C,CAAD,CAAb;AACH,KARD;;AASA,QAAIC,aAAa,GAAG,UAAUC,OAAV,EAAmB;AACnC,UAAInJ,IAAJ,EAAU;AACNA,QAAAA,IAAI,CAACjK,IAAL,GAAYoT,OAAZ;AACAnJ,QAAAA,IAAI,GAAGmJ,OAAP;AACH,OAHD,MAIK;AACDL,QAAAA,IAAI,GAAGK,OAAP;AACAnJ,QAAAA,IAAI,GAAGmJ,OAAP;AACH;AACJ,KATD;;AAUA,SAAK,IAAInc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6b,MAAM,CAACpD,KAA3B,EAAkC,EAAEzY,CAApC,EAAuC;AACnC,UAAIoc,KAAK,GAAGP,MAAM,CAACX,YAAP,EAAZ,CADmC,CAEnC;;AACA,UAAIc,SAAS,GAAG3Z,IAAI,CAACsC,GAAL,CAAS,CAAT,EAAYkX,MAAM,CAACpD,KAAP,IAAgBzY,CAAC,GAAG,CAApB,CAAZ,CAAhB;;AACA,UAAIoc,KAAJ,EAAW;AACPL,QAAAA,YAAY,CAACC,SAAD,EAAY5D,QAAQ,CAAC2B,KAArB,CAAZ;AACH,OAFD,MAGK;AACD;AACAgC,QAAAA,YAAY,CAACC,SAAD,EAAY5D,QAAQ,CAAC2B,KAArB,CAAZ;AACAgC,QAAAA,YAAY,CAACC,SAAD,EAAY5D,QAAQ,CAACE,GAArB,CAAZ;AACH;AACJ;;AACD,WAAOwD,IAAP;AACH,GArCD;;AAsCA,MAAID,MAAM,GAAG,IAAIlB,SAAJ,CAAcS,SAAS,CAACtb,MAAxB,CAAb;AACA,MAAIgc,IAAI,GAAGF,gBAAgB,CAACC,MAAD,CAA3B,CA/D4D,CAgE5D;;AACA,SAAO,IAAItD,SAAJ,CAAc+C,SAAS,IAAInS,GAA3B,EAAgC2S,IAAhC,CAAP;AACH,CAlED;AAoEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIO,gBAAJ;;AACA,IAAIC,cAAc,GAAG,EAArB;;AACA,IAAIC,QAAQ;AAAG;AAAe,YAAY;AACtC,WAASA,QAAT,CAAkBC,QAAlB,EAA4BC,SAA5B,EAAuC;AACnC,SAAKD,QAAL,GAAgBA,QAAhB;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACH;;AACD3S,EAAAA,MAAM,CAACC,cAAP,CAAsBwS,QAAtB,EAAgC,SAAhC,EAA2C;AACvC;AACR;AACA;AACQve,IAAAA,GAAG,EAAE,YAAY;AACbrC,MAAAA,MAAM,CAAC2gB,cAAc,IAAI7E,cAAnB,EAAmC,qCAAnC,CAAN;AACA4E,MAAAA,gBAAgB,GACZA,gBAAgB,IACZ,IAAIE,QAAJ,CAAa;AAAE,qBAAaD;AAAf,OAAb,EAA8C;AAAE,qBAAa7E;AAAf,OAA9C,CAFR;AAGA,aAAO4E,gBAAP;AACH,KAVsC;AAWvCrS,IAAAA,UAAU,EAAE,KAX2B;AAYvCC,IAAAA,YAAY,EAAE;AAZyB,GAA3C;;AAcAsS,EAAAA,QAAQ,CAAC9e,SAAT,CAAmBO,GAAnB,GAAyB,UAAU0e,QAAV,EAAoB;AACzC,QAAIC,SAAS,GAAGrgB,OAAO,CAAC,KAAKkgB,QAAN,EAAgBE,QAAhB,CAAvB;;AACA,QAAI,CAACC,SAAL,EAAgB;AACZ,YAAM,IAAIzb,KAAJ,CAAU,0BAA0Bwb,QAApC,CAAN;AACH;;AACD,QAAIC,SAAS,YAAYpE,SAAzB,EAAoC;AAChC,aAAOoE,SAAP;AACH,KAFD,MAGK;AACD;AACA;AACA,aAAO,IAAP;AACH;AACJ,GAbD;;AAcAJ,EAAAA,QAAQ,CAAC9e,SAAT,CAAmBmf,QAAnB,GAA8B,UAAUC,eAAV,EAA2B;AACrD,WAAOnhB,QAAQ,CAAC,KAAK+gB,SAAN,EAAiBI,eAAe,CAACxe,QAAhB,EAAjB,CAAf;AACH,GAFD;;AAGAke,EAAAA,QAAQ,CAAC9e,SAAT,CAAmBqf,QAAnB,GAA8B,UAAUD,eAAV,EAA2BE,gBAA3B,EAA6C;AACvEphB,IAAAA,MAAM,CAACkhB,eAAe,KAAKzI,SAArB,EAAgC,qEAAhC,CAAN;AACA,QAAIgH,SAAS,GAAG,EAAhB;AACA,QAAI4B,eAAe,GAAG,KAAtB;AACA,QAAIC,IAAI,GAAGF,gBAAgB,CAAC1C,WAAjB,CAA6BtH,SAAS,CAACE,IAAvC,CAAX;AACA,QAAI5F,IAAI,GAAG4P,IAAI,CAACjF,OAAL,EAAX;;AACA,WAAO3K,IAAP,EAAa;AACT2P,MAAAA,eAAe,GACXA,eAAe,IAAIH,eAAe,CAAC7I,WAAhB,CAA4B3G,IAAI,CAAC2F,IAAjC,CADvB;AAEAoI,MAAAA,SAAS,CAAC7X,IAAV,CAAe8J,IAAf;AACAA,MAAAA,IAAI,GAAG4P,IAAI,CAACjF,OAAL,EAAP;AACH;;AACD,QAAIkF,QAAJ;;AACA,QAAIF,eAAJ,EAAqB;AACjBE,MAAAA,QAAQ,GAAG/B,aAAa,CAACC,SAAD,EAAYyB,eAAe,CAAC1J,UAAhB,EAAZ,CAAxB;AACH,KAFD,MAGK;AACD+J,MAAAA,QAAQ,GAAGZ,cAAX;AACH;;AACD,QAAIa,SAAS,GAAGN,eAAe,CAACxe,QAAhB,EAAhB;;AACA,QAAI+e,WAAW,GAAGhiB,QAAQ,CAAC,EAAD,EAAK,KAAKqhB,SAAV,CAA1B;;AACAW,IAAAA,WAAW,CAACD,SAAD,CAAX,GAAyBN,eAAzB;;AACA,QAAIQ,UAAU,GAAGjiB,QAAQ,CAAC,EAAD,EAAK,KAAKohB,QAAV,CAAzB;;AACAa,IAAAA,UAAU,CAACF,SAAD,CAAV,GAAwBD,QAAxB;AACA,WAAO,IAAIX,QAAJ,CAAac,UAAb,EAAyBD,WAAzB,CAAP;AACH,GAzBD;AA0BA;AACJ;AACA;;;AACIb,EAAAA,QAAQ,CAAC9e,SAAT,CAAmB6f,YAAnB,GAAkC,UAAU5B,SAAV,EAAqBqB,gBAArB,EAAuC;AACrE,QAAIQ,KAAK,GAAG,IAAZ;;AACA,QAAIF,UAAU,GAAG9gB,GAAG,CAAC,KAAKigB,QAAN,EAAgB,UAAUgB,eAAV,EAA2BL,SAA3B,EAAsC;AACtE,UAAInH,KAAK,GAAG1Z,OAAO,CAACihB,KAAK,CAACd,SAAP,EAAkBU,SAAlB,CAAnB;AACAxhB,MAAAA,MAAM,CAACqa,KAAD,EAAQ,sCAAsCmH,SAA9C,CAAN;;AACA,UAAIK,eAAe,KAAKlB,cAAxB,EAAwC;AACpC;AACA,YAAItG,KAAK,CAAChC,WAAN,CAAkB0H,SAAS,CAAC1I,IAA5B,CAAJ,EAAuC;AACnC;AACA,cAAIoI,SAAS,GAAG,EAAhB;AACA,cAAI6B,IAAI,GAAGF,gBAAgB,CAAC1C,WAAjB,CAA6BtH,SAAS,CAACE,IAAvC,CAAX;AACA,cAAI5F,IAAI,GAAG4P,IAAI,CAACjF,OAAL,EAAX;;AACA,iBAAO3K,IAAP,EAAa;AACT,gBAAIA,IAAI,CAACjP,IAAL,KAAcsd,SAAS,CAACtd,IAA5B,EAAkC;AAC9Bgd,cAAAA,SAAS,CAAC7X,IAAV,CAAe8J,IAAf;AACH;;AACDA,YAAAA,IAAI,GAAG4P,IAAI,CAACjF,OAAL,EAAP;AACH;;AACDoD,UAAAA,SAAS,CAAC7X,IAAV,CAAemY,SAAf;AACA,iBAAOP,aAAa,CAACC,SAAD,EAAYpF,KAAK,CAAC7C,UAAN,EAAZ,CAApB;AACH,SAbD,MAcK;AACD;AACA,iBAAOmJ,cAAP;AACH;AACJ,OApBD,MAqBK;AACD,YAAImB,YAAY,GAAGV,gBAAgB,CAAC/e,GAAjB,CAAqB0d,SAAS,CAACtd,IAA/B,CAAnB;AACA,YAAIsf,WAAW,GAAGF,eAAlB;;AACA,YAAIC,YAAJ,EAAkB;AACdC,UAAAA,WAAW,GAAGA,WAAW,CAACvf,MAAZ,CAAmB,IAAI4U,SAAJ,CAAc2I,SAAS,CAACtd,IAAxB,EAA8Bqf,YAA9B,CAAnB,CAAd;AACH;;AACD,eAAOC,WAAW,CAAC3E,MAAZ,CAAmB2C,SAAnB,EAA8BA,SAAS,CAAC1I,IAAxC,CAAP;AACH;AACJ,KAhCmB,CAApB;AAiCA,WAAO,IAAIuJ,QAAJ,CAAac,UAAb,EAAyB,KAAKZ,SAA9B,CAAP;AACH,GApCD;AAqCA;AACJ;AACA;;;AACIF,EAAAA,QAAQ,CAAC9e,SAAT,CAAmBkgB,iBAAnB,GAAuC,UAAUjC,SAAV,EAAqBqB,gBAArB,EAAuC;AAC1E,QAAIM,UAAU,GAAG9gB,GAAG,CAAC,KAAKigB,QAAN,EAAgB,UAAUgB,eAAV,EAA2B;AAC3D,UAAIA,eAAe,KAAKlB,cAAxB,EAAwC;AACpC;AACA,eAAOkB,eAAP;AACH,OAHD,MAIK;AACD,YAAIC,YAAY,GAAGV,gBAAgB,CAAC/e,GAAjB,CAAqB0d,SAAS,CAACtd,IAA/B,CAAnB;;AACA,YAAIqf,YAAJ,EAAkB;AACd,iBAAOD,eAAe,CAACrf,MAAhB,CAAuB,IAAI4U,SAAJ,CAAc2I,SAAS,CAACtd,IAAxB,EAA8Bqf,YAA9B,CAAvB,CAAP;AACH,SAFD,MAGK;AACD;AACA,iBAAOD,eAAP;AACH;AACJ;AACJ,KAfmB,CAApB;AAgBA,WAAO,IAAIjB,QAAJ,CAAac,UAAb,EAAyB,KAAKZ,SAA9B,CAAP;AACH,GAlBD;;AAmBA,SAAOF,QAAP;AACH,CA7H6B,EAA9B;AA+HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASqB,oBAAT,CAA8B7U,IAA9B,EAAoCC,KAApC,EAA2C;AACvC,SAAOrG,WAAW,CAACoG,IAAI,CAAC3K,IAAN,EAAY4K,KAAK,CAAC5K,IAAlB,CAAlB;AACH;;AACD,SAASyf,eAAT,CAAyB9U,IAAzB,EAA+BC,KAA/B,EAAsC;AAClC,SAAOrG,WAAW,CAACoG,IAAD,EAAOC,KAAP,CAAlB;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIgM,UAAJ;AACA;AACA;AACA;AACA;AACA;;AACA,IAAI8I,YAAY;AAAG;AAAe,YAAY;AAC1C;AACJ;AACA;AACA;AACI,WAASA,YAAT,CAAsBC,SAAtB,EAAiChJ,aAAjC,EAAgDiJ,SAAhD,EAA2D;AACvD,SAAKD,SAAL,GAAiBA,SAAjB;AACA,SAAKhJ,aAAL,GAAqBA,aAArB;AACA,SAAKiJ,SAAL,GAAiBA,SAAjB;AACA,SAAK/I,SAAL,GAAiB,IAAjB;AACA;AACR;AACA;AACA;AACA;;AACQ,QAAI,KAAKF,aAAT,EAAwB;AACpBP,MAAAA,oBAAoB,CAAC,KAAKO,aAAN,CAApB;AACH;;AACD,QAAI,KAAKgJ,SAAL,CAAejhB,OAAf,EAAJ,EAA8B;AAC1BnB,MAAAA,MAAM,CAAC,CAAC,KAAKoZ,aAAN,IAAuB,KAAKA,aAAL,CAAmBjY,OAAnB,EAAxB,EAAsD,sCAAtD,CAAN;AACH;AACJ;;AACDgN,EAAAA,MAAM,CAACC,cAAP,CAAsB+T,YAAtB,EAAoC,YAApC,EAAkD;AAC9C9f,IAAAA,GAAG,EAAE,YAAY;AACb,aAAQgX,UAAU,KACbA,UAAU,GAAG,IAAI8I,YAAJ,CAAiB,IAAIvF,SAAJ,CAAcsF,eAAd,CAAjB,EAAiD,IAAjD,EAAuDtB,QAAQ,CAAC0B,OAAhE,CADA,CAAlB;AAEH,KAJ6C;AAK9CjU,IAAAA,UAAU,EAAE,KALkC;AAM9CC,IAAAA,YAAY,EAAE;AANgC,GAAlD;AAQA;;AACA6T,EAAAA,YAAY,CAACrgB,SAAb,CAAuBiX,UAAvB,GAAoC,YAAY;AAC5C,WAAO,KAAP;AACH,GAFD;AAGA;;;AACAoJ,EAAAA,YAAY,CAACrgB,SAAb,CAAuBkX,WAAvB,GAAqC,YAAY;AAC7C,WAAO,KAAKI,aAAL,IAAsBC,UAA7B;AACH,GAFD;AAGA;;;AACA8I,EAAAA,YAAY,CAACrgB,SAAb,CAAuByX,cAAvB,GAAwC,UAAUC,eAAV,EAA2B;AAC/D,QAAI,KAAK4I,SAAL,CAAejhB,OAAf,EAAJ,EAA8B;AAC1B;AACA,aAAO,IAAP;AACH,KAHD,MAIK;AACD,aAAO,IAAIghB,YAAJ,CAAiB,KAAKC,SAAtB,EAAiC5I,eAAjC,EAAkD,KAAK6I,SAAvD,CAAP;AACH;AACJ,GARD;AASA;;;AACAF,EAAAA,YAAY,CAACrgB,SAAb,CAAuB2X,iBAAvB,GAA2C,UAAUC,SAAV,EAAqB;AAC5D;AACA,QAAIA,SAAS,KAAK,WAAlB,EAA+B;AAC3B,aAAO,KAAKV,WAAL,EAAP;AACH,KAFD,MAGK;AACD,UAAIzK,KAAK,GAAG,KAAK6T,SAAL,CAAe/f,GAAf,CAAmBqX,SAAnB,CAAZ;AACA,aAAOnL,KAAK,KAAK,IAAV,GAAiB8K,UAAjB,GAA8B9K,KAArC;AACH;AACJ,GATD;AAUA;;;AACA4T,EAAAA,YAAY,CAACrgB,SAAb,CAAuB6X,QAAvB,GAAkC,UAAUrP,IAAV,EAAgB;AAC9C,QAAI4P,KAAK,GAAGpO,YAAY,CAACxB,IAAD,CAAxB;;AACA,QAAI4P,KAAK,KAAK,IAAd,EAAoB;AAChB,aAAO,IAAP;AACH;;AACD,WAAO,KAAKT,iBAAL,CAAuBS,KAAvB,EAA8BP,QAA9B,CAAuC3N,YAAY,CAAC1B,IAAD,CAAnD,CAAP;AACH,GAND;AAOA;;;AACA6X,EAAAA,YAAY,CAACrgB,SAAb,CAAuB8X,QAAvB,GAAkC,UAAUF,SAAV,EAAqB;AACnD,WAAO,KAAK0I,SAAL,CAAe/f,GAAf,CAAmBqX,SAAnB,MAAkC,IAAzC;AACH,GAFD;AAGA;;;AACAyI,EAAAA,YAAY,CAACrgB,SAAb,CAAuBiY,oBAAvB,GAA8C,UAAUL,SAAV,EAAqBM,YAArB,EAAmC;AAC7Eha,IAAAA,MAAM,CAACga,YAAD,EAAe,4CAAf,CAAN;;AACA,QAAIN,SAAS,KAAK,WAAlB,EAA+B;AAC3B,aAAO,KAAKH,cAAL,CAAoBS,YAApB,CAAP;AACH,KAFD,MAGK;AACD,UAAI+F,SAAS,GAAG,IAAI3I,SAAJ,CAAcsC,SAAd,EAAyBM,YAAzB,CAAhB;AACA,UAAI+H,WAAW,GAAG,KAAK,CAAvB;AAAA,UAA0BQ,WAAW,GAAG,KAAK,CAA7C;;AACA,UAAIvI,YAAY,CAAC7Y,OAAb,EAAJ,EAA4B;AACxB4gB,QAAAA,WAAW,GAAG,KAAKK,SAAL,CAAe5f,MAAf,CAAsBkX,SAAtB,CAAd;AACA6I,QAAAA,WAAW,GAAG,KAAKF,SAAL,CAAeL,iBAAf,CAAiCjC,SAAjC,EAA4C,KAAKqC,SAAjD,CAAd;AACH,OAHD,MAIK;AACDL,QAAAA,WAAW,GAAG,KAAKK,SAAL,CAAehF,MAAf,CAAsB1D,SAAtB,EAAiCM,YAAjC,CAAd;AACAuI,QAAAA,WAAW,GAAG,KAAKF,SAAL,CAAeV,YAAf,CAA4B5B,SAA5B,EAAuC,KAAKqC,SAA5C,CAAd;AACH;;AACD,UAAII,WAAW,GAAGT,WAAW,CAAC5gB,OAAZ,KACZkY,UADY,GAEZ,KAAKD,aAFX;AAGA,aAAO,IAAI+I,YAAJ,CAAiBJ,WAAjB,EAA8BS,WAA9B,EAA2CD,WAA3C,CAAP;AACH;AACJ,GArBD;AAsBA;;;AACAJ,EAAAA,YAAY,CAACrgB,SAAb,CAAuBmY,WAAvB,GAAqC,UAAU3P,IAAV,EAAgB0P,YAAhB,EAA8B;AAC/D,QAAIE,KAAK,GAAGpO,YAAY,CAACxB,IAAD,CAAxB;;AACA,QAAI4P,KAAK,KAAK,IAAd,EAAoB;AAChB,aAAOF,YAAP;AACH,KAFD,MAGK;AACDha,MAAAA,MAAM,CAAC8L,YAAY,CAACxB,IAAD,CAAZ,KAAuB,WAAvB,IAAsCyB,aAAa,CAACzB,IAAD,CAAb,KAAwB,CAA/D,EAAkE,4CAAlE,CAAN;AACA,UAAImY,iBAAiB,GAAG,KAAKhJ,iBAAL,CAAuBS,KAAvB,EAA8BD,WAA9B,CAA0CjO,YAAY,CAAC1B,IAAD,CAAtD,EAA8D0P,YAA9D,CAAxB;AACA,aAAO,KAAKD,oBAAL,CAA0BG,KAA1B,EAAiCuI,iBAAjC,CAAP;AACH;AACJ,GAVD;AAWA;;;AACAN,EAAAA,YAAY,CAACrgB,SAAb,CAAuBX,OAAvB,GAAiC,YAAY;AACzC,WAAO,KAAKihB,SAAL,CAAejhB,OAAf,EAAP;AACH,GAFD;AAGA;;;AACAghB,EAAAA,YAAY,CAACrgB,SAAb,CAAuBqY,WAAvB,GAAqC,YAAY;AAC7C,WAAO,KAAKiI,SAAL,CAAetF,KAAf,EAAP;AACH,GAFD;AAGA;;;AACAqF,EAAAA,YAAY,CAACrgB,SAAb,CAAuBsW,GAAvB,GAA6B,UAAUmC,YAAV,EAAwB;AACjD,QAAI,KAAKpZ,OAAL,EAAJ,EAAoB;AAChB,aAAO,IAAP;AACH;;AACD,QAAIqG,GAAG,GAAG,EAAV;AACA,QAAIkb,OAAO,GAAG,CAAd;AAAA,QAAiBvF,MAAM,GAAG,CAA1B;AAAA,QAA6BwF,cAAc,GAAG,IAA9C;AACA,SAAKvI,YAAL,CAAkB0B,cAAlB,EAAkC,UAAU9Z,GAAV,EAAe8X,SAAf,EAA0B;AACxDtS,MAAAA,GAAG,CAACxF,GAAD,CAAH,GAAW8X,SAAS,CAAC1B,GAAV,CAAcmC,YAAd,CAAX;AACAmI,MAAAA,OAAO;;AACP,UAAIC,cAAc,IAAIR,YAAY,CAAC3X,eAAb,CAA6BX,IAA7B,CAAkC7H,GAAlC,CAAtB,EAA8D;AAC1Dmb,QAAAA,MAAM,GAAGzW,IAAI,CAACuH,GAAL,CAASkP,MAAT,EAAiBpX,MAAM,CAAC/D,GAAD,CAAvB,CAAT;AACH,OAFD,MAGK;AACD2gB,QAAAA,cAAc,GAAG,KAAjB;AACH;AACJ,KATD;;AAUA,QAAI,CAACpI,YAAD,IAAiBoI,cAAjB,IAAmCxF,MAAM,GAAG,IAAIuF,OAApD,EAA6D;AACzD;AACA,UAAIE,KAAK,GAAG,EAAZ,CAFyD,CAGzD;;AACA,WAAK,IAAI5gB,GAAT,IAAgBwF,GAAhB,EAAqB;AACjBob,QAAAA,KAAK,CAAC5gB,GAAD,CAAL,GAAawF,GAAG,CAACxF,GAAD,CAAhB;AACH;;AACD,aAAO4gB,KAAP;AACH,KARD,MASK;AACD,UAAIrI,YAAY,IAAI,CAAC,KAAKvB,WAAL,GAAmB7X,OAAnB,EAArB,EAAmD;AAC/CqG,QAAAA,GAAG,CAAC,WAAD,CAAH,GAAmB,KAAKwR,WAAL,GAAmBZ,GAAnB,EAAnB;AACH;;AACD,aAAO5Q,GAAP;AACH;AACJ,GA/BD;AAgCA;;;AACA2a,EAAAA,YAAY,CAACrgB,SAAb,CAAuB2Y,IAAvB,GAA8B,YAAY;AACtC,QAAI,KAAKnB,SAAL,KAAmB,IAAvB,EAA6B;AACzB,UAAIuJ,QAAQ,GAAG,EAAf;;AACA,UAAI,CAAC,KAAK7J,WAAL,GAAmB7X,OAAnB,EAAL,EAAmC;AAC/B0hB,QAAAA,QAAQ,IACJ,cACIjK,gBAAgB,CAAC,KAAKI,WAAL,GAAmBZ,GAAnB,EAAD,CADpB,GAEI,GAHR;AAIH;;AACD,WAAKgC,YAAL,CAAkB0B,cAAlB,EAAkC,UAAU9Z,GAAV,EAAe8X,SAAf,EAA0B;AACxD,YAAIgJ,SAAS,GAAGhJ,SAAS,CAACW,IAAV,EAAhB;;AACA,YAAIqI,SAAS,KAAK,EAAlB,EAAsB;AAClBD,UAAAA,QAAQ,IAAI,MAAM7gB,GAAN,GAAY,GAAZ,GAAkB8gB,SAA9B;AACH;AACJ,OALD;AAMA,WAAKxJ,SAAL,GAAiBuJ,QAAQ,KAAK,EAAb,GAAkB,EAAlB,GAAuBrf,IAAI,CAACqf,QAAD,CAA5C;AACH;;AACD,WAAO,KAAKvJ,SAAZ;AACH,GAlBD;AAmBA;;;AACA6I,EAAAA,YAAY,CAACrgB,SAAb,CAAuB+X,uBAAvB,GAAiD,UAAUH,SAAV,EAAqBI,SAArB,EAAgCO,KAAhC,EAAuC;AACpF,QAAI0I,GAAG,GAAG,KAAKC,aAAL,CAAmB3I,KAAnB,CAAV;;AACA,QAAI0I,GAAJ,EAAS;AACL,UAAI7L,WAAW,GAAG6L,GAAG,CAACvE,iBAAJ,CAAsB,IAAIpH,SAAJ,CAAcsC,SAAd,EAAyBI,SAAzB,CAAtB,CAAlB;AACA,aAAO5C,WAAW,GAAGA,WAAW,CAACzU,IAAf,GAAsB,IAAxC;AACH,KAHD,MAIK;AACD,aAAO,KAAK2f,SAAL,CAAe5D,iBAAf,CAAiC9E,SAAjC,CAAP;AACH;AACJ,GATD;;AAUAyI,EAAAA,YAAY,CAACrgB,SAAb,CAAuBmhB,iBAAvB,GAA2C,UAAU/B,eAAV,EAA2B;AAClE,QAAI6B,GAAG,GAAG,KAAKC,aAAL,CAAmB9B,eAAnB,CAAV;;AACA,QAAI6B,GAAJ,EAAS;AACL,UAAI7F,MAAM,GAAG6F,GAAG,CAAC7F,MAAJ,EAAb;AACA,aAAOA,MAAM,IAAIA,MAAM,CAACza,IAAxB;AACH,KAHD,MAIK;AACD,aAAO,KAAK2f,SAAL,CAAelF,MAAf,EAAP;AACH;AACJ,GATD;;AAUAiF,EAAAA,YAAY,CAACrgB,SAAb,CAAuBohB,aAAvB,GAAuC,UAAUhC,eAAV,EAA2B;AAC9D,QAAIhE,MAAM,GAAG,KAAK+F,iBAAL,CAAuB/B,eAAvB,CAAb;;AACA,QAAIhE,MAAJ,EAAY;AACR,aAAO,IAAI9F,SAAJ,CAAc8F,MAAd,EAAsB,KAAKkF,SAAL,CAAe/f,GAAf,CAAmB6a,MAAnB,CAAtB,CAAP;AACH,KAFD,MAGK;AACD,aAAO,IAAP;AACH;AACJ,GARD;AASA;AACJ;AACA;;;AACIiF,EAAAA,YAAY,CAACrgB,SAAb,CAAuBqhB,gBAAvB,GAA0C,UAAUjC,eAAV,EAA2B;AACjE,QAAI6B,GAAG,GAAG,KAAKC,aAAL,CAAmB9B,eAAnB,CAAV;;AACA,QAAI6B,GAAJ,EAAS;AACL,UAAI5F,MAAM,GAAG4F,GAAG,CAAC5F,MAAJ,EAAb;AACA,aAAOA,MAAM,IAAIA,MAAM,CAAC1a,IAAxB;AACH,KAHD,MAIK;AACD,aAAO,KAAK2f,SAAL,CAAejF,MAAf,EAAP;AACH;AACJ,GATD;;AAUAgF,EAAAA,YAAY,CAACrgB,SAAb,CAAuBshB,YAAvB,GAAsC,UAAUlC,eAAV,EAA2B;AAC7D,QAAI/D,MAAM,GAAG,KAAKgG,gBAAL,CAAsBjC,eAAtB,CAAb;;AACA,QAAI/D,MAAJ,EAAY;AACR,aAAO,IAAI/F,SAAJ,CAAc+F,MAAd,EAAsB,KAAKiF,SAAL,CAAe/f,GAAf,CAAmB8a,MAAnB,CAAtB,CAAP;AACH,KAFD,MAGK;AACD,aAAO,IAAP;AACH;AACJ,GARD;AASA;AACJ;AACA;;;AACIgF,EAAAA,YAAY,CAACrgB,SAAb,CAAuBsY,YAAvB,GAAsC,UAAUC,KAAV,EAAiBC,MAAjB,EAAyB;AAC3D,QAAIyI,GAAG,GAAG,KAAKC,aAAL,CAAmB3I,KAAnB,CAAV;;AACA,QAAI0I,GAAJ,EAAS;AACL,aAAOA,GAAG,CAAChG,gBAAJ,CAAqB,UAAUsG,WAAV,EAAuB;AAC/C,eAAO/I,MAAM,CAAC+I,WAAW,CAAC5gB,IAAb,EAAmB4gB,WAAW,CAAChM,IAA/B,CAAb;AACH,OAFM,CAAP;AAGH,KAJD,MAKK;AACD,aAAO,KAAK+K,SAAL,CAAerF,gBAAf,CAAgCzC,MAAhC,CAAP;AACH;AACJ,GAVD;;AAWA6H,EAAAA,YAAY,CAACrgB,SAAb,CAAuB4c,WAAvB,GAAqC,UAAUwC,eAAV,EAA2B;AAC5D,WAAO,KAAKtC,eAAL,CAAqBsC,eAAe,CAACnJ,OAAhB,EAArB,EAAgDmJ,eAAhD,CAAP;AACH,GAFD;;AAGAiB,EAAAA,YAAY,CAACrgB,SAAb,CAAuB8c,eAAvB,GAAyC,UAAU0E,SAAV,EAAqBpC,eAArB,EAAsC;AAC3E,QAAI6B,GAAG,GAAG,KAAKC,aAAL,CAAmB9B,eAAnB,CAAV;;AACA,QAAI6B,GAAJ,EAAS;AACL,aAAOA,GAAG,CAACnE,eAAJ,CAAoB0E,SAApB,EAA+B,UAAUthB,GAAV,EAAe;AAAE,eAAOA,GAAP;AAAa,OAA7D,CAAP;AACH,KAFD,MAGK;AACD,UAAIuhB,QAAQ,GAAG,KAAKnB,SAAL,CAAexD,eAAf,CAA+B0E,SAAS,CAAC7gB,IAAzC,EAA+C2U,SAAS,CAACE,IAAzD,CAAf;AACA,UAAI5F,IAAI,GAAG6R,QAAQ,CAAC/G,IAAT,EAAX;;AACA,aAAO9K,IAAI,IAAI,IAAR,IAAgBwP,eAAe,CAACzJ,OAAhB,CAAwB/F,IAAxB,EAA8B4R,SAA9B,IAA2C,CAAlE,EAAqE;AACjEC,QAAAA,QAAQ,CAAClH,OAAT;AACA3K,QAAAA,IAAI,GAAG6R,QAAQ,CAAC/G,IAAT,EAAP;AACH;;AACD,aAAO+G,QAAP;AACH;AACJ,GAdD;;AAeApB,EAAAA,YAAY,CAACrgB,SAAb,CAAuBgd,kBAAvB,GAA4C,UAAUoC,eAAV,EAA2B;AACnE,WAAO,KAAKrC,sBAAL,CAA4BqC,eAAe,CAAC5I,OAAhB,EAA5B,EAAuD4I,eAAvD,CAAP;AACH,GAFD;;AAGAiB,EAAAA,YAAY,CAACrgB,SAAb,CAAuB+c,sBAAvB,GAAgD,UAAU2E,OAAV,EAAmBtC,eAAnB,EAAoC;AAChF,QAAI6B,GAAG,GAAG,KAAKC,aAAL,CAAmB9B,eAAnB,CAAV;;AACA,QAAI6B,GAAJ,EAAS;AACL,aAAOA,GAAG,CAAClE,sBAAJ,CAA2B2E,OAA3B,EAAoC,UAAUxhB,GAAV,EAAe;AACtD,eAAOA,GAAP;AACH,OAFM,CAAP;AAGH,KAJD,MAKK;AACD,UAAIuhB,QAAQ,GAAG,KAAKnB,SAAL,CAAevD,sBAAf,CAAsC2E,OAAO,CAAC/gB,IAA9C,EAAoD2U,SAAS,CAACE,IAA9D,CAAf;AACA,UAAI5F,IAAI,GAAG6R,QAAQ,CAAC/G,IAAT,EAAX;;AACA,aAAO9K,IAAI,IAAI,IAAR,IAAgBwP,eAAe,CAACzJ,OAAhB,CAAwB/F,IAAxB,EAA8B8R,OAA9B,IAAyC,CAAhE,EAAmE;AAC/DD,QAAAA,QAAQ,CAAClH,OAAT;AACA3K,QAAAA,IAAI,GAAG6R,QAAQ,CAAC/G,IAAT,EAAP;AACH;;AACD,aAAO+G,QAAP;AACH;AACJ,GAhBD;AAiBA;AACJ;AACA;;;AACIpB,EAAAA,YAAY,CAACrgB,SAAb,CAAuB6Y,SAAvB,GAAmC,UAAUjN,KAAV,EAAiB;AAChD,QAAI,KAAKvM,OAAL,EAAJ,EAAoB;AAChB,UAAIuM,KAAK,CAACvM,OAAN,EAAJ,EAAqB;AACjB,eAAO,CAAP;AACH,OAFD,MAGK;AACD,eAAO,CAAC,CAAR;AACH;AACJ,KAPD,MAQK,IAAIuM,KAAK,CAACqL,UAAN,MAAsBrL,KAAK,CAACvM,OAAN,EAA1B,EAA2C;AAC5C,aAAO,CAAP;AACH,KAFI,MAGA,IAAIuM,KAAK,KAAK+V,UAAd,EAA0B;AAC3B,aAAO,CAAC,CAAR;AACH,KAFI,MAGA;AACD;AACA,aAAO,CAAP;AACH;AACJ,GAnBD;AAoBA;AACJ;AACA;;;AACItB,EAAAA,YAAY,CAACrgB,SAAb,CAAuBqZ,SAAvB,GAAmC,UAAU+F,eAAV,EAA2B;AAC1D,QAAIA,eAAe,KAAKzI,SAApB,IACA,KAAK4J,SAAL,CAAepB,QAAf,CAAwBC,eAAxB,CADJ,EAC8C;AAC1C,aAAO,IAAP;AACH,KAHD,MAIK;AACD,UAAIqB,WAAW,GAAG,KAAKF,SAAL,CAAelB,QAAf,CAAwBD,eAAxB,EAAyC,KAAKkB,SAA9C,CAAlB;AACA,aAAO,IAAID,YAAJ,CAAiB,KAAKC,SAAtB,EAAiC,KAAKhJ,aAAtC,EAAqDmJ,WAArD,CAAP;AACH;AACJ,GATD;AAUA;AACJ;AACA;;;AACIJ,EAAAA,YAAY,CAACrgB,SAAb,CAAuBsZ,SAAvB,GAAmC,UAAUf,KAAV,EAAiB;AAChD,WAAOA,KAAK,KAAK5B,SAAV,IAAuB,KAAK4J,SAAL,CAAepB,QAAf,CAAwB5G,KAAxB,CAA9B;AACH,GAFD;AAGA;AACJ;AACA;;;AACI8H,EAAAA,YAAY,CAACrgB,SAAb,CAAuBuZ,MAAvB,GAAgC,UAAU3N,KAAV,EAAiB;AAC7C,QAAIA,KAAK,KAAK,IAAd,EAAoB;AAChB,aAAO,IAAP;AACH,KAFD,MAGK,IAAIA,KAAK,CAACqL,UAAN,EAAJ,EAAwB;AACzB,aAAO,KAAP;AACH,KAFI,MAGA;AACD,UAAI2K,iBAAiB,GAAGhW,KAAxB;;AACA,UAAI,CAAC,KAAKsL,WAAL,GAAmBqC,MAAnB,CAA0BqI,iBAAiB,CAAC1K,WAAlB,EAA1B,CAAL,EAAiE;AAC7D,eAAO,KAAP;AACH,OAFD,MAGK,IAAI,KAAKoJ,SAAL,CAAetF,KAAf,OAA2B4G,iBAAiB,CAACtB,SAAlB,CAA4BtF,KAA5B,EAA/B,EAAoE;AACrE,YAAI6G,QAAQ,GAAG,KAAKjF,WAAL,CAAiB5C,cAAjB,CAAf;AACA,YAAI8H,SAAS,GAAGF,iBAAiB,CAAChF,WAAlB,CAA8B5C,cAA9B,CAAhB;AACA,YAAI+H,WAAW,GAAGF,QAAQ,CAACtH,OAAT,EAAlB;AACA,YAAIyH,YAAY,GAAGF,SAAS,CAACvH,OAAV,EAAnB;;AACA,eAAOwH,WAAW,IAAIC,YAAtB,EAAoC;AAChC,cAAID,WAAW,CAACphB,IAAZ,KAAqBqhB,YAAY,CAACrhB,IAAlC,IACA,CAACohB,WAAW,CAACxM,IAAZ,CAAiBgE,MAAjB,CAAwByI,YAAY,CAACzM,IAArC,CADL,EACiD;AAC7C,mBAAO,KAAP;AACH;;AACDwM,UAAAA,WAAW,GAAGF,QAAQ,CAACtH,OAAT,EAAd;AACAyH,UAAAA,YAAY,GAAGF,SAAS,CAACvH,OAAV,EAAf;AACH;;AACD,eAAOwH,WAAW,KAAK,IAAhB,IAAwBC,YAAY,KAAK,IAAhD;AACH,OAdI,MAeA;AACD,eAAO,KAAP;AACH;AACJ;AACJ,GA/BD;AAgCA;AACJ;AACA;AACA;AACA;;;AACI3B,EAAAA,YAAY,CAACrgB,SAAb,CAAuBkhB,aAAvB,GAAuC,UAAU9B,eAAV,EAA2B;AAC9D,QAAIA,eAAe,KAAKzI,SAAxB,EAAmC;AAC/B,aAAO,IAAP;AACH,KAFD,MAGK;AACD,aAAO,KAAK4J,SAAL,CAAehgB,GAAf,CAAmB6e,eAAe,CAACxe,QAAhB,EAAnB,CAAP;AACH;AACJ,GAPD;;AAQAyf,EAAAA,YAAY,CAAC3X,eAAb,GAA+B,gBAA/B;AACA,SAAO2X,YAAP;AACH,CA3WiC,EAAlC;;AA4WA,IAAI4B,OAAO;AAAG;AAAe,UAAU5L,MAAV,EAAkB;AAC3C3Y,EAAAA,SAAS,CAACukB,OAAD,EAAU5L,MAAV,CAAT;;AACA,WAAS4L,OAAT,GAAmB;AACf,WAAO5L,MAAM,CAACnG,IAAP,CAAY,IAAZ,EAAkB,IAAI4K,SAAJ,CAAcsF,eAAd,CAAlB,EAAkDC,YAAY,CAAC9I,UAA/D,EAA2EuH,QAAQ,CAAC0B,OAApF,KAAgG,IAAvG;AACH;;AACDyB,EAAAA,OAAO,CAACjiB,SAAR,CAAkB6Y,SAAlB,GAA8B,UAAUjN,KAAV,EAAiB;AAC3C,QAAIA,KAAK,KAAK,IAAd,EAAoB;AAChB,aAAO,CAAP;AACH,KAFD,MAGK;AACD,aAAO,CAAP;AACH;AACJ,GAPD;;AAQAqW,EAAAA,OAAO,CAACjiB,SAAR,CAAkBuZ,MAAlB,GAA2B,UAAU3N,KAAV,EAAiB;AACxC;AACA,WAAOA,KAAK,KAAK,IAAjB;AACH,GAHD;;AAIAqW,EAAAA,OAAO,CAACjiB,SAAR,CAAkBkX,WAAlB,GAAgC,YAAY;AACxC,WAAO,IAAP;AACH,GAFD;;AAGA+K,EAAAA,OAAO,CAACjiB,SAAR,CAAkB2X,iBAAlB,GAAsC,UAAUC,SAAV,EAAqB;AACvD,WAAOyI,YAAY,CAAC9I,UAApB;AACH,GAFD;;AAGA0K,EAAAA,OAAO,CAACjiB,SAAR,CAAkBX,OAAlB,GAA4B,YAAY;AACpC,WAAO,KAAP;AACH,GAFD;;AAGA,SAAO4iB,OAAP;AACH,CA3B4B,CA2B3B5B,YA3B2B,CAA7B;AA4BA;AACA;AACA;;;AACA,IAAIsB,UAAU,GAAG,IAAIM,OAAJ,EAAjB;AACA5V,MAAM,CAAC6V,gBAAP,CAAwB5M,SAAxB,EAAmC;AAC/BY,EAAAA,GAAG,EAAE;AACD/V,IAAAA,KAAK,EAAE,IAAImV,SAAJ,CAActQ,QAAd,EAAwBqb,YAAY,CAAC9I,UAArC;AADN,GAD0B;AAI/B4K,EAAAA,GAAG,EAAE;AACDhiB,IAAAA,KAAK,EAAE,IAAImV,SAAJ,CAAcrQ,QAAd,EAAwB0c,UAAxB;AADN;AAJ0B,CAAnC;AAQA;AACA;AACA;;AACAvL,QAAQ,CAACD,YAAT,GAAwBkK,YAAY,CAAC9I,UAArC;AACAH,QAAQ,CAACD,yBAAT,GAAqCkJ,YAArC;AACAxJ,UAAU,CAAC8K,UAAD,CAAV;AACAhI,YAAY,CAACgI,UAAD,CAAZ;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIS,SAAS,GAAG,IAAhB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,cAAT,CAAwBC,IAAxB,EAA8B9Q,QAA9B,EAAwC;AACpC,MAAIA,QAAQ,KAAK,KAAK,CAAtB,EAAyB;AAAEA,IAAAA,QAAQ,GAAG,IAAX;AAAkB;;AAC7C,MAAI8Q,IAAI,KAAK,IAAb,EAAmB;AACf,WAAOjC,YAAY,CAAC9I,UAApB;AACH;;AACD,MAAI,OAAO+K,IAAP,KAAgB,QAAhB,IAA4B,eAAeA,IAA/C,EAAqD;AACjD9Q,IAAAA,QAAQ,GAAG8Q,IAAI,CAAC,WAAD,CAAf;AACH;;AACDpkB,EAAAA,MAAM,CAACsT,QAAQ,KAAK,IAAb,IACH,OAAOA,QAAP,KAAoB,QADjB,IAEH,OAAOA,QAAP,KAAoB,QAFjB,IAGF,OAAOA,QAAP,KAAoB,QAApB,IAAgC,SAASA,QAHxC,EAGmD,kCAAkC,OAAOA,QAH5F,CAAN;;AAIA,MAAI,OAAO8Q,IAAP,KAAgB,QAAhB,IAA4B,YAAYA,IAAxC,IAAgDA,IAAI,CAAC,QAAD,CAAJ,KAAmB,IAAvE,EAA6E;AACzEA,IAAAA,IAAI,GAAGA,IAAI,CAAC,QAAD,CAAX;AACH,GAdmC,CAepC;;;AACA,MAAI,OAAOA,IAAP,KAAgB,QAAhB,IAA4B,SAASA,IAAzC,EAA+C;AAC3C,QAAIC,QAAQ,GAAGD,IAAf;AACA,WAAO,IAAIlL,QAAJ,CAAamL,QAAb,EAAuBF,cAAc,CAAC7Q,QAAD,CAArC,CAAP;AACH;;AACD,MAAI,EAAE8Q,IAAI,YAAY7f,KAAlB,KAA4B2f,SAAhC,EAA2C;AACvC,QAAII,UAAU,GAAG,EAAjB;AACA,QAAIC,sBAAsB,GAAG,KAA7B;AACA,QAAIC,YAAY,GAAGJ,IAAnB;AACAhc,IAAAA,IAAI,CAACoc,YAAD,EAAe,UAAUxiB,GAAV,EAAeuM,KAAf,EAAsB;AACrC,UAAIvM,GAAG,CAACmG,SAAJ,CAAc,CAAd,EAAiB,CAAjB,MAAwB,GAA5B,EAAiC;AAC7B;AACA,YAAI2R,SAAS,GAAGqK,cAAc,CAAC5V,KAAD,CAA9B;;AACA,YAAI,CAACuL,SAAS,CAAC3Y,OAAV,EAAL,EAA0B;AACtBojB,UAAAA,sBAAsB,GAClBA,sBAAsB,IAAI,CAACzK,SAAS,CAACd,WAAV,GAAwB7X,OAAxB,EAD/B;AAEAmjB,UAAAA,UAAU,CAAC1c,IAAX,CAAgB,IAAIwP,SAAJ,CAAcpV,GAAd,EAAmB8X,SAAnB,CAAhB;AACH;AACJ;AACJ,KAVG,CAAJ;;AAWA,QAAIwK,UAAU,CAACngB,MAAX,KAAsB,CAA1B,EAA6B;AACzB,aAAOge,YAAY,CAAC9I,UAApB;AACH;;AACD,QAAIoL,QAAQ,GAAGjF,aAAa,CAAC8E,UAAD,EAAarC,oBAAb,EAAmC,UAAUlC,SAAV,EAAqB;AAAE,aAAOA,SAAS,CAACtd,IAAjB;AAAwB,KAAlF,EAAoFyf,eAApF,CAA5B;;AACA,QAAIqC,sBAAJ,EAA4B;AACxB,UAAIG,cAAc,GAAGlF,aAAa,CAAC8E,UAAD,EAAaxI,cAAc,CAACtE,UAAf,EAAb,CAAlC;AACA,aAAO,IAAI2K,YAAJ,CAAiBsC,QAAjB,EAA2BN,cAAc,CAAC7Q,QAAD,CAAzC,EAAqD,IAAIsN,QAAJ,CAAa;AAAE,qBAAa8D;AAAf,OAAb,EAA8C;AAAE,qBAAa5I;AAAf,OAA9C,CAArD,CAAP;AACH,KAHD,MAIK;AACD,aAAO,IAAIqG,YAAJ,CAAiBsC,QAAjB,EAA2BN,cAAc,CAAC7Q,QAAD,CAAzC,EAAqDsN,QAAQ,CAAC0B,OAA9D,CAAP;AACH;AACJ,GA1BD,MA2BK;AACD,QAAIqC,MAAM,GAAGxC,YAAY,CAAC9I,UAA1B;AACAjR,IAAAA,IAAI,CAACgc,IAAD,EAAO,UAAUpiB,GAAV,EAAe4iB,SAAf,EAA0B;AACjC,UAAI7kB,QAAQ,CAACqkB,IAAD,EAAOpiB,GAAP,CAAZ,EAAyB;AACrB,YAAIA,GAAG,CAACmG,SAAJ,CAAc,CAAd,EAAiB,CAAjB,MAAwB,GAA5B,EAAiC;AAC7B;AACA,cAAI2R,SAAS,GAAGqK,cAAc,CAACS,SAAD,CAA9B;;AACA,cAAI9K,SAAS,CAACf,UAAV,MAA0B,CAACe,SAAS,CAAC3Y,OAAV,EAA/B,EAAoD;AAChDwjB,YAAAA,MAAM,GAAGA,MAAM,CAAC5K,oBAAP,CAA4B/X,GAA5B,EAAiC8X,SAAjC,CAAT;AACH;AACJ;AACJ;AACJ,KAVG,CAAJ;AAWA,WAAO6K,MAAM,CAACpL,cAAP,CAAsB4K,cAAc,CAAC7Q,QAAD,CAApC,CAAP;AACH;AACJ;;AACDkI,eAAe,CAAC2I,cAAD,CAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIU,UAAU;AAAG;AAAe,UAAU1M,MAAV,EAAkB;AAC9C3Y,EAAAA,SAAS,CAACqlB,UAAD,EAAa1M,MAAb,CAAT;;AACA,WAAS0M,UAAT,GAAsB;AAClB,WAAO1M,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAAC1T,KAAP,CAAa,IAAb,EAAmBP,SAAnB,CAAnB,IAAoD,IAA3D;AACH;AACD;AACJ;AACA;;;AACI2gB,EAAAA,UAAU,CAAC/iB,SAAX,CAAqB2V,OAArB,GAA+B,UAAUxQ,CAAV,EAAaC,CAAb,EAAgB;AAC3C,QAAI2U,QAAQ,GAAG5U,CAAC,CAACoQ,IAAF,CAAOsD,SAAP,CAAiBzT,CAAC,CAACmQ,IAAnB,CAAf;;AACA,QAAIwE,QAAQ,KAAK,CAAjB,EAAoB;AAChB,aAAO7U,WAAW,CAACC,CAAC,CAACxE,IAAH,EAASyE,CAAC,CAACzE,IAAX,CAAlB;AACH,KAFD,MAGK;AACD,aAAOoZ,QAAP;AACH;AACJ,GARD;AASA;AACJ;AACA;;;AACIgJ,EAAAA,UAAU,CAAC/iB,SAAX,CAAqBuW,WAArB,GAAmC,UAAUhB,IAAV,EAAgB;AAC/C,WAAO,IAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACIwN,EAAAA,UAAU,CAAC/iB,SAAX,CAAqB4V,mBAArB,GAA2C,UAAUC,OAAV,EAAmBC,OAAnB,EAA4B;AACnE,WAAO,CAACD,OAAO,CAAC0D,MAAR,CAAezD,OAAf,CAAR;AACH,GAFD;AAGA;AACJ;AACA;;;AACIiN,EAAAA,UAAU,CAAC/iB,SAAX,CAAqBiW,OAArB,GAA+B,YAAY;AACvC;AACA,WAAOX,SAAS,CAACY,GAAjB;AACH,GAHD;AAIA;AACJ;AACA;;;AACI6M,EAAAA,UAAU,CAAC/iB,SAAX,CAAqBwW,OAArB,GAA+B,YAAY;AACvC;AACA,WAAOlB,SAAS,CAAC6M,GAAjB;AACH,GAHD;;AAIAY,EAAAA,UAAU,CAAC/iB,SAAX,CAAqByW,QAArB,GAAgC,UAAUC,UAAV,EAAsB/V,IAAtB,EAA4B;AACxD,QAAIqiB,SAAS,GAAGX,cAAc,CAAC3L,UAAD,CAA9B;AACA,WAAO,IAAIpB,SAAJ,CAAc3U,IAAd,EAAoBqiB,SAApB,CAAP;AACH,GAHD;AAIA;AACJ;AACA;;;AACID,EAAAA,UAAU,CAAC/iB,SAAX,CAAqBY,QAArB,GAAgC,YAAY;AACxC,WAAO,QAAP;AACH,GAFD;;AAGA,SAAOmiB,UAAP;AACH,CAtD+B,CAsD9BtN,KAtD8B,CAAhC;;AAuDA,IAAIwN,WAAW,GAAG,IAAIF,UAAJ,EAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIG,SAAS;AAAG;AAAe,UAAU7M,MAAV,EAAkB;AAC7C3Y,EAAAA,SAAS,CAACwlB,SAAD,EAAY7M,MAAZ,CAAT;;AACA,WAAS6M,SAAT,CAAmBC,UAAnB,EAA+B;AAC3B,QAAIrD,KAAK,GAAGzJ,MAAM,CAACnG,IAAP,CAAY,IAAZ,KAAqB,IAAjC;;AACA4P,IAAAA,KAAK,CAACqD,UAAN,GAAmBA,UAAnB;AACAjlB,IAAAA,MAAM,CAAC,CAAC6M,WAAW,CAACoY,UAAD,CAAZ,IAA4BnZ,YAAY,CAACmZ,UAAD,CAAZ,KAA6B,WAA1D,EAAuE,yDAAvE,CAAN;AACA,WAAOrD,KAAP;AACH;;AACDoD,EAAAA,SAAS,CAACljB,SAAV,CAAoBojB,YAApB,GAAmC,UAAUC,IAAV,EAAgB;AAC/C,WAAOA,IAAI,CAACxL,QAAL,CAAc,KAAKsL,UAAnB,CAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACID,EAAAA,SAAS,CAACljB,SAAV,CAAoBuW,WAApB,GAAkC,UAAUhB,IAAV,EAAgB;AAC9C,WAAO,CAACA,IAAI,CAACsC,QAAL,CAAc,KAAKsL,UAAnB,EAA+B9jB,OAA/B,EAAR;AACH,GAFD;AAGA;AACJ;AACA;;;AACI6jB,EAAAA,SAAS,CAACljB,SAAV,CAAoB2V,OAApB,GAA8B,UAAUxQ,CAAV,EAAaC,CAAb,EAAgB;AAC1C,QAAIke,MAAM,GAAG,KAAKF,YAAL,CAAkBje,CAAC,CAACoQ,IAApB,CAAb;AACA,QAAIgO,MAAM,GAAG,KAAKH,YAAL,CAAkBhe,CAAC,CAACmQ,IAApB,CAAb;AACA,QAAIwE,QAAQ,GAAGuJ,MAAM,CAACzK,SAAP,CAAiB0K,MAAjB,CAAf;;AACA,QAAIxJ,QAAQ,KAAK,CAAjB,EAAoB;AAChB,aAAO7U,WAAW,CAACC,CAAC,CAACxE,IAAH,EAASyE,CAAC,CAACzE,IAAX,CAAlB;AACH,KAFD,MAGK;AACD,aAAOoZ,QAAP;AACH;AACJ,GAVD;AAWA;AACJ;AACA;;;AACImJ,EAAAA,SAAS,CAACljB,SAAV,CAAoByW,QAApB,GAA+B,UAAUC,UAAV,EAAsB/V,IAAtB,EAA4B;AACvD,QAAIqiB,SAAS,GAAGX,cAAc,CAAC3L,UAAD,CAA9B;AACA,QAAInB,IAAI,GAAG8K,YAAY,CAAC9I,UAAb,CAAwBY,WAAxB,CAAoC,KAAKgL,UAAzC,EAAqDH,SAArD,CAAX;AACA,WAAO,IAAI1N,SAAJ,CAAc3U,IAAd,EAAoB4U,IAApB,CAAP;AACH,GAJD;AAKA;AACJ;AACA;;;AACI2N,EAAAA,SAAS,CAACljB,SAAV,CAAoBwW,OAApB,GAA8B,YAAY;AACtC,QAAIjB,IAAI,GAAG8K,YAAY,CAAC9I,UAAb,CAAwBY,WAAxB,CAAoC,KAAKgL,UAAzC,EAAqDxB,UAArD,CAAX;AACA,WAAO,IAAIrM,SAAJ,CAAcrQ,QAAd,EAAwBsQ,IAAxB,CAAP;AACH,GAHD;AAIA;AACJ;AACA;;;AACI2N,EAAAA,SAAS,CAACljB,SAAV,CAAoBY,QAApB,GAA+B,YAAY;AACvC,WAAO2J,SAAS,CAAC,KAAK4Y,UAAN,EAAkB,CAAlB,CAAT,CAA8B3b,IAA9B,CAAmC,GAAnC,CAAP;AACH,GAFD;;AAGA,SAAO0b,SAAP;AACH,CArD8B,CAqD7BzN,KArD6B,CAA/B;AAuDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,IAAI+N,YAAY;AAAG;AAAe,YAAY;AAC1C;AACJ;AACA;AACA;AACA;AACI,WAASA,YAAT,CAAsBC,KAAtB,EAA6BC,IAA7B,EAAmCC,MAAnC,EAA2C;AACvC,SAAKF,KAAL,GAAaA,KAAb;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAcA,MAAd;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACIH,EAAAA,YAAY,CAACxjB,SAAb,CAAuBsW,GAAvB,GAA6B,YAAY;AACrC7X,IAAAA,gBAAgB,CAAC,kBAAD,EAAqB,CAArB,EAAwB,CAAxB,EAA2B2D,SAAS,CAACC,MAArC,CAAhB;AACA,WAAO,KAAKohB,KAAL,CAAWnN,GAAX,EAAP;AACH,GAHD;AAIA;AACJ;AACA;AACA;AACA;;;AACIkN,EAAAA,YAAY,CAACxjB,SAAb,CAAuB4jB,SAAvB,GAAmC,YAAY;AAC3CnlB,IAAAA,gBAAgB,CAAC,wBAAD,EAA2B,CAA3B,EAA8B,CAA9B,EAAiC2D,SAAS,CAACC,MAA3C,CAAhB;AACA,WAAO,KAAKohB,KAAL,CAAWnN,GAAX,CAAe,IAAf,CAAP;AACH,GAHD,CA1B0C,CA8B1C;AACA;;;AACAkN,EAAAA,YAAY,CAACxjB,SAAb,CAAuBmU,MAAvB,GAAgC,YAAY;AACxC;AACA1V,IAAAA,gBAAgB,CAAC,qBAAD,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B2D,SAAS,CAACC,MAAxC,CAAhB;AACA,WAAO,KAAKuhB,SAAL,EAAP;AACH,GAJD;AAKA;AACJ;AACA;AACA;AACA;;;AACIJ,EAAAA,YAAY,CAACxjB,SAAb,CAAuB6jB,MAAvB,GAAgC,YAAY;AACxCplB,IAAAA,gBAAgB,CAAC,qBAAD,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B2D,SAAS,CAACC,MAAxC,CAAhB;AACA,WAAO,CAAC,KAAKohB,KAAL,CAAWpkB,OAAX,EAAR;AACH,GAHD;AAIA;AACJ;AACA;AACA;AACA;AACA;;;AACImkB,EAAAA,YAAY,CAACxjB,SAAb,CAAuByM,KAAvB,GAA+B,UAAUqX,eAAV,EAA2B;AACtDrlB,IAAAA,gBAAgB,CAAC,oBAAD,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B2D,SAAS,CAACC,MAAvC,CAAhB,CADsD,CAEtD;;AACAyhB,IAAAA,eAAe,GAAGxZ,MAAM,CAACwZ,eAAD,CAAxB;AACAlR,IAAAA,kBAAkB,CAAC,oBAAD,EAAuB,CAAvB,EAA0BkR,eAA1B,EAA2C,KAA3C,CAAlB;AACA,QAAIC,SAAS,GAAG,IAAIxa,IAAJ,CAASua,eAAT,CAAhB;AACA,QAAIE,QAAQ,GAAG,KAAKN,IAAL,CAAUjX,KAAV,CAAgBsX,SAAhB,CAAf;AACA,WAAO,IAAIP,YAAJ,CAAiB,KAAKC,KAAL,CAAW5L,QAAX,CAAoBkM,SAApB,CAAjB,EAAiDC,QAAjD,EAA2DhK,cAA3D,CAAP;AACH,GARD;AASA;AACJ;AACA;AACA;AACA;AACA;;;AACIwJ,EAAAA,YAAY,CAACxjB,SAAb,CAAuB8X,QAAvB,GAAkC,UAAUgM,eAAV,EAA2B;AACzDrlB,IAAAA,gBAAgB,CAAC,uBAAD,EAA0B,CAA1B,EAA6B,CAA7B,EAAgC2D,SAAS,CAACC,MAA1C,CAAhB;AACAuQ,IAAAA,kBAAkB,CAAC,uBAAD,EAA0B,CAA1B,EAA6BkR,eAA7B,EAA8C,KAA9C,CAAlB;AACA,QAAIC,SAAS,GAAG,IAAIxa,IAAJ,CAASua,eAAT,CAAhB;AACA,WAAO,CAAC,KAAKL,KAAL,CAAW5L,QAAX,CAAoBkM,SAApB,EAA+B1kB,OAA/B,EAAR;AACH,GALD;AAMA;AACJ;AACA;AACA;AACA;;;AACImkB,EAAAA,YAAY,CAACxjB,SAAb,CAAuBkX,WAAvB,GAAqC,YAAY;AAC7CzY,IAAAA,gBAAgB,CAAC,0BAAD,EAA6B,CAA7B,EAAgC,CAAhC,EAAmC2D,SAAS,CAACC,MAA7C,CAAhB,CAD6C,CAE7C;;AACA,WAAO,KAAKohB,KAAL,CAAWvM,WAAX,GAAyBZ,GAAzB,EAAP;AACH,GAJD;AAKA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIkN,EAAAA,YAAY,CAACxjB,SAAb,CAAuBikB,OAAvB,GAAiC,UAAUzL,MAAV,EAAkB;AAC/C,QAAIsH,KAAK,GAAG,IAAZ;;AACArhB,IAAAA,gBAAgB,CAAC,sBAAD,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B2D,SAAS,CAACC,MAAzC,CAAhB;AACA3D,IAAAA,gBAAgB,CAAC,sBAAD,EAAyB,CAAzB,EAA4B8Z,MAA5B,EAAoC,KAApC,CAAhB;;AACA,QAAI,KAAKiL,KAAL,CAAWxM,UAAX,EAAJ,EAA6B;AACzB,aAAO,KAAP;AACH;;AACD,QAAIiN,YAAY,GAAG,KAAKT,KAAxB,CAP+C,CAQ/C;;AACA,WAAO,CAAC,CAACS,YAAY,CAAC5L,YAAb,CAA0B,KAAKqL,MAA/B,EAAuC,UAAUzjB,GAAV,EAAeqV,IAAf,EAAqB;AACjE,aAAOiD,MAAM,CAAC,IAAIgL,YAAJ,CAAiBjO,IAAjB,EAAuBuK,KAAK,CAAC4D,IAAN,CAAWjX,KAAX,CAAiBvM,GAAjB,CAAvB,EAA8C8Z,cAA9C,CAAD,CAAb;AACH,KAFQ,CAAT;AAGH,GAZD;AAaA;AACJ;AACA;AACA;;;AACIwJ,EAAAA,YAAY,CAACxjB,SAAb,CAAuBmkB,WAAvB,GAAqC,YAAY;AAC7C1lB,IAAAA,gBAAgB,CAAC,0BAAD,EAA6B,CAA7B,EAAgC,CAAhC,EAAmC2D,SAAS,CAACC,MAA7C,CAAhB;;AACA,QAAI,KAAKohB,KAAL,CAAWxM,UAAX,EAAJ,EAA6B;AACzB,aAAO,KAAP;AACH,KAFD,MAGK;AACD,aAAO,CAAC,KAAKwM,KAAL,CAAWpkB,OAAX,EAAR;AACH;AACJ,GARD;;AASAgN,EAAAA,MAAM,CAACC,cAAP,CAAsBkX,YAAY,CAACxjB,SAAnC,EAA8C,KAA9C,EAAqD;AACjDO,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKmjB,IAAL,CAAUU,MAAV,EAAP;AACH,KAHgD;AAIjD7X,IAAAA,UAAU,EAAE,KAJqC;AAKjDC,IAAAA,YAAY,EAAE;AALmC,GAArD;AAOA;AACJ;AACA;AACA;;AACIgX,EAAAA,YAAY,CAACxjB,SAAb,CAAuBqY,WAAvB,GAAqC,YAAY;AAC7C5Z,IAAAA,gBAAgB,CAAC,0BAAD,EAA6B,CAA7B,EAAgC,CAAhC,EAAmC2D,SAAS,CAACC,MAA7C,CAAhB;AACA,WAAO,KAAKohB,KAAL,CAAWpL,WAAX,EAAP;AACH,GAHD;AAIA;AACJ;AACA;AACA;;;AACImL,EAAAA,YAAY,CAACxjB,SAAb,CAAuBqkB,MAAvB,GAAgC,YAAY;AACxC5lB,IAAAA,gBAAgB,CAAC,kBAAD,EAAqB,CAArB,EAAwB,CAAxB,EAA2B2D,SAAS,CAACC,MAArC,CAAhB;AACA,WAAO,KAAKqhB,IAAZ;AACH,GAHD;;AAIArX,EAAAA,MAAM,CAACC,cAAP,CAAsBkX,YAAY,CAACxjB,SAAnC,EAA8C,KAA9C,EAAqD;AACjDO,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK8jB,MAAL,EAAP;AACH,KAHgD;AAIjD9X,IAAAA,UAAU,EAAE,KAJqC;AAKjDC,IAAAA,YAAY,EAAE;AALmC,GAArD;AAOA,SAAOgX,YAAP;AACH,CApJiC,EAAlC;AAsJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA,IAAIc,SAAS;AAAG;AAAe,YAAY;AACvC;AACJ;AACA;AACA;AACA;AACA;AACI,WAASA,SAAT,CAAmB5R,SAAnB,EAA8B6R,iBAA9B,EAAiDrQ,QAAjD,EAA2DsQ,QAA3D,EAAqE;AACjE,SAAK9R,SAAL,GAAiBA,SAAjB;AACA,SAAK6R,iBAAL,GAAyBA,iBAAzB;AACA,SAAKrQ,QAAL,GAAgBA,QAAhB;AACA,SAAKsQ,QAAL,GAAgBA,QAAhB;AACH;AACD;AACJ;AACA;;;AACIF,EAAAA,SAAS,CAACtkB,SAAV,CAAoBykB,OAApB,GAA8B,YAAY;AACtC,QAAIC,GAAG,GAAG,KAAKxQ,QAAL,CAAcmQ,MAAd,EAAV;;AACA,QAAI,KAAK3R,SAAL,KAAmB,OAAvB,EAAgC;AAC5B,aAAOgS,GAAG,CAAClc,IAAX;AACH,KAFD,MAGK;AACD,aAAOkc,GAAG,CAACC,SAAJ,GAAgBnc,IAAvB;AACH;AACJ,GARD;AASA;AACJ;AACA;;;AACI8b,EAAAA,SAAS,CAACtkB,SAAV,CAAoB4kB,YAApB,GAAmC,YAAY;AAC3C,WAAO,KAAKlS,SAAZ;AACH,GAFD;AAGA;AACJ;AACA;;;AACI4R,EAAAA,SAAS,CAACtkB,SAAV,CAAoB6kB,cAApB,GAAqC,YAAY;AAC7C,WAAO,KAAKN,iBAAL,CAAuBM,cAAvB,CAAsC,IAAtC,CAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACIP,EAAAA,SAAS,CAACtkB,SAAV,CAAoBY,QAApB,GAA+B,YAAY;AACvC,WAAQ,KAAK6jB,OAAL,GAAe7jB,QAAf,KACJ,GADI,GAEJ,KAAK8R,SAFD,GAGJ,GAHI,GAIJ3U,SAAS,CAAC,KAAKmW,QAAL,CAAc0P,SAAd,EAAD,CAJb;AAKH,GAND;;AAOA,SAAOU,SAAP;AACH,CAhD8B,EAA/B;;AAiDA,IAAIQ,WAAW;AAAG;AAAe,YAAY;AACzC,WAASA,WAAT,CAAqBP,iBAArB,EAAwChhB,KAAxC,EAA+CiF,IAA/C,EAAqD;AACjD,SAAK+b,iBAAL,GAAyBA,iBAAzB;AACA,SAAKhhB,KAAL,GAAaA,KAAb;AACA,SAAKiF,IAAL,GAAYA,IAAZ;AACH;AACD;AACJ;AACA;;;AACIsc,EAAAA,WAAW,CAAC9kB,SAAZ,CAAsBykB,OAAtB,GAAgC,YAAY;AACxC,WAAO,KAAKjc,IAAZ;AACH,GAFD;AAGA;AACJ;AACA;;;AACIsc,EAAAA,WAAW,CAAC9kB,SAAZ,CAAsB4kB,YAAtB,GAAqC,YAAY;AAC7C,WAAO,QAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACIE,EAAAA,WAAW,CAAC9kB,SAAZ,CAAsB6kB,cAAtB,GAAuC,YAAY;AAC/C,WAAO,KAAKN,iBAAL,CAAuBM,cAAvB,CAAsC,IAAtC,CAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACIC,EAAAA,WAAW,CAAC9kB,SAAZ,CAAsBY,QAAtB,GAAiC,YAAY;AACzC,WAAO,KAAK4H,IAAL,CAAU5H,QAAV,KAAuB,SAA9B;AACH,GAFD;;AAGA,SAAOkkB,WAAP;AACH,CA/BgC,EAAjC;AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA,IAAIC,sBAAsB;AAAG;AAAe,YAAY;AACpD,WAASA,sBAAT,CAAgCC,SAAhC,EAA2CC,eAA3C,EAA4DC,QAA5D,EAAsE;AAClE,SAAKF,SAAL,GAAiBA,SAAjB;AACA,SAAKC,eAAL,GAAuBA,eAAvB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACH;AACD;AACJ;AACA;;;AACIH,EAAAA,sBAAsB,CAAC/kB,SAAvB,CAAiCmlB,UAAjC,GAA8C,UAAUzS,SAAV,EAAqB;AAC/D,WAAOA,SAAS,KAAK,OAArB;AACH,GAFD;AAGA;AACJ;AACA;;;AACIqS,EAAAA,sBAAsB,CAAC/kB,SAAvB,CAAiColB,WAAjC,GAA+C,UAAUC,MAAV,EAAkB/c,KAAlB,EAAyB;AACpE,QAAIiQ,KAAK,GAAGjQ,KAAK,CAACgd,cAAN,GAAuBC,QAAvB,EAAZ;AACA,WAAO,IAAIjB,SAAJ,CAAc,OAAd,EAAuB,IAAvB,EAA6B,IAAId,YAAJ,CAAiB6B,MAAM,CAACG,YAAxB,EAAsCld,KAAK,CAAC+b,MAAN,EAAtC,EAAsD9L,KAAtD,CAA7B,CAAP;AACH,GAHD;AAIA;AACJ;AACA;;;AACIwM,EAAAA,sBAAsB,CAAC/kB,SAAvB,CAAiC6kB,cAAjC,GAAkD,UAAUY,SAAV,EAAqB;AACnE,QAAIC,GAAG,GAAG,KAAKR,QAAf;;AACA,QAAIO,SAAS,CAACb,YAAV,OAA6B,QAAjC,EAA2C;AACvC1mB,MAAAA,MAAM,CAAC,KAAK+mB,eAAN,EAAuB,8DAAvB,CAAN;AACA,UAAIU,UAAU,GAAG,KAAKV,eAAtB;AACA,aAAO,YAAY;AACf;AACAU,QAAAA,UAAU,CAACzV,IAAX,CAAgBwV,GAAhB,EAAqBD,SAAS,CAACliB,KAA/B;AACH,OAHD;AAIH,KAPD,MAQK;AACD,UAAIqiB,IAAI,GAAG,KAAKZ,SAAhB;AACA,aAAO,YAAY;AACfY,QAAAA,IAAI,CAAC1V,IAAL,CAAUwV,GAAV,EAAeD,SAAS,CAACvR,QAAzB;AACH,OAFD;AAGH;AACJ,GAhBD;AAiBA;AACJ;AACA;;;AACI6Q,EAAAA,sBAAsB,CAAC/kB,SAAvB,CAAiC6lB,iBAAjC,GAAqD,UAAUtiB,KAAV,EAAiBiF,IAAjB,EAAuB;AACxE,QAAI,KAAKyc,eAAT,EAA0B;AACtB,aAAO,IAAIH,WAAJ,CAAgB,IAAhB,EAAsBvhB,KAAtB,EAA6BiF,IAA7B,CAAP;AACH,KAFD,MAGK;AACD,aAAO,IAAP;AACH;AACJ,GAPD;AAQA;AACJ;AACA;;;AACIuc,EAAAA,sBAAsB,CAAC/kB,SAAvB,CAAiC8lB,OAAjC,GAA2C,UAAUla,KAAV,EAAiB;AACxD,QAAI,EAAEA,KAAK,YAAYmZ,sBAAnB,CAAJ,EAAgD;AAC5C,aAAO,KAAP;AACH,KAFD,MAGK,IAAI,CAACnZ,KAAK,CAACoZ,SAAP,IAAoB,CAAC,KAAKA,SAA9B,EAAyC;AAC1C;AACA,aAAO,IAAP;AACH,KAHI,MAIA;AACD,aAAQpZ,KAAK,CAACoZ,SAAN,KAAoB,KAAKA,SAAzB,IAAsCpZ,KAAK,CAACsZ,QAAN,KAAmB,KAAKA,QAAtE;AACH;AACJ,GAXD;AAYA;AACJ;AACA;;;AACIH,EAAAA,sBAAsB,CAAC/kB,SAAvB,CAAiC+lB,cAAjC,GAAkD,YAAY;AAC1D,WAAO,KAAKf,SAAL,KAAmB,IAA1B;AACH,GAFD;;AAGA,SAAOD,sBAAP;AACH,CAxE2C,EAA5C;AAyEA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIiB,sBAAsB;AAAG;AAAe,YAAY;AACpD,WAASA,sBAAT,CAAgCC,UAAhC,EAA4ChB,eAA5C,EAA6DC,QAA7D,EAAuE;AACnE,SAAKe,UAAL,GAAkBA,UAAlB;AACA,SAAKhB,eAAL,GAAuBA,eAAvB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACH;AACD;AACJ;AACA;;;AACIc,EAAAA,sBAAsB,CAAChmB,SAAvB,CAAiCmlB,UAAjC,GAA8C,UAAUzS,SAAV,EAAqB;AAC/D,QAAIwT,YAAY,GAAGxT,SAAS,KAAK,gBAAd,GAAiC,aAAjC,GAAiDA,SAApE;AACAwT,IAAAA,YAAY,GACRA,YAAY,KAAK,kBAAjB,GAAsC,eAAtC,GAAwDA,YAD5D;AAEA,WAAOjoB,QAAQ,CAAC,KAAKgoB,UAAN,EAAkBC,YAAlB,CAAf;AACH,GALD;AAMA;AACJ;AACA;;;AACIF,EAAAA,sBAAsB,CAAChmB,SAAvB,CAAiC6lB,iBAAjC,GAAqD,UAAUtiB,KAAV,EAAiBiF,IAAjB,EAAuB;AACxE,QAAI,KAAKyc,eAAT,EAA0B;AACtB,aAAO,IAAIH,WAAJ,CAAgB,IAAhB,EAAsBvhB,KAAtB,EAA6BiF,IAA7B,CAAP;AACH,KAFD,MAGK;AACD,aAAO,IAAP;AACH;AACJ,GAPD;AAQA;AACJ;AACA;;;AACIwd,EAAAA,sBAAsB,CAAChmB,SAAvB,CAAiColB,WAAjC,GAA+C,UAAUC,MAAV,EAAkB/c,KAAlB,EAAyB;AACpEpK,IAAAA,MAAM,CAACmnB,MAAM,CAACzN,SAAP,IAAoB,IAArB,EAA2B,uCAA3B,CAAN;AACA,QAAI8M,GAAG,GAAGpc,KAAK,CAAC+b,MAAN,GAAe5X,KAAf,CAAqB4Y,MAAM,CAACzN,SAA5B,CAAV;AACA,QAAIW,KAAK,GAAGjQ,KAAK,CAACgd,cAAN,GAAuBC,QAAvB,EAAZ;AACA,WAAO,IAAIjB,SAAJ,CAAce,MAAM,CAAC3W,IAArB,EAA2B,IAA3B,EAAiC,IAAI8U,YAAJ,CAAiB6B,MAAM,CAACG,YAAxB,EAAsCd,GAAtC,EAA2CnM,KAA3C,CAAjC,EAAoF8M,MAAM,CAACb,QAA3F,CAAP;AACH,GALD;AAMA;AACJ;AACA;;;AACIwB,EAAAA,sBAAsB,CAAChmB,SAAvB,CAAiC6kB,cAAjC,GAAkD,UAAUY,SAAV,EAAqB;AACnE,QAAIC,GAAG,GAAG,KAAKR,QAAf;;AACA,QAAIO,SAAS,CAACb,YAAV,OAA6B,QAAjC,EAA2C;AACvC1mB,MAAAA,MAAM,CAAC,KAAK+mB,eAAN,EAAuB,8DAAvB,CAAN;AACA,UAAIkB,UAAU,GAAG,KAAKlB,eAAtB;AACA,aAAO,YAAY;AACf;AACAkB,QAAAA,UAAU,CAACjW,IAAX,CAAgBwV,GAAhB,EAAqBD,SAAS,CAACliB,KAA/B;AACH,OAHD;AAIH,KAPD,MAQK;AACD,UAAI6iB,IAAI,GAAG,KAAKH,UAAL,CAAgBR,SAAS,CAAC/S,SAA1B,CAAX;AACA,aAAO,YAAY;AACf0T,QAAAA,IAAI,CAAClW,IAAL,CAAUwV,GAAV,EAAeD,SAAS,CAACvR,QAAzB,EAAmCuR,SAAS,CAACjB,QAA7C;AACH,OAFD;AAGH;AACJ,GAhBD;AAiBA;AACJ;AACA;;;AACIwB,EAAAA,sBAAsB,CAAChmB,SAAvB,CAAiC8lB,OAAjC,GAA2C,UAAUla,KAAV,EAAiB;AACxD,QAAIkU,KAAK,GAAG,IAAZ;;AACA,QAAIlU,KAAK,YAAYoa,sBAArB,EAA6C;AACzC,UAAI,CAAC,KAAKC,UAAN,IAAoB,CAACra,KAAK,CAACqa,UAA/B,EAA2C;AACvC,eAAO,IAAP;AACH,OAFD,MAGK,IAAI,KAAKf,QAAL,KAAkBtZ,KAAK,CAACsZ,QAA5B,EAAsC;AACvC,YAAImB,SAAS,GAAGha,MAAM,CAACzG,IAAP,CAAYgG,KAAK,CAACqa,UAAlB,CAAhB;AACA,YAAIK,QAAQ,GAAGja,MAAM,CAACzG,IAAP,CAAY,KAAKqgB,UAAjB,CAAf;AACA,YAAIM,UAAU,GAAGF,SAAS,CAAChkB,MAA3B;AACA,YAAImkB,SAAS,GAAGF,QAAQ,CAACjkB,MAAzB;;AACA,YAAIkkB,UAAU,KAAKC,SAAnB,EAA8B;AAC1B;AACA;AACA;AACA,cAAID,UAAU,KAAK,CAAnB,EAAsB;AAClB,gBAAIE,QAAQ,GAAGJ,SAAS,CAAC,CAAD,CAAxB;AACA,gBAAIK,OAAO,GAAGJ,QAAQ,CAAC,CAAD,CAAtB;AACA,mBAAQI,OAAO,KAAKD,QAAZ,KACH,CAAC7a,KAAK,CAACqa,UAAN,CAAiBQ,QAAjB,CAAD,IACG,CAAC,KAAKR,UAAL,CAAgBS,OAAhB,CADJ,IAEG9a,KAAK,CAACqa,UAAN,CAAiBQ,QAAjB,MAA+B,KAAKR,UAAL,CAAgBS,OAAhB,CAH/B,CAAR;AAIH,WAPD,MAQK;AACD;AACA,mBAAOJ,QAAQ,CAACK,KAAT,CAAe,UAAUjU,SAAV,EAAqB;AACvC,qBAAO9G,KAAK,CAACqa,UAAN,CAAiBvT,SAAjB,MAAgCoN,KAAK,CAACmG,UAAN,CAAiBvT,SAAjB,CAAvC;AACH,aAFM,CAAP;AAGH;AACJ;AACJ;AACJ;;AACD,WAAO,KAAP;AACH,GAjCD;AAkCA;AACJ;AACA;;;AACIsT,EAAAA,sBAAsB,CAAChmB,SAAvB,CAAiC+lB,cAAjC,GAAkD,YAAY;AAC1D,WAAO,KAAKE,UAAL,KAAoB,IAA3B;AACH,GAFD;;AAGA,SAAOD,sBAAP;AACH,CAnG2C,EAA5C;AAqGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASY,WAAT,CAAqBpB,YAArB,EAAmC;AAC/B,SAAO;AAAE9W,IAAAA,IAAI,EAAE;AAAQ;AAAhB;AAA6B8W,IAAAA,YAAY,EAAEA;AAA3C,GAAP;AACH;;AACD,SAASqB,gBAAT,CAA0BjP,SAA1B,EAAqC4N,YAArC,EAAmD;AAC/C,SAAO;AAAE9W,IAAAA,IAAI,EAAE;AAAc;AAAtB;AAAyC8W,IAAAA,YAAY,EAAEA,YAAvD;AAAqE5N,IAAAA,SAAS,EAAEA;AAAhF,GAAP;AACH;;AACD,SAASkP,kBAAT,CAA4BlP,SAA5B,EAAuC4N,YAAvC,EAAqD;AACjD,SAAO;AAAE9W,IAAAA,IAAI,EAAE;AAAgB;AAAxB;AAA6C8W,IAAAA,YAAY,EAAEA,YAA3D;AAAyE5N,IAAAA,SAAS,EAAEA;AAApF,GAAP;AACH;;AACD,SAASmP,kBAAT,CAA4BnP,SAA5B,EAAuC4N,YAAvC,EAAqDwB,OAArD,EAA8D;AAC1D,SAAO;AACHtY,IAAAA,IAAI,EAAE;AAAgB;AADnB;AAEH8W,IAAAA,YAAY,EAAEA,YAFX;AAGH5N,IAAAA,SAAS,EAAEA,SAHR;AAIHoP,IAAAA,OAAO,EAAEA;AAJN,GAAP;AAMH;;AACD,SAASC,gBAAT,CAA0BrP,SAA1B,EAAqC4N,YAArC,EAAmD;AAC/C,SAAO;AAAE9W,IAAAA,IAAI,EAAE;AAAc;AAAtB;AAAyC8W,IAAAA,YAAY,EAAEA,YAAvD;AAAqE5N,IAAAA,SAAS,EAAEA;AAAhF,GAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA,IAAIsP,aAAa;AAAG;AAAe,YAAY;AAC3C,WAASA,aAAT,CAAuBvD,MAAvB,EAA+B;AAC3B,SAAKA,MAAL,GAAcA,MAAd;AACH;;AACDuD,EAAAA,aAAa,CAAClnB,SAAd,CAAwBmY,WAAxB,GAAsC,UAAUkL,IAAV,EAAgBnjB,GAAhB,EAAqBinB,QAArB,EAA+BC,YAA/B,EAA6ClS,MAA7C,EAAqDmS,oBAArD,EAA2E;AAC7GnpB,IAAAA,MAAM,CAACmlB,IAAI,CAAC/J,SAAL,CAAe,KAAKqK,MAApB,CAAD,EAA8B,mDAA9B,CAAN;AACA,QAAI2D,QAAQ,GAAGjE,IAAI,CAAC1L,iBAAL,CAAuBzX,GAAvB,CAAf,CAF6G,CAG7G;;AACA,QAAIonB,QAAQ,CAACzP,QAAT,CAAkBuP,YAAlB,EAAgC7N,MAAhC,CAAuC4N,QAAQ,CAACtP,QAAT,CAAkBuP,YAAlB,CAAvC,CAAJ,EAA6E;AACzE;AACA;AACA;AACA,UAAIE,QAAQ,CAACjoB,OAAT,OAAuB8nB,QAAQ,CAAC9nB,OAAT,EAA3B,EAA+C;AAC3C;AACA;AACA;AACA,eAAOgkB,IAAP;AACH;AACJ;;AACD,QAAIgE,oBAAoB,IAAI,IAA5B,EAAkC;AAC9B,UAAIF,QAAQ,CAAC9nB,OAAT,EAAJ,EAAwB;AACpB,YAAIgkB,IAAI,CAACvL,QAAL,CAAc5X,GAAd,CAAJ,EAAwB;AACpBmnB,UAAAA,oBAAoB,CAACE,gBAArB,CAAsCT,kBAAkB,CAAC5mB,GAAD,EAAMonB,QAAN,CAAxD;AACH,SAFD,MAGK;AACDppB,UAAAA,MAAM,CAACmlB,IAAI,CAACpM,UAAL,EAAD,EAAoB,qEAApB,CAAN;AACH;AACJ,OAPD,MAQK,IAAIqQ,QAAQ,CAACjoB,OAAT,EAAJ,EAAwB;AACzBgoB,QAAAA,oBAAoB,CAACE,gBAArB,CAAsCV,gBAAgB,CAAC3mB,GAAD,EAAMinB,QAAN,CAAtD;AACH,OAFI,MAGA;AACDE,QAAAA,oBAAoB,CAACE,gBAArB,CAAsCR,kBAAkB,CAAC7mB,GAAD,EAAMinB,QAAN,EAAgBG,QAAhB,CAAxD;AACH;AACJ;;AACD,QAAIjE,IAAI,CAACpM,UAAL,MAAqBkQ,QAAQ,CAAC9nB,OAAT,EAAzB,EAA6C;AACzC,aAAOgkB,IAAP;AACH,KAFD,MAGK;AACD;AACA,aAAOA,IAAI,CAACpL,oBAAL,CAA0B/X,GAA1B,EAA+BinB,QAA/B,EAAyC9N,SAAzC,CAAmD,KAAKsK,MAAxD,CAAP;AACH;AACJ,GAtCD;AAuCA;AACJ;AACA;;;AACIuD,EAAAA,aAAa,CAAClnB,SAAd,CAAwBwnB,cAAxB,GAAyC,UAAUR,OAAV,EAAmBS,OAAnB,EAA4BJ,oBAA5B,EAAkD;AACvF,QAAIA,oBAAoB,IAAI,IAA5B,EAAkC;AAC9B,UAAI,CAACL,OAAO,CAAC/P,UAAR,EAAL,EAA2B;AACvB+P,QAAAA,OAAO,CAAC1O,YAAR,CAAqB0B,cAArB,EAAqC,UAAU9Z,GAAV,EAAe8X,SAAf,EAA0B;AAC3D,cAAI,CAACyP,OAAO,CAAC3P,QAAR,CAAiB5X,GAAjB,CAAL,EAA4B;AACxBmnB,YAAAA,oBAAoB,CAACE,gBAArB,CAAsCT,kBAAkB,CAAC5mB,GAAD,EAAM8X,SAAN,CAAxD;AACH;AACJ,SAJD;AAKH;;AACD,UAAI,CAACyP,OAAO,CAACxQ,UAAR,EAAL,EAA2B;AACvBwQ,QAAAA,OAAO,CAACnP,YAAR,CAAqB0B,cAArB,EAAqC,UAAU9Z,GAAV,EAAe8X,SAAf,EAA0B;AAC3D,cAAIgP,OAAO,CAAClP,QAAR,CAAiB5X,GAAjB,CAAJ,EAA2B;AACvB,gBAAIonB,QAAQ,GAAGN,OAAO,CAACrP,iBAAR,CAA0BzX,GAA1B,CAAf;;AACA,gBAAI,CAAConB,QAAQ,CAAC/N,MAAT,CAAgBvB,SAAhB,CAAL,EAAiC;AAC7BqP,cAAAA,oBAAoB,CAACE,gBAArB,CAAsCR,kBAAkB,CAAC7mB,GAAD,EAAM8X,SAAN,EAAiBsP,QAAjB,CAAxD;AACH;AACJ,WALD,MAMK;AACDD,YAAAA,oBAAoB,CAACE,gBAArB,CAAsCV,gBAAgB,CAAC3mB,GAAD,EAAM8X,SAAN,CAAtD;AACH;AACJ,SAVD;AAWH;AACJ;;AACD,WAAOyP,OAAO,CAACpO,SAAR,CAAkB,KAAKsK,MAAvB,CAAP;AACH,GAxBD;AAyBA;AACJ;AACA;;;AACIuD,EAAAA,aAAa,CAAClnB,SAAd,CAAwByX,cAAxB,GAAyC,UAAUuP,OAAV,EAAmBtG,WAAnB,EAAgC;AACrE,QAAIsG,OAAO,CAAC3nB,OAAR,EAAJ,EAAuB;AACnB,aAAOghB,YAAY,CAAC9I,UAApB;AACH,KAFD,MAGK;AACD,aAAOyP,OAAO,CAACvP,cAAR,CAAuBiJ,WAAvB,CAAP;AACH;AACJ,GAPD;AAQA;AACJ;AACA;;;AACIwG,EAAAA,aAAa,CAAClnB,SAAd,CAAwB0nB,YAAxB,GAAuC,YAAY;AAC/C,WAAO,KAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACIR,EAAAA,aAAa,CAAClnB,SAAd,CAAwB2nB,gBAAxB,GAA2C,YAAY;AACnD,WAAO,IAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACIT,EAAAA,aAAa,CAAClnB,SAAd,CAAwBulB,QAAxB,GAAmC,YAAY;AAC3C,WAAO,KAAK5B,MAAZ;AACH,GAFD;;AAGA,SAAOuD,aAAP;AACH,CArGkC,EAAnC;AAuGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA,IAAIU,YAAY;AAAG;AAAe,YAAY;AAC1C,WAASA,YAAT,CAAsBjZ,MAAtB,EAA8B;AAC1B,SAAKkZ,cAAL,GAAsB,IAAIX,aAAJ,CAAkBvY,MAAM,CAAC4W,QAAP,EAAlB,CAAtB;AACA,SAAK5B,MAAL,GAAchV,MAAM,CAAC4W,QAAP,EAAd;AACA,SAAKuC,UAAL,GAAkBF,YAAY,CAACG,aAAb,CAA2BpZ,MAA3B,CAAlB;AACA,SAAKqZ,QAAL,GAAgBJ,YAAY,CAACK,WAAb,CAAyBtZ,MAAzB,CAAhB;AACH;;AACDiZ,EAAAA,YAAY,CAAC5nB,SAAb,CAAuBkoB,YAAvB,GAAsC,YAAY;AAC9C,WAAO,KAAKJ,UAAZ;AACH,GAFD;;AAGAF,EAAAA,YAAY,CAAC5nB,SAAb,CAAuBmoB,UAAvB,GAAoC,YAAY;AAC5C,WAAO,KAAKH,QAAZ;AACH,GAFD;;AAGAJ,EAAAA,YAAY,CAAC5nB,SAAb,CAAuB8lB,OAAvB,GAAiC,UAAUvQ,IAAV,EAAgB;AAC7C,WAAQ,KAAKoO,MAAL,CAAYhO,OAAZ,CAAoB,KAAKuS,YAAL,EAApB,EAAyC3S,IAAzC,KAAkD,CAAlD,IACJ,KAAKoO,MAAL,CAAYhO,OAAZ,CAAoBJ,IAApB,EAA0B,KAAK4S,UAAL,EAA1B,KAAgD,CADpD;AAEH,GAHD;AAIA;AACJ;AACA;;;AACIP,EAAAA,YAAY,CAAC5nB,SAAb,CAAuBmY,WAAvB,GAAqC,UAAUkL,IAAV,EAAgBnjB,GAAhB,EAAqBinB,QAArB,EAA+BC,YAA/B,EAA6ClS,MAA7C,EAAqDmS,oBAArD,EAA2E;AAC5G,QAAI,CAAC,KAAKvB,OAAL,CAAa,IAAIxQ,SAAJ,CAAcpV,GAAd,EAAmBinB,QAAnB,CAAb,CAAL,EAAiD;AAC7CA,MAAAA,QAAQ,GAAG9G,YAAY,CAAC9I,UAAxB;AACH;;AACD,WAAO,KAAKsQ,cAAL,CAAoB1P,WAApB,CAAgCkL,IAAhC,EAAsCnjB,GAAtC,EAA2CinB,QAA3C,EAAqDC,YAArD,EAAmElS,MAAnE,EAA2EmS,oBAA3E,CAAP;AACH,GALD;AAMA;AACJ;AACA;;;AACIO,EAAAA,YAAY,CAAC5nB,SAAb,CAAuBwnB,cAAvB,GAAwC,UAAUR,OAAV,EAAmBS,OAAnB,EAA4BJ,oBAA5B,EAAkD;AACtF,QAAII,OAAO,CAACxQ,UAAR,EAAJ,EAA0B;AACtB;AACAwQ,MAAAA,OAAO,GAAGpH,YAAY,CAAC9I,UAAvB;AACH;;AACD,QAAI6Q,QAAQ,GAAGX,OAAO,CAACpO,SAAR,CAAkB,KAAKsK,MAAvB,CAAf,CALsF,CAMtF;;AACAyE,IAAAA,QAAQ,GAAGA,QAAQ,CAAC3Q,cAAT,CAAwB4I,YAAY,CAAC9I,UAArC,CAAX;AACA,QAAI8Q,IAAI,GAAG,IAAX;AACAZ,IAAAA,OAAO,CAACnP,YAAR,CAAqB0B,cAArB,EAAqC,UAAU9Z,GAAV,EAAe8X,SAAf,EAA0B;AAC3D,UAAI,CAACqQ,IAAI,CAACvC,OAAL,CAAa,IAAIxQ,SAAJ,CAAcpV,GAAd,EAAmB8X,SAAnB,CAAb,CAAL,EAAkD;AAC9CoQ,QAAAA,QAAQ,GAAGA,QAAQ,CAACnQ,oBAAT,CAA8B/X,GAA9B,EAAmCmgB,YAAY,CAAC9I,UAAhD,CAAX;AACH;AACJ,KAJD;AAKA,WAAO,KAAKsQ,cAAL,CAAoBL,cAApB,CAAmCR,OAAnC,EAA4CoB,QAA5C,EAAsDf,oBAAtD,CAAP;AACH,GAfD;AAgBA;AACJ;AACA;;;AACIO,EAAAA,YAAY,CAAC5nB,SAAb,CAAuByX,cAAvB,GAAwC,UAAUuP,OAAV,EAAmBtG,WAAnB,EAAgC;AACpE;AACA,WAAOsG,OAAP;AACH,GAHD;AAIA;AACJ;AACA;;;AACIY,EAAAA,YAAY,CAAC5nB,SAAb,CAAuB0nB,YAAvB,GAAsC,YAAY;AAC9C,WAAO,IAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACIE,EAAAA,YAAY,CAAC5nB,SAAb,CAAuB2nB,gBAAvB,GAA0C,YAAY;AAClD,WAAO,KAAKE,cAAZ;AACH,GAFD;AAGA;AACJ;AACA;;;AACID,EAAAA,YAAY,CAAC5nB,SAAb,CAAuBulB,QAAvB,GAAkC,YAAY;AAC1C,WAAO,KAAK5B,MAAZ;AACH,GAFD;;AAGAiE,EAAAA,YAAY,CAACG,aAAb,GAA6B,UAAUpZ,MAAV,EAAkB;AAC3C,QAAIA,MAAM,CAAC2Z,QAAP,EAAJ,EAAuB;AACnB,UAAIC,SAAS,GAAG5Z,MAAM,CAAC6Z,iBAAP,EAAhB;AACA,aAAO7Z,MAAM,CAAC4W,QAAP,GAAkB9O,QAAlB,CAA2B9H,MAAM,CAAC8Z,kBAAP,EAA3B,EAAwDF,SAAxD,CAAP;AACH,KAHD,MAIK;AACD,aAAO5Z,MAAM,CAAC4W,QAAP,GAAkBtP,OAAlB,EAAP;AACH;AACJ,GARD;;AASA2R,EAAAA,YAAY,CAACK,WAAb,GAA2B,UAAUtZ,MAAV,EAAkB;AACzC,QAAIA,MAAM,CAAC+Z,MAAP,EAAJ,EAAqB;AACjB,UAAIC,OAAO,GAAGha,MAAM,CAACia,eAAP,EAAd;AACA,aAAOja,MAAM,CAAC4W,QAAP,GAAkB9O,QAAlB,CAA2B9H,MAAM,CAACka,gBAAP,EAA3B,EAAsDF,OAAtD,CAAP;AACH,KAHD,MAIK;AACD,aAAOha,MAAM,CAAC4W,QAAP,GAAkB/O,OAAlB,EAAP;AACH;AACJ,GARD;;AASA,SAAOoR,YAAP;AACH,CAzFiC,EAAlC;AA2FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA,IAAIkB,aAAa;AAAG;AAAe,YAAY;AAC3C,WAASA,aAAT,CAAuBna,MAAvB,EAA+B;AAC3B,SAAKoa,aAAL,GAAqB,IAAInB,YAAJ,CAAiBjZ,MAAjB,CAArB;AACA,SAAKgV,MAAL,GAAchV,MAAM,CAAC4W,QAAP,EAAd;AACA,SAAKyD,MAAL,GAAcra,MAAM,CAACsa,QAAP,EAAd;AACA,SAAKC,QAAL,GAAgB,CAACva,MAAM,CAACwa,cAAP,EAAjB;AACH;AACD;AACJ;AACA;;;AACIL,EAAAA,aAAa,CAAC9oB,SAAd,CAAwBmY,WAAxB,GAAsC,UAAUkL,IAAV,EAAgBnjB,GAAhB,EAAqBinB,QAArB,EAA+BC,YAA/B,EAA6ClS,MAA7C,EAAqDmS,oBAArD,EAA2E;AAC7G,QAAI,CAAC,KAAK0B,aAAL,CAAmBjD,OAAnB,CAA2B,IAAIxQ,SAAJ,CAAcpV,GAAd,EAAmBinB,QAAnB,CAA3B,CAAL,EAA+D;AAC3DA,MAAAA,QAAQ,GAAG9G,YAAY,CAAC9I,UAAxB;AACH;;AACD,QAAI8L,IAAI,CAAC1L,iBAAL,CAAuBzX,GAAvB,EAA4BqZ,MAA5B,CAAmC4N,QAAnC,CAAJ,EAAkD;AAC9C;AACA,aAAO9D,IAAP;AACH,KAHD,MAIK,IAAIA,IAAI,CAAChL,WAAL,KAAqB,KAAK2Q,MAA9B,EAAsC;AACvC,aAAO,KAAKD,aAAL,CACFpB,gBADE,GAEFxP,WAFE,CAEUkL,IAFV,EAEgBnjB,GAFhB,EAEqBinB,QAFrB,EAE+BC,YAF/B,EAE6ClS,MAF7C,EAEqDmS,oBAFrD,CAAP;AAGH,KAJI,MAKA;AACD,aAAO,KAAK+B,qBAAL,CAA2B/F,IAA3B,EAAiCnjB,GAAjC,EAAsCinB,QAAtC,EAAgDjS,MAAhD,EAAwDmS,oBAAxD,CAAP;AACH;AACJ,GAhBD;AAiBA;AACJ;AACA;;;AACIyB,EAAAA,aAAa,CAAC9oB,SAAd,CAAwBwnB,cAAxB,GAAyC,UAAUR,OAAV,EAAmBS,OAAnB,EAA4BJ,oBAA5B,EAAkD;AACvF,QAAIe,QAAJ;;AACA,QAAIX,OAAO,CAACxQ,UAAR,MAAwBwQ,OAAO,CAACpoB,OAAR,EAA5B,EAA+C;AAC3C;AACA+oB,MAAAA,QAAQ,GAAG/H,YAAY,CAAC9I,UAAb,CAAwB8B,SAAxB,CAAkC,KAAKsK,MAAvC,CAAX;AACH,KAHD,MAIK;AACD,UAAI,KAAKqF,MAAL,GAAc,CAAd,GAAkBvB,OAAO,CAACpP,WAAR,EAAlB,IACAoP,OAAO,CAACnO,SAAR,CAAkB,KAAKqK,MAAvB,CADJ,EACoC;AAChC;AACAyE,QAAAA,QAAQ,GAAG/H,YAAY,CAAC9I,UAAb,CAAwB8B,SAAxB,CAAkC,KAAKsK,MAAvC,CAAX,CAFgC,CAGhC;;AACA,YAAIlC,QAAQ,GAAG,KAAK,CAApB;;AACA,YAAI,KAAKyH,QAAT,EAAmB;AACfzH,UAAAA,QAAQ,GAAGgG,OAAO,CAAC1K,sBAAR,CAA+B,KAAKgM,aAAL,CAAmBZ,UAAnB,EAA/B,EAAgE,KAAKxE,MAArE,CAAX;AACH,SAFD,MAGK;AACDlC,UAAAA,QAAQ,GAAGgG,OAAO,CAAC3K,eAAR,CAAwB,KAAKiM,aAAL,CAAmBb,YAAnB,EAAxB,EAA2D,KAAKvE,MAAhE,CAAX;AACH;;AACD,YAAI3I,KAAK,GAAG,CAAZ;;AACA,eAAOyG,QAAQ,CAAChH,OAAT,MAAsBO,KAAK,GAAG,KAAKgO,MAA1C,EAAkD;AAC9C,cAAIpZ,IAAI,GAAG6R,QAAQ,CAAClH,OAAT,EAAX;AACA,cAAI8O,OAAO,GAAG,KAAK,CAAnB;;AACA,cAAI,KAAKH,QAAT,EAAmB;AACfG,YAAAA,OAAO,GACH,KAAK1F,MAAL,CAAYhO,OAAZ,CAAoB,KAAKoT,aAAL,CAAmBb,YAAnB,EAApB,EAAuDtY,IAAvD,KAAgE,CADpE;AAEH,WAHD,MAIK;AACDyZ,YAAAA,OAAO,GACH,KAAK1F,MAAL,CAAYhO,OAAZ,CAAoB/F,IAApB,EAA0B,KAAKmZ,aAAL,CAAmBZ,UAAnB,EAA1B,KAA8D,CADlE;AAEH;;AACD,cAAIkB,OAAJ,EAAa;AACTjB,YAAAA,QAAQ,GAAGA,QAAQ,CAACnQ,oBAAT,CAA8BrI,IAAI,CAACjP,IAAnC,EAAyCiP,IAAI,CAAC2F,IAA9C,CAAX;AACAyF,YAAAA,KAAK;AACR,WAHD,MAIK;AACD;AACA;AACH;AACJ;AACJ,OAjCD,MAkCK;AACD;AACAoN,QAAAA,QAAQ,GAAGX,OAAO,CAACpO,SAAR,CAAkB,KAAKsK,MAAvB,CAAX,CAFC,CAGD;;AACAyE,QAAAA,QAAQ,GAAGA,QAAQ,CAAC3Q,cAAT,CAAwB4I,YAAY,CAAC9I,UAArC,CAAX;AACA,YAAIiK,SAAS,GAAG,KAAK,CAArB;AACA,YAAIE,OAAO,GAAG,KAAK,CAAnB;AACA,YAAIhW,GAAG,GAAG,KAAK,CAAf;AACA,YAAI+V,QAAQ,GAAG,KAAK,CAApB;;AACA,YAAI,KAAKyH,QAAT,EAAmB;AACfzH,UAAAA,QAAQ,GAAG2G,QAAQ,CAACpL,kBAAT,CAA4B,KAAK2G,MAAjC,CAAX;AACAnC,UAAAA,SAAS,GAAG,KAAKuH,aAAL,CAAmBZ,UAAnB,EAAZ;AACAzG,UAAAA,OAAO,GAAG,KAAKqH,aAAL,CAAmBb,YAAnB,EAAV;AACA,cAAIoB,cAAc,GAAG,KAAK3F,MAAL,CAAYjO,UAAZ,EAArB;;AACAhK,UAAAA,GAAG,GAAG,UAAUvG,CAAV,EAAaC,CAAb,EAAgB;AAAE,mBAAOkkB,cAAc,CAAClkB,CAAD,EAAID,CAAJ,CAArB;AAA8B,WAAtD;AACH,SAND,MAOK;AACDsc,UAAAA,QAAQ,GAAG2G,QAAQ,CAACxL,WAAT,CAAqB,KAAK+G,MAA1B,CAAX;AACAnC,UAAAA,SAAS,GAAG,KAAKuH,aAAL,CAAmBb,YAAnB,EAAZ;AACAxG,UAAAA,OAAO,GAAG,KAAKqH,aAAL,CAAmBZ,UAAnB,EAAV;AACAzc,UAAAA,GAAG,GAAG,KAAKiY,MAAL,CAAYjO,UAAZ,EAAN;AACH;;AACD,YAAIsF,KAAK,GAAG,CAAZ;AACA,YAAIuO,cAAc,GAAG,KAArB;;AACA,eAAO9H,QAAQ,CAAChH,OAAT,EAAP,EAA2B;AACvB,cAAI7K,IAAI,GAAG6R,QAAQ,CAAClH,OAAT,EAAX;;AACA,cAAI,CAACgP,cAAD,IAAmB7d,GAAG,CAAC8V,SAAD,EAAY5R,IAAZ,CAAH,IAAwB,CAA/C,EAAkD;AAC9C;AACA2Z,YAAAA,cAAc,GAAG,IAAjB;AACH;;AACD,cAAIF,OAAO,GAAGE,cAAc,IAAIvO,KAAK,GAAG,KAAKgO,MAA/B,IAAyCtd,GAAG,CAACkE,IAAD,EAAO8R,OAAP,CAAH,IAAsB,CAA7E;;AACA,cAAI2H,OAAJ,EAAa;AACTrO,YAAAA,KAAK;AACR,WAFD,MAGK;AACDoN,YAAAA,QAAQ,GAAGA,QAAQ,CAACnQ,oBAAT,CAA8BrI,IAAI,CAACjP,IAAnC,EAAyC0f,YAAY,CAAC9I,UAAtD,CAAX;AACH;AACJ;AACJ;AACJ;;AACD,WAAO,KAAKwR,aAAL,CACFpB,gBADE,GAEFH,cAFE,CAEaR,OAFb,EAEsBoB,QAFtB,EAEgCf,oBAFhC,CAAP;AAGH,GApFD;AAqFA;AACJ;AACA;;;AACIyB,EAAAA,aAAa,CAAC9oB,SAAd,CAAwByX,cAAxB,GAAyC,UAAUuP,OAAV,EAAmBtG,WAAnB,EAAgC;AACrE;AACA,WAAOsG,OAAP;AACH,GAHD;AAIA;AACJ;AACA;;;AACI8B,EAAAA,aAAa,CAAC9oB,SAAd,CAAwB0nB,YAAxB,GAAuC,YAAY;AAC/C,WAAO,IAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACIoB,EAAAA,aAAa,CAAC9oB,SAAd,CAAwB2nB,gBAAxB,GAA2C,YAAY;AACnD,WAAO,KAAKoB,aAAL,CAAmBpB,gBAAnB,EAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACImB,EAAAA,aAAa,CAAC9oB,SAAd,CAAwBulB,QAAxB,GAAmC,YAAY;AAC3C,WAAO,KAAK5B,MAAZ;AACH,GAFD;;AAGAmF,EAAAA,aAAa,CAAC9oB,SAAd,CAAwBopB,qBAAxB,GAAgD,UAAU/F,IAAV,EAAgBmG,QAAhB,EAA0BC,SAA1B,EAAqCvU,MAArC,EAA6CwU,iBAA7C,EAAgE;AAC5G;AACA,QAAIhe,GAAJ;;AACA,QAAI,KAAKwd,QAAT,EAAmB;AACf,UAAIS,UAAU,GAAG,KAAKhG,MAAL,CAAYjO,UAAZ,EAAjB;;AACAhK,MAAAA,GAAG,GAAG,UAAUvG,CAAV,EAAaC,CAAb,EAAgB;AAAE,eAAOukB,UAAU,CAACvkB,CAAD,EAAID,CAAJ,CAAjB;AAA0B,OAAlD;AACH,KAHD,MAIK;AACDuG,MAAAA,GAAG,GAAG,KAAKiY,MAAL,CAAYjO,UAAZ,EAAN;AACH;;AACD,QAAIkU,aAAa,GAAGvG,IAApB;AACAnlB,IAAAA,MAAM,CAAC0rB,aAAa,CAACvR,WAAd,OAAgC,KAAK2Q,MAAtC,EAA8C,EAA9C,CAAN;AACA,QAAIa,iBAAiB,GAAG,IAAIvU,SAAJ,CAAckU,QAAd,EAAwBC,SAAxB,CAAxB;AACA,QAAIK,cAAc,GAAG,KAAKZ,QAAL,GACfU,aAAa,CAACxI,aAAd,CAA4B,KAAKuC,MAAjC,CADe,GAEfiG,aAAa,CAACtI,YAAd,CAA2B,KAAKqC,MAAhC,CAFN;AAGA,QAAI0F,OAAO,GAAG,KAAKN,aAAL,CAAmBjD,OAAnB,CAA2B+D,iBAA3B,CAAd;;AACA,QAAID,aAAa,CAAC9R,QAAd,CAAuB0R,QAAvB,CAAJ,EAAsC;AAClC,UAAIO,YAAY,GAAGH,aAAa,CAACjS,iBAAd,CAAgC6R,QAAhC,CAAnB;AACA,UAAIQ,SAAS,GAAG9U,MAAM,CAAC+U,kBAAP,CAA0B,KAAKtG,MAA/B,EAAuCmG,cAAvC,EAAuD,KAAKZ,QAA5D,CAAhB;;AACA,aAAOc,SAAS,IAAI,IAAb,KACFA,SAAS,CAACrpB,IAAV,KAAmB6oB,QAAnB,IAA+BI,aAAa,CAAC9R,QAAd,CAAuBkS,SAAS,CAACrpB,IAAjC,CAD7B,CAAP,EAC6E;AACzE;AACA;AACA;AACAqpB,QAAAA,SAAS,GAAG9U,MAAM,CAAC+U,kBAAP,CAA0B,KAAKtG,MAA/B,EAAuCqG,SAAvC,EAAkD,KAAKd,QAAvD,CAAZ;AACH;;AACD,UAAIgB,WAAW,GAAGF,SAAS,IAAI,IAAb,GAAoB,CAApB,GAAwBte,GAAG,CAACse,SAAD,EAAYH,iBAAZ,CAA7C;AACA,UAAIM,eAAe,GAAGd,OAAO,IAAI,CAACI,SAAS,CAACpqB,OAAV,EAAZ,IAAmC6qB,WAAW,IAAI,CAAxE;;AACA,UAAIC,eAAJ,EAAqB;AACjB,YAAIT,iBAAiB,IAAI,IAAzB,EAA+B;AAC3BA,UAAAA,iBAAiB,CAACnC,gBAAlB,CAAmCR,kBAAkB,CAACyC,QAAD,EAAWC,SAAX,EAAsBM,YAAtB,CAArD;AACH;;AACD,eAAOH,aAAa,CAAC3R,oBAAd,CAAmCuR,QAAnC,EAA6CC,SAA7C,CAAP;AACH,OALD,MAMK;AACD,YAAIC,iBAAiB,IAAI,IAAzB,EAA+B;AAC3BA,UAAAA,iBAAiB,CAACnC,gBAAlB,CAAmCT,kBAAkB,CAAC0C,QAAD,EAAWO,YAAX,CAArD;AACH;;AACD,YAAIK,aAAa,GAAGR,aAAa,CAAC3R,oBAAd,CAAmCuR,QAAnC,EAA6CnJ,YAAY,CAAC9I,UAA1D,CAApB;AACA,YAAI8S,gBAAgB,GAAGL,SAAS,IAAI,IAAb,IAAqB,KAAKjB,aAAL,CAAmBjD,OAAnB,CAA2BkE,SAA3B,CAA5C;;AACA,YAAIK,gBAAJ,EAAsB;AAClB,cAAIX,iBAAiB,IAAI,IAAzB,EAA+B;AAC3BA,YAAAA,iBAAiB,CAACnC,gBAAlB,CAAmCV,gBAAgB,CAACmD,SAAS,CAACrpB,IAAX,EAAiBqpB,SAAS,CAACzU,IAA3B,CAAnD;AACH;;AACD,iBAAO6U,aAAa,CAACnS,oBAAd,CAAmC+R,SAAS,CAACrpB,IAA7C,EAAmDqpB,SAAS,CAACzU,IAA7D,CAAP;AACH,SALD,MAMK;AACD,iBAAO6U,aAAP;AACH;AACJ;AACJ,KAlCD,MAmCK,IAAIX,SAAS,CAACpqB,OAAV,EAAJ,EAAyB;AAC1B;AACA,aAAOgkB,IAAP;AACH,KAHI,MAIA,IAAIgG,OAAJ,EAAa;AACd,UAAI3d,GAAG,CAACoe,cAAD,EAAiBD,iBAAjB,CAAH,IAA0C,CAA9C,EAAiD;AAC7C,YAAIH,iBAAiB,IAAI,IAAzB,EAA+B;AAC3BA,UAAAA,iBAAiB,CAACnC,gBAAlB,CAAmCT,kBAAkB,CAACgD,cAAc,CAACnpB,IAAhB,EAAsBmpB,cAAc,CAACvU,IAArC,CAArD;AACAmU,UAAAA,iBAAiB,CAACnC,gBAAlB,CAAmCV,gBAAgB,CAAC2C,QAAD,EAAWC,SAAX,CAAnD;AACH;;AACD,eAAOG,aAAa,CACf3R,oBADE,CACmBuR,QADnB,EAC6BC,SAD7B,EAEFxR,oBAFE,CAEmB6R,cAAc,CAACnpB,IAFlC,EAEwC0f,YAAY,CAAC9I,UAFrD,CAAP;AAGH,OARD,MASK;AACD,eAAO8L,IAAP;AACH;AACJ,KAbI,MAcA;AACD,aAAOA,IAAP;AACH;AACJ,GAzED;;AA0EA,SAAOyF,aAAP;AACH,CAvNkC,EAAnC;AAyNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIwB,WAAW;AAAG;AAAe,YAAY;AACzC,WAASA,WAAT,GAAuB;AACnB,SAAKC,SAAL,GAAiB,KAAjB;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACA,SAAKC,aAAL,GAAqB,KAArB;AACA,SAAKC,cAAL,GAAsB,KAAtB;AACA,SAAKC,OAAL,GAAe,KAAf;AACA,SAAKC,WAAL,GAAmB,KAAnB;AACA,SAAKC,aAAL,GAAqB,KAArB;AACA,SAAK7B,MAAL,GAAc,CAAd;AACA,SAAK8B,SAAL,GAAiB,EAAjB;AACA,SAAKC,gBAAL,GAAwB,IAAxB;AACA,SAAKC,eAAL,GAAuB,EAAvB;AACA,SAAKC,cAAL,GAAsB,IAAtB;AACA,SAAKC,aAAL,GAAqB,EAArB;AACA,SAAKvH,MAAL,GAAc3J,cAAd;AACH;;AACDsQ,EAAAA,WAAW,CAACtqB,SAAZ,CAAsBsoB,QAAtB,GAAiC,YAAY;AACzC,WAAO,KAAKkC,SAAZ;AACH,GAFD;;AAGAF,EAAAA,WAAW,CAACtqB,SAAZ,CAAsBmrB,aAAtB,GAAsC,YAAY;AAC9C,WAAO,KAAKT,cAAZ;AACH,GAFD;;AAGAJ,EAAAA,WAAW,CAACtqB,SAAZ,CAAsBorB,YAAtB,GAAqC,YAAY;AAC7C,WAAO,KAAKP,aAAZ;AACH,GAFD;AAGA;AACJ;AACA;;;AACIP,EAAAA,WAAW,CAACtqB,SAAZ,CAAsBmpB,cAAtB,GAAuC,YAAY;AAC/C,QAAI,KAAK2B,SAAL,KAAmB,EAAvB,EAA2B;AACvB;AACA;AACA;AACA;AACA,aAAO,KAAKN,SAAZ;AACH,KAND,MAOK;AACD,aAAO,KAAKM,SAAL,KAAmB;AAAI;AAA9B;AACH;AACJ,GAXD;AAYA;AACJ;AACA;;;AACIR,EAAAA,WAAW,CAACtqB,SAAZ,CAAsByoB,kBAAtB,GAA2C,YAAY;AACnDvqB,IAAAA,MAAM,CAAC,KAAKssB,SAAN,EAAiB,kCAAjB,CAAN;AACA,WAAO,KAAKO,gBAAZ;AACH,GAHD;AAIA;AACJ;AACA;AACA;;;AACIT,EAAAA,WAAW,CAACtqB,SAAZ,CAAsBwoB,iBAAtB,GAA0C,YAAY;AAClDtqB,IAAAA,MAAM,CAAC,KAAKssB,SAAN,EAAiB,kCAAjB,CAAN;;AACA,QAAI,KAAKC,aAAT,EAAwB;AACpB,aAAO,KAAKO,eAAZ;AACH,KAFD,MAGK;AACD,aAAOhmB,QAAP;AACH;AACJ,GARD;;AASAslB,EAAAA,WAAW,CAACtqB,SAAZ,CAAsB0oB,MAAtB,GAA+B,YAAY;AACvC,WAAO,KAAKiC,OAAZ;AACH,GAFD;AAGA;AACJ;AACA;;;AACIL,EAAAA,WAAW,CAACtqB,SAAZ,CAAsB6oB,gBAAtB,GAAyC,YAAY;AACjD3qB,IAAAA,MAAM,CAAC,KAAKysB,OAAN,EAAe,gCAAf,CAAN;AACA,WAAO,KAAKM,cAAZ;AACH,GAHD;AAIA;AACJ;AACA;AACA;;;AACIX,EAAAA,WAAW,CAACtqB,SAAZ,CAAsB4oB,eAAtB,GAAwC,YAAY;AAChD1qB,IAAAA,MAAM,CAAC,KAAKysB,OAAN,EAAe,gCAAf,CAAN;;AACA,QAAI,KAAKC,WAAT,EAAsB;AAClB,aAAO,KAAKM,aAAZ;AACH,KAFD,MAGK;AACD,aAAOjmB,QAAP;AACH;AACJ,GARD;;AASAqlB,EAAAA,WAAW,CAACtqB,SAAZ,CAAsBqrB,QAAtB,GAAiC,YAAY;AACzC,WAAO,KAAKd,SAAZ;AACH,GAFD;AAGA;AACJ;AACA;;;AACID,EAAAA,WAAW,CAACtqB,SAAZ,CAAsBsrB,gBAAtB,GAAyC,YAAY;AACjD,WAAO,KAAKf,SAAL,IAAkB,KAAKO,SAAL,KAAmB,EAA5C;AACH,GAFD;AAGA;AACJ;AACA;;;AACIR,EAAAA,WAAW,CAACtqB,SAAZ,CAAsBipB,QAAtB,GAAiC,YAAY;AACzC/qB,IAAAA,MAAM,CAAC,KAAKqsB,SAAN,EAAiB,kCAAjB,CAAN;AACA,WAAO,KAAKvB,MAAZ;AACH,GAHD;;AAIAsB,EAAAA,WAAW,CAACtqB,SAAZ,CAAsBulB,QAAtB,GAAiC,YAAY;AACzC,WAAO,KAAK5B,MAAZ;AACH,GAFD;;AAGA2G,EAAAA,WAAW,CAACtqB,SAAZ,CAAsBurB,YAAtB,GAAqC,YAAY;AAC7C,WAAO,EAAE,KAAKf,SAAL,IAAkB,KAAKG,OAAvB,IAAkC,KAAKJ,SAAzC,CAAP;AACH,GAFD;;AAGAD,EAAAA,WAAW,CAACtqB,SAAZ,CAAsBwrB,SAAtB,GAAkC,YAAY;AAC1C,WAAO,KAAKD,YAAL,MAAuB,KAAK5H,MAAL,KAAgB3J,cAA9C;AACH,GAFD;;AAGAsQ,EAAAA,WAAW,CAACtqB,SAAZ,CAAsB+a,IAAtB,GAA6B,YAAY;AACrC,QAAIA,IAAI,GAAG,IAAIuP,WAAJ,EAAX;AACAvP,IAAAA,IAAI,CAACwP,SAAL,GAAiB,KAAKA,SAAtB;AACAxP,IAAAA,IAAI,CAACiO,MAAL,GAAc,KAAKA,MAAnB;AACAjO,IAAAA,IAAI,CAACyP,SAAL,GAAiB,KAAKA,SAAtB;AACAzP,IAAAA,IAAI,CAACgQ,gBAAL,GAAwB,KAAKA,gBAA7B;AACAhQ,IAAAA,IAAI,CAAC0P,aAAL,GAAqB,KAAKA,aAA1B;AACA1P,IAAAA,IAAI,CAACiQ,eAAL,GAAuB,KAAKA,eAA5B;AACAjQ,IAAAA,IAAI,CAAC4P,OAAL,GAAe,KAAKA,OAApB;AACA5P,IAAAA,IAAI,CAACkQ,cAAL,GAAsB,KAAKA,cAA3B;AACAlQ,IAAAA,IAAI,CAAC6P,WAAL,GAAmB,KAAKA,WAAxB;AACA7P,IAAAA,IAAI,CAACmQ,aAAL,GAAqB,KAAKA,aAA1B;AACAnQ,IAAAA,IAAI,CAAC4I,MAAL,GAAc,KAAKA,MAAnB;AACA5I,IAAAA,IAAI,CAAC+P,SAAL,GAAiB,KAAKA,SAAtB;AACA,WAAO/P,IAAP;AACH,GAfD;;AAgBA,SAAOuP,WAAP;AACH,CA9HgC,EAAjC;;AA+HA,SAASmB,wBAAT,CAAkC3a,WAAlC,EAA+C;AAC3C,MAAIA,WAAW,CAACya,YAAZ,EAAJ,EAAgC;AAC5B,WAAO,IAAIrE,aAAJ,CAAkBpW,WAAW,CAACyU,QAAZ,EAAlB,CAAP;AACH,GAFD,MAGK,IAAIzU,WAAW,CAACua,QAAZ,EAAJ,EAA4B;AAC7B,WAAO,IAAIvC,aAAJ,CAAkBhY,WAAlB,CAAP;AACH,GAFI,MAGA;AACD,WAAO,IAAI8W,YAAJ,CAAiB9W,WAAjB,CAAP;AACH;AACJ;;AACD,SAAS4a,uBAAT,CAAiC5a,WAAjC,EAA8C6a,QAA9C,EAAwD;AACpD,MAAIC,SAAS,GAAG9a,WAAW,CAACiK,IAAZ,EAAhB;AACA6Q,EAAAA,SAAS,CAACrB,SAAV,GAAsB,IAAtB;AACAqB,EAAAA,SAAS,CAAC5C,MAAV,GAAmB2C,QAAnB;AACAC,EAAAA,SAAS,CAACd,SAAV,GAAsB;AAAI;AAA1B;AACA,SAAOc,SAAP;AACH;;AACD,SAASC,sBAAT,CAAgC/a,WAAhC,EAA6C6a,QAA7C,EAAuD;AACnD,MAAIC,SAAS,GAAG9a,WAAW,CAACiK,IAAZ,EAAhB;AACA6Q,EAAAA,SAAS,CAACrB,SAAV,GAAsB,IAAtB;AACAqB,EAAAA,SAAS,CAAC5C,MAAV,GAAmB2C,QAAnB;AACAC,EAAAA,SAAS,CAACd,SAAV,GAAsB;AAAI;AAA1B;AACA,SAAOc,SAAP;AACH;;AACD,SAASE,kBAAT,CAA4Bhb,WAA5B,EAAyC4F,UAAzC,EAAqDxW,GAArD,EAA0D;AACtD,MAAI0rB,SAAS,GAAG9a,WAAW,CAACiK,IAAZ,EAAhB;AACA6Q,EAAAA,SAAS,CAACpB,SAAV,GAAsB,IAAtB;;AACA,MAAI9T,UAAU,KAAK7E,SAAnB,EAA8B;AAC1B6E,IAAAA,UAAU,GAAG,IAAb;AACH;;AACDkV,EAAAA,SAAS,CAACb,gBAAV,GAA6BrU,UAA7B;;AACA,MAAIxW,GAAG,IAAI,IAAX,EAAiB;AACb0rB,IAAAA,SAAS,CAACnB,aAAV,GAA0B,IAA1B;AACAmB,IAAAA,SAAS,CAACZ,eAAV,GAA4B9qB,GAA5B;AACH,GAHD,MAIK;AACD0rB,IAAAA,SAAS,CAACnB,aAAV,GAA0B,KAA1B;AACAmB,IAAAA,SAAS,CAACZ,eAAV,GAA4B,EAA5B;AACH;;AACD,SAAOY,SAAP;AACH;;AACD,SAASG,qBAAT,CAA+Bjb,WAA/B,EAA4C4F,UAA5C,EAAwDxW,GAAxD,EAA6D;AACzD,MAAIyO,MAAJ;;AACA,MAAImC,WAAW,CAAC6S,MAAZ,KAAuBhN,SAA3B,EAAsC;AAClC,QAAI,OAAOD,UAAP,KAAsB,QAA1B,EAAoC;AAChCA,MAAAA,UAAU,GAAG3B,SAAS,CAAC2B,UAAD,CAAtB;AACH;;AACD/H,IAAAA,MAAM,GAAGmd,kBAAkB,CAAChb,WAAD,EAAc4F,UAAd,EAA0BxW,GAA1B,CAA3B;AACH,GALD,MAMK;AACD,QAAIspB,QAAQ,GAAG,KAAK,CAApB;;AACA,QAAItpB,GAAG,IAAI,IAAX,EAAiB;AACbspB,MAAAA,QAAQ,GAAGvkB,QAAX;AACH,KAFD,MAGK;AACDukB,MAAAA,QAAQ,GAAGzU,SAAS,CAAC7U,GAAD,CAApB;AACH;;AACDyO,IAAAA,MAAM,GAAGmd,kBAAkB,CAAChb,WAAD,EAAc4F,UAAd,EAA0B8S,QAA1B,CAA3B;AACH;;AACD7a,EAAAA,MAAM,CAAC+b,cAAP,GAAwB,IAAxB;AACA,SAAO/b,MAAP;AACH;;AACD,SAASqd,gBAAT,CAA0Blb,WAA1B,EAAuC4F,UAAvC,EAAmDxW,GAAnD,EAAwD;AACpD,MAAI0rB,SAAS,GAAG9a,WAAW,CAACiK,IAAZ,EAAhB;AACA6Q,EAAAA,SAAS,CAACjB,OAAV,GAAoB,IAApB;;AACA,MAAIjU,UAAU,KAAK7E,SAAnB,EAA8B;AAC1B6E,IAAAA,UAAU,GAAG,IAAb;AACH;;AACDkV,EAAAA,SAAS,CAACX,cAAV,GAA2BvU,UAA3B;;AACA,MAAIxW,GAAG,KAAK2R,SAAZ,EAAuB;AACnB+Z,IAAAA,SAAS,CAAChB,WAAV,GAAwB,IAAxB;AACAgB,IAAAA,SAAS,CAACV,aAAV,GAA0BhrB,GAA1B;AACH,GAHD,MAIK;AACD0rB,IAAAA,SAAS,CAAChB,WAAV,GAAwB,KAAxB;AACAgB,IAAAA,SAAS,CAACV,aAAV,GAA0B,EAA1B;AACH;;AACD,SAAOU,SAAP;AACH;;AACD,SAASK,oBAAT,CAA8Bnb,WAA9B,EAA2C4F,UAA3C,EAAuDxW,GAAvD,EAA4D;AACxD,MAAIspB,QAAJ;AACA,MAAI7a,MAAJ;;AACA,MAAImC,WAAW,CAAC6S,MAAZ,KAAuBhN,SAA3B,EAAsC;AAClC,QAAI,OAAOD,UAAP,KAAsB,QAA1B,EAAoC;AAChCA,MAAAA,UAAU,GAAGtB,WAAW,CAACsB,UAAD,CAAxB;AACH;;AACD/H,IAAAA,MAAM,GAAGqd,gBAAgB,CAAClb,WAAD,EAAc4F,UAAd,EAA0BxW,GAA1B,CAAzB;AACH,GALD,MAMK;AACD,QAAIA,GAAG,IAAI,IAAX,EAAiB;AACbspB,MAAAA,QAAQ,GAAGxkB,QAAX;AACH,KAFD,MAGK;AACDwkB,MAAAA,QAAQ,GAAGpU,WAAW,CAAClV,GAAD,CAAtB;AACH;;AACDyO,IAAAA,MAAM,GAAGqd,gBAAgB,CAAClb,WAAD,EAAc4F,UAAd,EAA0B8S,QAA1B,CAAzB;AACH;;AACD7a,EAAAA,MAAM,CAACkc,aAAP,GAAuB,IAAvB;AACA,SAAOlc,MAAP;AACH;;AACD,SAASud,kBAAT,CAA4Bpb,WAA5B,EAAyCyH,KAAzC,EAAgD;AAC5C,MAAIqT,SAAS,GAAG9a,WAAW,CAACiK,IAAZ,EAAhB;AACA6Q,EAAAA,SAAS,CAACjI,MAAV,GAAmBpL,KAAnB;AACA,SAAOqT,SAAP;AACH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASO,sCAAT,CAAgDrb,WAAhD,EAA6D;AACzD,MAAIsb,EAAE,GAAG,EAAT;;AACA,MAAItb,WAAW,CAAC0a,SAAZ,EAAJ,EAA6B;AACzB,WAAOY,EAAP;AACH;;AACD,MAAIC,OAAJ;;AACA,MAAIvb,WAAW,CAAC6S,MAAZ,KAAuB3J,cAA3B,EAA2C;AACvCqS,IAAAA,OAAO,GAAG;AAAY;AAAtB;AACH,GAFD,MAGK,IAAIvb,WAAW,CAAC6S,MAAZ,KAAuBV,WAA3B,EAAwC;AACzCoJ,IAAAA,OAAO,GAAG;AAAS;AAAnB;AACH,GAFI,MAGA,IAAIvb,WAAW,CAAC6S,MAAZ,KAAuBhN,SAA3B,EAAsC;AACvC0V,IAAAA,OAAO,GAAG;AAAO;AAAjB;AACH,GAFI,MAGA;AACDnuB,IAAAA,MAAM,CAAC4S,WAAW,CAAC6S,MAAZ,YAA8BT,SAA/B,EAA0C,0BAA1C,CAAN;AACAmJ,IAAAA,OAAO,GAAGvb,WAAW,CAAC6S,MAAZ,CAAmB/iB,QAAnB,EAAV;AACH;;AACDwrB,EAAAA,EAAE,CAAC;AAAU;AAAX,GAAF,GAA+BruB,SAAS,CAACsuB,OAAD,CAAxC;;AACA,MAAIvb,WAAW,CAAC0Z,SAAhB,EAA2B;AACvB4B,IAAAA,EAAE,CAAC;AAAU;AAAX,KAAF,GAA+BruB,SAAS,CAAC+S,WAAW,CAACia,gBAAb,CAAxC;;AACA,QAAIja,WAAW,CAAC2Z,aAAhB,EAA+B;AAC3B2B,MAAAA,EAAE,CAAC;AAAU;AAAX,OAAF,IACI,MAAMruB,SAAS,CAAC+S,WAAW,CAACka,eAAb,CADnB;AAEH;AACJ;;AACD,MAAIla,WAAW,CAAC6Z,OAAhB,EAAyB;AACrByB,IAAAA,EAAE,CAAC;AAAQ;AAAT,KAAF,GAA2BruB,SAAS,CAAC+S,WAAW,CAACma,cAAb,CAApC;;AACA,QAAIna,WAAW,CAAC8Z,WAAhB,EAA6B;AACzBwB,MAAAA,EAAE,CAAC;AAAQ;AAAT,OAAF,IACI,MAAMruB,SAAS,CAAC+S,WAAW,CAACoa,aAAb,CADnB;AAEH;AACJ;;AACD,MAAIpa,WAAW,CAACyZ,SAAhB,EAA2B;AACvB,QAAIzZ,WAAW,CAACqY,cAAZ,EAAJ,EAAkC;AAC9BiD,MAAAA,EAAE,CAAC;AAAe;AAAhB,OAAF,GAA0Ctb,WAAW,CAACkY,MAAtD;AACH,KAFD,MAGK;AACDoD,MAAAA,EAAE,CAAC;AAAc;AAAf,OAAF,GAAwCtb,WAAW,CAACkY,MAApD;AACH;AACJ;;AACD,SAAOoD,EAAP;AACH;;AACD,SAASE,yBAAT,CAAmCxb,WAAnC,EAAgD;AAC5C,MAAIpL,GAAG,GAAG,EAAV;;AACA,MAAIoL,WAAW,CAAC0Z,SAAhB,EAA2B;AACvB9kB,IAAAA,GAAG,CAAC;AAAK;AAAN,KAAH,GACIoL,WAAW,CAACia,gBADhB;;AAEA,QAAIja,WAAW,CAAC2Z,aAAhB,EAA+B;AAC3B/kB,MAAAA,GAAG,CAAC;AAAK;AAAN,OAAH,GACIoL,WAAW,CAACka,eADhB;AAEH;AACJ;;AACD,MAAIla,WAAW,CAAC6Z,OAAhB,EAAyB;AACrBjlB,IAAAA,GAAG,CAAC;AAAK;AAAN,KAAH,GAAkCoL,WAAW,CAACma,cAA9C;;AACA,QAAIna,WAAW,CAAC8Z,WAAhB,EAA6B;AACzBllB,MAAAA,GAAG,CAAC;AAAK;AAAN,OAAH,GAAiCoL,WAAW,CAACoa,aAA7C;AACH;AACJ;;AACD,MAAIpa,WAAW,CAACyZ,SAAhB,EAA2B;AACvB7kB,IAAAA,GAAG,CAAC;AAAI;AAAL,KAAH,GAAuBoL,WAAW,CAACkY,MAAnC;AACA,QAAIuD,QAAQ,GAAGzb,WAAW,CAACga,SAA3B;;AACA,QAAIyB,QAAQ,KAAK,EAAjB,EAAqB;AACjB,UAAIzb,WAAW,CAACqY,cAAZ,EAAJ,EAAkC;AAC9BoD,QAAAA,QAAQ,GAAG;AAAI;AAAf;AACH,OAFD,MAGK;AACDA,QAAAA,QAAQ,GAAG;AAAI;AAAf;AACH;AACJ;;AACD7mB,IAAAA,GAAG,CAAC;AAAK;AAAN,KAAH,GAA4B6mB,QAA5B;AACH,GA5B2C,CA6B5C;;;AACA,MAAIzb,WAAW,CAAC6S,MAAZ,KAAuB3J,cAA3B,EAA2C;AACvCtU,IAAAA,GAAG,CAAC;AAAI;AAAL,KAAH,GAAuBoL,WAAW,CAAC6S,MAAZ,CAAmB/iB,QAAnB,EAAvB;AACH;;AACD,SAAO8E,GAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAI8mB,sBAAJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,KAAK;AAAG;AAAe,YAAY;AACnC,WAASA,KAAT,CAAeC,IAAf,EAAqBlkB,IAArB,EAA2BmkB,YAA3B,EAAyCC,cAAzC,EAAyD;AACrD,SAAKF,IAAL,GAAYA,IAAZ;AACA,SAAKlkB,IAAL,GAAYA,IAAZ;AACA,SAAKmkB,YAAL,GAAoBA,YAApB;AACA,SAAKC,cAAL,GAAsBA,cAAtB;AACH;;AACDvgB,EAAAA,MAAM,CAACC,cAAP,CAAsBmgB,KAAtB,EAA6B,wBAA7B,EAAuD;AACnDlsB,IAAAA,GAAG,EAAE,YAAY;AACbrC,MAAAA,MAAM,CAACsuB,sBAAD,EAAyB,kCAAzB,CAAN;AACA,aAAOA,sBAAP;AACH,KAJkD;AAKnDvsB,IAAAA,GAAG,EAAE,UAAUqW,GAAV,EAAe;AAChBkW,MAAAA,sBAAsB,GAAGlW,GAAzB;AACH,KAPkD;AAQnD/J,IAAAA,UAAU,EAAE,KARuC;AASnDC,IAAAA,YAAY,EAAE;AATqC,GAAvD;AAWA;AACJ;AACA;;AACIigB,EAAAA,KAAK,CAACI,uBAAN,GAAgC,UAAUle,MAAV,EAAkB;AAC9C,QAAIme,SAAS,GAAG,IAAhB;AACA,QAAIC,OAAO,GAAG,IAAd;;AACA,QAAIpe,MAAM,CAAC2Z,QAAP,EAAJ,EAAuB;AACnBwE,MAAAA,SAAS,GAAGne,MAAM,CAAC8Z,kBAAP,EAAZ;AACH;;AACD,QAAI9Z,MAAM,CAAC+Z,MAAP,EAAJ,EAAqB;AACjBqE,MAAAA,OAAO,GAAGpe,MAAM,CAACka,gBAAP,EAAV;AACH;;AACD,QAAIla,MAAM,CAAC4W,QAAP,OAAsB5O,SAA1B,EAAqC;AACjC,UAAIqW,gBAAgB,GAAG,oEACnB,mCADJ;AAEA,UAAIC,iBAAiB,GAAG,kFACpB,sDADJ;;AAEA,UAAIte,MAAM,CAAC2Z,QAAP,EAAJ,EAAuB;AACnB,YAAIC,SAAS,GAAG5Z,MAAM,CAAC6Z,iBAAP,EAAhB;;AACA,YAAID,SAAS,KAAKvjB,QAAlB,EAA4B;AACxB,gBAAM,IAAIvB,KAAJ,CAAUupB,gBAAV,CAAN;AACH,SAFD,MAGK,IAAI,OAAOF,SAAP,KAAqB,QAAzB,EAAmC;AACpC,gBAAM,IAAIrpB,KAAJ,CAAUwpB,iBAAV,CAAN;AACH;AACJ;;AACD,UAAIte,MAAM,CAAC+Z,MAAP,EAAJ,EAAqB;AACjB,YAAIC,OAAO,GAAGha,MAAM,CAACia,eAAP,EAAd;;AACA,YAAID,OAAO,KAAK1jB,QAAhB,EAA0B;AACtB,gBAAM,IAAIxB,KAAJ,CAAUupB,gBAAV,CAAN;AACH,SAFD,MAGK,IAAI,OAAOD,OAAP,KAAmB,QAAvB,EAAiC;AAClC,gBAAM,IAAItpB,KAAJ,CAAUwpB,iBAAV,CAAN;AACH;AACJ;AACJ,KAvBD,MAwBK,IAAIte,MAAM,CAAC4W,QAAP,OAAsBvL,cAA1B,EAA0C;AAC3C,UAAK8S,SAAS,IAAI,IAAb,IAAqB,CAACvb,eAAe,CAACub,SAAD,CAAtC,IACCC,OAAO,IAAI,IAAX,IAAmB,CAACxb,eAAe,CAACwb,OAAD,CADxC,EACoD;AAChD,cAAM,IAAItpB,KAAJ,CAAU,+EACZ,iFADY,GAEZ,gCAFE,CAAN;AAGH;AACJ,KAPI,MAQA;AACDvF,MAAAA,MAAM,CAACyQ,MAAM,CAAC4W,QAAP,cAA6BrC,SAA7B,IACHvU,MAAM,CAAC4W,QAAP,OAAsBtC,WADpB,EACiC,qBADjC,CAAN;;AAEA,UAAK6J,SAAS,IAAI,IAAb,IAAqB,OAAOA,SAAP,KAAqB,QAA3C,IACCC,OAAO,IAAI,IAAX,IAAmB,OAAOA,OAAP,KAAmB,QAD3C,EACsD;AAClD,cAAM,IAAItpB,KAAJ,CAAU,uFACZ,gCADE,CAAN;AAEH;AACJ;AACJ,GAlDD;AAmDA;AACJ;AACA;;;AACIgpB,EAAAA,KAAK,CAACS,cAAN,GAAuB,UAAUve,MAAV,EAAkB;AACrC,QAAIA,MAAM,CAAC2Z,QAAP,MACA3Z,MAAM,CAAC+Z,MAAP,EADA,IAEA/Z,MAAM,CAAC0c,QAAP,EAFA,IAGA,CAAC1c,MAAM,CAAC2c,gBAAP,EAHL,EAGgC;AAC5B,YAAM,IAAI7nB,KAAJ,CAAU,0FACZ,0CADE,CAAN;AAEH;AACJ,GARD;AASA;AACJ;AACA;;;AACIgpB,EAAAA,KAAK,CAACzsB,SAAN,CAAgBmtB,8BAAhB,GAAiD,UAAUzb,MAAV,EAAkB;AAC/D,QAAI,KAAKkb,cAAL,KAAwB,IAA5B,EAAkC;AAC9B,YAAM,IAAInpB,KAAJ,CAAUiO,MAAM,GAAG,6CAAnB,CAAN;AACH;AACJ,GAJD;;AAKA+a,EAAAA,KAAK,CAACzsB,SAAN,CAAgBslB,cAAhB,GAAiC,YAAY;AACzC,WAAO,KAAKqH,YAAZ;AACH,GAFD;;AAGAF,EAAAA,KAAK,CAACzsB,SAAN,CAAgBqkB,MAAhB,GAAyB,YAAY;AACjC5lB,IAAAA,gBAAgB,CAAC,WAAD,EAAc,CAAd,EAAiB,CAAjB,EAAoB2D,SAAS,CAACC,MAA9B,CAAhB,CADiC,CAEjC;AACA;AACA;;AACA,WAAO,IAAIoqB,KAAK,CAACD,sBAAV,CAAiC,KAAKE,IAAtC,EAA4C,KAAKlkB,IAAjD,CAAP;AACH,GAND;;AAOAikB,EAAAA,KAAK,CAACzsB,SAAN,CAAgBotB,EAAhB,GAAqB,UAAU1a,SAAV,EAAqB2a,QAArB,EAA+BC,uBAA/B,EAAwDC,OAAxD,EAAiE;AAClF9uB,IAAAA,gBAAgB,CAAC,UAAD,EAAa,CAAb,EAAgB,CAAhB,EAAmB2D,SAAS,CAACC,MAA7B,CAAhB;AACAoQ,IAAAA,iBAAiB,CAAC,UAAD,EAAa,CAAb,EAAgBC,SAAhB,EAA2B,KAA3B,CAAjB;AACAhU,IAAAA,gBAAgB,CAAC,UAAD,EAAa,CAAb,EAAgB2uB,QAAhB,EAA0B,KAA1B,CAAhB;AACA,QAAIG,GAAG,GAAGf,KAAK,CAACgB,wBAAN,CAA+B,UAA/B,EAA2CH,uBAA3C,EAAoEC,OAApE,CAAV;;AACA,QAAI7a,SAAS,KAAK,OAAlB,EAA2B;AACvB,WAAKgb,YAAL,CAAkBL,QAAlB,EAA4BG,GAAG,CAACpa,MAAhC,EAAwCoa,GAAG,CAACD,OAA5C;AACH,KAFD,MAGK;AACD,UAAII,SAAS,GAAG,EAAhB;AACAA,MAAAA,SAAS,CAACjb,SAAD,CAAT,GAAuB2a,QAAvB;AACA,WAAKO,YAAL,CAAkBD,SAAlB,EAA6BH,GAAG,CAACpa,MAAjC,EAAyCoa,GAAG,CAACD,OAA7C;AACH;;AACD,WAAOF,QAAP;AACH,GAdD;;AAeAZ,EAAAA,KAAK,CAACzsB,SAAN,CAAgB0tB,YAAhB,GAA+B,UAAUL,QAAV,EAAoBQ,cAApB,EAAoCN,OAApC,EAA6C;AACxE,QAAIO,SAAS,GAAG,IAAI/I,sBAAJ,CAA2BsI,QAA3B,EAAqCQ,cAAc,IAAI,IAAvD,EAA6DN,OAAO,IAAI,IAAxE,CAAhB;AACA,SAAKb,IAAL,CAAUqB,wBAAV,CAAmC,IAAnC,EAAyCD,SAAzC;AACH,GAHD;;AAIArB,EAAAA,KAAK,CAACzsB,SAAN,CAAgB4tB,YAAhB,GAA+B,UAAUD,SAAV,EAAqBE,cAArB,EAAqCN,OAArC,EAA8C;AACzE,QAAIO,SAAS,GAAG,IAAI9H,sBAAJ,CAA2B2H,SAA3B,EAAsCE,cAAtC,EAAsDN,OAAtD,CAAhB;AACA,SAAKb,IAAL,CAAUqB,wBAAV,CAAmC,IAAnC,EAAyCD,SAAzC;AACH,GAHD;;AAIArB,EAAAA,KAAK,CAACzsB,SAAN,CAAgBguB,GAAhB,GAAsB,UAAUtb,SAAV,EAAqB2a,QAArB,EAA+BE,OAA/B,EAAwC;AAC1D9uB,IAAAA,gBAAgB,CAAC,WAAD,EAAc,CAAd,EAAiB,CAAjB,EAAoB2D,SAAS,CAACC,MAA9B,CAAhB;AACAoQ,IAAAA,iBAAiB,CAAC,WAAD,EAAc,CAAd,EAAiBC,SAAjB,EAA4B,IAA5B,CAAjB;AACAhU,IAAAA,gBAAgB,CAAC,WAAD,EAAc,CAAd,EAAiB2uB,QAAjB,EAA2B,IAA3B,CAAhB;AACAtuB,IAAAA,qBAAqB,CAAC,WAAD,EAAc,CAAd,EAAiBwuB,OAAjB,EAA0B,IAA1B,CAArB;AACA,QAAIO,SAAS,GAAG,IAAhB;AACA,QAAIH,SAAS,GAAG,IAAhB;;AACA,QAAIjb,SAAS,KAAK,OAAlB,EAA2B;AACvB,UAAIub,aAAa,GAAGZ,QAAQ,IAAI,IAAhC;AACAS,MAAAA,SAAS,GAAG,IAAI/I,sBAAJ,CAA2BkJ,aAA3B,EAA0C,IAA1C,EAAgDV,OAAO,IAAI,IAA3D,CAAZ;AACH,KAHD,MAIK,IAAI7a,SAAJ,EAAe;AAChB,UAAI2a,QAAJ,EAAc;AACVM,QAAAA,SAAS,GAAG,EAAZ;AACAA,QAAAA,SAAS,CAACjb,SAAD,CAAT,GAAuB2a,QAAvB;AACH;;AACDS,MAAAA,SAAS,GAAG,IAAI9H,sBAAJ,CAA2B2H,SAA3B,EAAsC,IAAtC,EAA4CJ,OAAO,IAAI,IAAvD,CAAZ;AACH;;AACD,SAAKb,IAAL,CAAUwB,2BAAV,CAAsC,IAAtC,EAA4CJ,SAA5C;AACH,GAnBD;AAoBA;AACJ;AACA;;;AACIrB,EAAAA,KAAK,CAACzsB,SAAN,CAAgBO,GAAhB,GAAsB,YAAY;AAC9B,WAAO,KAAKmsB,IAAL,CAAUhU,QAAV,CAAmB,IAAnB,CAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACI+T,EAAAA,KAAK,CAACzsB,SAAN,CAAgBmuB,IAAhB,GAAuB,UAAUzb,SAAV,EAAqB0b,YAArB,EAAmCC,wBAAnC,EAA6Dd,OAA7D,EAAsE;AACzF,QAAIzN,KAAK,GAAG,IAAZ;;AACArhB,IAAAA,gBAAgB,CAAC,YAAD,EAAe,CAAf,EAAkB,CAAlB,EAAqB2D,SAAS,CAACC,MAA/B,CAAhB;AACAoQ,IAAAA,iBAAiB,CAAC,YAAD,EAAe,CAAf,EAAkBC,SAAlB,EAA6B,KAA7B,CAAjB;AACAhU,IAAAA,gBAAgB,CAAC,YAAD,EAAe,CAAf,EAAkB0vB,YAAlB,EAAgC,IAAhC,CAAhB;AACA,QAAIZ,GAAG,GAAGf,KAAK,CAACgB,wBAAN,CAA+B,YAA/B,EAA6CY,wBAA7C,EAAuEd,OAAvE,CAAV,CALyF,CAMzF;AACA;AACA;AACA;;AACA,QAAIe,SAAS,GAAG,IAAhB;AACA,QAAIhb,QAAQ,GAAG,IAAI3U,QAAJ,EAAf,CAXyF,CAYzF;;AACA2U,IAAAA,QAAQ,CAACG,OAAT,CAAiB8a,KAAjB,CAAuB,YAAY,CAAG,CAAtC;;AACA,QAAIC,YAAY,GAAG,UAAUta,QAAV,EAAoB;AACnC;AACA;AACA,UAAIoa,SAAJ,EAAe;AACXA,QAAAA,SAAS,GAAG,KAAZ;;AACAxO,QAAAA,KAAK,CAACkO,GAAN,CAAUtb,SAAV,EAAqB8b,YAArB;;AACA,YAAIJ,YAAJ,EAAkB;AACdA,UAAAA,YAAY,CAAChrB,IAAb,CAAkBoqB,GAAG,CAACD,OAAtB,EAA+BrZ,QAA/B;AACH;;AACDZ,QAAAA,QAAQ,CAACmb,OAAT,CAAiBva,QAAjB;AACH;AACJ,KAXD;;AAYA,SAAKkZ,EAAL,CAAQ1a,SAAR,EAAmB8b,YAAnB;AACA;AAAY,cAAUE,GAAV,EAAe;AACvB5O,MAAAA,KAAK,CAACkO,GAAN,CAAUtb,SAAV,EAAqB8b,YAArB;;AACA,UAAIhB,GAAG,CAACpa,MAAR,EAAgB;AACZoa,QAAAA,GAAG,CAACpa,MAAJ,CAAWhQ,IAAX,CAAgBoqB,GAAG,CAACD,OAApB,EAA6BmB,GAA7B;AACH;;AACDpb,MAAAA,QAAQ,CAACqb,MAAT,CAAgBD,GAAhB;AACH,KAPD;AAQA,WAAOpb,QAAQ,CAACG,OAAhB;AACH,GAnCD;AAoCA;AACJ;AACA;;;AACIgZ,EAAAA,KAAK,CAACzsB,SAAN,CAAgB4uB,YAAhB,GAA+B,UAAUC,KAAV,EAAiB;AAC5CpwB,IAAAA,gBAAgB,CAAC,oBAAD,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B2D,SAAS,CAACC,MAAvC,CAAhB;;AACA,QAAI,OAAOwsB,KAAP,KAAiB,QAAjB,IACAjqB,IAAI,CAACC,KAAL,CAAWgqB,KAAX,MAAsBA,KADtB,IAEAA,KAAK,IAAI,CAFb,EAEgB;AACZ,YAAM,IAAIprB,KAAJ,CAAU,gEAAV,CAAN;AACH;;AACD,QAAI,KAAKkpB,YAAL,CAAkBtB,QAAlB,EAAJ,EAAkC;AAC9B,YAAM,IAAI5nB,KAAJ,CAAU,0EACZ,gCADE,CAAN;AAEH;;AACD,WAAO,IAAIgpB,KAAJ,CAAU,KAAKC,IAAf,EAAqB,KAAKlkB,IAA1B,EAAgCkjB,uBAAuB,CAAC,KAAKiB,YAAN,EAAoBkC,KAApB,CAAvD,EAAmF,KAAKjC,cAAxF,CAAP;AACH,GAZD;AAaA;AACJ;AACA;;;AACIH,EAAAA,KAAK,CAACzsB,SAAN,CAAgB8uB,WAAhB,GAA8B,UAAUD,KAAV,EAAiB;AAC3CpwB,IAAAA,gBAAgB,CAAC,mBAAD,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B2D,SAAS,CAACC,MAAtC,CAAhB;;AACA,QAAI,OAAOwsB,KAAP,KAAiB,QAAjB,IACAjqB,IAAI,CAACC,KAAL,CAAWgqB,KAAX,MAAsBA,KADtB,IAEAA,KAAK,IAAI,CAFb,EAEgB;AACZ,YAAM,IAAIprB,KAAJ,CAAU,+DAAV,CAAN;AACH;;AACD,QAAI,KAAKkpB,YAAL,CAAkBtB,QAAlB,EAAJ,EAAkC;AAC9B,YAAM,IAAI5nB,KAAJ,CAAU,yEACZ,gCADE,CAAN;AAEH;;AACD,WAAO,IAAIgpB,KAAJ,CAAU,KAAKC,IAAf,EAAqB,KAAKlkB,IAA1B,EAAgCqjB,sBAAsB,CAAC,KAAKc,YAAN,EAAoBkC,KAApB,CAAtD,EAAkF,KAAKjC,cAAvF,CAAP;AACH,GAZD;AAaA;AACJ;AACA;;;AACIH,EAAAA,KAAK,CAACzsB,SAAN,CAAgB+uB,YAAhB,GAA+B,UAAUvmB,IAAV,EAAgB;AAC3C/J,IAAAA,gBAAgB,CAAC,oBAAD,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B2D,SAAS,CAACC,MAAvC,CAAhB;;AACA,QAAImG,IAAI,KAAK,MAAb,EAAqB;AACjB,YAAM,IAAI/E,KAAJ,CAAU,yEAAV,CAAN;AACH,KAFD,MAGK,IAAI+E,IAAI,KAAK,WAAb,EAA0B;AAC3B,YAAM,IAAI/E,KAAJ,CAAU,mFAAV,CAAN;AACH,KAFI,MAGA,IAAI+E,IAAI,KAAK,QAAb,EAAuB;AACxB,YAAM,IAAI/E,KAAJ,CAAU,6EAAV,CAAN;AACH;;AACDmP,IAAAA,kBAAkB,CAAC,oBAAD,EAAuB,CAAvB,EAA0BpK,IAA1B,EAAgC,KAAhC,CAAlB;AACA,SAAK2kB,8BAAL,CAAoC,oBAApC;AACA,QAAI6B,UAAU,GAAG,IAAIzlB,IAAJ,CAASf,IAAT,CAAjB;;AACA,QAAIuC,WAAW,CAACikB,UAAD,CAAf,EAA6B;AACzB,YAAM,IAAIvrB,KAAJ,CAAU,mFAAV,CAAN;AACH;;AACD,QAAI8U,KAAK,GAAG,IAAI2K,SAAJ,CAAc8L,UAAd,CAAZ;AACA,QAAIpD,SAAS,GAAGM,kBAAkB,CAAC,KAAKS,YAAN,EAAoBpU,KAApB,CAAlC;AACAkU,IAAAA,KAAK,CAACI,uBAAN,CAA8BjB,SAA9B;AACA,WAAO,IAAIa,KAAJ,CAAU,KAAKC,IAAf,EAAqB,KAAKlkB,IAA1B,EAAgCojB,SAAhC;AAA2C;AAAmB,QAA9D,CAAP;AACH,GArBD;AAsBA;AACJ;AACA;;;AACIa,EAAAA,KAAK,CAACzsB,SAAN,CAAgBivB,UAAhB,GAA6B,YAAY;AACrCxwB,IAAAA,gBAAgB,CAAC,kBAAD,EAAqB,CAArB,EAAwB,CAAxB,EAA2B2D,SAAS,CAACC,MAArC,CAAhB;AACA,SAAK8qB,8BAAL,CAAoC,kBAApC;AACA,QAAIvB,SAAS,GAAGM,kBAAkB,CAAC,KAAKS,YAAN,EAAoBhW,SAApB,CAAlC;AACA8V,IAAAA,KAAK,CAACI,uBAAN,CAA8BjB,SAA9B;AACA,WAAO,IAAIa,KAAJ,CAAU,KAAKC,IAAf,EAAqB,KAAKlkB,IAA1B,EAAgCojB,SAAhC;AAA2C;AAAmB,QAA9D,CAAP;AACH,GAND;AAOA;AACJ;AACA;;;AACIa,EAAAA,KAAK,CAACzsB,SAAN,CAAgBkvB,eAAhB,GAAkC,YAAY;AAC1CzwB,IAAAA,gBAAgB,CAAC,uBAAD,EAA0B,CAA1B,EAA6B,CAA7B,EAAgC2D,SAAS,CAACC,MAA1C,CAAhB;AACA,SAAK8qB,8BAAL,CAAoC,uBAApC;AACA,QAAIvB,SAAS,GAAGM,kBAAkB,CAAC,KAAKS,YAAN,EAAoB3S,cAApB,CAAlC;AACAyS,IAAAA,KAAK,CAACI,uBAAN,CAA8BjB,SAA9B;AACA,WAAO,IAAIa,KAAJ,CAAU,KAAKC,IAAf,EAAqB,KAAKlkB,IAA1B,EAAgCojB,SAAhC;AAA2C;AAAmB,QAA9D,CAAP;AACH,GAND;AAOA;AACJ;AACA;;;AACIa,EAAAA,KAAK,CAACzsB,SAAN,CAAgBmvB,YAAhB,GAA+B,YAAY;AACvC1wB,IAAAA,gBAAgB,CAAC,oBAAD,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B2D,SAAS,CAACC,MAAvC,CAAhB;AACA,SAAK8qB,8BAAL,CAAoC,oBAApC;AACA,QAAIvB,SAAS,GAAGM,kBAAkB,CAAC,KAAKS,YAAN,EAAoB1J,WAApB,CAAlC;AACAwJ,IAAAA,KAAK,CAACI,uBAAN,CAA8BjB,SAA9B;AACA,WAAO,IAAIa,KAAJ,CAAU,KAAKC,IAAf,EAAqB,KAAKlkB,IAA1B,EAAgCojB,SAAhC;AAA2C;AAAmB,QAA9D,CAAP;AACH,GAND;;AAOAa,EAAAA,KAAK,CAACzsB,SAAN,CAAgBovB,OAAhB,GAA0B,UAAUjvB,KAAV,EAAiBQ,IAAjB,EAAuB;AAC7C,QAAIR,KAAK,KAAK,KAAK,CAAnB,EAAsB;AAAEA,MAAAA,KAAK,GAAG,IAAR;AAAe;;AACvC1B,IAAAA,gBAAgB,CAAC,eAAD,EAAkB,CAAlB,EAAqB,CAArB,EAAwB2D,SAAS,CAACC,MAAlC,CAAhB;AACAoP,IAAAA,uBAAuB,CAAC,eAAD,EAAkB,CAAlB,EAAqBtR,KAArB,EAA4B,KAAKqI,IAAjC,EAAuC,IAAvC,CAAvB;AACAmK,IAAAA,WAAW,CAAC,eAAD,EAAkB,CAAlB,EAAqBhS,IAArB,EAA2B,IAA3B,CAAX;AACA,QAAIirB,SAAS,GAAGE,kBAAkB,CAAC,KAAKa,YAAN,EAAoBxsB,KAApB,EAA2BQ,IAA3B,CAAlC;AACA8rB,IAAAA,KAAK,CAACS,cAAN,CAAqBtB,SAArB;AACAa,IAAAA,KAAK,CAACI,uBAAN,CAA8BjB,SAA9B;;AACA,QAAI,KAAKe,YAAL,CAAkBrE,QAAlB,EAAJ,EAAkC;AAC9B,YAAM,IAAI7kB,KAAJ,CAAU,+EACZ,cADE,CAAN;AAEH,KAX4C,CAY7C;;;AACA,QAAItD,KAAK,KAAK0R,SAAd,EAAyB;AACrB1R,MAAAA,KAAK,GAAG,IAAR;AACAQ,MAAAA,IAAI,GAAG,IAAP;AACH;;AACD,WAAO,IAAI8rB,KAAJ,CAAU,KAAKC,IAAf,EAAqB,KAAKlkB,IAA1B,EAAgCojB,SAAhC,EAA2C,KAAKgB,cAAhD,CAAP;AACH,GAlBD;;AAmBAH,EAAAA,KAAK,CAACzsB,SAAN,CAAgBqvB,UAAhB,GAA6B,UAAUlvB,KAAV,EAAiBQ,IAAjB,EAAuB;AAChD,QAAIR,KAAK,KAAK,KAAK,CAAnB,EAAsB;AAAEA,MAAAA,KAAK,GAAG,IAAR;AAAe;;AACvC1B,IAAAA,gBAAgB,CAAC,kBAAD,EAAqB,CAArB,EAAwB,CAAxB,EAA2B2D,SAAS,CAACC,MAArC,CAAhB;AACAoP,IAAAA,uBAAuB,CAAC,kBAAD,EAAqB,CAArB,EAAwBtR,KAAxB,EAA+B,KAAKqI,IAApC,EAA0C,KAA1C,CAAvB;AACAmK,IAAAA,WAAW,CAAC,kBAAD,EAAqB,CAArB,EAAwBhS,IAAxB,EAA8B,IAA9B,CAAX;AACA,QAAIirB,SAAS,GAAGG,qBAAqB,CAAC,KAAKY,YAAN,EAAoBxsB,KAApB,EAA2BQ,IAA3B,CAArC;AACA8rB,IAAAA,KAAK,CAACS,cAAN,CAAqBtB,SAArB;AACAa,IAAAA,KAAK,CAACI,uBAAN,CAA8BjB,SAA9B;;AACA,QAAI,KAAKe,YAAL,CAAkBrE,QAAlB,EAAJ,EAAkC;AAC9B,YAAM,IAAI7kB,KAAJ,CAAU,8FACZ,cADE,CAAN;AAEH;;AACD,WAAO,IAAIgpB,KAAJ,CAAU,KAAKC,IAAf,EAAqB,KAAKlkB,IAA1B,EAAgCojB,SAAhC,EAA2C,KAAKgB,cAAhD,CAAP;AACH,GAbD;;AAcAH,EAAAA,KAAK,CAACzsB,SAAN,CAAgBsvB,KAAhB,GAAwB,UAAUnvB,KAAV,EAAiBQ,IAAjB,EAAuB;AAC3C,QAAIR,KAAK,KAAK,KAAK,CAAnB,EAAsB;AAAEA,MAAAA,KAAK,GAAG,IAAR;AAAe;;AACvC1B,IAAAA,gBAAgB,CAAC,aAAD,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB2D,SAAS,CAACC,MAAhC,CAAhB;AACAoP,IAAAA,uBAAuB,CAAC,aAAD,EAAgB,CAAhB,EAAmBtR,KAAnB,EAA0B,KAAKqI,IAA/B,EAAqC,IAArC,CAAvB;AACAmK,IAAAA,WAAW,CAAC,aAAD,EAAgB,CAAhB,EAAmBhS,IAAnB,EAAyB,IAAzB,CAAX;AACA,QAAIirB,SAAS,GAAGI,gBAAgB,CAAC,KAAKW,YAAN,EAAoBxsB,KAApB,EAA2BQ,IAA3B,CAAhC;AACA8rB,IAAAA,KAAK,CAACS,cAAN,CAAqBtB,SAArB;AACAa,IAAAA,KAAK,CAACI,uBAAN,CAA8BjB,SAA9B;;AACA,QAAI,KAAKe,YAAL,CAAkBjE,MAAlB,EAAJ,EAAgC;AAC5B,YAAM,IAAIjlB,KAAJ,CAAU,wFACZ,WADE,CAAN;AAEH;;AACD,WAAO,IAAIgpB,KAAJ,CAAU,KAAKC,IAAf,EAAqB,KAAKlkB,IAA1B,EAAgCojB,SAAhC,EAA2C,KAAKgB,cAAhD,CAAP;AACH,GAbD;;AAcAH,EAAAA,KAAK,CAACzsB,SAAN,CAAgBuvB,SAAhB,GAA4B,UAAUpvB,KAAV,EAAiBQ,IAAjB,EAAuB;AAC/C,QAAIR,KAAK,KAAK,KAAK,CAAnB,EAAsB;AAAEA,MAAAA,KAAK,GAAG,IAAR;AAAe;;AACvC1B,IAAAA,gBAAgB,CAAC,iBAAD,EAAoB,CAApB,EAAuB,CAAvB,EAA0B2D,SAAS,CAACC,MAApC,CAAhB;AACAoP,IAAAA,uBAAuB,CAAC,iBAAD,EAAoB,CAApB,EAAuBtR,KAAvB,EAA8B,KAAKqI,IAAnC,EAAyC,KAAzC,CAAvB;AACAmK,IAAAA,WAAW,CAAC,iBAAD,EAAoB,CAApB,EAAuBhS,IAAvB,EAA6B,IAA7B,CAAX;AACA,QAAIirB,SAAS,GAAGK,oBAAoB,CAAC,KAAKU,YAAN,EAAoBxsB,KAApB,EAA2BQ,IAA3B,CAApC;AACA8rB,IAAAA,KAAK,CAACS,cAAN,CAAqBtB,SAArB;AACAa,IAAAA,KAAK,CAACI,uBAAN,CAA8BjB,SAA9B;;AACA,QAAI,KAAKe,YAAL,CAAkBjE,MAAlB,EAAJ,EAAgC;AAC5B,YAAM,IAAIjlB,KAAJ,CAAU,4FACZ,WADE,CAAN;AAEH;;AACD,WAAO,IAAIgpB,KAAJ,CAAU,KAAKC,IAAf,EAAqB,KAAKlkB,IAA1B,EAAgCojB,SAAhC,EAA2C,KAAKgB,cAAhD,CAAP;AACH,GAbD;AAcA;AACJ;AACA;AACA;;;AACIH,EAAAA,KAAK,CAACzsB,SAAN,CAAgBwvB,OAAhB,GAA0B,UAAUrvB,KAAV,EAAiBQ,IAAjB,EAAuB;AAC7ClC,IAAAA,gBAAgB,CAAC,eAAD,EAAkB,CAAlB,EAAqB,CAArB,EAAwB2D,SAAS,CAACC,MAAlC,CAAhB;AACAoP,IAAAA,uBAAuB,CAAC,eAAD,EAAkB,CAAlB,EAAqBtR,KAArB,EAA4B,KAAKqI,IAAjC,EAAuC,KAAvC,CAAvB;AACAmK,IAAAA,WAAW,CAAC,eAAD,EAAkB,CAAlB,EAAqBhS,IAArB,EAA2B,IAA3B,CAAX;;AACA,QAAI,KAAKgsB,YAAL,CAAkBrE,QAAlB,EAAJ,EAAkC;AAC9B,YAAM,IAAI7kB,KAAJ,CAAU,6FACZ,WADE,CAAN;AAEH;;AACD,QAAI,KAAKkpB,YAAL,CAAkBjE,MAAlB,EAAJ,EAAgC;AAC5B,YAAM,IAAIjlB,KAAJ,CAAU,wFACZ,WADE,CAAN;AAEH;;AACD,WAAO,KAAK2rB,OAAL,CAAajvB,KAAb,EAAoBQ,IAApB,EAA0B2uB,KAA1B,CAAgCnvB,KAAhC,EAAuCQ,IAAvC,CAAP;AACH,GAbD;AAcA;AACJ;AACA;;;AACI8rB,EAAAA,KAAK,CAACzsB,SAAN,CAAgBY,QAAhB,GAA2B,YAAY;AACnCnC,IAAAA,gBAAgB,CAAC,gBAAD,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB2D,SAAS,CAACC,MAAnC,CAAhB;AACA,WAAO,KAAKqqB,IAAL,CAAU9rB,QAAV,KAAuBwJ,sBAAsB,CAAC,KAAK5B,IAAN,CAApD;AACH,GAHD,CAvWmC,CA2WnC;AACA;;;AACAikB,EAAAA,KAAK,CAACzsB,SAAN,CAAgBmU,MAAhB,GAAyB,YAAY;AACjC;AACA1V,IAAAA,gBAAgB,CAAC,cAAD,EAAiB,CAAjB,EAAoB,CAApB,EAAuB2D,SAAS,CAACC,MAAjC,CAAhB;AACA,WAAO,KAAKzB,QAAL,EAAP;AACH,GAJD;AAKA;AACJ;AACA;;;AACI6rB,EAAAA,KAAK,CAACzsB,SAAN,CAAgByvB,WAAhB,GAA8B,YAAY;AACtC,WAAOnD,yBAAyB,CAAC,KAAKK,YAAN,CAAhC;AACH,GAFD;;AAGAF,EAAAA,KAAK,CAACzsB,SAAN,CAAgB0vB,eAAhB,GAAkC,YAAY;AAC1C,QAAIhqB,GAAG,GAAG,KAAK+pB,WAAL,EAAV;AACA,QAAIhuB,EAAE,GAAGkE,iBAAiB,CAACD,GAAD,CAA1B;AACA,WAAOjE,EAAE,KAAK,IAAP,GAAc,SAAd,GAA0BA,EAAjC;AACH,GAJD;AAKA;AACJ;AACA;;;AACIgrB,EAAAA,KAAK,CAACzsB,SAAN,CAAgB2vB,OAAhB,GAA0B,UAAU/jB,KAAV,EAAiB;AACvCnN,IAAAA,gBAAgB,CAAC,eAAD,EAAkB,CAAlB,EAAqB,CAArB,EAAwB2D,SAAS,CAACC,MAAlC,CAAhB;;AACA,QAAI,EAAEuJ,KAAK,YAAY6gB,KAAnB,CAAJ,EAA+B;AAC3B,UAAIlpB,KAAK,GAAG,sFAAZ;AACA,YAAM,IAAIE,KAAJ,CAAUF,KAAV,CAAN;AACH;;AACD,QAAIqsB,QAAQ,GAAG,KAAKlD,IAAL,KAAc9gB,KAAK,CAAC8gB,IAAnC;AACA,QAAImD,QAAQ,GAAGlkB,UAAU,CAAC,KAAKnD,IAAN,EAAYoD,KAAK,CAACpD,IAAlB,CAAzB;AACA,QAAIsnB,mBAAmB,GAAG,KAAKJ,eAAL,OAA2B9jB,KAAK,CAAC8jB,eAAN,EAArD;AACA,WAAOE,QAAQ,IAAIC,QAAZ,IAAwBC,mBAA/B;AACH,GAVD;AAWA;AACJ;AACA;AACA;AACA;;;AACIrD,EAAAA,KAAK,CAACgB,wBAAN,GAAiC,UAAU/b,MAAV,EAAkBqe,eAAlB,EAAmCxC,OAAnC,EAA4C;AACzE,QAAIC,GAAG,GAAG;AAAEpa,MAAAA,MAAM,EAAE,IAAV;AAAgBma,MAAAA,OAAO,EAAE;AAAzB,KAAV;;AACA,QAAIwC,eAAe,IAAIxC,OAAvB,EAAgC;AAC5BC,MAAAA,GAAG,CAACpa,MAAJ,GAAa2c,eAAb;AACArxB,MAAAA,gBAAgB,CAACgT,MAAD,EAAS,CAAT,EAAY8b,GAAG,CAACpa,MAAhB,EAAwB,IAAxB,CAAhB;AACAoa,MAAAA,GAAG,CAACD,OAAJ,GAAcA,OAAd;AACAxuB,MAAAA,qBAAqB,CAAC2S,MAAD,EAAS,CAAT,EAAY8b,GAAG,CAACD,OAAhB,EAAyB,IAAzB,CAArB;AACH,KALD,MAMK,IAAIwC,eAAJ,EAAqB;AACtB;AACA,UAAI,OAAOA,eAAP,KAA2B,QAA3B,IAAuCA,eAAe,KAAK,IAA/D,EAAqE;AACjE;AACAvC,QAAAA,GAAG,CAACD,OAAJ,GAAcwC,eAAd;AACH,OAHD,MAIK,IAAI,OAAOA,eAAP,KAA2B,UAA/B,EAA2C;AAC5CvC,QAAAA,GAAG,CAACpa,MAAJ,GAAa2c,eAAb;AACH,OAFI,MAGA;AACD,cAAM,IAAItsB,KAAJ,CAAUjF,WAAW,CAACkT,MAAD,EAAS,CAAT,EAAY,IAAZ,CAAX,GACZ,wDADE,CAAN;AAEH;AACJ;;AACD,WAAO8b,GAAP;AACH,GAvBD;;AAwBAnhB,EAAAA,MAAM,CAACC,cAAP,CAAsBmgB,KAAK,CAACzsB,SAA5B,EAAuC,KAAvC,EAA8C;AAC1CO,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK8jB,MAAL,EAAP;AACH,KAHyC;AAI1C9X,IAAAA,UAAU,EAAE,KAJ8B;AAK1CC,IAAAA,YAAY,EAAE;AAL4B,GAA9C;AAOA,SAAOigB,KAAP;AACH,CAhb0B,EAA3B;AAkbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIuD,qBAAqB;AAAG;AAAe,YAAY;AACnD,WAASA,qBAAT,CAA+BvM,KAA/B,EAAsC;AAClC,SAAKA,KAAL,GAAaA,KAAb;AACH;;AACDuM,EAAAA,qBAAqB,CAAChwB,SAAtB,CAAgC2X,iBAAhC,GAAoD,UAAUC,SAAV,EAAqB;AACrE,QAAInL,KAAK,GAAG,KAAKgX,KAAL,CAAW9L,iBAAX,CAA6BC,SAA7B,CAAZ;AACA,WAAO,IAAIoY,qBAAJ,CAA0BvjB,KAA1B,CAAP;AACH,GAHD;;AAIAujB,EAAAA,qBAAqB,CAAChwB,SAAtB,CAAgCuV,IAAhC,GAAuC,YAAY;AAC/C,WAAO,KAAKkO,KAAZ;AACH,GAFD;;AAGA,SAAOuM,qBAAP;AACH,CAZ0C,EAA3C;;AAaA,IAAIC,qBAAqB;AAAG;AAAe,YAAY;AACnD,WAASA,qBAAT,CAA+BC,QAA/B,EAAyC1nB,IAAzC,EAA+C;AAC3C,SAAK2nB,SAAL,GAAiBD,QAAjB;AACA,SAAKne,KAAL,GAAavJ,IAAb;AACH;;AACDynB,EAAAA,qBAAqB,CAACjwB,SAAtB,CAAgC2X,iBAAhC,GAAoD,UAAUC,SAAV,EAAqB;AACrE,QAAImM,SAAS,GAAGnZ,SAAS,CAAC,KAAKmH,KAAN,EAAa6F,SAAb,CAAzB;AACA,WAAO,IAAIqY,qBAAJ,CAA0B,KAAKE,SAA/B,EAA0CpM,SAA1C,CAAP;AACH,GAHD;;AAIAkM,EAAAA,qBAAqB,CAACjwB,SAAtB,CAAgCuV,IAAhC,GAAuC,YAAY;AAC/C,WAAO,KAAK4a,SAAL,CAAeC,sBAAf,CAAsC,KAAKre,KAA3C,CAAP;AACH,GAFD;;AAGA,SAAOke,qBAAP;AACH,CAb0C,EAA3C;AAcA;AACA;AACA;;;AACA,IAAII,kBAAkB,GAAG,UAAUC,MAAV,EAAkB;AACvCA,EAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;AACAA,EAAAA,MAAM,CAAC,WAAD,CAAN,GAAsBA,MAAM,CAAC,WAAD,CAAN,IAAuB,IAAIC,IAAJ,GAAWC,OAAX,EAA7C;AACA,SAAOF,MAAP;AACH,CAJD;AAKA;AACA;AACA;AACA;;;AACA,IAAIG,wBAAwB,GAAG,UAAUtwB,KAAV,EAAiBuwB,WAAjB,EAA8BC,YAA9B,EAA4C;AACvE,MAAI,CAACxwB,KAAD,IAAU,OAAOA,KAAP,KAAiB,QAA/B,EAAyC;AACrC,WAAOA,KAAP;AACH;;AACDjC,EAAAA,MAAM,CAAC,SAASiC,KAAV,EAAiB,2CAAjB,CAAN;;AACA,MAAI,OAAOA,KAAK,CAAC,KAAD,CAAZ,KAAwB,QAA5B,EAAsC;AAClC,WAAOywB,0BAA0B,CAACzwB,KAAK,CAAC,KAAD,CAAN,EAAeuwB,WAAf,EAA4BC,YAA5B,CAAjC;AACH,GAFD,MAGK,IAAI,OAAOxwB,KAAK,CAAC,KAAD,CAAZ,KAAwB,QAA5B,EAAsC;AACvC,WAAO0wB,2BAA2B,CAAC1wB,KAAK,CAAC,KAAD,CAAN,EAAeuwB,WAAf,CAAlC;AACH,GAFI,MAGA;AACDxyB,IAAAA,MAAM,CAAC,KAAD,EAAQ,8BAA8B4yB,IAAI,CAAC/yB,SAAL,CAAeoC,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAtC,CAAN;AACH;AACJ,CAdD;;AAeA,IAAIywB,0BAA0B,GAAG,UAAUG,EAAV,EAAcC,QAAd,EAAwBL,YAAxB,EAAsC;AACnE,UAAQI,EAAR;AACI,SAAK,WAAL;AACI,aAAOJ,YAAY,CAAC,WAAD,CAAnB;;AACJ;AACIzyB,MAAAA,MAAM,CAAC,KAAD,EAAQ,8BAA8B6yB,EAAtC,CAAN;AAJR;AAMH,CAPD;;AAQA,IAAIF,2BAA2B,GAAG,UAAUE,EAAV,EAAcC,QAAd,EAAwBC,MAAxB,EAAgC;AAC9D,MAAI,CAACF,EAAE,CAACxqB,cAAH,CAAkB,WAAlB,CAAL,EAAqC;AACjCrI,IAAAA,MAAM,CAAC,KAAD,EAAQ,8BAA8B4yB,IAAI,CAAC/yB,SAAL,CAAegzB,EAAf,EAAmB,IAAnB,EAAyB,CAAzB,CAAtC,CAAN;AACH;;AACD,MAAIG,KAAK,GAAGH,EAAE,CAAC,WAAD,CAAd;;AACA,MAAI,OAAOG,KAAP,KAAiB,QAArB,EAA+B;AAC3BhzB,IAAAA,MAAM,CAAC,KAAD,EAAQ,iCAAiCgzB,KAAzC,CAAN;AACH;;AACD,MAAIC,YAAY,GAAGH,QAAQ,CAACzb,IAAT,EAAnB;AACArX,EAAAA,MAAM,CAACizB,YAAY,KAAK,IAAjB,IAAyB,OAAOA,YAAP,KAAwB,WAAlD,EAA+D,4CAA/D,CAAN,CAT8D,CAU9D;;AACA,MAAI,CAACA,YAAY,CAACla,UAAb,EAAL,EAAgC;AAC5B,WAAOia,KAAP;AACH;;AACD,MAAIE,IAAI,GAAGD,YAAX;AACA,MAAIT,WAAW,GAAGU,IAAI,CAAC1Y,QAAL,EAAlB;;AACA,MAAI,OAAOgY,WAAP,KAAuB,QAA3B,EAAqC;AACjC,WAAOQ,KAAP;AACH,GAlB6D,CAmB9D;;;AACA,SAAOR,WAAW,GAAGQ,KAArB;AACH,CArBD;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIG,wBAAwB,GAAG,UAAU7oB,IAAV,EAAgB+M,IAAhB,EAAsB2a,QAAtB,EAAgCS,YAAhC,EAA8C;AACzE,SAAOW,oBAAoB,CAAC/b,IAAD,EAAO,IAAI0a,qBAAJ,CAA0BC,QAA1B,EAAoC1nB,IAApC,CAAP,EAAkDmoB,YAAlD,CAA3B;AACH,CAFD;AAGA;AACA;AACA;AACA;AACA;;;AACA,IAAIY,4BAA4B,GAAG,UAAUhc,IAAV,EAAgByb,QAAhB,EAA0BL,YAA1B,EAAwC;AACvE,SAAOW,oBAAoB,CAAC/b,IAAD,EAAO,IAAIya,qBAAJ,CAA0BgB,QAA1B,CAAP,EAA4CL,YAA5C,CAA3B;AACH,CAFD;;AAGA,SAASW,oBAAT,CAA8B/b,IAA9B,EAAoCmb,WAApC,EAAiDC,YAAjD,EAA+D;AAC3D,MAAIa,MAAM,GAAGjc,IAAI,CAAC2B,WAAL,GAAmBZ,GAAnB,EAAb;AACA,MAAI9E,QAAQ,GAAGif,wBAAwB,CAACe,MAAD,EAASd,WAAW,CAAC/Y,iBAAZ,CAA8B,WAA9B,CAAT,EAAqDgZ,YAArD,CAAvC;AACA,MAAI7a,OAAJ;;AACA,MAAIP,IAAI,CAAC0B,UAAL,EAAJ,EAAuB;AACnB,QAAIwa,QAAQ,GAAGlc,IAAf;AACA,QAAIpV,KAAK,GAAGswB,wBAAwB,CAACgB,QAAQ,CAAC/Y,QAAT,EAAD,EAAsBgY,WAAtB,EAAmCC,YAAnC,CAApC;;AACA,QAAIxwB,KAAK,KAAKsxB,QAAQ,CAAC/Y,QAAT,EAAV,IACAlH,QAAQ,KAAKigB,QAAQ,CAACva,WAAT,GAAuBZ,GAAvB,EADjB,EAC+C;AAC3C,aAAO,IAAIc,QAAJ,CAAajX,KAAb,EAAoBkiB,cAAc,CAAC7Q,QAAD,CAAlC,CAAP;AACH,KAHD,MAIK;AACD,aAAO+D,IAAP;AACH;AACJ,GAVD,MAWK;AACD,QAAI2O,YAAY,GAAG3O,IAAnB;AACAO,IAAAA,OAAO,GAAGoO,YAAV;;AACA,QAAI1S,QAAQ,KAAK0S,YAAY,CAAChN,WAAb,GAA2BZ,GAA3B,EAAjB,EAAmD;AAC/CR,MAAAA,OAAO,GAAGA,OAAO,CAAC2B,cAAR,CAAuB,IAAIL,QAAJ,CAAa5F,QAAb,CAAvB,CAAV;AACH;;AACD0S,IAAAA,YAAY,CAAC5L,YAAb,CAA0B0B,cAA1B,EAA0C,UAAUpC,SAAV,EAAqBI,SAArB,EAAgC;AACtE,UAAIE,YAAY,GAAGoZ,oBAAoB,CAACtZ,SAAD,EAAY0Y,WAAW,CAAC/Y,iBAAZ,CAA8BC,SAA9B,CAAZ,EAAsD+Y,YAAtD,CAAvC;;AACA,UAAIzY,YAAY,KAAKF,SAArB,EAAgC;AAC5BlC,QAAAA,OAAO,GAAGA,OAAO,CAACmC,oBAAR,CAA6BL,SAA7B,EAAwCM,YAAxC,CAAV;AACH;AACJ,KALD;AAMA,WAAOpC,OAAP;AACH;AACJ;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA,IAAI4b,kBAAkB;AAAG;AAAe,YAAY;AAChD,WAASA,kBAAT,GAA8B;AAC1B,SAAKvxB,KAAL,GAAa,IAAb;AACA,SAAKwxB,QAAL,GAAgB,IAAIC,GAAJ,EAAhB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACIF,EAAAA,kBAAkB,CAAC1xB,SAAnB,CAA6B6xB,IAA7B,GAAoC,UAAUrpB,IAAV,EAAgB;AAChD,QAAI,KAAKrI,KAAL,IAAc,IAAlB,EAAwB;AACpB,aAAO,KAAKA,KAAL,CAAW0X,QAAX,CAAoBrP,IAApB,CAAP;AACH,KAFD,MAGK,IAAI,CAACuC,WAAW,CAACvC,IAAD,CAAZ,IAAsB,KAAKmpB,QAAL,CAAcG,IAAd,GAAqB,CAA/C,EAAkD;AACnD,UAAItI,QAAQ,GAAGxf,YAAY,CAACxB,IAAD,CAA3B;AACAA,MAAAA,IAAI,GAAG0B,YAAY,CAAC1B,IAAD,CAAnB;;AACA,UAAI,KAAKmpB,QAAL,CAAcI,GAAd,CAAkBvI,QAAlB,CAAJ,EAAiC;AAC7B,YAAIhL,SAAS,GAAG,KAAKmT,QAAL,CAAcpxB,GAAd,CAAkBipB,QAAlB,CAAhB;AACA,eAAOhL,SAAS,CAACqT,IAAV,CAAerpB,IAAf,CAAP;AACH,OAHD,MAIK;AACD,eAAO,IAAP;AACH;AACJ,KAVI,MAWA;AACD,aAAO,IAAP;AACH;AACJ,GAlBD;AAmBA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIkpB,EAAAA,kBAAkB,CAAC1xB,SAAnB,CAA6BgyB,QAA7B,GAAwC,UAAUxpB,IAAV,EAAgBxE,IAAhB,EAAsB;AAC1D,QAAI+G,WAAW,CAACvC,IAAD,CAAf,EAAuB;AACnB,WAAKrI,KAAL,GAAa6D,IAAb;AACA,WAAK2tB,QAAL,CAAcM,KAAd;AACH,KAHD,MAIK,IAAI,KAAK9xB,KAAL,KAAe,IAAnB,EAAyB;AAC1B,WAAKA,KAAL,GAAa,KAAKA,KAAL,CAAWgY,WAAX,CAAuB3P,IAAvB,EAA6BxE,IAA7B,CAAb;AACH,KAFI,MAGA;AACD,UAAIwlB,QAAQ,GAAGxf,YAAY,CAACxB,IAAD,CAA3B;;AACA,UAAI,CAAC,KAAKmpB,QAAL,CAAcI,GAAd,CAAkBvI,QAAlB,CAAL,EAAkC;AAC9B,aAAKmI,QAAL,CAAc1xB,GAAd,CAAkBupB,QAAlB,EAA4B,IAAIkI,kBAAJ,EAA5B;AACH;;AACD,UAAIjlB,KAAK,GAAG,KAAKklB,QAAL,CAAcpxB,GAAd,CAAkBipB,QAAlB,CAAZ;AACAhhB,MAAAA,IAAI,GAAG0B,YAAY,CAAC1B,IAAD,CAAnB;AACAiE,MAAAA,KAAK,CAACulB,QAAN,CAAexpB,IAAf,EAAqBxE,IAArB;AACH;AACJ,GAjBD;AAkBA;AACJ;AACA;AACA;AACA;AACA;;;AACI0tB,EAAAA,kBAAkB,CAAC1xB,SAAnB,CAA6BkyB,MAA7B,GAAsC,UAAU1pB,IAAV,EAAgB;AAClD,QAAIuC,WAAW,CAACvC,IAAD,CAAf,EAAuB;AACnB,WAAKrI,KAAL,GAAa,IAAb;AACA,WAAKwxB,QAAL,CAAcM,KAAd;AACA,aAAO,IAAP;AACH,KAJD,MAKK;AACD,UAAI,KAAK9xB,KAAL,KAAe,IAAnB,EAAyB;AACrB,YAAI,KAAKA,KAAL,CAAW8W,UAAX,EAAJ,EAA6B;AACzB;AACA,iBAAO,KAAP;AACH,SAHD,MAIK;AACD,cAAI9W,KAAK,GAAG,KAAKA,KAAjB;AACA,eAAKA,KAAL,GAAa,IAAb;AACA,cAAIgyB,MAAM,GAAG,IAAb;AACAhyB,UAAAA,KAAK,CAACmY,YAAN,CAAmB0B,cAAnB,EAAmC,UAAU9Z,GAAV,EAAekyB,IAAf,EAAqB;AACpDD,YAAAA,MAAM,CAACH,QAAP,CAAgB,IAAIzoB,IAAJ,CAASrJ,GAAT,CAAhB,EAA+BkyB,IAA/B;AACH,WAFD;AAGA,iBAAO,KAAKF,MAAL,CAAY1pB,IAAZ,CAAP;AACH;AACJ,OAdD,MAeK,IAAI,KAAKmpB,QAAL,CAAcG,IAAd,GAAqB,CAAzB,EAA4B;AAC7B,YAAItI,QAAQ,GAAGxf,YAAY,CAACxB,IAAD,CAA3B;AACAA,QAAAA,IAAI,GAAG0B,YAAY,CAAC1B,IAAD,CAAnB;;AACA,YAAI,KAAKmpB,QAAL,CAAcI,GAAd,CAAkBvI,QAAlB,CAAJ,EAAiC;AAC7B,cAAI6I,YAAY,GAAG,KAAKV,QAAL,CAAcpxB,GAAd,CAAkBipB,QAAlB,EAA4B0I,MAA5B,CAAmC1pB,IAAnC,CAAnB;;AACA,cAAI6pB,YAAJ,EAAkB;AACd,iBAAKV,QAAL,CAAcW,MAAd,CAAqB9I,QAArB;AACH;AACJ;;AACD,eAAO,KAAKmI,QAAL,CAAcG,IAAd,KAAuB,CAA9B;AACH,OAVI,MAWA;AACD,eAAO,IAAP;AACH;AACJ;AACJ,GArCD;AAsCA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIJ,EAAAA,kBAAkB,CAAC1xB,SAAnB,CAA6BuyB,WAA7B,GAA2C,UAAUC,UAAV,EAAsBC,IAAtB,EAA4B;AACnE,QAAI,KAAKtyB,KAAL,KAAe,IAAnB,EAAyB;AACrBsyB,MAAAA,IAAI,CAACD,UAAD,EAAa,KAAKryB,KAAlB,CAAJ;AACH,KAFD,MAGK;AACD,WAAKmY,YAAL,CAAkB,UAAUpY,GAAV,EAAekyB,IAAf,EAAqB;AACnC,YAAI5pB,IAAI,GAAG,IAAIe,IAAJ,CAASipB,UAAU,CAAC5xB,QAAX,KAAwB,GAAxB,GAA8BV,GAAvC,CAAX;AACAkyB,QAAAA,IAAI,CAACG,WAAL,CAAiB/pB,IAAjB,EAAuBiqB,IAAvB;AACH,OAHD;AAIH;AACJ,GAVD;AAWA;AACJ;AACA;AACA;AACA;;;AACIf,EAAAA,kBAAkB,CAAC1xB,SAAnB,CAA6BsY,YAA7B,GAA4C,UAAUma,IAAV,EAAgB;AACxD,SAAKd,QAAL,CAAc1N,OAAd,CAAsB,UAAUmO,IAAV,EAAgBlyB,GAAhB,EAAqB;AACvCuyB,MAAAA,IAAI,CAACvyB,GAAD,EAAMkyB,IAAN,CAAJ;AACH,KAFD;AAGH,GAJD;;AAKA,SAAOV,kBAAP;AACH,CAhIuC,EAAxC;AAkIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,IAAIgB,aAAJ;;AACA,CAAC,UAAUA,aAAV,EAAyB;AACtBA,EAAAA,aAAa,CAACA,aAAa,CAAC,WAAD,CAAb,GAA6B,CAA9B,CAAb,GAAgD,WAAhD;AACAA,EAAAA,aAAa,CAACA,aAAa,CAAC,OAAD,CAAb,GAAyB,CAA1B,CAAb,GAA4C,OAA5C;AACAA,EAAAA,aAAa,CAACA,aAAa,CAAC,gBAAD,CAAb,GAAkC,CAAnC,CAAb,GAAqD,gBAArD;AACAA,EAAAA,aAAa,CAACA,aAAa,CAAC,iBAAD,CAAb,GAAmC,CAApC,CAAb,GAAsD,iBAAtD;AACH,CALD,EAKGA,aAAa,KAAKA,aAAa,GAAG,EAArB,CALhB;;AAMA,SAASC,sBAAT,GAAkC;AAC9B,SAAO;AACHC,IAAAA,QAAQ,EAAE,IADP;AAEHC,IAAAA,UAAU,EAAE,KAFT;AAGHC,IAAAA,OAAO,EAAE,IAHN;AAIHC,IAAAA,MAAM,EAAE;AAJL,GAAP;AAMH;;AACD,SAASC,wBAAT,GAAoC;AAChC,SAAO;AACHJ,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,UAAU,EAAE,IAFT;AAGHC,IAAAA,OAAO,EAAE,IAHN;AAIHC,IAAAA,MAAM,EAAE;AAJL,GAAP;AAMH;;AACD,SAASE,mCAAT,CAA6CH,OAA7C,EAAsD;AAClD,SAAO;AACHF,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,UAAU,EAAE,IAFT;AAGHC,IAAAA,OAAO,EAAEA,OAHN;AAIHC,IAAAA,MAAM,EAAE;AAJL,GAAP;AAMH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIG,YAAY;AAAG;AAAe,YAAY;AAC1C;AACJ;AACA;AACI,WAASA,YAAT;AACA;AAAmB1qB,EAAAA,IADnB;AAEA;AAAmB2qB,EAAAA,YAFnB;AAGA;AAAmBC,EAAAA,MAHnB,EAG2B;AACvB,SAAK5qB,IAAL,GAAYA,IAAZ;AACA,SAAK2qB,YAAL,GAAoBA,YAApB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA;;AACA,SAAK1kB,IAAL,GAAYgkB,aAAa,CAACW,cAA1B;AACA;;AACA,SAAKne,MAAL,GAAcyd,sBAAsB,EAApC;AACH;AACD;AACJ;AACA;;;AACIO,EAAAA,YAAY,CAAClzB,SAAb,CAAuBszB,iBAAvB,GAA2C,UAAU1b,SAAV,EAAqB;AAC5D,QAAI,CAAC7M,WAAW,CAAC,KAAKvC,IAAN,CAAhB,EAA6B;AACzBtK,MAAAA,MAAM,CAAC8L,YAAY,CAAC,KAAKxB,IAAN,CAAZ,KAA4BoP,SAA7B,EAAwC,+CAAxC,CAAN;AACA,aAAO,IAAIsb,YAAJ,CAAiBhpB,YAAY,CAAC,KAAK1B,IAAN,CAA7B,EAA0C,KAAK2qB,YAA/C,EAA6D,KAAKC,MAAlE,CAAP;AACH,KAHD,MAIK,IAAI,KAAKD,YAAL,CAAkBhzB,KAAlB,IAA2B,IAA/B,EAAqC;AACtCjC,MAAAA,MAAM,CAAC,KAAKi1B,YAAL,CAAkBxB,QAAlB,CAA2BtyB,OAA3B,EAAD,EAAuC,0DAAvC,CAAN,CADsC,CAEtC;;AACA,aAAO,IAAP;AACH,KAJI,MAKA;AACD,UAAImf,SAAS,GAAG,KAAK2U,YAAL,CAAkBI,OAAlB,CAA0B,IAAIhqB,IAAJ,CAASqO,SAAT,CAA1B,CAAhB;AACA,aAAO,IAAIsb,YAAJ,CAAiBnpB,YAAY,EAA7B,EAAiCyU,SAAjC,EAA4C,KAAK4U,MAAjD,CAAP;AACH;AACJ,GAdD;;AAeA,SAAOF,YAAP;AACH,CAnCiC,EAAlC;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIM,sBAAJ;AACA;AACA;AACA;AACA;;AACA,IAAIC,aAAa,GAAG,YAAY;AAC5B,MAAI,CAACD,sBAAL,EAA6B;AACzBA,IAAAA,sBAAsB,GAAG,IAAI1Y,SAAJ,CAActV,aAAd,CAAzB;AACH;;AACD,SAAOguB,sBAAP;AACH,CALD;AAMA;AACA;AACA;;;AACA,IAAIE,aAAa;AAAG;AAAe,YAAY;AAC3C,WAASA,aAAT,CAAuBvzB,KAAvB,EAA8BwxB,QAA9B,EAAwC;AACpC,QAAIA,QAAQ,KAAK,KAAK,CAAtB,EAAyB;AAAEA,MAAAA,QAAQ,GAAG8B,aAAa,EAAxB;AAA6B;;AACxD,SAAKtzB,KAAL,GAAaA,KAAb;AACA,SAAKwxB,QAAL,GAAgBA,QAAhB;AACH;;AACD+B,EAAAA,aAAa,CAACC,UAAd,GAA2B,UAAUjuB,GAAV,EAAe;AACtC,QAAI0sB,IAAI,GAAG,IAAIsB,aAAJ,CAAkB,IAAlB,CAAX;AACAptB,IAAAA,IAAI,CAACZ,GAAD,EAAM,UAAUqe,SAAV,EAAqB0F,SAArB,EAAgC;AACtC2I,MAAAA,IAAI,GAAGA,IAAI,CAACnyB,GAAL,CAAS,IAAIsJ,IAAJ,CAASwa,SAAT,CAAT,EAA8B0F,SAA9B,CAAP;AACH,KAFG,CAAJ;AAGA,WAAO2I,IAAP;AACH,GAND;AAOA;AACJ;AACA;;;AACIsB,EAAAA,aAAa,CAAC1zB,SAAd,CAAwBX,OAAxB,GAAkC,YAAY;AAC1C,WAAO,KAAKc,KAAL,KAAe,IAAf,IAAuB,KAAKwxB,QAAL,CAActyB,OAAd,EAA9B;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIq0B,EAAAA,aAAa,CAAC1zB,SAAd,CAAwB4zB,gCAAxB,GAA2D,UAAUC,YAAV,EAAwBC,SAAxB,EAAmC;AAC1F,QAAI,KAAK3zB,KAAL,IAAc,IAAd,IAAsB2zB,SAAS,CAAC,KAAK3zB,KAAN,CAAnC,EAAiD;AAC7C,aAAO;AAAEqI,QAAAA,IAAI,EAAEuB,YAAY,EAApB;AAAwB5J,QAAAA,KAAK,EAAE,KAAKA;AAApC,OAAP;AACH,KAFD,MAGK;AACD,UAAI4K,WAAW,CAAC8oB,YAAD,CAAf,EAA+B;AAC3B,eAAO,IAAP;AACH,OAFD,MAGK;AACD,YAAIzb,KAAK,GAAGpO,YAAY,CAAC6pB,YAAD,CAAxB;AACA,YAAIpnB,KAAK,GAAG,KAAKklB,QAAL,CAAcpxB,GAAd,CAAkB6X,KAAlB,CAAZ;;AACA,YAAI3L,KAAK,KAAK,IAAd,EAAoB;AAChB,cAAIsnB,yBAAyB,GAAGtnB,KAAK,CAACmnB,gCAAN,CAAuC1pB,YAAY,CAAC2pB,YAAD,CAAnD,EAAmEC,SAAnE,CAAhC;;AACA,cAAIC,yBAAyB,IAAI,IAAjC,EAAuC;AACnC,gBAAIC,QAAQ,GAAGppB,SAAS,CAAC,IAAIrB,IAAJ,CAAS6O,KAAT,CAAD,EAAkB2b,yBAAyB,CAACvrB,IAA5C,CAAxB;AACA,mBAAO;AAAEA,cAAAA,IAAI,EAAEwrB,QAAR;AAAkB7zB,cAAAA,KAAK,EAAE4zB,yBAAyB,CAAC5zB;AAAnD,aAAP;AACH,WAHD,MAIK;AACD,mBAAO,IAAP;AACH;AACJ,SATD,MAUK;AACD,iBAAO,IAAP;AACH;AACJ;AACJ;AACJ,GA1BD;AA2BA;AACJ;AACA;AACA;;;AACIuzB,EAAAA,aAAa,CAAC1zB,SAAd,CAAwBi0B,wBAAxB,GAAmD,UAAUJ,YAAV,EAAwB;AACvE,WAAO,KAAKD,gCAAL,CAAsCC,YAAtC,EAAoD,YAAY;AAAE,aAAO,IAAP;AAAc,KAAhF,CAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACIH,EAAAA,aAAa,CAAC1zB,SAAd,CAAwBuzB,OAAxB,GAAkC,UAAUM,YAAV,EAAwB;AACtD,QAAI9oB,WAAW,CAAC8oB,YAAD,CAAf,EAA+B;AAC3B,aAAO,IAAP;AACH,KAFD,MAGK;AACD,UAAIzb,KAAK,GAAGpO,YAAY,CAAC6pB,YAAD,CAAxB;AACA,UAAIrV,SAAS,GAAG,KAAKmT,QAAL,CAAcpxB,GAAd,CAAkB6X,KAAlB,CAAhB;;AACA,UAAIoG,SAAS,KAAK,IAAlB,EAAwB;AACpB,eAAOA,SAAS,CAAC+U,OAAV,CAAkBrpB,YAAY,CAAC2pB,YAAD,CAA9B,CAAP;AACH,OAFD,MAGK;AACD,eAAO,IAAIH,aAAJ,CAAkB,IAAlB,CAAP;AACH;AACJ;AACJ,GAdD;AAeA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIA,EAAAA,aAAa,CAAC1zB,SAAd,CAAwBC,GAAxB,GAA8B,UAAU4zB,YAAV,EAAwBK,KAAxB,EAA+B;AACzD,QAAInpB,WAAW,CAAC8oB,YAAD,CAAf,EAA+B;AAC3B,aAAO,IAAIH,aAAJ,CAAkBQ,KAAlB,EAAyB,KAAKvC,QAA9B,CAAP;AACH,KAFD,MAGK;AACD,UAAIvZ,KAAK,GAAGpO,YAAY,CAAC6pB,YAAD,CAAxB;AACA,UAAIpnB,KAAK,GAAG,KAAKklB,QAAL,CAAcpxB,GAAd,CAAkB6X,KAAlB,KAA4B,IAAIsb,aAAJ,CAAkB,IAAlB,CAAxC;AACA,UAAIvM,QAAQ,GAAG1a,KAAK,CAACxM,GAAN,CAAUiK,YAAY,CAAC2pB,YAAD,CAAtB,EAAsCK,KAAtC,CAAf;AACA,UAAIjU,WAAW,GAAG,KAAK0R,QAAL,CAAcrW,MAAd,CAAqBlD,KAArB,EAA4B+O,QAA5B,CAAlB;AACA,aAAO,IAAIuM,aAAJ,CAAkB,KAAKvzB,KAAvB,EAA8B8f,WAA9B,CAAP;AACH;AACJ,GAXD;AAYA;AACJ;AACA;AACA;AACA;AACA;;;AACIyT,EAAAA,aAAa,CAAC1zB,SAAd,CAAwBU,MAAxB,GAAiC,UAAUmzB,YAAV,EAAwB;AACrD,QAAI9oB,WAAW,CAAC8oB,YAAD,CAAf,EAA+B;AAC3B,UAAI,KAAKlC,QAAL,CAActyB,OAAd,EAAJ,EAA6B;AACzB,eAAO,IAAIq0B,aAAJ,CAAkB,IAAlB,CAAP;AACH,OAFD,MAGK;AACD,eAAO,IAAIA,aAAJ,CAAkB,IAAlB,EAAwB,KAAK/B,QAA7B,CAAP;AACH;AACJ,KAPD,MAQK;AACD,UAAIvZ,KAAK,GAAGpO,YAAY,CAAC6pB,YAAD,CAAxB;AACA,UAAIpnB,KAAK,GAAG,KAAKklB,QAAL,CAAcpxB,GAAd,CAAkB6X,KAAlB,CAAZ;;AACA,UAAI3L,KAAJ,EAAW;AACP,YAAI0a,QAAQ,GAAG1a,KAAK,CAAC/L,MAAN,CAAawJ,YAAY,CAAC2pB,YAAD,CAAzB,CAAf;AACA,YAAI5T,WAAW,GAAG,KAAK,CAAvB;;AACA,YAAIkH,QAAQ,CAAC9nB,OAAT,EAAJ,EAAwB;AACpB4gB,UAAAA,WAAW,GAAG,KAAK0R,QAAL,CAAcjxB,MAAd,CAAqB0X,KAArB,CAAd;AACH,SAFD,MAGK;AACD6H,UAAAA,WAAW,GAAG,KAAK0R,QAAL,CAAcrW,MAAd,CAAqBlD,KAArB,EAA4B+O,QAA5B,CAAd;AACH;;AACD,YAAI,KAAKhnB,KAAL,KAAe,IAAf,IAAuB8f,WAAW,CAAC5gB,OAAZ,EAA3B,EAAkD;AAC9C,iBAAO,IAAIq0B,aAAJ,CAAkB,IAAlB,CAAP;AACH,SAFD,MAGK;AACD,iBAAO,IAAIA,aAAJ,CAAkB,KAAKvzB,KAAvB,EAA8B8f,WAA9B,CAAP;AACH;AACJ,OAfD,MAgBK;AACD,eAAO,IAAP;AACH;AACJ;AACJ,GAhCD;AAiCA;AACJ;AACA;AACA;AACA;AACA;;;AACIyT,EAAAA,aAAa,CAAC1zB,SAAd,CAAwBO,GAAxB,GAA8B,UAAUszB,YAAV,EAAwB;AAClD,QAAI9oB,WAAW,CAAC8oB,YAAD,CAAf,EAA+B;AAC3B,aAAO,KAAK1zB,KAAZ;AACH,KAFD,MAGK;AACD,UAAIiY,KAAK,GAAGpO,YAAY,CAAC6pB,YAAD,CAAxB;AACA,UAAIpnB,KAAK,GAAG,KAAKklB,QAAL,CAAcpxB,GAAd,CAAkB6X,KAAlB,CAAZ;;AACA,UAAI3L,KAAJ,EAAW;AACP,eAAOA,KAAK,CAAClM,GAAN,CAAU2J,YAAY,CAAC2pB,YAAD,CAAtB,CAAP;AACH,OAFD,MAGK;AACD,eAAO,IAAP;AACH;AACJ;AACJ,GAdD;AAeA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIH,EAAAA,aAAa,CAAC1zB,SAAd,CAAwBm0B,OAAxB,GAAkC,UAAUN,YAAV,EAAwBO,OAAxB,EAAiC;AAC/D,QAAIrpB,WAAW,CAAC8oB,YAAD,CAAf,EAA+B;AAC3B,aAAOO,OAAP;AACH,KAFD,MAGK;AACD,UAAIhc,KAAK,GAAGpO,YAAY,CAAC6pB,YAAD,CAAxB;AACA,UAAIpnB,KAAK,GAAG,KAAKklB,QAAL,CAAcpxB,GAAd,CAAkB6X,KAAlB,KAA4B,IAAIsb,aAAJ,CAAkB,IAAlB,CAAxC;AACA,UAAIvM,QAAQ,GAAG1a,KAAK,CAAC0nB,OAAN,CAAcjqB,YAAY,CAAC2pB,YAAD,CAA1B,EAA0CO,OAA1C,CAAf;AACA,UAAInU,WAAW,GAAG,KAAK,CAAvB;;AACA,UAAIkH,QAAQ,CAAC9nB,OAAT,EAAJ,EAAwB;AACpB4gB,QAAAA,WAAW,GAAG,KAAK0R,QAAL,CAAcjxB,MAAd,CAAqB0X,KAArB,CAAd;AACH,OAFD,MAGK;AACD6H,QAAAA,WAAW,GAAG,KAAK0R,QAAL,CAAcrW,MAAd,CAAqBlD,KAArB,EAA4B+O,QAA5B,CAAd;AACH;;AACD,aAAO,IAAIuM,aAAJ,CAAkB,KAAKvzB,KAAvB,EAA8B8f,WAA9B,CAAP;AACH;AACJ,GAjBD;AAkBA;AACJ;AACA;AACA;AACA;;;AACIyT,EAAAA,aAAa,CAAC1zB,SAAd,CAAwBq0B,IAAxB,GAA+B,UAAUhwB,EAAV,EAAc;AACzC,WAAO,KAAKiwB,KAAL,CAAWvqB,YAAY,EAAvB,EAA2B1F,EAA3B,CAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACIqvB,EAAAA,aAAa,CAAC1zB,SAAd,CAAwBs0B,KAAxB,GAAgC,UAAUC,SAAV,EAAqBlwB,EAArB,EAAyB;AACrD,QAAImwB,KAAK,GAAG,EAAZ;AACA,SAAK7C,QAAL,CAAc1W,gBAAd,CAA+B,UAAUuO,QAAV,EAAoBhL,SAApB,EAA+B;AAC1DgW,MAAAA,KAAK,CAAChL,QAAD,CAAL,GAAkBhL,SAAS,CAAC8V,KAAV,CAAgB1pB,SAAS,CAAC2pB,SAAD,EAAY/K,QAAZ,CAAzB,EAAgDnlB,EAAhD,CAAlB;AACH,KAFD;AAGA,WAAOA,EAAE,CAACkwB,SAAD,EAAY,KAAKp0B,KAAjB,EAAwBq0B,KAAxB,CAAT;AACH,GAND;AAOA;AACJ;AACA;;;AACId,EAAAA,aAAa,CAAC1zB,SAAd,CAAwBy0B,UAAxB,GAAqC,UAAUjsB,IAAV,EAAgB1B,CAAhB,EAAmB;AACpD,WAAO,KAAK4tB,WAAL,CAAiBlsB,IAAjB,EAAuBuB,YAAY,EAAnC,EAAuCjD,CAAvC,CAAP;AACH,GAFD;;AAGA4sB,EAAAA,aAAa,CAAC1zB,SAAd,CAAwB00B,WAAxB,GAAsC,UAAUC,YAAV,EAAwBJ,SAAxB,EAAmCztB,CAAnC,EAAsC;AACxE,QAAI0T,MAAM,GAAG,KAAKra,KAAL,GAAa2G,CAAC,CAACytB,SAAD,EAAY,KAAKp0B,KAAjB,CAAd,GAAwC,KAArD;;AACA,QAAIqa,MAAJ,EAAY;AACR,aAAOA,MAAP;AACH,KAFD,MAGK;AACD,UAAIzP,WAAW,CAAC4pB,YAAD,CAAf,EAA+B;AAC3B,eAAO,IAAP;AACH,OAFD,MAGK;AACD,YAAIvc,KAAK,GAAGpO,YAAY,CAAC2qB,YAAD,CAAxB;AACA,YAAI3K,SAAS,GAAG,KAAK2H,QAAL,CAAcpxB,GAAd,CAAkB6X,KAAlB,CAAhB;;AACA,YAAI4R,SAAJ,EAAe;AACX,iBAAOA,SAAS,CAAC0K,WAAV,CAAsBxqB,YAAY,CAACyqB,YAAD,CAAlC,EAAkD/pB,SAAS,CAAC2pB,SAAD,EAAYnc,KAAZ,CAA3D,EAA+EtR,CAA/E,CAAP;AACH,SAFD,MAGK;AACD,iBAAO,IAAP;AACH;AACJ;AACJ;AACJ,GApBD;;AAqBA4sB,EAAAA,aAAa,CAAC1zB,SAAd,CAAwB40B,aAAxB,GAAwC,UAAUpsB,IAAV,EAAgB1B,CAAhB,EAAmB;AACvD,WAAO,KAAK+tB,cAAL,CAAoBrsB,IAApB,EAA0BuB,YAAY,EAAtC,EAA0CjD,CAA1C,CAAP;AACH,GAFD;;AAGA4sB,EAAAA,aAAa,CAAC1zB,SAAd,CAAwB60B,cAAxB,GAAyC,UAAUF,YAAV,EAAwBG,mBAAxB,EAA6ChuB,CAA7C,EAAgD;AACrF,QAAIiE,WAAW,CAAC4pB,YAAD,CAAf,EAA+B;AAC3B,aAAO,IAAP;AACH,KAFD,MAGK;AACD,UAAI,KAAKx0B,KAAT,EAAgB;AACZ2G,QAAAA,CAAC,CAACguB,mBAAD,EAAsB,KAAK30B,KAA3B,CAAD;AACH;;AACD,UAAIiY,KAAK,GAAGpO,YAAY,CAAC2qB,YAAD,CAAxB;AACA,UAAI3K,SAAS,GAAG,KAAK2H,QAAL,CAAcpxB,GAAd,CAAkB6X,KAAlB,CAAhB;;AACA,UAAI4R,SAAJ,EAAe;AACX,eAAOA,SAAS,CAAC6K,cAAV,CAAyB3qB,YAAY,CAACyqB,YAAD,CAArC,EAAqD/pB,SAAS,CAACkqB,mBAAD,EAAsB1c,KAAtB,CAA9D,EAA4FtR,CAA5F,CAAP;AACH,OAFD,MAGK;AACD,eAAO,IAAI4sB,aAAJ,CAAkB,IAAlB,CAAP;AACH;AACJ;AACJ,GAjBD;AAkBA;AACJ;AACA;AACA;AACA;AACA;;;AACIA,EAAAA,aAAa,CAAC1zB,SAAd,CAAwB+0B,OAAxB,GAAkC,UAAUjuB,CAAV,EAAa;AAC3C,SAAKkuB,QAAL,CAAcjrB,YAAY,EAA1B,EAA8BjD,CAA9B;AACH,GAFD;;AAGA4sB,EAAAA,aAAa,CAAC1zB,SAAd,CAAwBg1B,QAAxB,GAAmC,UAAUF,mBAAV,EAA+BhuB,CAA/B,EAAkC;AACjE,SAAK6qB,QAAL,CAAc1W,gBAAd,CAA+B,UAAUrD,SAAV,EAAqB4G,SAArB,EAAgC;AAC3DA,MAAAA,SAAS,CAACwW,QAAV,CAAmBpqB,SAAS,CAACkqB,mBAAD,EAAsBld,SAAtB,CAA5B,EAA8D9Q,CAA9D;AACH,KAFD;;AAGA,QAAI,KAAK3G,KAAT,EAAgB;AACZ2G,MAAAA,CAAC,CAACguB,mBAAD,EAAsB,KAAK30B,KAA3B,CAAD;AACH;AACJ,GAPD;;AAQAuzB,EAAAA,aAAa,CAAC1zB,SAAd,CAAwBi1B,YAAxB,GAAuC,UAAUnuB,CAAV,EAAa;AAChD,SAAK6qB,QAAL,CAAc1W,gBAAd,CAA+B,UAAUrD,SAAV,EAAqB4G,SAArB,EAAgC;AAC3D,UAAIA,SAAS,CAACre,KAAd,EAAqB;AACjB2G,QAAAA,CAAC,CAAC8Q,SAAD,EAAY4G,SAAS,CAACre,KAAtB,CAAD;AACH;AACJ,KAJD;AAKH,GAND;;AAOA,SAAOuzB,aAAP;AACH,CApRkC,EAAnC;AAsRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIwB,cAAc;AAAG;AAAe,YAAY;AAC5C,WAASA,cAAT,CAAwBhgB,MAAxB,EAAgC1M,IAAhC,EAAsC;AAClC,SAAK0M,MAAL,GAAcA,MAAd;AACA,SAAK1M,IAAL,GAAYA,IAAZ;AACA;;AACA,SAAKkG,IAAL,GAAYgkB,aAAa,CAACyC,eAA1B;AACH;;AACDD,EAAAA,cAAc,CAACl1B,SAAf,CAAyBszB,iBAAzB,GAA6C,UAAU1b,SAAV,EAAqB;AAC9D,QAAI7M,WAAW,CAAC,KAAKvC,IAAN,CAAf,EAA4B;AACxB,aAAO,IAAI0sB,cAAJ,CAAmB,KAAKhgB,MAAxB,EAAgCnL,YAAY,EAA5C,CAAP;AACH,KAFD,MAGK;AACD,aAAO,IAAImrB,cAAJ,CAAmB,KAAKhgB,MAAxB,EAAgChL,YAAY,CAAC,KAAK1B,IAAN,CAA5C,CAAP;AACH;AACJ,GAPD;;AAQA,SAAO0sB,cAAP;AACH,CAhBmC,EAApC;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIE,SAAS;AAAG;AAAe,YAAY;AACvC,WAASA,SAAT,CAAmBlgB,MAAnB,EAA2B1M,IAA3B,EAAiC6a,IAAjC,EAAuC;AACnC,SAAKnO,MAAL,GAAcA,MAAd;AACA,SAAK1M,IAAL,GAAYA,IAAZ;AACA,SAAK6a,IAAL,GAAYA,IAAZ;AACA;;AACA,SAAK3U,IAAL,GAAYgkB,aAAa,CAAC2C,SAA1B;AACH;;AACDD,EAAAA,SAAS,CAACp1B,SAAV,CAAoBszB,iBAApB,GAAwC,UAAU1b,SAAV,EAAqB;AACzD,QAAI7M,WAAW,CAAC,KAAKvC,IAAN,CAAf,EAA4B;AACxB,aAAO,IAAI4sB,SAAJ,CAAc,KAAKlgB,MAAnB,EAA2BnL,YAAY,EAAvC,EAA2C,KAAKsZ,IAAL,CAAU1L,iBAAV,CAA4BC,SAA5B,CAA3C,CAAP;AACH,KAFD,MAGK;AACD,aAAO,IAAIwd,SAAJ,CAAc,KAAKlgB,MAAnB,EAA2BhL,YAAY,CAAC,KAAK1B,IAAN,CAAvC,EAAoD,KAAK6a,IAAzD,CAAP;AACH;AACJ,GAPD;;AAQA,SAAO+R,SAAP;AACH,CAjB8B,EAA/B;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIE,KAAK;AAAG;AAAe,YAAY;AACnC,WAASA,KAAT;AACA;AAAmBpgB,EAAAA,MADnB;AAEA;AAAmB1M,EAAAA,IAFnB;AAGA;AAAmBmpB,EAAAA,QAHnB,EAG6B;AACzB,SAAKzc,MAAL,GAAcA,MAAd;AACA,SAAK1M,IAAL,GAAYA,IAAZ;AACA,SAAKmpB,QAAL,GAAgBA,QAAhB;AACA;;AACA,SAAKjjB,IAAL,GAAYgkB,aAAa,CAAC6C,KAA1B;AACH;AACD;AACJ;AACA;;;AACID,EAAAA,KAAK,CAACt1B,SAAN,CAAgBszB,iBAAhB,GAAoC,UAAU1b,SAAV,EAAqB;AACrD,QAAI7M,WAAW,CAAC,KAAKvC,IAAN,CAAf,EAA4B;AACxB,UAAIgW,SAAS,GAAG,KAAKmT,QAAL,CAAc4B,OAAd,CAAsB,IAAIhqB,IAAJ,CAASqO,SAAT,CAAtB,CAAhB;;AACA,UAAI4G,SAAS,CAACnf,OAAV,EAAJ,EAAyB;AACrB;AACA,eAAO,IAAP;AACH,OAHD,MAIK,IAAImf,SAAS,CAACre,KAAd,EAAqB;AACtB;AACA,eAAO,IAAIi1B,SAAJ,CAAc,KAAKlgB,MAAnB,EAA2BnL,YAAY,EAAvC,EAA2CyU,SAAS,CAACre,KAArD,CAAP;AACH,OAHI,MAIA;AACD;AACA,eAAO,IAAIm1B,KAAJ,CAAU,KAAKpgB,MAAf,EAAuBnL,YAAY,EAAnC,EAAuCyU,SAAvC,CAAP;AACH;AACJ,KAdD,MAeK;AACDtgB,MAAAA,MAAM,CAAC8L,YAAY,CAAC,KAAKxB,IAAN,CAAZ,KAA4BoP,SAA7B,EAAwC,gEAAxC,CAAN;AACA,aAAO,IAAI0d,KAAJ,CAAU,KAAKpgB,MAAf,EAAuBhL,YAAY,CAAC,KAAK1B,IAAN,CAAnC,EAAgD,KAAKmpB,QAArD,CAAP;AACH;AACJ,GApBD;AAqBA;AACJ;AACA;;;AACI2D,EAAAA,KAAK,CAACt1B,SAAN,CAAgBY,QAAhB,GAA2B,YAAY;AACnC,WAAQ,eACJ,KAAK4H,IADD,GAEJ,IAFI,GAGJ,KAAK0M,MAAL,CAAYtU,QAAZ,EAHI,GAIJ,UAJI,GAKJ,KAAK+wB,QAAL,CAAc/wB,QAAd,EALI,GAMJ,GANJ;AAOH,GARD;;AASA,SAAO00B,KAAP;AACH,CAhD0B,EAA3B;AAkDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIE,SAAS;AAAG;AAAe,YAAY;AACvC,WAASA,SAAT,CAAmB/R,KAAnB,EAA0BgS,iBAA1B,EAA6CC,SAA7C,EAAwD;AACpD,SAAKjS,KAAL,GAAaA,KAAb;AACA,SAAKgS,iBAAL,GAAyBA,iBAAzB;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACH;AACD;AACJ;AACA;;;AACIF,EAAAA,SAAS,CAACx1B,SAAV,CAAoB21B,kBAApB,GAAyC,YAAY;AACjD,WAAO,KAAKF,iBAAZ;AACH,GAFD;AAGA;AACJ;AACA;;;AACID,EAAAA,SAAS,CAACx1B,SAAV,CAAoB41B,UAApB,GAAiC,YAAY;AACzC,WAAO,KAAKF,SAAZ;AACH,GAFD;;AAGAF,EAAAA,SAAS,CAACx1B,SAAV,CAAoB61B,iBAApB,GAAwC,UAAUrtB,IAAV,EAAgB;AACpD,QAAIuC,WAAW,CAACvC,IAAD,CAAf,EAAuB;AACnB,aAAO,KAAKmtB,kBAAL,MAA6B,CAAC,KAAKD,SAA1C;AACH;;AACD,QAAIlM,QAAQ,GAAGxf,YAAY,CAACxB,IAAD,CAA3B;AACA,WAAO,KAAKstB,kBAAL,CAAwBtM,QAAxB,CAAP;AACH,GAND;;AAOAgM,EAAAA,SAAS,CAACx1B,SAAV,CAAoB81B,kBAApB,GAAyC,UAAU51B,GAAV,EAAe;AACpD,WAAS,KAAKy1B,kBAAL,MAA6B,CAAC,KAAKD,SAApC,IAAkD,KAAKjS,KAAL,CAAW3L,QAAX,CAAoB5X,GAApB,CAA1D;AACH,GAFD;;AAGAs1B,EAAAA,SAAS,CAACx1B,SAAV,CAAoB+1B,OAApB,GAA8B,YAAY;AACtC,WAAO,KAAKtS,KAAZ;AACH,GAFD;;AAGA,SAAO+R,SAAP;AACH,CAhC8B,EAA/B;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIQ,SAAS;AAAG;AAAe,YAAY;AACvC,WAASA,SAAT,CAAmBC,WAAnB,EAAgCC,YAAhC,EAA8C;AAC1C,SAAKD,WAAL,GAAmBA,WAAnB;AACA,SAAKC,YAAL,GAAoBA,YAApB;AACH;;AACDF,EAAAA,SAAS,CAACh2B,SAAV,CAAoBm2B,eAApB,GAAsC,UAAUC,SAAV,EAAqBC,QAArB,EAA+BjO,QAA/B,EAAyC;AAC3E,WAAO,IAAI4N,SAAJ,CAAc,IAAIR,SAAJ,CAAcY,SAAd,EAAyBC,QAAzB,EAAmCjO,QAAnC,CAAd,EAA4D,KAAK8N,YAAjE,CAAP;AACH,GAFD;;AAGAF,EAAAA,SAAS,CAACh2B,SAAV,CAAoBs2B,gBAApB,GAAuC,UAAUC,UAAV,EAAsBF,QAAtB,EAAgCjO,QAAhC,EAA0C;AAC7E,WAAO,IAAI4N,SAAJ,CAAc,KAAKC,WAAnB,EAAgC,IAAIT,SAAJ,CAAce,UAAd,EAA0BF,QAA1B,EAAoCjO,QAApC,CAAhC,CAAP;AACH,GAFD;;AAGA4N,EAAAA,SAAS,CAACh2B,SAAV,CAAoBw2B,aAApB,GAAoC,YAAY;AAC5C,WAAO,KAAKP,WAAZ;AACH,GAFD;;AAGAD,EAAAA,SAAS,CAACh2B,SAAV,CAAoBy2B,oBAApB,GAA2C,YAAY;AACnD,WAAO,KAAKR,WAAL,CAAiBN,kBAAjB,KACD,KAAKM,WAAL,CAAiBF,OAAjB,EADC,GAED,IAFN;AAGH,GAJD;;AAKAC,EAAAA,SAAS,CAACh2B,SAAV,CAAoB02B,cAApB,GAAqC,YAAY;AAC7C,WAAO,KAAKR,YAAZ;AACH,GAFD;;AAGAF,EAAAA,SAAS,CAACh2B,SAAV,CAAoB22B,qBAApB,GAA4C,YAAY;AACpD,WAAO,KAAKT,YAAL,CAAkBP,kBAAlB,KACD,KAAKO,YAAL,CAAkBH,OAAlB,EADC,GAED,IAFN;AAGH,GAJD;;AAKA,SAAOC,SAAP;AACH,CA5B8B,EAA/B;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIY,sBAAsB;AAAG;AAAe,YAAY;AACpD,WAASA,sBAAT,GAAkC;AAC9B,SAAKC,SAAL,GAAiB,IAAIjF,GAAJ,EAAjB;AACH;;AACDgF,EAAAA,sBAAsB,CAAC52B,SAAvB,CAAiCunB,gBAAjC,GAAoD,UAAUlC,MAAV,EAAkB;AAClE,QAAI3W,IAAI,GAAG2W,MAAM,CAAC3W,IAAlB;AACA,QAAI8a,QAAQ,GAAGnE,MAAM,CAACzN,SAAtB;AACA1Z,IAAAA,MAAM,CAACwQ,IAAI,KAAK;AAAc;AAAvB,OACHA,IAAI,KAAK;AAAgB;AADtB,OAEHA,IAAI,KAAK;AAAgB;AAFvB,MAE4C,2CAF5C,CAAN;AAGAxQ,IAAAA,MAAM,CAACsrB,QAAQ,KAAK,WAAd,EAA2B,iDAA3B,CAAN;AACA,QAAIsN,SAAS,GAAG,KAAKD,SAAL,CAAet2B,GAAf,CAAmBipB,QAAnB,CAAhB;;AACA,QAAIsN,SAAJ,EAAe;AACX,UAAIC,OAAO,GAAGD,SAAS,CAACpoB,IAAxB;;AACA,UAAIA,IAAI,KAAK;AAAc;AAAvB,SACAqoB,OAAO,KAAK;AAAgB;AADhC,QACqD;AACjD,eAAKF,SAAL,CAAe52B,GAAf,CAAmBupB,QAAnB,EAA6BzC,kBAAkB,CAACyC,QAAD,EAAWnE,MAAM,CAACG,YAAlB,EAAgCsR,SAAS,CAACtR,YAA1C,CAA/C;AACH,SAHD,MAIK,IAAI9W,IAAI,KAAK;AAAgB;AAAzB,SACLqoB,OAAO,KAAK;AAAc;AADzB,QAC4C;AAC7C,eAAKF,SAAL,CAAevE,MAAf,CAAsB9I,QAAtB;AACH,SAHI,MAIA,IAAI9a,IAAI,KAAK;AAAgB;AAAzB,SACLqoB,OAAO,KAAK;AAAgB;AAD3B,QACgD;AACjD,eAAKF,SAAL,CAAe52B,GAAf,CAAmBupB,QAAnB,EAA6B1C,kBAAkB,CAAC0C,QAAD,EAAWsN,SAAS,CAAC9P,OAArB,CAA/C;AACH,SAHI,MAIA,IAAItY,IAAI,KAAK;AAAgB;AAAzB,SACLqoB,OAAO,KAAK;AAAc;AADzB,QAC4C;AAC7C,eAAKF,SAAL,CAAe52B,GAAf,CAAmBupB,QAAnB,EAA6B3C,gBAAgB,CAAC2C,QAAD,EAAWnE,MAAM,CAACG,YAAlB,CAA7C;AACH,SAHI,MAIA,IAAI9W,IAAI,KAAK;AAAgB;AAAzB,SACLqoB,OAAO,KAAK;AAAgB;AAD3B,QACgD;AACjD,eAAKF,SAAL,CAAe52B,GAAf,CAAmBupB,QAAnB,EAA6BzC,kBAAkB,CAACyC,QAAD,EAAWnE,MAAM,CAACG,YAAlB,EAAgCsR,SAAS,CAAC9P,OAA1C,CAA/C;AACH,SAHI,MAIA;AACD,cAAMpoB,cAAc,CAAC,qCACjBymB,MADiB,GAEjB,kBAFiB,GAGjByR,SAHgB,CAApB;AAIH;AACJ,KA5BD,MA6BK;AACD,WAAKD,SAAL,CAAe52B,GAAf,CAAmBupB,QAAnB,EAA6BnE,MAA7B;AACH;AACJ,GAxCD;;AAyCAuR,EAAAA,sBAAsB,CAAC52B,SAAvB,CAAiCg3B,UAAjC,GAA8C,YAAY;AACtD,WAAOv0B,KAAK,CAACw0B,IAAN,CAAW,KAAKJ,SAAL,CAAevG,MAAf,EAAX,CAAP;AACH,GAFD;;AAGA,SAAOsG,sBAAP;AACH,CAjD2C,EAA5C;AAmDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,IAAIM,sBAAsB;AAAG;AAAe,YAAY;AACpD,WAASA,sBAAT,GAAkC,CACjC;AACD;AACJ;AACA;;;AACIA,EAAAA,sBAAsB,CAACl3B,SAAvB,CAAiCm3B,gBAAjC,GAAoD,UAAU3N,QAAV,EAAoB;AACpE,WAAO,IAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACI0N,EAAAA,sBAAsB,CAACl3B,SAAvB,CAAiCiqB,kBAAjC,GAAsD,UAAU1R,KAAV,EAAiB9L,KAAjB,EAAwBlF,OAAxB,EAAiC;AACnF,WAAO,IAAP;AACH,GAFD;;AAGA,SAAO2vB,sBAAP;AACH,CAhB2C,EAA5C;AAiBA;AACA;AACA;;;AACA,IAAIE,wBAAwB,GAAG,IAAIF,sBAAJ,EAA/B;AACA;AACA;AACA;AACA;;AACA,IAAIG,4BAA4B;AAAG;AAAe,YAAY;AAC1D,WAASA,4BAAT,CAAsCC,OAAtC,EAA+CC,UAA/C,EAA2DC,uBAA3D,EAAoF;AAChF,QAAIA,uBAAuB,KAAK,KAAK,CAArC,EAAwC;AAAEA,MAAAA,uBAAuB,GAAG,IAA1B;AAAiC;;AAC3E,SAAKF,OAAL,GAAeA,OAAf;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,uBAAL,GAA+BA,uBAA/B;AACH;AACD;AACJ;AACA;;;AACIH,EAAAA,4BAA4B,CAACr3B,SAA7B,CAAuCm3B,gBAAvC,GAA0D,UAAU3N,QAAV,EAAoB;AAC1E,QAAIjU,IAAI,GAAG,KAAKgiB,UAAL,CAAgBf,aAAhB,EAAX;;AACA,QAAIjhB,IAAI,CAACugB,kBAAL,CAAwBtM,QAAxB,CAAJ,EAAuC;AACnC,aAAOjU,IAAI,CAACwgB,OAAL,GAAepe,iBAAf,CAAiC6R,QAAjC,CAAP;AACH,KAFD,MAGK;AACD,UAAIiO,UAAU,GAAG,KAAKD,uBAAL,IAAgC,IAAhC,GACX,IAAIhC,SAAJ,CAAc,KAAKgC,uBAAnB,EAA4C,IAA5C,EAAkD,KAAlD,CADW,GAEX,KAAKD,UAAL,CAAgBb,cAAhB,EAFN;AAGA,aAAO,KAAKY,OAAL,CAAaI,iBAAb,CAA+BlO,QAA/B,EAAyCiO,UAAzC,CAAP;AACH;AACJ,GAXD;AAYA;AACJ;AACA;;;AACIJ,EAAAA,4BAA4B,CAACr3B,SAA7B,CAAuCiqB,kBAAvC,GAA4D,UAAU1R,KAAV,EAAiB9L,KAAjB,EAAwBlF,OAAxB,EAAiC;AACzF,QAAIowB,kBAAkB,GAAG,KAAKH,uBAAL,IAAgC,IAAhC,GACnB,KAAKA,uBADc,GAEnB,KAAKD,UAAL,CAAgBZ,qBAAhB,EAFN;AAGA,QAAIiB,KAAK,GAAG,KAAKN,OAAL,CAAaO,gBAAb,CAA8BF,kBAA9B,EAAkDlrB,KAAlD,EAAyD,CAAzD,EAA4DlF,OAA5D,EAAqEgR,KAArE,CAAZ;;AACA,QAAIqf,KAAK,CAACv1B,MAAN,KAAiB,CAArB,EAAwB;AACpB,aAAO,IAAP;AACH,KAFD,MAGK;AACD,aAAOu1B,KAAK,CAAC,CAAD,CAAZ;AACH;AACJ,GAXD;;AAYA,SAAOP,4BAAP;AACH,CAtCiD,EAAlD;AAwCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIS,eAAe;AAAG;AAAe,YAAY;AAC7C,WAASA,eAAT,CAAyBC,SAAzB,EAAoCC,OAApC,EAA6C;AACzC,SAAKD,SAAL,GAAiBA,SAAjB;AACA,SAAKC,OAAL,GAAeA,OAAf;AACH;;AACD,SAAOF,eAAP;AACH,CANoC,EAArC;AAOA;AACA;;;AACA,IAAIG,aAAa;AAAG;AAAe,YAAY;AAC3C,WAASA,aAAT,CAAuBC,OAAvB,EAAgC;AAC5B,SAAKA,OAAL,GAAeA,OAAf;AACH;;AACDD,EAAAA,aAAa,CAACj4B,SAAd,CAAwBm4B,aAAxB,GAAwC,UAAUJ,SAAV,EAAqB;AACzD75B,IAAAA,MAAM,CAAC65B,SAAS,CAACvB,aAAV,GAA0BT,OAA1B,GAAoCzc,SAApC,CAA8C,KAAK4e,OAAL,CAAa3S,QAAb,EAA9C,CAAD,EAAyE,wBAAzE,CAAN;AACArnB,IAAAA,MAAM,CAAC65B,SAAS,CAACrB,cAAV,GAA2BX,OAA3B,GAAqCzc,SAArC,CAA+C,KAAK4e,OAAL,CAAa3S,QAAb,EAA/C,CAAD,EAA0E,yBAA1E,CAAN;AACH,GAHD;;AAIA0S,EAAAA,aAAa,CAACj4B,SAAd,CAAwBo4B,cAAxB,GAAyC,UAAUC,YAAV,EAAwBC,SAAxB,EAAmCC,WAAnC,EAAgDC,aAAhD,EAA+D;AACpG,QAAIC,WAAW,GAAG,IAAI7B,sBAAJ,EAAlB;AACA,QAAI8B,YAAJ,EAAkBC,gBAAlB;;AACA,QAAIL,SAAS,CAAC5pB,IAAV,KAAmBgkB,aAAa,CAAC2C,SAArC,EAAgD;AAC5C,UAAIuD,SAAS,GAAGN,SAAhB;;AACA,UAAIM,SAAS,CAAC1jB,MAAV,CAAiB0d,QAArB,EAA+B;AAC3B8F,QAAAA,YAAY,GAAG,KAAKG,mBAAL,CAAyBR,YAAzB,EAAuCO,SAAS,CAACpwB,IAAjD,EAAuDowB,SAAS,CAACvV,IAAjE,EAAuEkV,WAAvE,EAAoFC,aAApF,EAAmGC,WAAnG,CAAf;AACH,OAFD,MAGK;AACDv6B,QAAAA,MAAM,CAAC06B,SAAS,CAAC1jB,MAAV,CAAiB2d,UAAlB,EAA8B,iBAA9B,CAAN,CADC,CAED;AACA;AACA;;AACA8F,QAAAA,gBAAgB,GACZC,SAAS,CAAC1jB,MAAV,CAAiB6d,MAAjB,IACKsF,YAAY,CAAC3B,cAAb,GAA8Bd,UAA9B,MACG,CAAC7qB,WAAW,CAAC6tB,SAAS,CAACpwB,IAAX,CAHxB;AAIAkwB,QAAAA,YAAY,GAAG,KAAKI,qBAAL,CAA2BT,YAA3B,EAAyCO,SAAS,CAACpwB,IAAnD,EAAyDowB,SAAS,CAACvV,IAAnE,EAAyEkV,WAAzE,EAAsFC,aAAtF,EAAqGG,gBAArG,EAAuHF,WAAvH,CAAf;AACH;AACJ,KAhBD,MAiBK,IAAIH,SAAS,CAAC5pB,IAAV,KAAmBgkB,aAAa,CAAC6C,KAArC,EAA4C;AAC7C,UAAIwD,KAAK,GAAGT,SAAZ;;AACA,UAAIS,KAAK,CAAC7jB,MAAN,CAAa0d,QAAjB,EAA2B;AACvB8F,QAAAA,YAAY,GAAG,KAAKM,eAAL,CAAqBX,YAArB,EAAmCU,KAAK,CAACvwB,IAAzC,EAA+CuwB,KAAK,CAACpH,QAArD,EAA+D4G,WAA/D,EAA4EC,aAA5E,EAA2FC,WAA3F,CAAf;AACH,OAFD,MAGK;AACDv6B,QAAAA,MAAM,CAAC66B,KAAK,CAAC7jB,MAAN,CAAa2d,UAAd,EAA0B,iBAA1B,CAAN,CADC,CAED;;AACA8F,QAAAA,gBAAgB,GACZI,KAAK,CAAC7jB,MAAN,CAAa6d,MAAb,IAAuBsF,YAAY,CAAC3B,cAAb,GAA8Bd,UAA9B,EAD3B;AAEA8C,QAAAA,YAAY,GAAG,KAAKO,iBAAL,CAAuBZ,YAAvB,EAAqCU,KAAK,CAACvwB,IAA3C,EAAiDuwB,KAAK,CAACpH,QAAvD,EAAiE4G,WAAjE,EAA8EC,aAA9E,EAA6FG,gBAA7F,EAA+GF,WAA/G,CAAf;AACH;AACJ,KAZI,MAaA,IAAIH,SAAS,CAAC5pB,IAAV,KAAmBgkB,aAAa,CAACW,cAArC,EAAqD;AACtD,UAAI6F,YAAY,GAAGZ,SAAnB;;AACA,UAAI,CAACY,YAAY,CAAC9F,MAAlB,EAA0B;AACtBsF,QAAAA,YAAY,GAAG,KAAKS,aAAL,CAAmBd,YAAnB,EAAiCa,YAAY,CAAC1wB,IAA9C,EAAoD0wB,YAAY,CAAC/F,YAAjE,EAA+EoF,WAA/E,EAA4FC,aAA5F,EAA2GC,WAA3G,CAAf;AACH,OAFD,MAGK;AACDC,QAAAA,YAAY,GAAG,KAAKU,gBAAL,CAAsBf,YAAtB,EAAoCa,YAAY,CAAC1wB,IAAjD,EAAuD+vB,WAAvD,EAAoEC,aAApE,EAAmFC,WAAnF,CAAf;AACH;AACJ,KARI,MASA,IAAIH,SAAS,CAAC5pB,IAAV,KAAmBgkB,aAAa,CAACyC,eAArC,EAAsD;AACvDuD,MAAAA,YAAY,GAAG,KAAKW,eAAL,CAAqBhB,YAArB,EAAmCC,SAAS,CAAC9vB,IAA7C,EAAmD+vB,WAAnD,EAAgEE,WAAhE,CAAf;AACH,KAFI,MAGA;AACD,YAAM75B,cAAc,CAAC,6BAA6B05B,SAAS,CAAC5pB,IAAxC,CAApB;AACH;;AACD,QAAIspB,OAAO,GAAGS,WAAW,CAACzB,UAAZ,EAAd;AACAiB,IAAAA,aAAa,CAACqB,mBAAd,CAAkCjB,YAAlC,EAAgDK,YAAhD,EAA8DV,OAA9D;AACA,WAAO,IAAIF,eAAJ,CAAoBY,YAApB,EAAkCV,OAAlC,CAAP;AACH,GAnDD;;AAoDAC,EAAAA,aAAa,CAACqB,mBAAd,GAAoC,UAAUjB,YAAV,EAAwBK,YAAxB,EAAsCD,WAAtC,EAAmD;AACnF,QAAIrC,SAAS,GAAGsC,YAAY,CAAClC,aAAb,EAAhB;;AACA,QAAIJ,SAAS,CAACT,kBAAV,EAAJ,EAAoC;AAChC,UAAI4D,aAAa,GAAGnD,SAAS,CAACL,OAAV,GAAoB9e,UAApB,MAAoCmf,SAAS,CAACL,OAAV,GAAoB12B,OAApB,EAAxD;AACA,UAAIm6B,eAAe,GAAGnB,YAAY,CAAC5B,oBAAb,EAAtB;;AACA,UAAIgC,WAAW,CAACp2B,MAAZ,GAAqB,CAArB,IACA,CAACg2B,YAAY,CAAC7B,aAAb,GAA6Bb,kBAA7B,EADD,IAEC4D,aAAa,IAAI,CAACnD,SAAS,CAACL,OAAV,GAAoBxc,MAApB,CAA2BigB,eAA3B,CAFnB,IAGA,CAACpD,SAAS,CAACL,OAAV,GAAoB7e,WAApB,GAAkCqC,MAAlC,CAAyCigB,eAAe,CAACtiB,WAAhB,EAAzC,CAHL,EAG8E;AAC1EuhB,QAAAA,WAAW,CAAC3yB,IAAZ,CAAiB8gB,WAAW,CAAC8R,YAAY,CAACjC,oBAAb,EAAD,CAA5B;AACH;AACJ;AACJ,GAZD;;AAaAwB,EAAAA,aAAa,CAACj4B,SAAd,CAAwBy5B,mCAAxB,GAA8D,UAAU1B,SAAV,EAAqB2B,UAArB,EAAiCnB,WAAjC,EAA8CrjB,MAA9C,EAAsDujB,WAAtD,EAAmE;AAC7H,QAAIkB,YAAY,GAAG5B,SAAS,CAACvB,aAAV,EAAnB;;AACA,QAAI+B,WAAW,CAACqB,cAAZ,CAA2BF,UAA3B,KAA0C,IAA9C,EAAoD;AAChD;AACA,aAAO3B,SAAP;AACH,KAHD,MAIK;AACD,UAAI3N,aAAa,GAAG,KAAK,CAAzB;AAAA,UAA4BqN,UAAU,GAAG,KAAK,CAA9C;;AACA,UAAI1sB,WAAW,CAAC2uB,UAAD,CAAf,EAA6B;AACzB;AACAx7B,QAAAA,MAAM,CAAC65B,SAAS,CAACrB,cAAV,GAA2Bf,kBAA3B,EAAD,EAAkD,4DAAlD,CAAN;;AACA,YAAIoC,SAAS,CAACrB,cAAV,GAA2Bd,UAA3B,EAAJ,EAA6C;AACzC;AACA;AACA;AACA,cAAIiE,WAAW,GAAG9B,SAAS,CAACpB,qBAAV,EAAlB;AACA,cAAImD,gBAAgB,GAAGD,WAAW,YAAYxZ,YAAvB,GACjBwZ,WADiB,GAEjBxZ,YAAY,CAAC9I,UAFnB;AAGA,cAAIwiB,qBAAqB,GAAGxB,WAAW,CAACyB,yBAAZ,CAAsCF,gBAAtC,CAA5B;AACA1P,UAAAA,aAAa,GAAG,KAAK8N,OAAL,CAAa1Q,cAAb,CAA4BuQ,SAAS,CAACvB,aAAV,GAA0BT,OAA1B,EAA5B,EAAiEgE,qBAAjE,EAAwFtB,WAAxF,CAAhB;AACH,SAVD,MAWK;AACD,cAAIwB,YAAY,GAAG1B,WAAW,CAACnI,sBAAZ,CAAmC2H,SAAS,CAACpB,qBAAV,EAAnC,CAAnB;AACAvM,UAAAA,aAAa,GAAG,KAAK8N,OAAL,CAAa1Q,cAAb,CAA4BuQ,SAAS,CAACvB,aAAV,GAA0BT,OAA1B,EAA5B,EAAiEkE,YAAjE,EAA+ExB,WAA/E,CAAhB;AACH;AACJ,OAlBD,MAmBK;AACD,YAAIjP,QAAQ,GAAGxf,YAAY,CAAC0vB,UAAD,CAA3B;;AACA,YAAIlQ,QAAQ,KAAK,WAAjB,EAA8B;AAC1BtrB,UAAAA,MAAM,CAAC+L,aAAa,CAACyvB,UAAD,CAAb,KAA8B,CAA/B,EAAkC,uDAAlC,CAAN;AACA,cAAIQ,YAAY,GAAGP,YAAY,CAAC5D,OAAb,EAAnB;AACA0B,UAAAA,UAAU,GAAGM,SAAS,CAACrB,cAAV,GAA2BX,OAA3B,EAAb,CAH0B,CAI1B;;AACA,cAAIoE,eAAe,GAAG5B,WAAW,CAAC6B,kCAAZ,CAA+CV,UAA/C,EAA2DQ,YAA3D,EAAyEzC,UAAzE,CAAtB;;AACA,cAAI0C,eAAe,IAAI,IAAvB,EAA6B;AACzB/P,YAAAA,aAAa,GAAG,KAAK8N,OAAL,CAAazgB,cAAb,CAA4ByiB,YAA5B,EAA0CC,eAA1C,CAAhB;AACH,WAFD,MAGK;AACD;AACA/P,YAAAA,aAAa,GAAGuP,YAAY,CAAC5D,OAAb,EAAhB;AACH;AACJ,SAbD,MAcK;AACD,cAAIsE,eAAe,GAAGnwB,YAAY,CAACwvB,UAAD,CAAlC,CADC,CAED;;AACA,cAAIY,aAAa,GAAG,KAAK,CAAzB;;AACA,cAAIX,YAAY,CAAC7D,kBAAb,CAAgCtM,QAAhC,CAAJ,EAA+C;AAC3CiO,YAAAA,UAAU,GAAGM,SAAS,CAACrB,cAAV,GAA2BX,OAA3B,EAAb;AACA,gBAAIwE,gBAAgB,GAAGhC,WAAW,CAAC6B,kCAAZ,CAA+CV,UAA/C,EAA2DC,YAAY,CAAC5D,OAAb,EAA3D,EAAmF0B,UAAnF,CAAvB;;AACA,gBAAI8C,gBAAgB,IAAI,IAAxB,EAA8B;AAC1BD,cAAAA,aAAa,GAAGX,YAAY,CACvB5D,OADW,GAEXpe,iBAFW,CAEO6R,QAFP,EAGXrR,WAHW,CAGCkiB,eAHD,EAGkBE,gBAHlB,CAAhB;AAIH,aALD,MAMK;AACD;AACAD,cAAAA,aAAa,GAAGX,YAAY,CACvB5D,OADW,GAEXpe,iBAFW,CAEO6R,QAFP,CAAhB;AAGH;AACJ,WAfD,MAgBK;AACD8Q,YAAAA,aAAa,GAAG/B,WAAW,CAACb,iBAAZ,CAA8BlO,QAA9B,EAAwCuO,SAAS,CAACrB,cAAV,EAAxC,CAAhB;AACH;;AACD,cAAI4D,aAAa,IAAI,IAArB,EAA2B;AACvBlQ,YAAAA,aAAa,GAAG,KAAK8N,OAAL,CAAa/f,WAAb,CAAyBwhB,YAAY,CAAC5D,OAAb,EAAzB,EAAiDvM,QAAjD,EAA2D8Q,aAA3D,EAA0ED,eAA1E,EAA2FnlB,MAA3F,EAAmGujB,WAAnG,CAAhB;AACH,WAFD,MAGK;AACD;AACArO,YAAAA,aAAa,GAAGuP,YAAY,CAAC5D,OAAb,EAAhB;AACH;AACJ;AACJ;;AACD,aAAOgC,SAAS,CAAC5B,eAAV,CAA0B/L,aAA1B,EAAyCuP,YAAY,CAAChE,kBAAb,MAAqC5qB,WAAW,CAAC2uB,UAAD,CAAzF,EAAuG,KAAKxB,OAAL,CAAaxQ,YAAb,EAAvG,CAAP;AACH;AACJ,GA7ED;;AA8EAuQ,EAAAA,aAAa,CAACj4B,SAAd,CAAwB84B,qBAAxB,GAAgD,UAAUT,YAAV,EAAwBqB,UAAxB,EAAoCc,WAApC,EAAiDjC,WAAjD,EAA8DC,aAA9D,EAA6EG,gBAA7E,EAA+FF,WAA/F,EAA4G;AACxJ,QAAIgC,aAAa,GAAGpC,YAAY,CAAC3B,cAAb,EAApB;AACA,QAAIgE,cAAJ;AACA,QAAIC,YAAY,GAAGhC,gBAAgB,GAC7B,KAAKT,OADwB,GAE7B,KAAKA,OAAL,CAAavQ,gBAAb,EAFN;;AAGA,QAAI5c,WAAW,CAAC2uB,UAAD,CAAf,EAA6B;AACzBgB,MAAAA,cAAc,GAAGC,YAAY,CAACnT,cAAb,CAA4BiT,aAAa,CAAC1E,OAAd,EAA5B,EAAqDyE,WAArD,EAAkE,IAAlE,CAAjB;AACH,KAFD,MAGK,IAAIG,YAAY,CAACjT,YAAb,MAA+B,CAAC+S,aAAa,CAAC7E,UAAd,EAApC,EAAgE;AACjE;AACA,UAAIgF,aAAa,GAAGH,aAAa,CAC5B1E,OADe,GAEf5d,WAFe,CAEHuhB,UAFG,EAESc,WAFT,CAApB;AAGAE,MAAAA,cAAc,GAAGC,YAAY,CAACnT,cAAb,CAA4BiT,aAAa,CAAC1E,OAAd,EAA5B,EAAqD6E,aAArD,EAAoE,IAApE,CAAjB;AACH,KANI,MAOA;AACD,UAAIpR,QAAQ,GAAGxf,YAAY,CAAC0vB,UAAD,CAA3B;;AACA,UAAI,CAACe,aAAa,CAAC5E,iBAAd,CAAgC6D,UAAhC,CAAD,IACAzvB,aAAa,CAACyvB,UAAD,CAAb,GAA4B,CADhC,EACmC;AAC/B;AACA,eAAOrB,YAAP;AACH;;AACD,UAAIgC,eAAe,GAAGnwB,YAAY,CAACwvB,UAAD,CAAlC;AACA,UAAI1hB,SAAS,GAAGyiB,aAAa,CAAC1E,OAAd,GAAwBpe,iBAAxB,CAA0C6R,QAA1C,CAAhB;AACA,UAAItR,YAAY,GAAGF,SAAS,CAACG,WAAV,CAAsBkiB,eAAtB,EAAuCG,WAAvC,CAAnB;;AACA,UAAIhR,QAAQ,KAAK,WAAjB,EAA8B;AAC1BkR,QAAAA,cAAc,GAAGC,YAAY,CAACljB,cAAb,CAA4BgjB,aAAa,CAAC1E,OAAd,EAA5B,EAAqD7d,YAArD,CAAjB;AACH,OAFD,MAGK;AACDwiB,QAAAA,cAAc,GAAGC,YAAY,CAACxiB,WAAb,CAAyBsiB,aAAa,CAAC1E,OAAd,EAAzB,EAAkDvM,QAAlD,EAA4DtR,YAA5D,EAA0EmiB,eAA1E,EAA2FjD,wBAA3F,EAAqH,IAArH,CAAjB;AACH;AACJ;;AACD,QAAIsB,YAAY,GAAGL,YAAY,CAAC/B,gBAAb,CAA8BoE,cAA9B,EAA8CD,aAAa,CAAC9E,kBAAd,MAAsC5qB,WAAW,CAAC2uB,UAAD,CAA/F,EAA6GiB,YAAY,CAACjT,YAAb,EAA7G,CAAnB;AACA,QAAIxS,MAAM,GAAG,IAAImiB,4BAAJ,CAAiCkB,WAAjC,EAA8CG,YAA9C,EAA4DF,aAA5D,CAAb;AACA,WAAO,KAAKiB,mCAAL,CAAyCf,YAAzC,EAAuDgB,UAAvD,EAAmEnB,WAAnE,EAAgFrjB,MAAhF,EAAwFujB,WAAxF,CAAP;AACH,GApCD;;AAqCAR,EAAAA,aAAa,CAACj4B,SAAd,CAAwB64B,mBAAxB,GAA8C,UAAUR,YAAV,EAAwBqB,UAAxB,EAAoCc,WAApC,EAAiDjC,WAAjD,EAA8DC,aAA9D,EAA6EC,WAA7E,EAA0F;AACpI,QAAIkB,YAAY,GAAGtB,YAAY,CAAC7B,aAAb,EAAnB;AACA,QAAIkC,YAAJ,EAAkBtO,aAAlB;AACA,QAAIlV,MAAM,GAAG,IAAImiB,4BAAJ,CAAiCkB,WAAjC,EAA8CF,YAA9C,EAA4DG,aAA5D,CAAb;;AACA,QAAIztB,WAAW,CAAC2uB,UAAD,CAAf,EAA6B;AACzBtP,MAAAA,aAAa,GAAG,KAAK8N,OAAL,CAAa1Q,cAAb,CAA4B6Q,YAAY,CAAC7B,aAAb,GAA6BT,OAA7B,EAA5B,EAAoEyE,WAApE,EAAiF/B,WAAjF,CAAhB;AACAC,MAAAA,YAAY,GAAGL,YAAY,CAAClC,eAAb,CAA6B/L,aAA7B,EAA4C,IAA5C,EAAkD,KAAK8N,OAAL,CAAaxQ,YAAb,EAAlD,CAAf;AACH,KAHD,MAIK;AACD,UAAI8B,QAAQ,GAAGxf,YAAY,CAAC0vB,UAAD,CAA3B;;AACA,UAAIlQ,QAAQ,KAAK,WAAjB,EAA8B;AAC1BY,QAAAA,aAAa,GAAG,KAAK8N,OAAL,CAAazgB,cAAb,CAA4B4gB,YAAY,CAAC7B,aAAb,GAA6BT,OAA7B,EAA5B,EAAoEyE,WAApE,CAAhB;AACA9B,QAAAA,YAAY,GAAGL,YAAY,CAAClC,eAAb,CAA6B/L,aAA7B,EAA4CuP,YAAY,CAAChE,kBAAb,EAA5C,EAA+EgE,YAAY,CAAC/D,UAAb,EAA/E,CAAf;AACH,OAHD,MAIK;AACD,YAAIyE,eAAe,GAAGnwB,YAAY,CAACwvB,UAAD,CAAlC;AACA,YAAIpS,QAAQ,GAAGqS,YAAY,CAAC5D,OAAb,GAAuBpe,iBAAvB,CAAyC6R,QAAzC,CAAf;AACA,YAAIrC,QAAQ,GAAG,KAAK,CAApB;;AACA,YAAIpc,WAAW,CAACsvB,eAAD,CAAf,EAAkC;AAC9B;AACAlT,UAAAA,QAAQ,GAAGqT,WAAX;AACH,SAHD,MAIK;AACD,cAAIxiB,SAAS,GAAG9C,MAAM,CAACiiB,gBAAP,CAAwB3N,QAAxB,CAAhB;;AACA,cAAIxR,SAAS,IAAI,IAAjB,EAAuB;AACnB,gBAAI7N,WAAW,CAACkwB,eAAD,CAAX,KAAiC,WAAjC,IACAriB,SAAS,CAACH,QAAV,CAAmBnN,UAAU,CAAC2vB,eAAD,CAA7B,EAAgDh7B,OAAhD,EADJ,EAC+D;AAC3D;AACA;AACA8nB,cAAAA,QAAQ,GAAGnP,SAAX;AACH,aALD,MAMK;AACDmP,cAAAA,QAAQ,GAAGnP,SAAS,CAACG,WAAV,CAAsBkiB,eAAtB,EAAuCG,WAAvC,CAAX;AACH;AACJ,WAVD,MAWK;AACD;AACArT,YAAAA,QAAQ,GAAG9G,YAAY,CAAC9I,UAAxB;AACH;AACJ;;AACD,YAAI,CAAC+P,QAAQ,CAAC/N,MAAT,CAAgB4N,QAAhB,CAAL,EAAgC;AAC5B,cAAI0T,YAAY,GAAG,KAAK3C,OAAL,CAAa/f,WAAb,CAAyBwhB,YAAY,CAAC5D,OAAb,EAAzB,EAAiDvM,QAAjD,EAA2DrC,QAA3D,EAAqEkT,eAArE,EAAsFnlB,MAAtF,EAA8FujB,WAA9F,CAAnB;AACAC,UAAAA,YAAY,GAAGL,YAAY,CAAClC,eAAb,CAA6B0E,YAA7B,EAA2ClB,YAAY,CAAChE,kBAAb,EAA3C,EAA8E,KAAKuC,OAAL,CAAaxQ,YAAb,EAA9E,CAAf;AACH,SAHD,MAIK;AACDgR,UAAAA,YAAY,GAAGL,YAAf;AACH;AACJ;AACJ;;AACD,WAAOK,YAAP;AACH,GAlDD;;AAmDAT,EAAAA,aAAa,CAAC6C,cAAd,GAA+B,UAAU/C,SAAV,EAAqBvO,QAArB,EAA+B;AAC1D,WAAOuO,SAAS,CAACvB,aAAV,GAA0BV,kBAA1B,CAA6CtM,QAA7C,CAAP;AACH,GAFD;;AAGAyO,EAAAA,aAAa,CAACj4B,SAAd,CAAwBg5B,eAAxB,GAA0C,UAAUjB,SAAV,EAAqBvvB,IAArB,EAA2BuyB,eAA3B,EAA4CxC,WAA5C,EAAyDsB,WAAzD,EAAsEpB,WAAtE,EAAmF;AACzH,QAAI3Y,KAAK,GAAG,IAAZ,CADyH,CAEzH;AACA;AACA;AACA;AACA;AACA;;;AACA,QAAIkb,YAAY,GAAGjD,SAAnB;AACAgD,IAAAA,eAAe,CAAChG,OAAhB,CAAwB,UAAUlB,YAAV,EAAwB7b,SAAxB,EAAmC;AACvD,UAAIijB,SAAS,GAAGrwB,SAAS,CAACpC,IAAD,EAAOqrB,YAAP,CAAzB;;AACA,UAAIoE,aAAa,CAAC6C,cAAd,CAA6B/C,SAA7B,EAAwC/tB,YAAY,CAACixB,SAAD,CAApD,CAAJ,EAAsE;AAClED,QAAAA,YAAY,GAAGlb,KAAK,CAAC+Y,mBAAN,CAA0BmC,YAA1B,EAAwCC,SAAxC,EAAmDjjB,SAAnD,EAA8DugB,WAA9D,EAA2EsB,WAA3E,EAAwFpB,WAAxF,CAAf;AACH;AACJ,KALD;AAMAsC,IAAAA,eAAe,CAAChG,OAAhB,CAAwB,UAAUlB,YAAV,EAAwB7b,SAAxB,EAAmC;AACvD,UAAIijB,SAAS,GAAGrwB,SAAS,CAACpC,IAAD,EAAOqrB,YAAP,CAAzB;;AACA,UAAI,CAACoE,aAAa,CAAC6C,cAAd,CAA6B/C,SAA7B,EAAwC/tB,YAAY,CAACixB,SAAD,CAApD,CAAL,EAAuE;AACnED,QAAAA,YAAY,GAAGlb,KAAK,CAAC+Y,mBAAN,CAA0BmC,YAA1B,EAAwCC,SAAxC,EAAmDjjB,SAAnD,EAA8DugB,WAA9D,EAA2EsB,WAA3E,EAAwFpB,WAAxF,CAAf;AACH;AACJ,KALD;AAMA,WAAOuC,YAAP;AACH,GAtBD;;AAuBA/C,EAAAA,aAAa,CAACj4B,SAAd,CAAwBk7B,WAAxB,GAAsC,UAAU3lB,IAAV,EAAgBwjB,KAAhB,EAAuB;AACzDA,IAAAA,KAAK,CAAChE,OAAN,CAAc,UAAUlB,YAAV,EAAwB7b,SAAxB,EAAmC;AAC7CzC,MAAAA,IAAI,GAAGA,IAAI,CAAC4C,WAAL,CAAiB0b,YAAjB,EAA+B7b,SAA/B,CAAP;AACH,KAFD;AAGA,WAAOzC,IAAP;AACH,GALD;;AAMA0iB,EAAAA,aAAa,CAACj4B,SAAd,CAAwBi5B,iBAAxB,GAA4C,UAAUlB,SAAV,EAAqBvvB,IAArB,EAA2BuyB,eAA3B,EAA4CxC,WAA5C,EAAyDsB,WAAzD,EAAsElB,gBAAtE,EAAwFF,WAAxF,EAAqG;AAC7I,QAAI3Y,KAAK,GAAG,IAAZ,CAD6I,CAE7I;AACA;;;AACA,QAAIiY,SAAS,CAACrB,cAAV,GAA2BX,OAA3B,GAAqC12B,OAArC,MACA,CAAC04B,SAAS,CAACrB,cAAV,GAA2Bf,kBAA3B,EADL,EACsD;AAClD,aAAOoC,SAAP;AACH,KAP4I,CAQ7I;AACA;AACA;AACA;AACA;AACA;;;AACA,QAAIiD,YAAY,GAAGjD,SAAnB;AACA,QAAIoD,aAAJ;;AACA,QAAIpwB,WAAW,CAACvC,IAAD,CAAf,EAAuB;AACnB2yB,MAAAA,aAAa,GAAGJ,eAAhB;AACH,KAFD,MAGK;AACDI,MAAAA,aAAa,GAAG,IAAIzH,aAAJ,CAAkB,IAAlB,EAAwBS,OAAxB,CAAgC3rB,IAAhC,EAAsCuyB,eAAtC,CAAhB;AACH;;AACD,QAAItD,UAAU,GAAGM,SAAS,CAACrB,cAAV,GAA2BX,OAA3B,EAAjB;AACAoF,IAAAA,aAAa,CAACxJ,QAAd,CAAuB1W,gBAAvB,CAAwC,UAAUuO,QAAV,EAAoBhL,SAApB,EAA+B;AACnE,UAAIiZ,UAAU,CAAC3f,QAAX,CAAoB0R,QAApB,CAAJ,EAAmC;AAC/B,YAAI4R,WAAW,GAAGrD,SAAS,CACtBrB,cADa,GAEbX,OAFa,GAGbpe,iBAHa,CAGK6R,QAHL,CAAlB;;AAIA,YAAIrC,QAAQ,GAAGrH,KAAK,CAACob,WAAN,CAAkBE,WAAlB,EAA+B5c,SAA/B,CAAf;;AACAwc,QAAAA,YAAY,GAAGlb,KAAK,CAACgZ,qBAAN,CAA4BkC,YAA5B,EAA0C,IAAIzxB,IAAJ,CAASigB,QAAT,CAA1C,EAA8DrC,QAA9D,EAAwEoR,WAAxE,EAAqFsB,WAArF,EAAkGlB,gBAAlG,EAAoHF,WAApH,CAAf;AACH;AACJ,KATD;AAUA0C,IAAAA,aAAa,CAACxJ,QAAd,CAAuB1W,gBAAvB,CAAwC,UAAUuO,QAAV,EAAoB6R,cAApB,EAAoC;AACxE,UAAIC,kBAAkB,GAAG,CAACvD,SAAS,CAACrB,cAAV,GAA2BZ,kBAA3B,CAA8CtM,QAA9C,CAAD,IACrB6R,cAAc,CAACl7B,KAAf,IAAwB,IAD5B;;AAEA,UAAI,CAACs3B,UAAU,CAAC3f,QAAX,CAAoB0R,QAApB,CAAD,IAAkC,CAAC8R,kBAAvC,EAA2D;AACvD,YAAIF,WAAW,GAAGrD,SAAS,CACtBrB,cADa,GAEbX,OAFa,GAGbpe,iBAHa,CAGK6R,QAHL,CAAlB;;AAIA,YAAIrC,QAAQ,GAAGrH,KAAK,CAACob,WAAN,CAAkBE,WAAlB,EAA+BC,cAA/B,CAAf;;AACAL,QAAAA,YAAY,GAAGlb,KAAK,CAACgZ,qBAAN,CAA4BkC,YAA5B,EAA0C,IAAIzxB,IAAJ,CAASigB,QAAT,CAA1C,EAA8DrC,QAA9D,EAAwEoR,WAAxE,EAAqFsB,WAArF,EAAkGlB,gBAAlG,EAAoHF,WAApH,CAAf;AACH;AACJ,KAXD;AAYA,WAAOuC,YAAP;AACH,GA9CD;;AA+CA/C,EAAAA,aAAa,CAACj4B,SAAd,CAAwBm5B,aAAxB,GAAwC,UAAUpB,SAAV,EAAqBwD,OAArB,EAA8BpI,YAA9B,EAA4CoF,WAA5C,EAAyDC,aAAzD,EAAwEC,WAAxE,EAAqF;AACzH,QAAIF,WAAW,CAACqB,cAAZ,CAA2B2B,OAA3B,KAAuC,IAA3C,EAAiD;AAC7C,aAAOxD,SAAP;AACH,KAHwH,CAIzH;;;AACA,QAAIY,gBAAgB,GAAGZ,SAAS,CAACrB,cAAV,GAA2Bd,UAA3B,EAAvB,CALyH,CAMzH;AACA;;AACA,QAAIiE,WAAW,GAAG9B,SAAS,CAACrB,cAAV,EAAlB;;AACA,QAAIvD,YAAY,CAAChzB,KAAb,IAAsB,IAA1B,EAAgC;AAC5B;AACA,UAAK4K,WAAW,CAACwwB,OAAD,CAAX,IAAwB1B,WAAW,CAAClE,kBAAZ,EAAzB,IACAkE,WAAW,CAAChE,iBAAZ,CAA8B0F,OAA9B,CADJ,EAC4C;AACxC,eAAO,KAAKzC,qBAAL,CAA2Bf,SAA3B,EAAsCwD,OAAtC,EAA+C1B,WAAW,CAAC9D,OAAZ,GAAsBle,QAAtB,CAA+B0jB,OAA/B,CAA/C,EAAwFhD,WAAxF,EAAqGC,aAArG,EAAoHG,gBAApH,EAAsIF,WAAtI,CAAP;AACH,OAHD,MAIK,IAAI1tB,WAAW,CAACwwB,OAAD,CAAf,EAA0B;AAC3B;AACA;AACA,YAAIC,iBAAiB,GAAG,IAAI9H,aAAJ,CAAkB,IAAlB,CAAxB;AACAmG,QAAAA,WAAW,CAAC9D,OAAZ,GAAsBzd,YAAtB,CAAmC3B,SAAnC,EAA8C,UAAUhW,IAAV,EAAgB4U,IAAhB,EAAsB;AAChEimB,UAAAA,iBAAiB,GAAGA,iBAAiB,CAACv7B,GAAlB,CAAsB,IAAIsJ,IAAJ,CAAS5I,IAAT,CAAtB,EAAsC4U,IAAtC,CAApB;AACH,SAFD;AAGA,eAAO,KAAK0jB,iBAAL,CAAuBlB,SAAvB,EAAkCwD,OAAlC,EAA2CC,iBAA3C,EAA8DjD,WAA9D,EAA2EC,aAA3E,EAA0FG,gBAA1F,EAA4GF,WAA5G,CAAP;AACH,OARI,MASA;AACD,eAAOV,SAAP;AACH;AACJ,KAlBD,MAmBK;AACD;AACA,UAAI0D,iBAAiB,GAAG,IAAI/H,aAAJ,CAAkB,IAAlB,CAAxB;AACAP,MAAAA,YAAY,CAAC4B,OAAb,CAAqB,UAAU2G,SAAV,EAAqBv7B,KAArB,EAA4B;AAC7C,YAAIw7B,eAAe,GAAG/wB,SAAS,CAAC2wB,OAAD,EAAUG,SAAV,CAA/B;;AACA,YAAI7B,WAAW,CAAChE,iBAAZ,CAA8B8F,eAA9B,CAAJ,EAAoD;AAChDF,UAAAA,iBAAiB,GAAGA,iBAAiB,CAACx7B,GAAlB,CAAsBy7B,SAAtB,EAAiC7B,WAAW,CAAC9D,OAAZ,GAAsBle,QAAtB,CAA+B8jB,eAA/B,CAAjC,CAApB;AACH;AACJ,OALD;AAMA,aAAO,KAAK1C,iBAAL,CAAuBlB,SAAvB,EAAkCwD,OAAlC,EAA2CE,iBAA3C,EAA8DlD,WAA9D,EAA2EC,aAA3E,EAA0FG,gBAA1F,EAA4GF,WAA5G,CAAP;AACH;AACJ,GAvCD;;AAwCAR,EAAAA,aAAa,CAACj4B,SAAd,CAAwBq5B,eAAxB,GAA0C,UAAUtB,SAAV,EAAqBvvB,IAArB,EAA2B+vB,WAA3B,EAAwCE,WAAxC,EAAqD;AAC3F,QAAImD,aAAa,GAAG7D,SAAS,CAACrB,cAAV,EAApB;AACA,QAAIgC,YAAY,GAAGX,SAAS,CAACzB,gBAAV,CAA2BsF,aAAa,CAAC7F,OAAd,EAA3B,EAAoD6F,aAAa,CAACjG,kBAAd,MAAsC5qB,WAAW,CAACvC,IAAD,CAArG,EAA6GozB,aAAa,CAAChG,UAAd,EAA7G,CAAnB;AACA,WAAO,KAAK6D,mCAAL,CAAyCf,YAAzC,EAAuDlwB,IAAvD,EAA6D+vB,WAA7D,EAA0EnB,wBAA1E,EAAoGqB,WAApG,CAAP;AACH,GAJD;;AAKAR,EAAAA,aAAa,CAACj4B,SAAd,CAAwBo5B,gBAAxB,GAA2C,UAAUrB,SAAV,EAAqBvvB,IAArB,EAA2B+vB,WAA3B,EAAwCsD,mBAAxC,EAA6DpD,WAA7D,EAA0E;AACjH,QAAIpC,QAAJ;;AACA,QAAIkC,WAAW,CAACqB,cAAZ,CAA2BpxB,IAA3B,KAAoC,IAAxC,EAA8C;AAC1C,aAAOuvB,SAAP;AACH,KAFD,MAGK;AACD,UAAI7iB,MAAM,GAAG,IAAImiB,4BAAJ,CAAiCkB,WAAjC,EAA8CR,SAA9C,EAAyD8D,mBAAzD,CAAb;AACA,UAAIjS,aAAa,GAAGmO,SAAS,CAACvB,aAAV,GAA0BT,OAA1B,EAApB;AACA,UAAI3L,aAAa,GAAG,KAAK,CAAzB;;AACA,UAAIrf,WAAW,CAACvC,IAAD,CAAX,IAAqBwB,YAAY,CAACxB,IAAD,CAAZ,KAAuB,WAAhD,EAA6D;AACzD,YAAIsN,OAAO,GAAG,KAAK,CAAnB;;AACA,YAAIiiB,SAAS,CAACrB,cAAV,GAA2Bf,kBAA3B,EAAJ,EAAqD;AACjD7f,UAAAA,OAAO,GAAGyiB,WAAW,CAACnI,sBAAZ,CAAmC2H,SAAS,CAACpB,qBAAV,EAAnC,CAAV;AACH,SAFD,MAGK;AACD,cAAImF,cAAc,GAAG/D,SAAS,CAACrB,cAAV,GAA2BX,OAA3B,EAArB;AACA73B,UAAAA,MAAM,CAAC49B,cAAc,YAAYzb,YAA3B,EAAyC,+CAAzC,CAAN;AACAvK,UAAAA,OAAO,GAAGyiB,WAAW,CAACyB,yBAAZ,CAAsC8B,cAAtC,CAAV;AACH;;AACDhmB,QAAAA,OAAO,GAAGA,OAAV;AACAsU,QAAAA,aAAa,GAAG,KAAK8N,OAAL,CAAa1Q,cAAb,CAA4BoC,aAA5B,EAA2C9T,OAA3C,EAAoD2iB,WAApD,CAAhB;AACH,OAZD,MAaK;AACD,YAAIjP,QAAQ,GAAGxf,YAAY,CAACxB,IAAD,CAA3B;AACA,YAAI2e,QAAQ,GAAGoR,WAAW,CAACb,iBAAZ,CAA8BlO,QAA9B,EAAwCuO,SAAS,CAACrB,cAAV,EAAxC,CAAf;;AACA,YAAIvP,QAAQ,IAAI,IAAZ,IACA4Q,SAAS,CAACrB,cAAV,GAA2BZ,kBAA3B,CAA8CtM,QAA9C,CADJ,EAC6D;AACzDrC,UAAAA,QAAQ,GAAGyC,aAAa,CAACjS,iBAAd,CAAgC6R,QAAhC,CAAX;AACH;;AACD,YAAIrC,QAAQ,IAAI,IAAhB,EAAsB;AAClBiD,UAAAA,aAAa,GAAG,KAAK8N,OAAL,CAAa/f,WAAb,CAAyByR,aAAzB,EAAwCJ,QAAxC,EAAkDrC,QAAlD,EAA4Djd,YAAY,CAAC1B,IAAD,CAAxE,EAAgF0M,MAAhF,EAAwFujB,WAAxF,CAAhB;AACH,SAFD,MAGK,IAAIV,SAAS,CAACvB,aAAV,GAA0BT,OAA1B,GAAoCje,QAApC,CAA6C0R,QAA7C,CAAJ,EAA4D;AAC7D;AACAY,UAAAA,aAAa,GAAG,KAAK8N,OAAL,CAAa/f,WAAb,CAAyByR,aAAzB,EAAwCJ,QAAxC,EAAkDnJ,YAAY,CAAC9I,UAA/D,EAA2ErN,YAAY,CAAC1B,IAAD,CAAvF,EAA+F0M,MAA/F,EAAuGujB,WAAvG,CAAhB;AACH,SAHI,MAIA;AACDrO,UAAAA,aAAa,GAAGR,aAAhB;AACH;;AACD,YAAIQ,aAAa,CAAC/qB,OAAd,MACA04B,SAAS,CAACrB,cAAV,GAA2Bf,kBAA3B,EADJ,EACqD;AACjD;AACAU,UAAAA,QAAQ,GAAGkC,WAAW,CAACnI,sBAAZ,CAAmC2H,SAAS,CAACpB,qBAAV,EAAnC,CAAX;;AACA,cAAIN,QAAQ,CAACpf,UAAT,EAAJ,EAA2B;AACvBmT,YAAAA,aAAa,GAAG,KAAK8N,OAAL,CAAa1Q,cAAb,CAA4B4C,aAA5B,EAA2CiM,QAA3C,EAAqDoC,WAArD,CAAhB;AACH;AACJ;AACJ;;AACDpC,MAAAA,QAAQ,GACJ0B,SAAS,CAACrB,cAAV,GAA2Bf,kBAA3B,MACI4C,WAAW,CAACqB,cAAZ,CAA2B7vB,YAAY,EAAvC,KAA8C,IAFtD;AAGA,aAAOguB,SAAS,CAAC5B,eAAV,CAA0B/L,aAA1B,EAAyCiM,QAAzC,EAAmD,KAAK6B,OAAL,CAAaxQ,YAAb,EAAnD,CAAP;AACH;AACJ,GArDD;;AAsDA,SAAOuQ,aAAP;AACH,CAlakC,EAAnC;AAoaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAI8D,cAAc;AAAG;AAAe,YAAY;AAC5C,WAASA,cAAT,CAAwBC,MAAxB,EAAgC;AAC5B,SAAKA,MAAL,GAAcA,MAAd;AACA,SAAKrY,MAAL,GAAc,KAAKqY,MAAL,CAAY1W,cAAZ,GAA6BC,QAA7B,EAAd;AACH;;AACD,SAAOwW,cAAP;AACH,CANmC,EAApC;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,sCAAT,CAAgDC,cAAhD,EAAgElE,OAAhE,EAAyEmE,UAAzE,EAAqFC,kBAArF,EAAyG;AACrG,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,KAAK,GAAG,EAAZ;AACAtE,EAAAA,OAAO,CAAC/T,OAAR,CAAgB,UAAUoB,MAAV,EAAkB;AAC9B,QAAIA,MAAM,CAAC3W,IAAP,KAAgB;AAAgB;AAAhC,OACAwtB,cAAc,CAACvY,MAAf,CAAsB/N,mBAAtB,CAA0CyP,MAAM,CAAC2B,OAAjD,EAA0D3B,MAAM,CAACG,YAAjE,CADJ,EACoF;AAChF8W,MAAAA,KAAK,CAACx2B,IAAN,CAAWmhB,gBAAgB,CAAC5B,MAAM,CAACzN,SAAR,EAAmByN,MAAM,CAACG,YAA1B,CAA3B;AACH;AACJ,GALD;AAMA+W,EAAAA,mCAAmC,CAACL,cAAD,EAAiBG,MAAjB,EAAyB;AAAgB;AAAzC,IAA8DrE,OAA9D,EAAuEoE,kBAAvE,EAA2FD,UAA3F,CAAnC;AACAI,EAAAA,mCAAmC,CAACL,cAAD,EAAiBG,MAAjB,EAAyB;AAAc;AAAvC,IAA0DrE,OAA1D,EAAmEoE,kBAAnE,EAAuFD,UAAvF,CAAnC;AACAI,EAAAA,mCAAmC,CAACL,cAAD,EAAiBG,MAAjB,EAAyB;AAAc;AAAvC,IAA0DC,KAA1D,EAAiEF,kBAAjE,EAAqFD,UAArF,CAAnC;AACAI,EAAAA,mCAAmC,CAACL,cAAD,EAAiBG,MAAjB,EAAyB;AAAgB;AAAzC,IAA8DrE,OAA9D,EAAuEoE,kBAAvE,EAA2FD,UAA3F,CAAnC;AACAI,EAAAA,mCAAmC,CAACL,cAAD,EAAiBG,MAAjB,EAAyB;AAAQ;AAAjC,IAA8CrE,OAA9C,EAAuDoE,kBAAvD,EAA2ED,UAA3E,CAAnC;AACA,SAAOE,MAAP;AACH;AACD;AACA;AACA;;;AACA,SAASE,mCAAT,CAA6CL,cAA7C,EAA6DG,MAA7D,EAAqE3pB,SAArE,EAAgFslB,OAAhF,EAAyFwE,aAAzF,EAAwGL,UAAxG,EAAoH;AAChH,MAAIM,eAAe,GAAGzE,OAAO,CAAC0E,MAAR,CAAe,UAAUrX,MAAV,EAAkB;AAAE,WAAOA,MAAM,CAAC3W,IAAP,KAAgBgE,SAAvB;AAAmC,GAAtE,CAAtB;AACA+pB,EAAAA,eAAe,CAAC12B,IAAhB,CAAqB,UAAUZ,CAAV,EAAaC,CAAb,EAAgB;AACjC,WAAOu3B,4BAA4B,CAACT,cAAD,EAAiB/2B,CAAjB,EAAoBC,CAApB,CAAnC;AACH,GAFD;AAGAq3B,EAAAA,eAAe,CAACxY,OAAhB,CAAwB,UAAUoB,MAAV,EAAkB;AACtC,QAAIuX,kBAAkB,GAAGC,qCAAqC,CAACX,cAAD,EAAiB7W,MAAjB,EAAyB8W,UAAzB,CAA9D;AACAK,IAAAA,aAAa,CAACvY,OAAd,CAAsB,UAAU6Y,YAAV,EAAwB;AAC1C,UAAIA,YAAY,CAAC3X,UAAb,CAAwBE,MAAM,CAAC3W,IAA/B,CAAJ,EAA0C;AACtC2tB,QAAAA,MAAM,CAACv2B,IAAP,CAAYg3B,YAAY,CAAC1X,WAAb,CAAyBwX,kBAAzB,EAA6CV,cAAc,CAACF,MAA5D,CAAZ;AACH;AACJ,KAJD;AAKH,GAPD;AAQH;;AACD,SAASa,qCAAT,CAA+CX,cAA/C,EAA+D7W,MAA/D,EAAuE8W,UAAvE,EAAmF;AAC/E,MAAI9W,MAAM,CAAC3W,IAAP,KAAgB,OAAhB,IAA2B2W,MAAM,CAAC3W,IAAP,KAAgB,eAA/C,EAAgE;AAC5D,WAAO2W,MAAP;AACH,GAFD,MAGK;AACDA,IAAAA,MAAM,CAACb,QAAP,GAAkB2X,UAAU,CAACpkB,uBAAX,CAAmCsN,MAAM,CAACzN,SAA1C,EAAqDyN,MAAM,CAACG,YAA5D,EAA0E0W,cAAc,CAACvY,MAAzF,CAAlB;AACA,WAAO0B,MAAP;AACH;AACJ;;AACD,SAASsX,4BAAT,CAAsCT,cAAtC,EAAsD/2B,CAAtD,EAAyDC,CAAzD,EAA4D;AACxD,MAAID,CAAC,CAACyS,SAAF,IAAe,IAAf,IAAuBxS,CAAC,CAACwS,SAAF,IAAe,IAA1C,EAAgD;AAC5C,UAAMhZ,cAAc,CAAC,oCAAD,CAApB;AACH;;AACD,MAAIm+B,QAAQ,GAAG,IAAIznB,SAAJ,CAAcnQ,CAAC,CAACyS,SAAhB,EAA2BzS,CAAC,CAACqgB,YAA7B,CAAf;AACA,MAAIwX,QAAQ,GAAG,IAAI1nB,SAAJ,CAAclQ,CAAC,CAACwS,SAAhB,EAA2BxS,CAAC,CAACogB,YAA7B,CAAf;AACA,SAAO0W,cAAc,CAACvY,MAAf,CAAsBhO,OAAtB,CAA8BonB,QAA9B,EAAwCC,QAAxC,CAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,IAAI;AAAG;AAAe,YAAY;AAClC,WAASA,IAAT,CAAcjB,MAAd,EAAsBkB,gBAAtB,EAAwC;AACpC,SAAKlB,MAAL,GAAcA,MAAd;AACA,SAAKmB,mBAAL,GAA2B,EAA3B;AACA,QAAIxuB,MAAM,GAAG,KAAKqtB,MAAL,CAAY1W,cAAZ,EAAb;AACA,QAAI8X,WAAW,GAAG,IAAIlW,aAAJ,CAAkBvY,MAAM,CAAC4W,QAAP,EAAlB,CAAlB;AACA,QAAImX,MAAM,GAAGjR,wBAAwB,CAAC9c,MAAD,CAArC;AACA,SAAK0uB,UAAL,GAAkB,IAAIpF,aAAJ,CAAkByE,MAAlB,CAAlB;AACA,QAAIY,kBAAkB,GAAGJ,gBAAgB,CAACxG,cAAjB,EAAzB;AACA,QAAI6G,iBAAiB,GAAGL,gBAAgB,CAAC1G,aAAjB,EAAxB,CARoC,CASpC;;AACA,QAAID,UAAU,GAAG6G,WAAW,CAAC5V,cAAZ,CAA2BnH,YAAY,CAAC9I,UAAxC,EAAoD+lB,kBAAkB,CAACvH,OAAnB,EAApD,EAAkF,IAAlF,CAAjB;AACA,QAAIK,SAAS,GAAGsG,MAAM,CAAClV,cAAP,CAAsBnH,YAAY,CAAC9I,UAAnC,EAA+CgmB,iBAAiB,CAACxH,OAAlB,EAA/C,EAA4E,IAA5E,CAAhB;AACA,QAAI2E,cAAc,GAAG,IAAIlF,SAAJ,CAAce,UAAd,EAA0B+G,kBAAkB,CAAC3H,kBAAnB,EAA1B,EAAmEyH,WAAW,CAAC1V,YAAZ,EAAnE,CAArB;AACA,QAAI0C,aAAa,GAAG,IAAIoL,SAAJ,CAAcY,SAAd,EAAyBmH,iBAAiB,CAAC5H,kBAAlB,EAAzB,EAAiE+G,MAAM,CAAChV,YAAP,EAAjE,CAApB;AACA,SAAK6P,UAAL,GAAkB,IAAIvB,SAAJ,CAAc5L,aAAd,EAA6BsQ,cAA7B,CAAlB;AACA,SAAK8C,eAAL,GAAuB,IAAIzB,cAAJ,CAAmB,KAAKC,MAAxB,CAAvB;AACH;;AACDiB,EAAAA,IAAI,CAACj9B,SAAL,CAAey9B,QAAf,GAA0B,YAAY;AAClC,WAAO,KAAKzB,MAAZ;AACH,GAFD;;AAGAiB,EAAAA,IAAI,CAACj9B,SAAL,CAAe02B,cAAf,GAAgC,YAAY;AACxC,WAAO,KAAKa,UAAL,CAAgBb,cAAhB,GAAiCX,OAAjC,EAAP;AACH,GAFD;;AAGAkH,EAAAA,IAAI,CAACj9B,SAAL,CAAe09B,eAAf,GAAiC,YAAY;AACzC,WAAO,KAAKnG,UAAL,CAAgBd,oBAAhB,EAAP;AACH,GAFD;;AAGAwG,EAAAA,IAAI,CAACj9B,SAAL,CAAe29B,sBAAf,GAAwC,UAAUn1B,IAAV,EAAgB;AACpD,QAAIo1B,KAAK,GAAG,KAAKrG,UAAL,CAAgBZ,qBAAhB,EAAZ;;AACA,QAAIiH,KAAJ,EAAW;AACP;AACA;AACA,UAAI,KAAK5B,MAAL,CAAY1W,cAAZ,GAA6BiG,YAA7B,MACC,CAACxgB,WAAW,CAACvC,IAAD,CAAZ,IACG,CAACo1B,KAAK,CAACjmB,iBAAN,CAAwB3N,YAAY,CAACxB,IAAD,CAApC,EAA4CnJ,OAA5C,EAFT,EAEiE;AAC7D,eAAOu+B,KAAK,CAAC/lB,QAAN,CAAerP,IAAf,CAAP;AACH;AACJ;;AACD,WAAO,IAAP;AACH,GAZD;;AAaAy0B,EAAAA,IAAI,CAACj9B,SAAL,CAAeX,OAAf,GAAyB,YAAY;AACjC,WAAO,KAAK89B,mBAAL,CAAyB96B,MAAzB,KAAoC,CAA3C;AACH,GAFD;;AAGA46B,EAAAA,IAAI,CAACj9B,SAAL,CAAe69B,oBAAf,GAAsC,UAAUtZ,iBAAV,EAA6B;AAC/D,SAAK4Y,mBAAL,CAAyBr3B,IAAzB,CAA8Bye,iBAA9B;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;;;AACI0Y,EAAAA,IAAI,CAACj9B,SAAL,CAAe89B,uBAAf,GAAyC,UAAUvZ,iBAAV,EAA6BwZ,WAA7B,EAA0C;AAC/E,QAAIC,YAAY,GAAG,EAAnB;;AACA,QAAID,WAAJ,EAAiB;AACb7/B,MAAAA,MAAM,CAACqmB,iBAAiB,IAAI,IAAtB,EAA4B,iDAA5B,CAAN;AACA,UAAI0Z,MAAM,GAAG,KAAKjC,MAAL,CAAYxzB,IAAzB;AACA,WAAK20B,mBAAL,CAAyBlZ,OAAzB,CAAiC,UAAU6Y,YAAV,EAAwB;AACrD,YAAIoB,UAAU,GAAGpB,YAAY,CAACjX,iBAAb,CAA+BkY,WAA/B,EAA4CE,MAA5C,CAAjB;;AACA,YAAIC,UAAJ,EAAgB;AACZF,UAAAA,YAAY,CAACl4B,IAAb,CAAkBo4B,UAAlB;AACH;AACJ,OALD;AAMH;;AACD,QAAI3Z,iBAAJ,EAAuB;AACnB,UAAI4Z,SAAS,GAAG,EAAhB;;AACA,WAAK,IAAI57B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK46B,mBAAL,CAAyB96B,MAA7C,EAAqD,EAAEE,CAAvD,EAA0D;AACtD,YAAIyuB,QAAQ,GAAG,KAAKmM,mBAAL,CAAyB56B,CAAzB,CAAf;;AACA,YAAI,CAACyuB,QAAQ,CAAClL,OAAT,CAAiBvB,iBAAjB,CAAL,EAA0C;AACtC4Z,UAAAA,SAAS,CAACr4B,IAAV,CAAekrB,QAAf;AACH,SAFD,MAGK,IAAIzM,iBAAiB,CAACwB,cAAlB,EAAJ,EAAwC;AACzC;AACAoY,UAAAA,SAAS,GAAGA,SAAS,CAACC,MAAV,CAAiB,KAAKjB,mBAAL,CAAyB1yB,KAAzB,CAA+BlI,CAAC,GAAG,CAAnC,CAAjB,CAAZ;AACA;AACH;AACJ;;AACD,WAAK46B,mBAAL,GAA2BgB,SAA3B;AACH,KAdD,MAeK;AACD,WAAKhB,mBAAL,GAA2B,EAA3B;AACH;;AACD,WAAOa,YAAP;AACH,GA/BD;AAgCA;AACJ;AACA;;;AACIf,EAAAA,IAAI,CAACj9B,SAAL,CAAeo4B,cAAf,GAAgC,UAAUE,SAAV,EAAqBC,WAArB,EAAkCsD,mBAAlC,EAAuD;AACnF,QAAIvD,SAAS,CAAC5pB,IAAV,KAAmBgkB,aAAa,CAAC6C,KAAjC,IACA+C,SAAS,CAACpjB,MAAV,CAAiB4d,OAAjB,KAA6B,IADjC,EACuC;AACnC50B,MAAAA,MAAM,CAAC,KAAKq5B,UAAL,CAAgBZ,qBAAhB,EAAD,EAA0C,2DAA1C,CAAN;AACAz4B,MAAAA,MAAM,CAAC,KAAKq5B,UAAL,CAAgBd,oBAAhB,EAAD,EAAyC,yDAAzC,CAAN;AACH;;AACD,QAAI4B,YAAY,GAAG,KAAKd,UAAxB;AACA,QAAI/c,MAAM,GAAG,KAAK6iB,UAAL,CAAgBjF,cAAhB,CAA+BC,YAA/B,EAA6CC,SAA7C,EAAwDC,WAAxD,EAAqEsD,mBAArE,CAAb;AACA,SAAKwB,UAAL,CAAgBlF,aAAhB,CAA8B3d,MAAM,CAACud,SAArC;AACA75B,IAAAA,MAAM,CAACsc,MAAM,CAACud,SAAP,CAAiBrB,cAAjB,GAAkCf,kBAAlC,MACH,CAAC0C,YAAY,CAAC3B,cAAb,GAA8Bf,kBAA9B,EADC,EACmD,yDADnD,CAAN;AAEA,SAAK4B,UAAL,GAAkB/c,MAAM,CAACud,SAAzB;AACA,WAAO,KAAKsG,yBAAL,CAA+B7jB,MAAM,CAACwd,OAAtC,EAA+Cxd,MAAM,CAACud,SAAP,CAAiBvB,aAAjB,GAAiCT,OAAjC,EAA/C,EAA2F,IAA3F,CAAP;AACH,GAbD;;AAcAkH,EAAAA,IAAI,CAACj9B,SAAL,CAAes+B,gBAAf,GAAkC,UAAUxB,YAAV,EAAwB;AACtD,QAAI1G,SAAS,GAAG,KAAKmB,UAAL,CAAgBf,aAAhB,EAAhB;AACA,QAAI+H,cAAc,GAAG,EAArB;;AACA,QAAI,CAACnI,SAAS,CAACL,OAAV,GAAoB9e,UAApB,EAAL,EAAuC;AACnC,UAAIunB,SAAS,GAAGpI,SAAS,CAACL,OAAV,EAAhB;AACAyI,MAAAA,SAAS,CAAClmB,YAAV,CAAuB0B,cAAvB,EAAuC,UAAU9Z,GAAV,EAAe8X,SAAf,EAA0B;AAC7DumB,QAAAA,cAAc,CAACz4B,IAAf,CAAoB+gB,gBAAgB,CAAC3mB,GAAD,EAAM8X,SAAN,CAApC;AACH,OAFD;AAGH;;AACD,QAAIoe,SAAS,CAACT,kBAAV,EAAJ,EAAoC;AAChC4I,MAAAA,cAAc,CAACz4B,IAAf,CAAoB8gB,WAAW,CAACwP,SAAS,CAACL,OAAV,EAAD,CAA/B;AACH;;AACD,WAAO,KAAKsI,yBAAL,CAA+BE,cAA/B,EAA+CnI,SAAS,CAACL,OAAV,EAA/C,EAAoE+G,YAApE,CAAP;AACH,GAbD;;AAcAG,EAAAA,IAAI,CAACj9B,SAAL,CAAeq+B,yBAAf,GAA2C,UAAUrG,OAAV,EAAmBmE,UAAnB,EAA+B5X,iBAA/B,EAAkD;AACzF,QAAIiY,aAAa,GAAGjY,iBAAiB,GAC/B,CAACA,iBAAD,CAD+B,GAE/B,KAAK4Y,mBAFX;AAGA,WAAOlB,sCAAsC,CAAC,KAAKuB,eAAN,EAAuBxF,OAAvB,EAAgCmE,UAAhC,EAA4CK,aAA5C,CAA7C;AACH,GALD;;AAMA,SAAOS,IAAP;AACH,CAzHyB,EAA1B;AA2HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIwB,wBAAJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,SAAS;AAAG;AAAe,YAAY;AACvC,WAASA,SAAT,GAAqB;AACjB;AACR;AACA;AACA;AACA;AACA;AACQ,SAAKC,KAAL,GAAa,IAAI/M,GAAJ,EAAb;AACH;;AACDvlB,EAAAA,MAAM,CAACC,cAAP,CAAsBoyB,SAAtB,EAAiC,wBAAjC,EAA2D;AACvDn+B,IAAAA,GAAG,EAAE,YAAY;AACbrC,MAAAA,MAAM,CAACugC,wBAAD,EAA2B,kCAA3B,CAAN;AACA,aAAOA,wBAAP;AACH,KAJsD;AAKvDx+B,IAAAA,GAAG,EAAE,UAAUqW,GAAV,EAAe;AAChBpY,MAAAA,MAAM,CAAC,CAACugC,wBAAF,EAA4B,iDAA5B,CAAN;AACAA,MAAAA,wBAAwB,GAAGnoB,GAA3B;AACH,KARsD;AASvD/J,IAAAA,UAAU,EAAE,KAT2C;AAUvDC,IAAAA,YAAY,EAAE;AAVyC,GAA3D;;AAYAkyB,EAAAA,SAAS,CAAC1+B,SAAV,CAAoBX,OAApB,GAA8B,YAAY;AACtC,WAAO,KAAKs/B,KAAL,CAAW7M,IAAX,KAAoB,CAA3B;AACH,GAFD;;AAGA4M,EAAAA,SAAS,CAAC1+B,SAAV,CAAoBo4B,cAApB,GAAqC,UAAUE,SAAV,EAAqBC,WAArB,EAAkCqG,sBAAlC,EAA0D;AAC3F,QAAItvB,GAAJ,EAASC,EAAT;;AACA,QAAIujB,OAAO,GAAGwF,SAAS,CAACpjB,MAAV,CAAiB4d,OAA/B;;AACA,QAAIA,OAAO,KAAK,IAAhB,EAAsB;AAClB,UAAI+L,IAAI,GAAG,KAAKF,KAAL,CAAWp+B,GAAX,CAAeuyB,OAAf,CAAX;AACA50B,MAAAA,MAAM,CAAC2gC,IAAI,IAAI,IAAT,EAAe,8CAAf,CAAN;AACA,aAAOA,IAAI,CAACzG,cAAL,CAAoBE,SAApB,EAA+BC,WAA/B,EAA4CqG,sBAA5C,CAAP;AACH,KAJD,MAKK;AACD,UAAIvC,MAAM,GAAG,EAAb;;AACA,UAAI;AACA,aAAK,IAAI3sB,EAAE,GAAGjS,QAAQ,CAAC,KAAKkhC,KAAL,CAAWrO,MAAX,EAAD,CAAjB,EAAwC3gB,EAAE,GAAGD,EAAE,CAACE,IAAH,EAAlD,EAA6D,CAACD,EAAE,CAACE,IAAjE,EAAuEF,EAAE,GAAGD,EAAE,CAACE,IAAH,EAA5E,EAAuF;AACnF,cAAIivB,IAAI,GAAGlvB,EAAE,CAACxP,KAAd;AACAk8B,UAAAA,MAAM,GAAGA,MAAM,CAAC+B,MAAP,CAAcS,IAAI,CAACzG,cAAL,CAAoBE,SAApB,EAA+BC,WAA/B,EAA4CqG,sBAA5C,CAAd,CAAT;AACH;AACJ,OALD,CAMA,OAAO5uB,KAAP,EAAc;AAAEV,QAAAA,GAAG,GAAG;AAAE/L,UAAAA,KAAK,EAAEyM;AAAT,SAAN;AAAyB,OANzC,SAOQ;AACJ,YAAI;AACA,cAAIL,EAAE,IAAI,CAACA,EAAE,CAACE,IAAV,KAAmBN,EAAE,GAAGG,EAAE,CAACO,MAA3B,CAAJ,EAAwCV,EAAE,CAACW,IAAH,CAAQR,EAAR;AAC3C,SAFD,SAGQ;AAAE,cAAIJ,GAAJ,EAAS,MAAMA,GAAG,CAAC/L,KAAV;AAAkB;AACxC;;AACD,aAAO84B,MAAP;AACH;AACJ,GAzBD;AA0BA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIqC,EAAAA,SAAS,CAAC1+B,SAAV,CAAoB8+B,OAApB,GAA8B,UAAUx2B,KAAV,EAAiBiwB,WAAjB,EAA8BsB,WAA9B,EAA2CkF,mBAA3C,EAAgE;AAC1F,QAAIjM,OAAO,GAAGxqB,KAAK,CAAConB,eAAN,EAAd;AACA,QAAImP,IAAI,GAAG,KAAKF,KAAL,CAAWp+B,GAAX,CAAeuyB,OAAf,CAAX;;AACA,QAAI,CAAC+L,IAAL,EAAW;AACP;AACA,UAAI1C,UAAU,GAAG5D,WAAW,CAACnI,sBAAZ,CAAmC2O,mBAAmB,GAAGlF,WAAH,GAAiB,IAAvE,CAAjB;AACA,UAAImF,kBAAkB,GAAG,KAAzB;;AACA,UAAI7C,UAAJ,EAAgB;AACZ6C,QAAAA,kBAAkB,GAAG,IAArB;AACH,OAFD,MAGK,IAAInF,WAAW,YAAYxZ,YAA3B,EAAyC;AAC1C8b,QAAAA,UAAU,GAAG5D,WAAW,CAACyB,yBAAZ,CAAsCH,WAAtC,CAAb;AACAmF,QAAAA,kBAAkB,GAAG,KAArB;AACH,OAHI,MAIA;AACD7C,QAAAA,UAAU,GAAG9b,YAAY,CAAC9I,UAA1B;AACAynB,QAAAA,kBAAkB,GAAG,KAArB;AACH;;AACD,UAAIjH,SAAS,GAAG,IAAI/B,SAAJ,CAAc,IAAIR,SAAJ,CAAc2G,UAAd,EAA0B6C,kBAA1B,EAA8C,KAA9C,CAAd,EAAoE,IAAIxJ,SAAJ,CAAcqE,WAAd,EAA2BkF,mBAA3B,EAAgD,KAAhD,CAApE,CAAhB;AACA,aAAO,IAAI9B,IAAJ,CAAS30B,KAAT,EAAgByvB,SAAhB,CAAP;AACH;;AACD,WAAO8G,IAAP;AACH,GAtBD;AAuBA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIH,EAAAA,SAAS,CAAC1+B,SAAV,CAAoB69B,oBAApB,GAA2C,UAAUv1B,KAAV,EAAiBic,iBAAjB,EAAoCgU,WAApC,EAAiDsB,WAAjD,EAA8DkF,mBAA9D,EAAmF;AAC1H,QAAIF,IAAI,GAAG,KAAKC,OAAL,CAAax2B,KAAb,EAAoBiwB,WAApB,EAAiCsB,WAAjC,EAA8CkF,mBAA9C,CAAX;;AACA,QAAI,CAAC,KAAKJ,KAAL,CAAW5M,GAAX,CAAezpB,KAAK,CAAConB,eAAN,EAAf,CAAL,EAA8C;AAC1C,WAAKiP,KAAL,CAAW1+B,GAAX,CAAeqI,KAAK,CAAConB,eAAN,EAAf,EAAwCmP,IAAxC;AACH,KAJyH,CAK1H;;;AACAA,IAAAA,IAAI,CAAChB,oBAAL,CAA0BtZ,iBAA1B;AACA,WAAOsa,IAAI,CAACP,gBAAL,CAAsB/Z,iBAAtB,CAAP;AACH,GARD;AASA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIma,EAAAA,SAAS,CAAC1+B,SAAV,CAAoB89B,uBAApB,GAA8C,UAAUx1B,KAAV,EAAiBic,iBAAjB,EAAoCwZ,WAApC,EAAiD;AAC3F,QAAIkB,GAAJ,EAAS1vB,EAAT;;AACA,QAAIujB,OAAO,GAAGxqB,KAAK,CAAConB,eAAN,EAAd;AACA,QAAIwP,OAAO,GAAG,EAAd;AACA,QAAIlB,YAAY,GAAG,EAAnB;AACA,QAAImB,eAAe,GAAG,KAAKC,eAAL,EAAtB;;AACA,QAAItM,OAAO,KAAK,SAAhB,EAA2B;AACvB,UAAI;AACA;AACA,aAAK,IAAIpjB,EAAE,GAAGjS,QAAQ,CAAC,KAAKkhC,KAAL,CAAWU,OAAX,EAAD,CAAjB,EAAyC1vB,EAAE,GAAGD,EAAE,CAACE,IAAH,EAAnD,EAA8D,CAACD,EAAE,CAACE,IAAlE,EAAwEF,EAAE,GAAGD,EAAE,CAACE,IAAH,EAA7E,EAAwF;AACpF,cAAI0vB,EAAE,GAAG1hC,MAAM,CAAC+R,EAAE,CAACxP,KAAJ,EAAW,CAAX,CAAf;AAAA,cAA8Bo/B,WAAW,GAAGD,EAAE,CAAC,CAAD,CAA9C;AAAA,cAAmDT,IAAI,GAAGS,EAAE,CAAC,CAAD,CAA5D;;AACAtB,UAAAA,YAAY,GAAGA,YAAY,CAACI,MAAb,CAAoBS,IAAI,CAACf,uBAAL,CAA6BvZ,iBAA7B,EAAgDwZ,WAAhD,CAApB,CAAf;;AACA,cAAIc,IAAI,CAACx/B,OAAL,EAAJ,EAAoB;AAChB,iBAAKs/B,KAAL,CAAWrM,MAAX,CAAkBiN,WAAlB,EADgB,CAEhB;;AACA,gBAAI,CAACV,IAAI,CAACpB,QAAL,GAAgBnY,cAAhB,GAAiCiG,YAAjC,EAAL,EAAsD;AAClD2T,cAAAA,OAAO,CAACp5B,IAAR,CAAa+4B,IAAI,CAACpB,QAAL,EAAb;AACH;AACJ;AACJ;AACJ,OAbD,CAcA,OAAO+B,KAAP,EAAc;AAAEP,QAAAA,GAAG,GAAG;AAAE17B,UAAAA,KAAK,EAAEi8B;AAAT,SAAN;AAAyB,OAdzC,SAeQ;AACJ,YAAI;AACA,cAAI7vB,EAAE,IAAI,CAACA,EAAE,CAACE,IAAV,KAAmBN,EAAE,GAAGG,EAAE,CAACO,MAA3B,CAAJ,EAAwCV,EAAE,CAACW,IAAH,CAAQR,EAAR;AAC3C,SAFD,SAGQ;AAAE,cAAIuvB,GAAJ,EAAS,MAAMA,GAAG,CAAC17B,KAAV;AAAkB;AACxC;AACJ,KAtBD,MAuBK;AACD;AACA,UAAIs7B,IAAI,GAAG,KAAKF,KAAL,CAAWp+B,GAAX,CAAeuyB,OAAf,CAAX;;AACA,UAAI+L,IAAJ,EAAU;AACNb,QAAAA,YAAY,GAAGA,YAAY,CAACI,MAAb,CAAoBS,IAAI,CAACf,uBAAL,CAA6BvZ,iBAA7B,EAAgDwZ,WAAhD,CAApB,CAAf;;AACA,YAAIc,IAAI,CAACx/B,OAAL,EAAJ,EAAoB;AAChB,eAAKs/B,KAAL,CAAWrM,MAAX,CAAkBQ,OAAlB,EADgB,CAEhB;;AACA,cAAI,CAAC+L,IAAI,CAACpB,QAAL,GAAgBnY,cAAhB,GAAiCiG,YAAjC,EAAL,EAAsD;AAClD2T,YAAAA,OAAO,CAACp5B,IAAR,CAAa+4B,IAAI,CAACpB,QAAL,EAAb;AACH;AACJ;AACJ;AACJ;;AACD,QAAI0B,eAAe,IAAI,CAAC,KAAKC,eAAL,EAAxB,EAAgD;AAC5C;AACAF,MAAAA,OAAO,CAACp5B,IAAR,CAAa,IAAI44B,SAAS,CAAClS,sBAAd,CAAqClkB,KAAK,CAACokB,IAA3C,EAAiDpkB,KAAK,CAACE,IAAvD,CAAb;AACH;;AACD,WAAO;AAAE02B,MAAAA,OAAO,EAAEA,OAAX;AAAoB7C,MAAAA,MAAM,EAAE2B;AAA5B,KAAP;AACH,GAhDD;;AAiDAU,EAAAA,SAAS,CAAC1+B,SAAV,CAAoBy/B,aAApB,GAAoC,YAAY;AAC5C,QAAIC,GAAJ,EAASnwB,EAAT;;AACA,QAAIiL,MAAM,GAAG,EAAb;;AACA,QAAI;AACA,WAAK,IAAI9K,EAAE,GAAGjS,QAAQ,CAAC,KAAKkhC,KAAL,CAAWrO,MAAX,EAAD,CAAjB,EAAwC3gB,EAAE,GAAGD,EAAE,CAACE,IAAH,EAAlD,EAA6D,CAACD,EAAE,CAACE,IAAjE,EAAuEF,EAAE,GAAGD,EAAE,CAACE,IAAH,EAA5E,EAAuF;AACnF,YAAIivB,IAAI,GAAGlvB,EAAE,CAACxP,KAAd;;AACA,YAAI,CAAC0+B,IAAI,CAACpB,QAAL,GAAgBnY,cAAhB,GAAiCiG,YAAjC,EAAL,EAAsD;AAClD/Q,UAAAA,MAAM,CAAC1U,IAAP,CAAY+4B,IAAZ;AACH;AACJ;AACJ,KAPD,CAQA,OAAOc,KAAP,EAAc;AAAED,MAAAA,GAAG,GAAG;AAAEn8B,QAAAA,KAAK,EAAEo8B;AAAT,OAAN;AAAyB,KARzC,SASQ;AACJ,UAAI;AACA,YAAIhwB,EAAE,IAAI,CAACA,EAAE,CAACE,IAAV,KAAmBN,EAAE,GAAGG,EAAE,CAACO,MAA3B,CAAJ,EAAwCV,EAAE,CAACW,IAAH,CAAQR,EAAR;AAC3C,OAFD,SAGQ;AAAE,YAAIgwB,GAAJ,EAAS,MAAMA,GAAG,CAACn8B,KAAV;AAAkB;AACxC;;AACD,WAAOiX,MAAP;AACH,GAnBD;AAoBA;AACJ;AACA;AACA;;;AACIkkB,EAAAA,SAAS,CAAC1+B,SAAV,CAAoB29B,sBAApB,GAA6C,UAAUn1B,IAAV,EAAgB;AACzD,QAAIo3B,GAAJ,EAASrwB,EAAT;;AACA,QAAIsqB,WAAW,GAAG,IAAlB;;AACA,QAAI;AACA,WAAK,IAAInqB,EAAE,GAAGjS,QAAQ,CAAC,KAAKkhC,KAAL,CAAWrO,MAAX,EAAD,CAAjB,EAAwC3gB,EAAE,GAAGD,EAAE,CAACE,IAAH,EAAlD,EAA6D,CAACD,EAAE,CAACE,IAAjE,EAAuEF,EAAE,GAAGD,EAAE,CAACE,IAAH,EAA5E,EAAuF;AACnF,YAAIivB,IAAI,GAAGlvB,EAAE,CAACxP,KAAd;AACA05B,QAAAA,WAAW,GAAGA,WAAW,IAAIgF,IAAI,CAAClB,sBAAL,CAA4Bn1B,IAA5B,CAA7B;AACH;AACJ,KALD,CAMA,OAAOq3B,KAAP,EAAc;AAAED,MAAAA,GAAG,GAAG;AAAEr8B,QAAAA,KAAK,EAAEs8B;AAAT,OAAN;AAAyB,KANzC,SAOQ;AACJ,UAAI;AACA,YAAIlwB,EAAE,IAAI,CAACA,EAAE,CAACE,IAAV,KAAmBN,EAAE,GAAGG,EAAE,CAACO,MAA3B,CAAJ,EAAwCV,EAAE,CAACW,IAAH,CAAQR,EAAR;AAC3C,OAFD,SAGQ;AAAE,YAAIkwB,GAAJ,EAAS,MAAMA,GAAG,CAACr8B,KAAV;AAAkB;AACxC;;AACD,WAAOs2B,WAAP;AACH,GAjBD;;AAkBA6E,EAAAA,SAAS,CAAC1+B,SAAV,CAAoB8/B,YAApB,GAAmC,UAAUx3B,KAAV,EAAiB;AAChD,QAAIqG,MAAM,GAAGrG,KAAK,CAACgd,cAAN,EAAb;;AACA,QAAI3W,MAAM,CAAC4c,YAAP,EAAJ,EAA2B;AACvB,aAAO,KAAKwU,eAAL,EAAP;AACH,KAFD,MAGK;AACD,UAAIjN,OAAO,GAAGxqB,KAAK,CAAConB,eAAN,EAAd;AACA,aAAO,KAAKiP,KAAL,CAAWp+B,GAAX,CAAeuyB,OAAf,CAAP;AACH;AACJ,GATD;;AAUA4L,EAAAA,SAAS,CAAC1+B,SAAV,CAAoBggC,kBAApB,GAAyC,UAAU13B,KAAV,EAAiB;AACtD,WAAO,KAAKw3B,YAAL,CAAkBx3B,KAAlB,KAA4B,IAAnC;AACH,GAFD;;AAGAo2B,EAAAA,SAAS,CAAC1+B,SAAV,CAAoBo/B,eAApB,GAAsC,YAAY;AAC9C,WAAO,KAAKW,eAAL,MAA0B,IAAjC;AACH,GAFD;;AAGArB,EAAAA,SAAS,CAAC1+B,SAAV,CAAoB+/B,eAApB,GAAsC,YAAY;AAC9C,QAAIE,GAAJ,EAAS1wB,EAAT;;AACA,QAAI;AACA,WAAK,IAAIG,EAAE,GAAGjS,QAAQ,CAAC,KAAKkhC,KAAL,CAAWrO,MAAX,EAAD,CAAjB,EAAwC3gB,EAAE,GAAGD,EAAE,CAACE,IAAH,EAAlD,EAA6D,CAACD,EAAE,CAACE,IAAjE,EAAuEF,EAAE,GAAGD,EAAE,CAACE,IAAH,EAA5E,EAAuF;AACnF,YAAIivB,IAAI,GAAGlvB,EAAE,CAACxP,KAAd;;AACA,YAAI0+B,IAAI,CAACpB,QAAL,GAAgBnY,cAAhB,GAAiCiG,YAAjC,EAAJ,EAAqD;AACjD,iBAAOsT,IAAP;AACH;AACJ;AACJ,KAPD,CAQA,OAAOqB,KAAP,EAAc;AAAED,MAAAA,GAAG,GAAG;AAAE18B,QAAAA,KAAK,EAAE28B;AAAT,OAAN;AAAyB,KARzC,SASQ;AACJ,UAAI;AACA,YAAIvwB,EAAE,IAAI,CAACA,EAAE,CAACE,IAAV,KAAmBN,EAAE,GAAGG,EAAE,CAACO,MAA3B,CAAJ,EAAwCV,EAAE,CAACW,IAAH,CAAQR,EAAR;AAC3C,OAFD,SAGQ;AAAE,YAAIuwB,GAAJ,EAAS,MAAMA,GAAG,CAAC18B,KAAV;AAAkB;AACxC;;AACD,WAAO,IAAP;AACH,GAlBD;;AAmBA,SAAOm7B,SAAP;AACH,CA/O8B,EAA/B;AAiPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIyB,aAAa;AAAG;AAAe,YAAY;AAC3C,WAASA,aAAT,CAAuBC,UAAvB,EAAmC;AAC/B,SAAKA,UAAL,GAAkBA,UAAlB;AACH;;AACDD,EAAAA,aAAa,CAACE,KAAd,GAAsB,YAAY;AAC9B,WAAO,IAAIF,aAAJ,CAAkB,IAAIzM,aAAJ,CAAkB,IAAlB,CAAlB,CAAP;AACH,GAFD;;AAGA,SAAOyM,aAAP;AACH,CARkC,EAAnC;;AASA,SAASG,qBAAT,CAA+BC,aAA/B,EAA8C/3B,IAA9C,EAAoD+M,IAApD,EAA0D;AACtD,MAAIxK,WAAW,CAACvC,IAAD,CAAf,EAAuB;AACnB,WAAO,IAAI23B,aAAJ,CAAkB,IAAIzM,aAAJ,CAAkBne,IAAlB,CAAlB,CAAP;AACH,GAFD,MAGK;AACD,QAAIirB,QAAQ,GAAGD,aAAa,CAACH,UAAd,CAAyBnM,wBAAzB,CAAkDzrB,IAAlD,CAAf;;AACA,QAAIg4B,QAAQ,IAAI,IAAhB,EAAsB;AAClB,UAAIC,YAAY,GAAGD,QAAQ,CAACh4B,IAA5B;AACA,UAAIrI,KAAK,GAAGqgC,QAAQ,CAACrgC,KAArB;AACA,UAAI0zB,YAAY,GAAG7oB,eAAe,CAACy1B,YAAD,EAAej4B,IAAf,CAAlC;AACArI,MAAAA,KAAK,GAAGA,KAAK,CAACgY,WAAN,CAAkB0b,YAAlB,EAAgCte,IAAhC,CAAR;AACA,aAAO,IAAI4qB,aAAJ,CAAkBI,aAAa,CAACH,UAAd,CAAyBngC,GAAzB,CAA6BwgC,YAA7B,EAA2CtgC,KAA3C,CAAlB,CAAP;AACH,KAND,MAOK;AACD,UAAIozB,OAAO,GAAG,IAAIG,aAAJ,CAAkBne,IAAlB,CAAd;AACA,UAAImrB,YAAY,GAAGH,aAAa,CAACH,UAAd,CAAyBjM,OAAzB,CAAiC3rB,IAAjC,EAAuC+qB,OAAvC,CAAnB;AACA,aAAO,IAAI4M,aAAJ,CAAkBO,YAAlB,CAAP;AACH;AACJ;AACJ;;AACD,SAASC,sBAAT,CAAgCJ,aAAhC,EAA+C/3B,IAA/C,EAAqDo4B,OAArD,EAA8D;AAC1D,MAAIC,QAAQ,GAAGN,aAAf;AACAj6B,EAAAA,IAAI,CAACs6B,OAAD,EAAU,UAAUpX,QAAV,EAAoBjU,IAApB,EAA0B;AACpCsrB,IAAAA,QAAQ,GAAGP,qBAAqB,CAACO,QAAD,EAAWj2B,SAAS,CAACpC,IAAD,EAAOghB,QAAP,CAApB,EAAsCjU,IAAtC,CAAhC;AACH,GAFG,CAAJ;AAGA,SAAOsrB,QAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,wBAAT,CAAkCP,aAAlC,EAAiD/3B,IAAjD,EAAuD;AACnD,MAAIuC,WAAW,CAACvC,IAAD,CAAf,EAAuB;AACnB,WAAO23B,aAAa,CAACE,KAAd,EAAP;AACH,GAFD,MAGK;AACD,QAAIK,YAAY,GAAGH,aAAa,CAACH,UAAd,CAAyBjM,OAAzB,CAAiC3rB,IAAjC,EAAuC,IAAIkrB,aAAJ,CAAkB,IAAlB,CAAvC,CAAnB;AACA,WAAO,IAAIyM,aAAJ,CAAkBO,YAAlB,CAAP;AACH;AACJ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASK,6BAAT,CAAuCR,aAAvC,EAAsD/3B,IAAtD,EAA4D;AACxD,SAAOw4B,4BAA4B,CAACT,aAAD,EAAgB/3B,IAAhB,CAA5B,IAAqD,IAA5D;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASw4B,4BAAT,CAAsCT,aAAtC,EAAqD/3B,IAArD,EAA2D;AACvD,MAAIg4B,QAAQ,GAAGD,aAAa,CAACH,UAAd,CAAyBnM,wBAAzB,CAAkDzrB,IAAlD,CAAf;;AACA,MAAIg4B,QAAQ,IAAI,IAAhB,EAAsB;AAClB,WAAOD,aAAa,CAACH,UAAd,CACF7/B,GADE,CACEigC,QAAQ,CAACh4B,IADX,EAEFqP,QAFE,CAEO7M,eAAe,CAACw1B,QAAQ,CAACh4B,IAAV,EAAgBA,IAAhB,CAFtB,CAAP;AAGH,GAJD,MAKK;AACD,WAAO,IAAP;AACH;AACJ;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASy4B,gCAAT,CAA0CV,aAA1C,EAAyD;AACrD,MAAI5O,QAAQ,GAAG,EAAf;AACA,MAAIpc,IAAI,GAAGgrB,aAAa,CAACH,UAAd,CAAyBjgC,KAApC;;AACA,MAAIoV,IAAI,IAAI,IAAZ,EAAkB;AACd;AACA,QAAI,CAACA,IAAI,CAAC0B,UAAL,EAAL,EAAwB;AACpB1B,MAAAA,IAAI,CAAC+C,YAAL,CAAkB0B,cAAlB,EAAkC,UAAUpC,SAAV,EAAqBI,SAArB,EAAgC;AAC9D2Z,QAAAA,QAAQ,CAAC7rB,IAAT,CAAc,IAAIwP,SAAJ,CAAcsC,SAAd,EAAyBI,SAAzB,CAAd;AACH,OAFD;AAGH;AACJ,GAPD,MAQK;AACDuoB,IAAAA,aAAa,CAACH,UAAd,CAAyBzO,QAAzB,CAAkC1W,gBAAlC,CAAmD,UAAUrD,SAAV,EAAqB4G,SAArB,EAAgC;AAC/E,UAAIA,SAAS,CAACre,KAAV,IAAmB,IAAvB,EAA6B;AACzBwxB,QAAAA,QAAQ,CAAC7rB,IAAT,CAAc,IAAIwP,SAAJ,CAAcsC,SAAd,EAAyB4G,SAAS,CAACre,KAAnC,CAAd;AACH;AACJ,KAJD;AAKH;;AACD,SAAOwxB,QAAP;AACH;;AACD,SAASuP,+BAAT,CAAyCX,aAAzC,EAAwD/3B,IAAxD,EAA8D;AAC1D,MAAIuC,WAAW,CAACvC,IAAD,CAAf,EAAuB;AACnB,WAAO+3B,aAAP;AACH,GAFD,MAGK;AACD,QAAIY,aAAa,GAAGH,4BAA4B,CAACT,aAAD,EAAgB/3B,IAAhB,CAAhD;;AACA,QAAI24B,aAAa,IAAI,IAArB,EAA2B;AACvB,aAAO,IAAIhB,aAAJ,CAAkB,IAAIzM,aAAJ,CAAkByN,aAAlB,CAAlB,CAAP;AACH,KAFD,MAGK;AACD,aAAO,IAAIhB,aAAJ,CAAkBI,aAAa,CAACH,UAAd,CAAyB7M,OAAzB,CAAiC/qB,IAAjC,CAAlB,CAAP;AACH;AACJ;AACJ;AACD;AACA;AACA;AACA;;;AACA,SAAS44B,oBAAT,CAA8Bb,aAA9B,EAA6C;AACzC,SAAOA,aAAa,CAACH,UAAd,CAAyB/gC,OAAzB,EAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASgiC,kBAAT,CAA4Bd,aAA5B,EAA2ChrB,IAA3C,EAAiD;AAC7C,SAAO+rB,iBAAiB,CAACv3B,YAAY,EAAb,EAAiBw2B,aAAa,CAACH,UAA/B,EAA2C7qB,IAA3C,CAAxB;AACH;;AACD,SAAS+rB,iBAAT,CAA2BzN,YAA3B,EAAyC0N,SAAzC,EAAoDhsB,IAApD,EAA0D;AACtD,MAAIgsB,SAAS,CAACphC,KAAV,IAAmB,IAAvB,EAA6B;AACzB;AACA,WAAOoV,IAAI,CAAC4C,WAAL,CAAiB0b,YAAjB,EAA+B0N,SAAS,CAACphC,KAAzC,CAAP;AACH,GAHD,MAIK;AACD,QAAIqhC,eAAe,GAAG,IAAtB;AACAD,IAAAA,SAAS,CAAC5P,QAAV,CAAmB1W,gBAAnB,CAAoC,UAAUuO,QAAV,EAAoBhL,SAApB,EAA+B;AAC/D,UAAIgL,QAAQ,KAAK,WAAjB,EAA8B;AAC1B;AACA;AACAtrB,QAAAA,MAAM,CAACsgB,SAAS,CAACre,KAAV,KAAoB,IAArB,EAA2B,2CAA3B,CAAN;AACAqhC,QAAAA,eAAe,GAAGhjB,SAAS,CAACre,KAA5B;AACH,OALD,MAMK;AACDoV,QAAAA,IAAI,GAAG+rB,iBAAiB,CAAC12B,SAAS,CAACipB,YAAD,EAAerK,QAAf,CAAV,EAAoChL,SAApC,EAA+CjJ,IAA/C,CAAxB;AACH;AACJ,KAVD,EAFC,CAaD;;AACA,QAAI,CAACA,IAAI,CAACsC,QAAL,CAAcgc,YAAd,EAA4Bx0B,OAA5B,EAAD,IAA0CmiC,eAAe,KAAK,IAAlE,EAAwE;AACpEjsB,MAAAA,IAAI,GAAGA,IAAI,CAAC4C,WAAL,CAAiBvN,SAAS,CAACipB,YAAD,EAAe,WAAf,CAA1B,EAAuD2N,eAAvD,CAAP;AACH;;AACD,WAAOjsB,IAAP;AACH;AACJ;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIksB,SAAS;AAAG;AAAe,YAAY;AACvC,WAASA,SAAT,GAAqB;AACjB;AACR;AACA;AACA;AACQ,SAAKC,cAAL,GAAsBvB,aAAa,CAACE,KAAd,EAAtB;AACA;AACR;AACA;AACA;AACA;;AACQ,SAAKsB,UAAL,GAAkB,EAAlB;AACA,SAAKC,YAAL,GAAoB,CAAC,CAArB;AACH;AACD;AACJ;AACA;AACA;;;AACIH,EAAAA,SAAS,CAACzhC,SAAV,CAAoB6hC,WAApB,GAAkC,UAAUr5B,IAAV,EAAgB;AAC9C,WAAO,IAAIs5B,YAAJ,CAAiBt5B,IAAjB,EAAuB,IAAvB,CAAP;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;;;AACIi5B,EAAAA,SAAS,CAACzhC,SAAV,CAAoB+hC,YAApB,GAAmC,UAAUv5B,IAAV,EAAgB6a,IAAhB,EAAsB2e,OAAtB,EAA+BC,OAA/B,EAAwC;AACvE/jC,IAAAA,MAAM,CAAC8jC,OAAO,GAAG,KAAKJ,YAAhB,EAA8B,8CAA9B,CAAN;;AACA,QAAIK,OAAO,KAAKpwB,SAAhB,EAA2B;AACvBowB,MAAAA,OAAO,GAAG,IAAV;AACH;;AACD,SAAKN,UAAL,CAAgB77B,IAAhB,CAAqB;AACjB0C,MAAAA,IAAI,EAAEA,IADW;AAEjB6a,MAAAA,IAAI,EAAEA,IAFW;AAGjB2e,MAAAA,OAAO,EAAEA,OAHQ;AAIjBC,MAAAA,OAAO,EAAEA;AAJQ,KAArB;;AAMA,QAAIA,OAAJ,EAAa;AACT,WAAKP,cAAL,GAAsBpB,qBAAqB,CAAC,KAAKoB,cAAN,EAAsBl5B,IAAtB,EAA4B6a,IAA5B,CAA3C;AACH;;AACD,SAAKue,YAAL,GAAoBI,OAApB;AACH,GAfD;AAgBA;AACJ;AACA;;;AACIP,EAAAA,SAAS,CAACzhC,SAAV,CAAoBkiC,QAApB,GAA+B,UAAU15B,IAAV,EAAgBuyB,eAAhB,EAAiCiH,OAAjC,EAA0C;AACrE9jC,IAAAA,MAAM,CAAC8jC,OAAO,GAAG,KAAKJ,YAAhB,EAA8B,8CAA9B,CAAN;AACA,SAAKD,UAAL,CAAgB77B,IAAhB,CAAqB;AACjB0C,MAAAA,IAAI,EAAEA,IADW;AAEjBmpB,MAAAA,QAAQ,EAAEoJ,eAFO;AAGjBiH,MAAAA,OAAO,EAAEA,OAHQ;AAIjBC,MAAAA,OAAO,EAAE;AAJQ,KAArB;AAMA,SAAKP,cAAL,GAAsBf,sBAAsB,CAAC,KAAKe,cAAN,EAAsBl5B,IAAtB,EAA4BuyB,eAA5B,CAA5C;AACA,SAAK6G,YAAL,GAAoBI,OAApB;AACH,GAVD;;AAWAP,EAAAA,SAAS,CAACzhC,SAAV,CAAoBmiC,QAApB,GAA+B,UAAUH,OAAV,EAAmB;AAC9C,SAAK,IAAIz/B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKo/B,UAAL,CAAgBt/B,MAApC,EAA4CE,CAAC,EAA7C,EAAiD;AAC7C,UAAI6/B,MAAM,GAAG,KAAKT,UAAL,CAAgBp/B,CAAhB,CAAb;;AACA,UAAI6/B,MAAM,CAACJ,OAAP,KAAmBA,OAAvB,EAAgC;AAC5B,eAAOI,MAAP;AACH;AACJ;;AACD,WAAO,IAAP;AACH,GARD;AASA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIX,EAAAA,SAAS,CAACzhC,SAAV,CAAoBqiC,WAApB,GAAkC,UAAUL,OAAV,EAAmB;AACjD;AACA;AACA;AACA;AACA,QAAIliB,KAAK,GAAG,IAAZ;;AACA,QAAImB,GAAG,GAAG,KAAK0gB,UAAL,CAAgBW,SAAhB,CAA0B,UAAUz7B,CAAV,EAAa;AAC7C,aAAOA,CAAC,CAACm7B,OAAF,KAAcA,OAArB;AACH,KAFS,CAAV;AAGA9jC,IAAAA,MAAM,CAAC+iB,GAAG,IAAI,CAAR,EAAW,8CAAX,CAAN;AACA,QAAIshB,aAAa,GAAG,KAAKZ,UAAL,CAAgB1gB,GAAhB,CAApB;AACA,SAAK0gB,UAAL,CAAgBa,MAAhB,CAAuBvhB,GAAvB,EAA4B,CAA5B;AACA,QAAIwhB,sBAAsB,GAAGF,aAAa,CAACN,OAA3C;AACA,QAAIS,mCAAmC,GAAG,KAA1C;AACA,QAAIngC,CAAC,GAAG,KAAKo/B,UAAL,CAAgBt/B,MAAhB,GAAyB,CAAjC;;AACA,WAAOogC,sBAAsB,IAAIlgC,CAAC,IAAI,CAAtC,EAAyC;AACrC,UAAIogC,YAAY,GAAG,KAAKhB,UAAL,CAAgBp/B,CAAhB,CAAnB;;AACA,UAAIogC,YAAY,CAACV,OAAjB,EAA0B;AACtB,YAAI1/B,CAAC,IAAI0e,GAAL,IACA,KAAK2hB,mBAAL,CAAyBD,YAAzB,EAAuCJ,aAAa,CAAC/5B,IAArD,CADJ,EACgE;AAC5D;AACAi6B,UAAAA,sBAAsB,GAAG,KAAzB;AACH,SAJD,MAKK,IAAI32B,YAAY,CAACy2B,aAAa,CAAC/5B,IAAf,EAAqBm6B,YAAY,CAACn6B,IAAlC,CAAhB,EAAyD;AAC1D;AACAk6B,UAAAA,mCAAmC,GAAG,IAAtC;AACH;AACJ;;AACDngC,MAAAA,CAAC;AACJ;;AACD,QAAI,CAACkgC,sBAAL,EAA6B;AACzB,aAAO,KAAP;AACH,KAFD,MAGK,IAAIC,mCAAJ,EAAyC;AAC1C;AACA,WAAKG,UAAL;AACA,aAAO,IAAP;AACH,KAJI,MAKA;AACD;AACA,UAAIN,aAAa,CAAClf,IAAlB,EAAwB;AACpB,aAAKqe,cAAL,GAAsBZ,wBAAwB,CAAC,KAAKY,cAAN,EAAsBa,aAAa,CAAC/5B,IAApC,CAA9C;AACH,OAFD,MAGK;AACD,YAAImpB,QAAQ,GAAG4Q,aAAa,CAAC5Q,QAA7B;AACArrB,QAAAA,IAAI,CAACqrB,QAAD,EAAW,UAAU/Z,SAAV,EAAqB;AAChCkI,UAAAA,KAAK,CAAC4hB,cAAN,GAAuBZ,wBAAwB,CAAChhB,KAAK,CAAC4hB,cAAP,EAAuB92B,SAAS,CAAC23B,aAAa,CAAC/5B,IAAf,EAAqBoP,SAArB,CAAhC,CAA/C;AACH,SAFG,CAAJ;AAGH;;AACD,aAAO,IAAP;AACH;AACJ,GAnDD;AAoDA;AACJ;AACA;AACA;AACA;;;AACI6pB,EAAAA,SAAS,CAACzhC,SAAV,CAAoB8iC,oBAApB,GAA2C,UAAUt6B,IAAV,EAAgB;AACvD,WAAOw4B,4BAA4B,CAAC,KAAKU,cAAN,EAAsBl5B,IAAtB,CAAnC;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIi5B,EAAAA,SAAS,CAACzhC,SAAV,CAAoBowB,sBAApB,GAA6C,UAAU2S,QAAV,EAAoBlH,mBAApB,EAAyCmH,iBAAzC,EAA4DC,mBAA5D,EAAiF;AAC1H,QAAI,CAACD,iBAAD,IAAsB,CAACC,mBAA3B,EAAgD;AAC5C,UAAI9B,aAAa,GAAGH,4BAA4B,CAAC,KAAKU,cAAN,EAAsBqB,QAAtB,CAAhD;;AACA,UAAI5B,aAAa,IAAI,IAArB,EAA2B;AACvB,eAAOA,aAAP;AACH,OAFD,MAGK;AACD,YAAI+B,QAAQ,GAAGhC,+BAA+B,CAAC,KAAKQ,cAAN,EAAsBqB,QAAtB,CAA9C;;AACA,YAAI3B,oBAAoB,CAAC8B,QAAD,CAAxB,EAAoC;AAChC,iBAAOrH,mBAAP;AACH,SAFD,MAGK,IAAIA,mBAAmB,IAAI,IAAvB,IACL,CAACkF,6BAA6B,CAACmC,QAAD,EAAWn5B,YAAY,EAAvB,CAD7B,EACyD;AAC1D;AACA,iBAAO,IAAP;AACH,SAJI,MAKA;AACD,cAAIo5B,YAAY,GAAGtH,mBAAmB,IAAIxb,YAAY,CAAC9I,UAAvD;AACA,iBAAO8pB,kBAAkB,CAAC6B,QAAD,EAAWC,YAAX,CAAzB;AACH;AACJ;AACJ,KApBD,MAqBK;AACD,UAAIpK,KAAK,GAAGmI,+BAA+B,CAAC,KAAKQ,cAAN,EAAsBqB,QAAtB,CAA3C;;AACA,UAAI,CAACE,mBAAD,IAAwB7B,oBAAoB,CAACrI,KAAD,CAAhD,EAAyD;AACrD,eAAO8C,mBAAP;AACH,OAFD,MAGK;AACD;AACA,YAAI,CAACoH,mBAAD,IACApH,mBAAmB,IAAI,IADvB,IAEA,CAACkF,6BAA6B,CAAChI,KAAD,EAAQhvB,YAAY,EAApB,CAFlC,EAE2D;AACvD,iBAAO,IAAP;AACH,SAJD,MAKK;AACD,cAAI2yB,MAAM,GAAG,UAAU0G,KAAV,EAAiB;AAC1B,mBAAQ,CAACA,KAAK,CAACnB,OAAN,IAAiBgB,mBAAlB,MACH,CAACD,iBAAD,IACG,CAAC,CAACA,iBAAiB,CAACl/B,OAAlB,CAA0Bs/B,KAAK,CAACpB,OAAhC,CAFF,MAGHl2B,YAAY,CAACs3B,KAAK,CAAC56B,IAAP,EAAau6B,QAAb,CAAZ,IACGj3B,YAAY,CAACi3B,QAAD,EAAWK,KAAK,CAAC56B,IAAjB,CAJZ,CAAR;AAKH,WAND;;AAOA,cAAI66B,WAAW,GAAG5B,SAAS,CAAC6B,UAAV,CAAqB,KAAK3B,UAA1B,EAAsCjF,MAAtC,EAA8CqG,QAA9C,CAAlB;AACA,cAAII,YAAY,GAAGtH,mBAAmB,IAAIxb,YAAY,CAAC9I,UAAvD;AACA,iBAAO8pB,kBAAkB,CAACgC,WAAD,EAAcF,YAAd,CAAzB;AACH;AACJ;AACJ;AACJ,GAhDD;AAiDA;AACJ;AACA;AACA;;;AACI1B,EAAAA,SAAS,CAACzhC,SAAV,CAAoBg6B,yBAApB,GAAgD,UAAU+I,QAAV,EAAoBQ,sBAApB,EAA4C;AACxF,QAAIzJ,gBAAgB,GAAGzZ,YAAY,CAAC9I,UAApC;AACA,QAAIisB,WAAW,GAAGxC,4BAA4B,CAAC,KAAKU,cAAN,EAAsBqB,QAAtB,CAA9C;;AACA,QAAIS,WAAJ,EAAiB;AACb,UAAI,CAACA,WAAW,CAACvsB,UAAZ,EAAL,EAA+B;AAC3B;AACAusB,QAAAA,WAAW,CAAClrB,YAAZ,CAAyB0B,cAAzB,EAAyC,UAAUpC,SAAV,EAAqB6R,SAArB,EAAgC;AACrEqQ,UAAAA,gBAAgB,GAAGA,gBAAgB,CAAC7hB,oBAAjB,CAAsCL,SAAtC,EAAiD6R,SAAjD,CAAnB;AACH,SAFD;AAGH;;AACD,aAAOqQ,gBAAP;AACH,KARD,MASK,IAAIyJ,sBAAJ,EAA4B;AAC7B;AACA;AACA,UAAIE,OAAO,GAAGvC,+BAA+B,CAAC,KAAKQ,cAAN,EAAsBqB,QAAtB,CAA7C;AACAQ,MAAAA,sBAAsB,CAACjrB,YAAvB,CAAoC0B,cAApC,EAAoD,UAAUpC,SAAV,EAAqBI,SAArB,EAAgC;AAChF,YAAIzC,IAAI,GAAG8rB,kBAAkB,CAACH,+BAA+B,CAACuC,OAAD,EAAU,IAAIl6B,IAAJ,CAASqO,SAAT,CAAV,CAAhC,EAAgEI,SAAhE,CAA7B;AACA8hB,QAAAA,gBAAgB,GAAGA,gBAAgB,CAAC7hB,oBAAjB,CAAsCL,SAAtC,EAAiDrC,IAAjD,CAAnB;AACH,OAHD,EAJ6B,CAQ7B;;AACA0rB,MAAAA,gCAAgC,CAACwC,OAAD,CAAhC,CAA0Cxf,OAA1C,CAAkD,UAAUhG,SAAV,EAAqB;AACnE6b,QAAAA,gBAAgB,GAAGA,gBAAgB,CAAC7hB,oBAAjB,CAAsCgG,SAAS,CAACtd,IAAhD,EAAsDsd,SAAS,CAAC1I,IAAhE,CAAnB;AACH,OAFD;AAGA,aAAOukB,gBAAP;AACH,KAbI,MAcA;AACD;AACA;AACA,UAAIf,KAAK,GAAGmI,+BAA+B,CAAC,KAAKQ,cAAN,EAAsBqB,QAAtB,CAA3C;AACA9B,MAAAA,gCAAgC,CAAClI,KAAD,CAAhC,CAAwC9U,OAAxC,CAAgD,UAAUhG,SAAV,EAAqB;AACjE6b,QAAAA,gBAAgB,GAAGA,gBAAgB,CAAC7hB,oBAAjB,CAAsCgG,SAAS,CAACtd,IAAhD,EAAsDsd,SAAS,CAAC1I,IAAhE,CAAnB;AACH,OAFD;AAGA,aAAOukB,gBAAP;AACH;AACJ,GAnCD;AAoCA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI2H,EAAAA,SAAS,CAACzhC,SAAV,CAAoBo6B,kCAApB,GAAyD,UAAU2I,QAAV,EAAoBhf,SAApB,EAA+B2f,iBAA/B,EAAkDC,kBAAlD,EAAsE;AAC3HzlC,IAAAA,MAAM,CAACwlC,iBAAiB,IAAIC,kBAAtB,EAA0C,2DAA1C,CAAN;AACA,QAAIn7B,IAAI,GAAGoC,SAAS,CAACm4B,QAAD,EAAWhf,SAAX,CAApB;;AACA,QAAIgd,6BAA6B,CAAC,KAAKW,cAAN,EAAsBl5B,IAAtB,CAAjC,EAA8D;AAC1D;AACA;AACA,aAAO,IAAP;AACH,KAJD,MAKK;AACD;AACA,UAAIo7B,UAAU,GAAG1C,+BAA+B,CAAC,KAAKQ,cAAN,EAAsBl5B,IAAtB,CAAhD;;AACA,UAAI44B,oBAAoB,CAACwC,UAAD,CAAxB,EAAsC;AAClC;AACA,eAAOD,kBAAkB,CAAC9rB,QAAnB,CAA4BkM,SAA5B,CAAP;AACH,OAHD,MAIK;AACD;AACA;AACA;AACA;AACA;AACA;AACA,eAAOsd,kBAAkB,CAACuC,UAAD,EAAaD,kBAAkB,CAAC9rB,QAAnB,CAA4BkM,SAA5B,CAAb,CAAzB;AACH;AACJ;AACJ,GAzBD;AA0BA;AACJ;AACA;AACA;;;AACI0d,EAAAA,SAAS,CAACzhC,SAAV,CAAoB03B,iBAApB,GAAwC,UAAUqL,QAAV,EAAoBvZ,QAApB,EAA8Bma,kBAA9B,EAAkD;AACtF,QAAIn7B,IAAI,GAAGoC,SAAS,CAACm4B,QAAD,EAAWvZ,QAAX,CAApB;AACA,QAAI2X,aAAa,GAAGH,4BAA4B,CAAC,KAAKU,cAAN,EAAsBl5B,IAAtB,CAAhD;;AACA,QAAI24B,aAAa,IAAI,IAArB,EAA2B;AACvB,aAAOA,aAAP;AACH,KAFD,MAGK;AACD,UAAIwC,kBAAkB,CAAC7N,kBAAnB,CAAsCtM,QAAtC,CAAJ,EAAqD;AACjD,YAAIoa,UAAU,GAAG1C,+BAA+B,CAAC,KAAKQ,cAAN,EAAsBl5B,IAAtB,CAAhD;AACA,eAAO64B,kBAAkB,CAACuC,UAAD,EAAaD,kBAAkB,CAAC5N,OAAnB,GAA6Bpe,iBAA7B,CAA+C6R,QAA/C,CAAb,CAAzB;AACH,OAHD,MAIK;AACD,eAAO,IAAP;AACH;AACJ;AACJ,GAfD;AAgBA;AACJ;AACA;AACA;AACA;;;AACIiY,EAAAA,SAAS,CAACzhC,SAAV,CAAoB45B,cAApB,GAAqC,UAAUpxB,IAAV,EAAgB;AACjD,WAAOw4B,4BAA4B,CAAC,KAAKU,cAAN,EAAsBl5B,IAAtB,CAAnC;AACH,GAFD;AAGA;AACJ;AACA;AACA;;;AACIi5B,EAAAA,SAAS,CAACzhC,SAAV,CAAoB63B,gBAApB,GAAuC,UAAUkL,QAAV,EAAoBpL,kBAApB,EAAwCnW,SAAxC,EAAmDxG,KAAnD,EAA0DzT,OAA1D,EAAmEgR,KAAnE,EAA0E;AAC7G,QAAIsrB,SAAJ;AACA,QAAI9K,KAAK,GAAGmI,+BAA+B,CAAC,KAAKQ,cAAN,EAAsBqB,QAAtB,CAA3C;AACA,QAAI5B,aAAa,GAAGH,4BAA4B,CAACjI,KAAD,EAAQhvB,YAAY,EAApB,CAAhD;;AACA,QAAIo3B,aAAa,IAAI,IAArB,EAA2B;AACvB0C,MAAAA,SAAS,GAAG1C,aAAZ;AACH,KAFD,MAGK,IAAIxJ,kBAAkB,IAAI,IAA1B,EAAgC;AACjCkM,MAAAA,SAAS,GAAGxC,kBAAkB,CAACtI,KAAD,EAAQpB,kBAAR,CAA9B;AACH,KAFI,MAGA;AACD;AACA,aAAO,EAAP;AACH;;AACDkM,IAAAA,SAAS,GAAGA,SAAS,CAACxqB,SAAV,CAAoBd,KAApB,CAAZ;;AACA,QAAI,CAACsrB,SAAS,CAACxkC,OAAV,EAAD,IAAwB,CAACwkC,SAAS,CAAC5sB,UAAV,EAA7B,EAAqD;AACjD,UAAI2gB,KAAK,GAAG,EAAZ;AACA,UAAIlsB,GAAG,GAAG6M,KAAK,CAAC7C,UAAN,EAAV;AACA,UAAI8J,IAAI,GAAGjY,OAAO,GACZs8B,SAAS,CAAC9mB,sBAAV,CAAiCyE,SAAjC,EAA4CjJ,KAA5C,CADY,GAEZsrB,SAAS,CAAC/mB,eAAV,CAA0B0E,SAA1B,EAAqCjJ,KAArC,CAFN;AAGA,UAAI3I,IAAI,GAAG4P,IAAI,CAACjF,OAAL,EAAX;;AACA,aAAO3K,IAAI,IAAIgoB,KAAK,CAACv1B,MAAN,GAAe2Y,KAA9B,EAAqC;AACjC,YAAItP,GAAG,CAACkE,IAAD,EAAO4R,SAAP,CAAH,KAAyB,CAA7B,EAAgC;AAC5BoW,UAAAA,KAAK,CAAC9xB,IAAN,CAAW8J,IAAX;AACH;;AACDA,QAAAA,IAAI,GAAG4P,IAAI,CAACjF,OAAL,EAAP;AACH;;AACD,aAAOqd,KAAP;AACH,KAdD,MAeK;AACD,aAAO,EAAP;AACH;AACJ,GAjCD;;AAkCA6J,EAAAA,SAAS,CAACzhC,SAAV,CAAoB4iC,mBAApB,GAA0C,UAAUkB,WAAV,EAAuBt7B,IAAvB,EAA6B;AACnE,QAAIs7B,WAAW,CAACzgB,IAAhB,EAAsB;AAClB,aAAOvX,YAAY,CAACg4B,WAAW,CAACt7B,IAAb,EAAmBA,IAAnB,CAAnB;AACH,KAFD,MAGK;AACD,WAAK,IAAIoP,SAAT,IAAsBksB,WAAW,CAACnS,QAAlC,EAA4C;AACxC,YAAImS,WAAW,CAACnS,QAAZ,CAAqBprB,cAArB,CAAoCqR,SAApC,KACA9L,YAAY,CAAClB,SAAS,CAACk5B,WAAW,CAACt7B,IAAb,EAAmBoP,SAAnB,CAAV,EAAyCpP,IAAzC,CADhB,EACgE;AAC5D,iBAAO,IAAP;AACH;AACJ;;AACD,aAAO,KAAP;AACH;AACJ,GAbD;AAcA;AACJ;AACA;;;AACIi5B,EAAAA,SAAS,CAACzhC,SAAV,CAAoB6iC,UAApB,GAAiC,YAAY;AACzC,SAAKnB,cAAL,GAAsBD,SAAS,CAAC6B,UAAV,CAAqB,KAAK3B,UAA1B,EAAsCF,SAAS,CAACsC,cAAhD,EAAgEh6B,YAAY,EAA5E,CAAtB;;AACA,QAAI,KAAK43B,UAAL,CAAgBt/B,MAAhB,GAAyB,CAA7B,EAAgC;AAC5B,WAAKu/B,YAAL,GAAoB,KAAKD,UAAL,CAAgB,KAAKA,UAAL,CAAgBt/B,MAAhB,GAAyB,CAAzC,EAA4C2/B,OAAhE;AACH,KAFD,MAGK;AACD,WAAKJ,YAAL,GAAoB,CAAC,CAArB;AACH;AACJ,GARD;AASA;AACJ;AACA;;;AACIH,EAAAA,SAAS,CAACsC,cAAV,GAA2B,UAAUX,KAAV,EAAiB;AACxC,WAAOA,KAAK,CAACnB,OAAb;AACH,GAFD;AAGA;AACJ;AACA;AACA;;;AACIR,EAAAA,SAAS,CAAC6B,UAAV,GAAuB,UAAUU,MAAV,EAAkBtH,MAAlB,EAA0BuH,QAA1B,EAAoC;AACvD,QAAI1D,aAAa,GAAGJ,aAAa,CAACE,KAAd,EAApB;;AACA,SAAK,IAAI99B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyhC,MAAM,CAAC3hC,MAA3B,EAAmC,EAAEE,CAArC,EAAwC;AACpC,UAAI6gC,KAAK,GAAGY,MAAM,CAACzhC,CAAD,CAAlB,CADoC,CAEpC;AACA;AACA;;AACA,UAAIm6B,MAAM,CAAC0G,KAAD,CAAV,EAAmB;AACf,YAAInI,SAAS,GAAGmI,KAAK,CAAC56B,IAAtB;AACA,YAAIqrB,YAAY,GAAG,KAAK,CAAxB;;AACA,YAAIuP,KAAK,CAAC/f,IAAV,EAAgB;AACZ,cAAIvX,YAAY,CAACm4B,QAAD,EAAWhJ,SAAX,CAAhB,EAAuC;AACnCpH,YAAAA,YAAY,GAAG7oB,eAAe,CAACi5B,QAAD,EAAWhJ,SAAX,CAA9B;AACAsF,YAAAA,aAAa,GAAGD,qBAAqB,CAACC,aAAD,EAAgB1M,YAAhB,EAA8BuP,KAAK,CAAC/f,IAApC,CAArC;AACH,WAHD,MAIK,IAAIvX,YAAY,CAACmvB,SAAD,EAAYgJ,QAAZ,CAAhB,EAAuC;AACxCpQ,YAAAA,YAAY,GAAG7oB,eAAe,CAACiwB,SAAD,EAAYgJ,QAAZ,CAA9B;AACA1D,YAAAA,aAAa,GAAGD,qBAAqB,CAACC,aAAD,EAAgBx2B,YAAY,EAA5B,EAAgCq5B,KAAK,CAAC/f,IAAN,CAAWxL,QAAX,CAAoBgc,YAApB,CAAhC,CAArC;AACH,WAHI,MAIA;AACR,SAVD,MAWK,IAAIuP,KAAK,CAACzR,QAAV,EAAoB;AACrB,cAAI7lB,YAAY,CAACm4B,QAAD,EAAWhJ,SAAX,CAAhB,EAAuC;AACnCpH,YAAAA,YAAY,GAAG7oB,eAAe,CAACi5B,QAAD,EAAWhJ,SAAX,CAA9B;AACAsF,YAAAA,aAAa,GAAGI,sBAAsB,CAACJ,aAAD,EAAgB1M,YAAhB,EAA8BuP,KAAK,CAACzR,QAApC,CAAtC;AACH,WAHD,MAIK,IAAI7lB,YAAY,CAACmvB,SAAD,EAAYgJ,QAAZ,CAAhB,EAAuC;AACxCpQ,YAAAA,YAAY,GAAG7oB,eAAe,CAACiwB,SAAD,EAAYgJ,QAAZ,CAA9B;;AACA,gBAAIl5B,WAAW,CAAC8oB,YAAD,CAAf,EAA+B;AAC3B0M,cAAAA,aAAa,GAAGI,sBAAsB,CAACJ,aAAD,EAAgBx2B,YAAY,EAA5B,EAAgCq5B,KAAK,CAACzR,QAAtC,CAAtC;AACH,aAFD,MAGK;AACD,kBAAIllB,KAAK,GAAG5N,OAAO,CAACukC,KAAK,CAACzR,QAAP,EAAiB3nB,YAAY,CAAC6pB,YAAD,CAA7B,CAAnB;;AACA,kBAAIpnB,KAAJ,EAAW;AACP;AACA,oBAAIy3B,QAAQ,GAAGz3B,KAAK,CAACoL,QAAN,CAAe3N,YAAY,CAAC2pB,YAAD,CAA3B,CAAf;AACA0M,gBAAAA,aAAa,GAAGD,qBAAqB,CAACC,aAAD,EAAgBx2B,YAAY,EAA5B,EAAgCm6B,QAAhC,CAArC;AACH;AACJ;AACJ,WAbI,MAcA;AACR,SApBI,MAqBA;AACD,gBAAMtlC,cAAc,CAAC,4CAAD,CAApB;AACH;AACJ;AACJ;;AACD,WAAO2hC,aAAP;AACH,GAhDD;;AAiDA,SAAOkB,SAAP;AACH,CAra8B,EAA/B;AAsaA;AACA;AACA;AACA;AACA;;;AACA,IAAIK,YAAY;AAAG;AAAe,YAAY;AAC1C,WAASA,YAAT,CAAsBt5B,IAAtB,EAA4B+4B,SAA5B,EAAuC;AACnC,SAAK4C,SAAL,GAAiB37B,IAAjB;AACA,SAAK43B,UAAL,GAAkBmB,SAAlB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIO,EAAAA,YAAY,CAAC9hC,SAAb,CAAuBowB,sBAAvB,GAAgD,UAAUyL,mBAAV,EAA+BmH,iBAA/B,EAAkDC,mBAAlD,EAAuE;AACnH,WAAO,KAAK7C,UAAL,CAAgBhQ,sBAAhB,CAAuC,KAAK+T,SAA5C,EAAuDtI,mBAAvD,EAA4EmH,iBAA5E,EAA+FC,mBAA/F,CAAP;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;;;AACInB,EAAAA,YAAY,CAAC9hC,SAAb,CAAuBg6B,yBAAvB,GAAmD,UAAUuJ,sBAAV,EAAkC;AACjF,WAAO,KAAKnD,UAAL,CAAgBpG,yBAAhB,CAA0C,KAAKmK,SAA/C,EAA0DZ,sBAA1D,CAAP;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIzB,EAAAA,YAAY,CAAC9hC,SAAb,CAAuBo6B,kCAAvB,GAA4D,UAAU5xB,IAAV,EAAgBk7B,iBAAhB,EAAmCC,kBAAnC,EAAuD;AAC/G,WAAO,KAAKvD,UAAL,CAAgBhG,kCAAhB,CAAmD,KAAK+J,SAAxD,EAAmE37B,IAAnE,EAAyEk7B,iBAAzE,EAA4FC,kBAA5F,CAAP;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;AACA;;;AACI7B,EAAAA,YAAY,CAAC9hC,SAAb,CAAuB45B,cAAvB,GAAwC,UAAUpxB,IAAV,EAAgB;AACpD,WAAO,KAAK43B,UAAL,CAAgBxG,cAAhB,CAA+BhvB,SAAS,CAAC,KAAKu5B,SAAN,EAAiB37B,IAAjB,CAAxC,CAAP;AACH,GAFD;AAGA;AACJ;AACA;AACA;;;AACIs5B,EAAAA,YAAY,CAAC9hC,SAAb,CAAuB63B,gBAAvB,GAA0C,UAAUF,kBAAV,EAA8BnW,SAA9B,EAAyCxG,KAAzC,EAAgDzT,OAAhD,EAAyDgR,KAAzD,EAAgE;AACtG,WAAO,KAAK6nB,UAAL,CAAgBvI,gBAAhB,CAAiC,KAAKsM,SAAtC,EAAiDxM,kBAAjD,EAAqEnW,SAArE,EAAgFxG,KAAhF,EAAuFzT,OAAvF,EAAgGgR,KAAhG,CAAP;AACH,GAFD;AAGA;AACJ;AACA;AACA;;;AACIupB,EAAAA,YAAY,CAAC9hC,SAAb,CAAuB03B,iBAAvB,GAA2C,UAAUlO,QAAV,EAAoB4a,mBAApB,EAAyC;AAChF,WAAO,KAAKhE,UAAL,CAAgB1I,iBAAhB,CAAkC,KAAKyM,SAAvC,EAAkD3a,QAAlD,EAA4D4a,mBAA5D,CAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACItC,EAAAA,YAAY,CAAC9hC,SAAb,CAAuByM,KAAvB,GAA+B,UAAUmL,SAAV,EAAqB;AAChD,WAAO,IAAIkqB,YAAJ,CAAiBl3B,SAAS,CAAC,KAAKu5B,SAAN,EAAiBvsB,SAAjB,CAA1B,EAAuD,KAAKwoB,UAA5D,CAAP;AACH,GAFD;;AAGA,SAAO0B,YAAP;AACH,CAzEiC,EAAlC;AA2EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIuC,QAAQ;AAAG;AAAe,YAAY;AACtC;AACJ;AACA;AACA;AACI,WAASA,QAAT,CAAkBC,eAAlB,EAAmC;AAC/B,SAAKA,eAAL,GAAuBA,eAAvB;AACA;AACR;AACA;;AACQ,SAAKC,cAAL,GAAsB,IAAI7Q,aAAJ,CAAkB,IAAlB,CAAtB;AACA;AACR;AACA;;AACQ,SAAK8Q,iBAAL,GAAyB,IAAI/C,SAAJ,EAAzB;AACA,SAAKgD,aAAL,GAAqB,IAAI7S,GAAJ,EAArB;AACA,SAAK8S,aAAL,GAAqB,IAAI9S,GAAJ,EAArB;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIyS,EAAAA,QAAQ,CAACrkC,SAAT,CAAmB2kC,kBAAnB,GAAwC,UAAUn8B,IAAV,EAAgBo8B,OAAhB,EAAyB5C,OAAzB,EAAkCC,OAAlC,EAA2C;AAC/E;AACA,SAAKuC,iBAAL,CAAuBzC,YAAvB,CAAoCv5B,IAApC,EAA0Co8B,OAA1C,EAAmD5C,OAAnD,EAA4DC,OAA5D;;AACA,QAAI,CAACA,OAAL,EAAc;AACV,aAAO,EAAP;AACH,KAFD,MAGK;AACD,aAAO,KAAK4C,2BAAL,CAAiC,IAAIzP,SAAJ,CAAczC,sBAAsB,EAApC,EAAwCnqB,IAAxC,EAA8Co8B,OAA9C,CAAjC,CAAP;AACH;AACJ,GATD;AAUA;AACJ;AACA;AACA;AACA;;;AACIP,EAAAA,QAAQ,CAACrkC,SAAT,CAAmB8kC,cAAnB,GAAoC,UAAUt8B,IAAV,EAAgBuyB,eAAhB,EAAiCiH,OAAjC,EAA0C;AAC1E;AACA,SAAKwC,iBAAL,CAAuBtC,QAAvB,CAAgC15B,IAAhC,EAAsCuyB,eAAtC,EAAuDiH,OAAvD;AACA,QAAI+C,UAAU,GAAGrR,aAAa,CAACC,UAAd,CAAyBoH,eAAzB,CAAjB;AACA,WAAO,KAAK8J,2BAAL,CAAiC,IAAIvP,KAAJ,CAAU3C,sBAAsB,EAAhC,EAAoCnqB,IAApC,EAA0Cu8B,UAA1C,CAAjC,CAAP;AACH,GALD;AAMA;AACJ;AACA;AACA;AACA;AACA;;;AACIV,EAAAA,QAAQ,CAACrkC,SAAT,CAAmBk5B,YAAnB,GAAkC,UAAU8I,OAAV,EAAmB5O,MAAnB,EAA2B;AACzD,QAAIA,MAAM,KAAK,KAAK,CAApB,EAAuB;AAAEA,MAAAA,MAAM,GAAG,KAAT;AAAiB;;AAC1C,QAAIgQ,KAAK,GAAG,KAAKoB,iBAAL,CAAuBrC,QAAvB,CAAgCH,OAAhC,CAAZ;AACA,QAAIgD,gBAAgB,GAAG,KAAKR,iBAAL,CAAuBnC,WAAvB,CAAmCL,OAAnC,CAAvB;;AACA,QAAI,CAACgD,gBAAL,EAAuB;AACnB,aAAO,EAAP;AACH,KAFD,MAGK;AACD,UAAIC,cAAc,GAAG,IAAIvR,aAAJ,CAAkB,IAAlB,CAArB;;AACA,UAAI0P,KAAK,CAAC/f,IAAN,IAAc,IAAlB,EAAwB;AACpB;AACA4hB,QAAAA,cAAc,GAAGA,cAAc,CAAChlC,GAAf,CAAmB8J,YAAY,EAA/B,EAAmC,IAAnC,CAAjB;AACH,OAHD,MAIK;AACDzD,QAAAA,IAAI,CAAC88B,KAAK,CAACzR,QAAP,EAAiB,UAAU7nB,UAAV,EAAsB;AACvCm7B,UAAAA,cAAc,GAAGA,cAAc,CAAChlC,GAAf,CAAmB,IAAIsJ,IAAJ,CAASO,UAAT,CAAnB,EAAyC,IAAzC,CAAjB;AACH,SAFG,CAAJ;AAGH;;AACD,aAAO,KAAK+6B,2BAAL,CAAiC,IAAI3R,YAAJ,CAAiBkQ,KAAK,CAAC56B,IAAvB,EAA6By8B,cAA7B,EAA6C7R,MAA7C,CAAjC,CAAP;AACH;AACJ,GApBD;AAqBA;AACJ;AACA;AACA;AACA;;;AACIiR,EAAAA,QAAQ,CAACrkC,SAAT,CAAmBklC,oBAAnB,GAA0C,UAAU18B,IAAV,EAAgBo8B,OAAhB,EAAyB;AAC/D,WAAO,KAAKC,2BAAL,CAAiC,IAAIzP,SAAJ,CAAcpC,wBAAwB,EAAtC,EAA0CxqB,IAA1C,EAAgDo8B,OAAhD,CAAjC,CAAP;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;;;AACIP,EAAAA,QAAQ,CAACrkC,SAAT,CAAmBmlC,gBAAnB,GAAsC,UAAU38B,IAAV,EAAgBuyB,eAAhB,EAAiC;AACnE,QAAIgK,UAAU,GAAGrR,aAAa,CAACC,UAAd,CAAyBoH,eAAzB,CAAjB;AACA,WAAO,KAAK8J,2BAAL,CAAiC,IAAIvP,KAAJ,CAAUtC,wBAAwB,EAAlC,EAAsCxqB,IAAtC,EAA4Cu8B,UAA5C,CAAjC,CAAP;AACH,GAHD;AAIA;AACJ;AACA;AACA;AACA;;;AACIV,EAAAA,QAAQ,CAACrkC,SAAT,CAAmBolC,mBAAnB,GAAyC,UAAU58B,IAAV,EAAgB;AACrD,WAAO,KAAKq8B,2BAAL,CAAiC,IAAI3P,cAAJ,CAAmBlC,wBAAwB,EAA3C,EAA+CxqB,IAA/C,CAAjC,CAAP;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;;;AACI67B,EAAAA,QAAQ,CAACrkC,SAAT,CAAmBqlC,yBAAnB,GAA+C,UAAU78B,IAAV,EAAgB6a,IAAhB,EAAsBiiB,GAAtB,EAA2B;AACtE,QAAIC,QAAQ,GAAG,KAAKC,eAAL,CAAqBF,GAArB,CAAf;;AACA,QAAIC,QAAQ,IAAI,IAAhB,EAAsB;AAClB,UAAIE,CAAC,GAAGpB,QAAQ,CAACqB,cAAT,CAAwBH,QAAxB,CAAR;AACA,UAAII,SAAS,GAAGF,CAAC,CAACj9B,IAAlB;AAAA,UAAwBsqB,OAAO,GAAG2S,CAAC,CAAC3S,OAApC;AACA,UAAIe,YAAY,GAAG7oB,eAAe,CAAC26B,SAAD,EAAYn9B,IAAZ,CAAlC;AACA,UAAIuoB,EAAE,GAAG,IAAIqE,SAAJ,CAAcnC,mCAAmC,CAACH,OAAD,CAAjD,EAA4De,YAA5D,EAA0ExQ,IAA1E,CAAT;AACA,aAAO,KAAKuiB,qBAAL,CAA2BD,SAA3B,EAAsC5U,EAAtC,CAAP;AACH,KAND,MAOK;AACD;AACA,aAAO,EAAP;AACH;AACJ,GAbD;AAcA;AACJ;AACA;AACA;AACA;;;AACIsT,EAAAA,QAAQ,CAACrkC,SAAT,CAAmB6lC,qBAAnB,GAA2C,UAAUr9B,IAAV,EAAgBuyB,eAAhB,EAAiCuK,GAAjC,EAAsC;AAC7E,QAAIC,QAAQ,GAAG,KAAKC,eAAL,CAAqBF,GAArB,CAAf;;AACA,QAAIC,QAAJ,EAAc;AACV,UAAIE,CAAC,GAAGpB,QAAQ,CAACqB,cAAT,CAAwBH,QAAxB,CAAR;AACA,UAAII,SAAS,GAAGF,CAAC,CAACj9B,IAAlB;AAAA,UAAwBsqB,OAAO,GAAG2S,CAAC,CAAC3S,OAApC;AACA,UAAIe,YAAY,GAAG7oB,eAAe,CAAC26B,SAAD,EAAYn9B,IAAZ,CAAlC;AACA,UAAIu8B,UAAU,GAAGrR,aAAa,CAACC,UAAd,CAAyBoH,eAAzB,CAAjB;AACA,UAAIhK,EAAE,GAAG,IAAIuE,KAAJ,CAAUrC,mCAAmC,CAACH,OAAD,CAA7C,EAAwDe,YAAxD,EAAsEkR,UAAtE,CAAT;AACA,aAAO,KAAKa,qBAAL,CAA2BD,SAA3B,EAAsC5U,EAAtC,CAAP;AACH,KAPD,MAQK;AACD;AACA,aAAO,EAAP;AACH;AACJ,GAdD;AAeA;AACJ;AACA;AACA;AACA;;;AACIsT,EAAAA,QAAQ,CAACrkC,SAAT,CAAmB8lC,yBAAnB,GAA+C,UAAUt9B,IAAV,EAAgB88B,GAAhB,EAAqB;AAChE,QAAIC,QAAQ,GAAG,KAAKC,eAAL,CAAqBF,GAArB,CAAf;;AACA,QAAIC,QAAJ,EAAc;AACV,UAAIE,CAAC,GAAGpB,QAAQ,CAACqB,cAAT,CAAwBH,QAAxB,CAAR;AACA,UAAII,SAAS,GAAGF,CAAC,CAACj9B,IAAlB;AAAA,UAAwBsqB,OAAO,GAAG2S,CAAC,CAAC3S,OAApC;AACA,UAAIe,YAAY,GAAG7oB,eAAe,CAAC26B,SAAD,EAAYn9B,IAAZ,CAAlC;AACA,UAAIuoB,EAAE,GAAG,IAAImE,cAAJ,CAAmBjC,mCAAmC,CAACH,OAAD,CAAtD,EAAiEe,YAAjE,CAAT;AACA,aAAO,KAAK+R,qBAAL,CAA2BD,SAA3B,EAAsC5U,EAAtC,CAAP;AACH,KAND,MAOK;AACD;AACA,aAAO,EAAP;AACH;AACJ,GAbD;AAcA;AACJ;AACA;AACA;AACA;;;AACIsT,EAAAA,QAAQ,CAACrkC,SAAT,CAAmB69B,oBAAnB,GAA0C,UAAUv1B,KAAV,EAAiBic,iBAAjB,EAAoC;AAC1E,QAAI/b,IAAI,GAAGF,KAAK,CAACE,IAAjB;AACA,QAAIqxB,WAAW,GAAG,IAAlB;AACA,QAAIkM,wBAAwB,GAAG,KAA/B,CAH0E,CAI1E;AACA;;AACA,SAAKxB,cAAL,CAAoB3P,aAApB,CAAkCpsB,IAAlC,EAAwC,UAAUw9B,eAAV,EAA2BC,EAA3B,EAA+B;AACnE,UAAIpS,YAAY,GAAG7oB,eAAe,CAACg7B,eAAD,EAAkBx9B,IAAlB,CAAlC;AACAqxB,MAAAA,WAAW,GAAGA,WAAW,IAAIoM,EAAE,CAACtI,sBAAH,CAA0B9J,YAA1B,CAA7B;AACAkS,MAAAA,wBAAwB,GACpBA,wBAAwB,IAAIE,EAAE,CAAC7G,eAAH,EADhC;AAEH,KALD;AAMA,QAAI8G,SAAS,GAAG,KAAK3B,cAAL,CAAoBhkC,GAApB,CAAwBiI,IAAxB,CAAhB;;AACA,QAAI,CAAC09B,SAAL,EAAgB;AACZA,MAAAA,SAAS,GAAG,IAAIxH,SAAJ,EAAZ;AACA,WAAK6F,cAAL,GAAsB,KAAKA,cAAL,CAAoBtkC,GAApB,CAAwBuI,IAAxB,EAA8B09B,SAA9B,CAAtB;AACH,KAHD,MAIK;AACDH,MAAAA,wBAAwB,GACpBA,wBAAwB,IAAIG,SAAS,CAAC9G,eAAV,EADhC;AAEAvF,MAAAA,WAAW,GACPA,WAAW,IAAIqM,SAAS,CAACvI,sBAAV,CAAiC5zB,YAAY,EAA7C,CADnB;AAEH;;AACD,QAAIg1B,mBAAJ;;AACA,QAAIlF,WAAW,IAAI,IAAnB,EAAyB;AACrBkF,MAAAA,mBAAmB,GAAG,IAAtB;AACH,KAFD,MAGK;AACDA,MAAAA,mBAAmB,GAAG,KAAtB;AACAlF,MAAAA,WAAW,GAAGxZ,YAAY,CAAC9I,UAA3B;AACA,UAAIgc,OAAO,GAAG,KAAKgR,cAAL,CAAoBhR,OAApB,CAA4B/qB,IAA5B,CAAd;AACA+qB,MAAAA,OAAO,CAAC0B,YAAR,CAAqB,UAAUrd,SAAV,EAAqBuuB,cAArB,EAAqC;AACtD,YAAI3N,aAAa,GAAG2N,cAAc,CAACxI,sBAAf,CAAsC5zB,YAAY,EAAlD,CAApB;;AACA,YAAIyuB,aAAJ,EAAmB;AACfqB,UAAAA,WAAW,GAAGA,WAAW,CAAC5hB,oBAAZ,CAAiCL,SAAjC,EAA4C4gB,aAA5C,CAAd;AACH;AACJ,OALD;AAMH;;AACD,QAAI4N,iBAAiB,GAAGF,SAAS,CAAClG,kBAAV,CAA6B13B,KAA7B,CAAxB;;AACA,QAAI,CAAC89B,iBAAD,IAAsB,CAAC99B,KAAK,CAACgd,cAAN,GAAuBiG,YAAvB,EAA3B,EAAkE;AAC9D;AACA,UAAIga,QAAQ,GAAGlB,QAAQ,CAACgC,aAAT,CAAuB/9B,KAAvB,CAAf;AACApK,MAAAA,MAAM,CAAC,CAAC,KAAKwmC,aAAL,CAAmB3S,GAAnB,CAAuBwT,QAAvB,CAAF,EAAoC,wCAApC,CAAN;AACA,UAAID,GAAG,GAAGjB,QAAQ,CAACiC,gBAAT,EAAV;AACA,WAAK5B,aAAL,CAAmBzkC,GAAnB,CAAuBslC,QAAvB,EAAiCD,GAAjC;AACA,WAAKb,aAAL,CAAmBxkC,GAAnB,CAAuBqlC,GAAvB,EAA4BC,QAA5B;AACH;;AACD,QAAIhN,WAAW,GAAG,KAAKiM,iBAAL,CAAuB3C,WAAvB,CAAmCr5B,IAAnC,CAAlB;AACA,QAAI6zB,MAAM,GAAG6J,SAAS,CAACrI,oBAAV,CAA+Bv1B,KAA/B,EAAsCic,iBAAtC,EAAyDgU,WAAzD,EAAsEsB,WAAtE,EAAmFkF,mBAAnF,CAAb;;AACA,QAAI,CAACqH,iBAAD,IAAsB,CAACL,wBAA3B,EAAqD;AACjD,UAAIlH,IAAI,GAAGqH,SAAS,CAACpG,YAAV,CAAuBx3B,KAAvB,CAAX;AACA+zB,MAAAA,MAAM,GAAGA,MAAM,CAAC+B,MAAP,CAAc,KAAKmI,cAAL,CAAoBj+B,KAApB,EAA2Bu2B,IAA3B,CAAd,CAAT;AACH;;AACD,WAAOxC,MAAP;AACH,GAtDD;AAuDA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIgI,EAAAA,QAAQ,CAACrkC,SAAT,CAAmB89B,uBAAnB,GAA6C,UAAUx1B,KAAV,EAAiBic,iBAAjB,EAAoCwZ,WAApC,EAAiD;AAC1F,QAAIje,KAAK,GAAG,IAAZ,CAD0F,CAE1F;;;AACA,QAAItX,IAAI,GAAGF,KAAK,CAACE,IAAjB;AACA,QAAIg+B,cAAc,GAAG,KAAKjC,cAAL,CAAoBhkC,GAApB,CAAwBiI,IAAxB,CAArB;AACA,QAAIw1B,YAAY,GAAG,EAAnB,CAL0F,CAM1F;AACA;AACA;;AACA,QAAIwI,cAAc,KACbl+B,KAAK,CAAConB,eAAN,OAA4B,SAA5B,IACG8W,cAAc,CAACxG,kBAAf,CAAkC13B,KAAlC,CAFU,CAAlB,EAEmD;AAC/C,UAAIm+B,gBAAgB,GAAGD,cAAc,CAAC1I,uBAAf,CAAuCx1B,KAAvC,EAA8Cic,iBAA9C,EAAiEwZ,WAAjE,CAAvB;;AACA,UAAIyI,cAAc,CAACnnC,OAAf,EAAJ,EAA8B;AAC1B,aAAKklC,cAAL,GAAsB,KAAKA,cAAL,CAAoB7jC,MAApB,CAA2B8H,IAA3B,CAAtB;AACH;;AACD,UAAI02B,OAAO,GAAGuH,gBAAgB,CAACvH,OAA/B;AACAlB,MAAAA,YAAY,GAAGyI,gBAAgB,CAACpK,MAAhC,CAN+C,CAO/C;AACA;AACA;AACA;AACA;AACA;;AACA,UAAIqK,eAAe,GAAG,CAAC,CAAD,KAClBxH,OAAO,CAACoD,SAAR,CAAkB,UAAUh6B,KAAV,EAAiB;AAC/B,eAAOA,KAAK,CAACgd,cAAN,GAAuBiG,YAAvB,EAAP;AACH,OAFD,CADJ;AAIA,UAAIob,OAAO,GAAG,KAAKpC,cAAL,CAAoB9P,UAApB,CAA+BjsB,IAA/B,EAAqC,UAAUqrB,YAAV,EAAwB+S,eAAxB,EAAyC;AACxF,eAAOA,eAAe,CAACxH,eAAhB,EAAP;AACH,OAFa,CAAd;;AAGA,UAAIsH,eAAe,IAAI,CAACC,OAAxB,EAAiC;AAC7B,YAAIpT,OAAO,GAAG,KAAKgR,cAAL,CAAoBhR,OAApB,CAA4B/qB,IAA5B,CAAd,CAD6B,CAE7B;AACA;;AACA,YAAI,CAAC+qB,OAAO,CAACl0B,OAAR,EAAL,EAAwB;AACpB;AACA,cAAIwnC,QAAQ,GAAG,KAAKC,+BAAL,CAAqCvT,OAArC,CAAf,CAFoB,CAGpB;;AACA,eAAK,IAAIhxB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGskC,QAAQ,CAACxkC,MAA7B,EAAqC,EAAEE,CAAvC,EAA0C;AACtC,gBAAIs8B,IAAI,GAAGgI,QAAQ,CAACtkC,CAAD,CAAnB;AAAA,gBAAwBwkC,QAAQ,GAAGlI,IAAI,CAACpB,QAAL,EAAnC;AACA,gBAAIuJ,QAAQ,GAAG,KAAKC,sBAAL,CAA4BpI,IAA5B,CAAf;AACA,iBAAKyF,eAAL,CAAqB4C,cAArB,CAAoC7C,QAAQ,CAAC8C,kBAAT,CAA4BJ,QAA5B,CAApC,EAA2E,KAAKK,YAAL,CAAkBL,QAAlB,CAA3E,EAAwGC,QAAQ,CAACK,MAAjH,EAAyHL,QAAQ,CAAC3zB,UAAlI;AACH;AACJ;AACJ,OAlC8C,CAmC/C;AACA;AACA;;;AACA,UAAI,CAACszB,OAAD,IAAYzH,OAAO,CAAC78B,MAAR,GAAiB,CAA7B,IAAkC,CAAC07B,WAAvC,EAAoD;AAChD;AACA;AACA,YAAI2I,eAAJ,EAAqB;AACjB;AACA,cAAIY,UAAU,GAAG,IAAjB;AACA,eAAKhD,eAAL,CAAqBiD,aAArB,CAAmClD,QAAQ,CAAC8C,kBAAT,CAA4B7+B,KAA5B,CAAnC,EAAuEg/B,UAAvE;AACH,SAJD,MAKK;AACDpI,UAAAA,OAAO,CAACjb,OAAR,CAAgB,UAAUujB,aAAV,EAAyB;AACrC,gBAAIC,WAAW,GAAG3nB,KAAK,CAAC4kB,aAAN,CAAoBnkC,GAApB,CAAwB8jC,QAAQ,CAACgC,aAAT,CAAuBmB,aAAvB,CAAxB,CAAlB;;AACA1nB,YAAAA,KAAK,CAACwkB,eAAN,CAAsBiD,aAAtB,CAAoClD,QAAQ,CAAC8C,kBAAT,CAA4BK,aAA5B,CAApC,EAAgFC,WAAhF;AACH,WAHD;AAIH;AACJ,OApD8C,CAqD/C;;;AACA,WAAKC,WAAL,CAAiBxI,OAAjB;AACH;;AACD,WAAOlB,YAAP;AACH,GApED;AAqEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIqG,EAAAA,QAAQ,CAACrkC,SAAT,CAAmBowB,sBAAnB,GAA4C,UAAU5nB,IAAV,EAAgBw6B,iBAAhB,EAAmC;AAC3E,QAAI2E,iBAAiB,GAAG,IAAxB;AACA,QAAIpG,SAAS,GAAG,KAAKiD,iBAArB;AACA,QAAI3K,WAAW,GAAG,KAAK0K,cAAL,CAAoB9P,UAApB,CAA+BjsB,IAA/B,EAAqC,UAAU+rB,SAAV,EAAqB2R,SAArB,EAAgC;AACnF,UAAIrS,YAAY,GAAG7oB,eAAe,CAACupB,SAAD,EAAY/rB,IAAZ,CAAlC;AACA,UAAIqxB,WAAW,GAAGqM,SAAS,CAACvI,sBAAV,CAAiC9J,YAAjC,CAAlB;;AACA,UAAIgG,WAAJ,EAAiB;AACb,eAAOA,WAAP;AACH;AACJ,KANiB,CAAlB;AAOA,WAAO0H,SAAS,CAACnR,sBAAV,CAAiC5nB,IAAjC,EAAuCqxB,WAAvC,EAAoDmJ,iBAApD,EAAuE2E,iBAAvE,CAAP;AACH,GAXD;;AAYAtD,EAAAA,QAAQ,CAACrkC,SAAT,CAAmB4nC,cAAnB,GAAoC,UAAUt/B,KAAV,EAAiB;AACjD,QAAIE,IAAI,GAAGF,KAAK,CAACE,IAAjB;AACA,QAAIqxB,WAAW,GAAG,IAAlB,CAFiD,CAGjD;AACA;;AACA,SAAK0K,cAAL,CAAoB3P,aAApB,CAAkCpsB,IAAlC,EAAwC,UAAUw9B,eAAV,EAA2BC,EAA3B,EAA+B;AACnE,UAAIpS,YAAY,GAAG7oB,eAAe,CAACg7B,eAAD,EAAkBx9B,IAAlB,CAAlC;AACAqxB,MAAAA,WAAW,GAAGA,WAAW,IAAIoM,EAAE,CAACtI,sBAAH,CAA0B9J,YAA1B,CAA7B;AACH,KAHD;AAIA,QAAIqS,SAAS,GAAG,KAAK3B,cAAL,CAAoBhkC,GAApB,CAAwBiI,IAAxB,CAAhB;;AACA,QAAI,CAAC09B,SAAL,EAAgB;AACZA,MAAAA,SAAS,GAAG,IAAIxH,SAAJ,EAAZ;AACA,WAAK6F,cAAL,GAAsB,KAAKA,cAAL,CAAoBtkC,GAApB,CAAwBuI,IAAxB,EAA8B09B,SAA9B,CAAtB;AACH,KAHD,MAIK;AACDrM,MAAAA,WAAW,GACPA,WAAW,IAAIqM,SAAS,CAACvI,sBAAV,CAAiC5zB,YAAY,EAA7C,CADnB;AAEH;;AACD,QAAIg1B,mBAAmB,GAAGlF,WAAW,IAAI,IAAzC;AACA,QAAIgO,eAAe,GAAG9I,mBAAmB,GACnC,IAAIvJ,SAAJ,CAAcqE,WAAd,EAA2B,IAA3B,EAAiC,KAAjC,CADmC,GAEnC,IAFN;AAGA,QAAItB,WAAW,GAAG,KAAKiM,iBAAL,CAAuB3C,WAAvB,CAAmCv5B,KAAK,CAACE,IAAzC,CAAlB;AACA,QAAIq2B,IAAI,GAAGqH,SAAS,CAACpH,OAAV,CAAkBx2B,KAAlB,EAAyBiwB,WAAzB,EAAsCwG,mBAAmB,GAAG8I,eAAe,CAAC9R,OAAhB,EAAH,GAA+B1V,YAAY,CAAC9I,UAArG,EAAiHwnB,mBAAjH,CAAX;AACA,WAAOF,IAAI,CAACnB,eAAL,EAAP;AACH,GAzBD;AA0BA;AACJ;AACA;AACA;;;AACI2G,EAAAA,QAAQ,CAACrkC,SAAT,CAAmB8mC,+BAAnB,GAAqD,UAAUvT,OAAV,EAAmB;AACpE,WAAOA,OAAO,CAACc,IAAR,CAAa,UAAUR,YAAV,EAAwBiU,mBAAxB,EAA6CC,QAA7C,EAAuD;AACvE,UAAID,mBAAmB,IAAIA,mBAAmB,CAAC1I,eAApB,EAA3B,EAAkE;AAC9D,YAAI4I,YAAY,GAAGF,mBAAmB,CAAC/H,eAApB,EAAnB;AACA,eAAO,CAACiI,YAAD,CAAP;AACH,OAHD,MAIK;AACD;AACA,YAAIC,OAAO,GAAG,EAAd;;AACA,YAAIH,mBAAJ,EAAyB;AACrBG,UAAAA,OAAO,GAAGH,mBAAmB,CAACrI,aAApB,EAAV;AACH;;AACDn5B,QAAAA,IAAI,CAACyhC,QAAD,EAAW,UAAUG,IAAV,EAAgBC,UAAhB,EAA4B;AACvCF,UAAAA,OAAO,GAAGA,OAAO,CAAC7J,MAAR,CAAe+J,UAAf,CAAV;AACH,SAFG,CAAJ;AAGA,eAAOF,OAAP;AACH;AACJ,KAhBM,CAAP;AAiBH,GAlBD;;AAmBA5D,EAAAA,QAAQ,CAACrkC,SAAT,CAAmB0nC,WAAnB,GAAiC,UAAUU,OAAV,EAAmB;AAChD,SAAK,IAAIv8B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGu8B,OAAO,CAAC/lC,MAA5B,EAAoC,EAAEwJ,CAAtC,EAAyC;AACrC,UAAIw8B,YAAY,GAAGD,OAAO,CAACv8B,CAAD,CAA1B;;AACA,UAAI,CAACw8B,YAAY,CAAC/iB,cAAb,GAA8BiG,YAA9B,EAAL,EAAmD;AAC/C;AACA,YAAI+c,eAAe,GAAGjE,QAAQ,CAACgC,aAAT,CAAuBgC,YAAvB,CAAtB;AACA,YAAIE,eAAe,GAAG,KAAK7D,aAAL,CAAmBnkC,GAAnB,CAAuB+nC,eAAvB,CAAtB;AACA,aAAK5D,aAAL,CAAmBpS,MAAnB,CAA0BgW,eAA1B;AACA,aAAK7D,aAAL,CAAmBnS,MAAnB,CAA0BiW,eAA1B;AACH;AACJ;AACJ,GAXD;AAYA;AACJ;AACA;AACA;AACA;;;AACIlE,EAAAA,QAAQ,CAAC8C,kBAAT,GAA8B,UAAU7+B,KAAV,EAAiB;AAC3C,QAAIA,KAAK,CAACgd,cAAN,GAAuBiG,YAAvB,MACA,CAACjjB,KAAK,CAACgd,cAAN,GAAuBkG,SAAvB,EADL,EACyC;AACrC;AACA;AACA;AACA,aAAOljB,KAAK,CAAC+b,MAAN,EAAP;AACH,KAND,MAOK;AACD,aAAO/b,KAAP;AACH;AACJ,GAXD;AAYA;AACJ;AACA;AACA;AACA;;;AACI+7B,EAAAA,QAAQ,CAACrkC,SAAT,CAAmBumC,cAAnB,GAAoC,UAAUj+B,KAAV,EAAiBu2B,IAAjB,EAAuB;AACvD,QAAIr2B,IAAI,GAAGF,KAAK,CAACE,IAAjB;AACA,QAAI88B,GAAG,GAAG,KAAK8B,YAAL,CAAkB9+B,KAAlB,CAAV;AACA,QAAI0+B,QAAQ,GAAG,KAAKC,sBAAL,CAA4BpI,IAA5B,CAAf;AACA,QAAIxC,MAAM,GAAG,KAAKiI,eAAL,CAAqB4C,cAArB,CAAoC7C,QAAQ,CAAC8C,kBAAT,CAA4B7+B,KAA5B,CAApC,EAAwEg9B,GAAxE,EAA6E0B,QAAQ,CAACK,MAAtF,EAA8FL,QAAQ,CAAC3zB,UAAvG,CAAb;AACA,QAAIkgB,OAAO,GAAG,KAAKgR,cAAL,CAAoBhR,OAApB,CAA4B/qB,IAA5B,CAAd,CALuD,CAMvD;AACA;;AACA,QAAI88B,GAAJ,EAAS;AACLpnC,MAAAA,MAAM,CAAC,CAACq1B,OAAO,CAACpzB,KAAR,CAAci/B,eAAd,EAAF,EAAmC,mDAAnC,CAAN;AACH,KAFD,MAGK;AACD;AACA,UAAIoJ,aAAa,GAAGjV,OAAO,CAACc,IAAR,CAAa,UAAUR,YAAV,EAAwBiU,mBAAxB,EAA6CC,QAA7C,EAAuD;AACpF,YAAI,CAACh9B,WAAW,CAAC8oB,YAAD,CAAZ,IACAiU,mBADA,IAEAA,mBAAmB,CAAC1I,eAApB,EAFJ,EAE2C;AACvC,iBAAO,CAAC0I,mBAAmB,CAAC/H,eAApB,GAAsCtC,QAAtC,EAAD,CAAP;AACH,SAJD,MAKK;AACD;AACA,cAAIgL,SAAS,GAAG,EAAhB;;AACA,cAAIX,mBAAJ,EAAyB;AACrBW,YAAAA,SAAS,GAAGA,SAAS,CAACrK,MAAV,CAAiB0J,mBAAmB,CAACrI,aAApB,GAAoC3gC,GAApC,CAAwC,UAAU+/B,IAAV,EAAgB;AAAE,qBAAOA,IAAI,CAACpB,QAAL,EAAP;AAAyB,aAAnF,CAAjB,CAAZ;AACH;;AACDn3B,UAAAA,IAAI,CAACyhC,QAAD,EAAW,UAAUG,IAAV,EAAgBQ,YAAhB,EAA8B;AACzCD,YAAAA,SAAS,GAAGA,SAAS,CAACrK,MAAV,CAAiBsK,YAAjB,CAAZ;AACH,WAFG,CAAJ;AAGA,iBAAOD,SAAP;AACH;AACJ,OAjBmB,CAApB;;AAkBA,WAAK,IAAIlmC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGimC,aAAa,CAACnmC,MAAlC,EAA0C,EAAEE,CAA5C,EAA+C;AAC3C,YAAIomC,WAAW,GAAGH,aAAa,CAACjmC,CAAD,CAA/B;AACA,aAAK+hC,eAAL,CAAqBiD,aAArB,CAAmClD,QAAQ,CAAC8C,kBAAT,CAA4BwB,WAA5B,CAAnC,EAA6E,KAAKvB,YAAL,CAAkBuB,WAAlB,CAA7E;AACH;AACJ;;AACD,WAAOtM,MAAP;AACH,GArCD;;AAsCAgI,EAAAA,QAAQ,CAACrkC,SAAT,CAAmBinC,sBAAnB,GAA4C,UAAUpI,IAAV,EAAgB;AACxD,QAAI/e,KAAK,GAAG,IAAZ;;AACA,QAAIxX,KAAK,GAAGu2B,IAAI,CAACpB,QAAL,EAAZ;AACA,QAAI6H,GAAG,GAAG,KAAK8B,YAAL,CAAkB9+B,KAAlB,CAAV;AACA,WAAO;AACH++B,MAAAA,MAAM,EAAE,YAAY;AAChB,YAAIzJ,KAAK,GAAGiB,IAAI,CAACnI,cAAL,MAAyBrW,YAAY,CAAC9I,UAAlD;AACA,eAAOqmB,KAAK,CAACjlB,IAAN,EAAP;AACH,OAJE;AAKHtF,MAAAA,UAAU,EAAE,UAAUu1B,MAAV,EAAkB;AAC1B,YAAIA,MAAM,KAAK,IAAf,EAAqB;AACjB,cAAItD,GAAJ,EAAS;AACL,mBAAOxlB,KAAK,CAACgmB,yBAAN,CAAgCx9B,KAAK,CAACE,IAAtC,EAA4C88B,GAA5C,CAAP;AACH,WAFD,MAGK;AACD,mBAAOxlB,KAAK,CAACslB,mBAAN,CAA0B98B,KAAK,CAACE,IAAhC,CAAP;AACH;AACJ,SAPD,MAQK;AACD;AACA;AACA,cAAIjF,KAAK,GAAG6E,kBAAkB,CAACwgC,MAAD,EAAStgC,KAAT,CAA9B;AACA,iBAAOwX,KAAK,CAACge,uBAAN,CAA8Bx1B,KAA9B;AACP;AAAsB,cADf,EACqB/E,KADrB,CAAP;AAEH;AACJ;AArBE,KAAP;AAuBH,GA3BD;AA4BA;AACJ;AACA;;;AACI8gC,EAAAA,QAAQ,CAACgC,aAAT,GAAyB,UAAU/9B,KAAV,EAAiB;AACtC,WAAOA,KAAK,CAACE,IAAN,CAAW5H,QAAX,KAAwB,GAAxB,GAA8B0H,KAAK,CAAConB,eAAN,EAArC;AACH,GAFD;AAGA;AACJ;AACA;;;AACI2U,EAAAA,QAAQ,CAACqB,cAAT,GAA0B,UAAUH,QAAV,EAAoB;AAC1C,QAAIsD,UAAU,GAAGtD,QAAQ,CAACzhC,OAAT,CAAiB,GAAjB,CAAjB;AACA5F,IAAAA,MAAM,CAAC2qC,UAAU,KAAK,CAAC,CAAhB,IAAqBA,UAAU,GAAGtD,QAAQ,CAACljC,MAAT,GAAkB,CAArD,EAAwD,eAAxD,CAAN;AACA,WAAO;AACHywB,MAAAA,OAAO,EAAEyS,QAAQ,CAAC39B,MAAT,CAAgBihC,UAAU,GAAG,CAA7B,CADN;AAEHrgC,MAAAA,IAAI,EAAE,IAAIe,IAAJ,CAASg8B,QAAQ,CAAC39B,MAAT,CAAgB,CAAhB,EAAmBihC,UAAnB,CAAT;AAFH,KAAP;AAIH,GAPD;AAQA;AACJ;AACA;;;AACIxE,EAAAA,QAAQ,CAACrkC,SAAT,CAAmBwlC,eAAnB,GAAqC,UAAUF,GAAV,EAAe;AAChD,WAAO,KAAKb,aAAL,CAAmBlkC,GAAnB,CAAuB+kC,GAAvB,CAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACIjB,EAAAA,QAAQ,CAACrkC,SAAT,CAAmBonC,YAAnB,GAAkC,UAAU9+B,KAAV,EAAiB;AAC/C,QAAIi9B,QAAQ,GAAGlB,QAAQ,CAACgC,aAAT,CAAuB/9B,KAAvB,CAAf;AACA,WAAO,KAAKo8B,aAAL,CAAmBnkC,GAAnB,CAAuBglC,QAAvB,CAAP;AACH,GAHD;AAIA;AACJ;AACA;;;AACIlB,EAAAA,QAAQ,CAACiC,gBAAT,GAA4B,YAAY;AACpC,WAAOjC,QAAQ,CAACyE,aAAT,EAAP;AACH,GAFD;AAGA;AACJ;AACA;;;AACIzE,EAAAA,QAAQ,CAACrkC,SAAT,CAAmB4lC,qBAAnB,GAA2C,UAAUD,SAAV,EAAqBrN,SAArB,EAAgC;AACvE,QAAI4N,SAAS,GAAG,KAAK3B,cAAL,CAAoBhkC,GAApB,CAAwBolC,SAAxB,CAAhB;AACAznC,IAAAA,MAAM,CAACgoC,SAAD,EAAY,sDAAZ,CAAN;AACA,QAAI3N,WAAW,GAAG,KAAKiM,iBAAL,CAAuB3C,WAAvB,CAAmC8D,SAAnC,CAAlB;AACA,WAAOO,SAAS,CAAC9N,cAAV,CAAyBE,SAAzB,EAAoCC,WAApC;AACP;AAAiB,QADV,CAAP;AAEH,GAND;AAOA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI8L,EAAAA,QAAQ,CAACrkC,SAAT,CAAmB6kC,2BAAnB,GAAiD,UAAUvM,SAAV,EAAqB;AAClE,WAAO,KAAKyQ,qBAAL,CAA2BzQ,SAA3B,EAAsC,KAAKiM,cAA3C;AACP;AAAiB,QADV,EACgB,KAAKC,iBAAL,CAAuB3C,WAAvB,CAAmC93B,YAAY,EAA/C,CADhB,CAAP;AAEH,GAHD;AAIA;AACJ;AACA;;;AACIs6B,EAAAA,QAAQ,CAACrkC,SAAT,CAAmB+oC,qBAAnB,GAA2C,UAAUzQ,SAAV,EAAqB0Q,aAArB,EAAoCnP,WAApC,EAAiDtB,WAAjD,EAA8D;AACrG,QAAIxtB,WAAW,CAACutB,SAAS,CAAC9vB,IAAX,CAAf,EAAiC;AAC7B,aAAO,KAAKygC,gCAAL,CAAsC3Q,SAAtC,EAAiD0Q,aAAjD,EAAgEnP,WAAhE,EAA6EtB,WAA7E,CAAP;AACH,KAFD,MAGK;AACD,UAAI2N,SAAS,GAAG8C,aAAa,CAACzoC,GAAd,CAAkBwJ,YAAY,EAA9B,CAAhB,CADC,CAED;;AACA,UAAI8vB,WAAW,IAAI,IAAf,IAAuBqM,SAAS,IAAI,IAAxC,EAA8C;AAC1CrM,QAAAA,WAAW,GAAGqM,SAAS,CAACvI,sBAAV,CAAiC5zB,YAAY,EAA7C,CAAd;AACH;;AACD,UAAIsyB,MAAM,GAAG,EAAb;AACA,UAAIzkB,SAAS,GAAG5N,YAAY,CAACsuB,SAAS,CAAC9vB,IAAX,CAA5B;AACA,UAAI0gC,cAAc,GAAG5Q,SAAS,CAAChF,iBAAV,CAA4B1b,SAA5B,CAArB;AACA,UAAI4G,SAAS,GAAGwqB,aAAa,CAACrX,QAAd,CAAuBpxB,GAAvB,CAA2BqX,SAA3B,CAAhB;;AACA,UAAI4G,SAAS,IAAI0qB,cAAjB,EAAiC;AAC7B,YAAIC,gBAAgB,GAAGtP,WAAW,GAC5BA,WAAW,CAACliB,iBAAZ,CAA8BC,SAA9B,CAD4B,GAE5B,IAFN;AAGA,YAAIwxB,gBAAgB,GAAG7Q,WAAW,CAAC9rB,KAAZ,CAAkBmL,SAAlB,CAAvB;AACAykB,QAAAA,MAAM,GAAGA,MAAM,CAAC+B,MAAP,CAAc,KAAK2K,qBAAL,CAA2BG,cAA3B,EAA2C1qB,SAA3C,EAAsD2qB,gBAAtD,EAAwEC,gBAAxE,CAAd,CAAT;AACH;;AACD,UAAIlD,SAAJ,EAAe;AACX7J,QAAAA,MAAM,GAAGA,MAAM,CAAC+B,MAAP,CAAc8H,SAAS,CAAC9N,cAAV,CAAyBE,SAAzB,EAAoCC,WAApC,EAAiDsB,WAAjD,CAAd,CAAT;AACH;;AACD,aAAOwC,MAAP;AACH;AACJ,GA1BD;AA2BA;AACJ;AACA;;;AACIgI,EAAAA,QAAQ,CAACrkC,SAAT,CAAmBipC,gCAAnB,GAAsD,UAAU3Q,SAAV,EAAqB0Q,aAArB,EAAoCnP,WAApC,EAAiDtB,WAAjD,EAA8D;AAChH,QAAIzY,KAAK,GAAG,IAAZ;;AACA,QAAIomB,SAAS,GAAG8C,aAAa,CAACzoC,GAAd,CAAkBwJ,YAAY,EAA9B,CAAhB,CAFgH,CAGhH;;AACA,QAAI8vB,WAAW,IAAI,IAAf,IAAuBqM,SAAS,IAAI,IAAxC,EAA8C;AAC1CrM,MAAAA,WAAW,GAAGqM,SAAS,CAACvI,sBAAV,CAAiC5zB,YAAY,EAA7C,CAAd;AACH;;AACD,QAAIsyB,MAAM,GAAG,EAAb;AACA2M,IAAAA,aAAa,CAACrX,QAAd,CAAuB1W,gBAAvB,CAAwC,UAAUrD,SAAV,EAAqB4G,SAArB,EAAgC;AACpE,UAAI2qB,gBAAgB,GAAGtP,WAAW,GAC5BA,WAAW,CAACliB,iBAAZ,CAA8BC,SAA9B,CAD4B,GAE5B,IAFN;AAGA,UAAIwxB,gBAAgB,GAAG7Q,WAAW,CAAC9rB,KAAZ,CAAkBmL,SAAlB,CAAvB;AACA,UAAIsxB,cAAc,GAAG5Q,SAAS,CAAChF,iBAAV,CAA4B1b,SAA5B,CAArB;;AACA,UAAIsxB,cAAJ,EAAoB;AAChB7M,QAAAA,MAAM,GAAGA,MAAM,CAAC+B,MAAP,CAActe,KAAK,CAACmpB,gCAAN,CAAuCC,cAAvC,EAAuD1qB,SAAvD,EAAkE2qB,gBAAlE,EAAoFC,gBAApF,CAAd,CAAT;AACH;AACJ,KATD;;AAUA,QAAIlD,SAAJ,EAAe;AACX7J,MAAAA,MAAM,GAAGA,MAAM,CAAC+B,MAAP,CAAc8H,SAAS,CAAC9N,cAAV,CAAyBE,SAAzB,EAAoCC,WAApC,EAAiDsB,WAAjD,CAAd,CAAT;AACH;;AACD,WAAOwC,MAAP;AACH,GAtBD;AAuBA;AACJ;AACA;;;AACIgI,EAAAA,QAAQ,CAACyE,aAAT,GAAyB,CAAzB;AACA,SAAOzE,QAAP;AACH,CA7kB6B,EAA9B;AA+kBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA,IAAIgF,cAAc;AAAG;AAAe,YAAY;AAC5C,WAASA,cAAT,GAA0B;AACtB,SAAKC,SAAL,GAAiBjpB,YAAY,CAAC9I,UAA9B;AACH;;AACD8xB,EAAAA,cAAc,CAACrpC,SAAf,CAAyB+1B,OAAzB,GAAmC,UAAUvtB,IAAV,EAAgB;AAC/C,WAAO,KAAK8gC,SAAL,CAAezxB,QAAf,CAAwBrP,IAAxB,CAAP;AACH,GAFD;;AAGA6gC,EAAAA,cAAc,CAACrpC,SAAf,CAAyBupC,cAAzB,GAA0C,UAAU/gC,IAAV,EAAgBghC,eAAhB,EAAiC;AACvE,SAAKF,SAAL,GAAiB,KAAKA,SAAL,CAAenxB,WAAf,CAA2B3P,IAA3B,EAAiCghC,eAAjC,CAAjB;AACH,GAFD;;AAGA,SAAOH,cAAP;AACH,CAXmC,EAApC;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA,IAAII,eAAe;AAAG;AAAe,YAAY;AAC7C,WAASA,eAAT,GAA2B;AACvB,SAAKC,SAAL,GAAiB,EAAjB;AACH;;AACDD,EAAAA,eAAe,CAACzpC,SAAhB,CAA0B2pC,gBAA1B,GAA6C,UAAUhpC,IAAV,EAAgBipC,MAAhB,EAAwB;AACjE,QAAIA,MAAM,KAAK,KAAK,CAApB,EAAuB;AAAEA,MAAAA,MAAM,GAAG,CAAT;AAAa;;AACtC,QAAI,CAAC3rC,QAAQ,CAAC,KAAKyrC,SAAN,EAAiB/oC,IAAjB,CAAb,EAAqC;AACjC,WAAK+oC,SAAL,CAAe/oC,IAAf,IAAuB,CAAvB;AACH;;AACD,SAAK+oC,SAAL,CAAe/oC,IAAf,KAAwBipC,MAAxB;AACH,GAND;;AAOAH,EAAAA,eAAe,CAACzpC,SAAhB,CAA0BO,GAA1B,GAAgC,YAAY;AACxC,WAAOvB,QAAQ,CAAC,KAAK0qC,SAAN,CAAf;AACH,GAFD;;AAGA,SAAOD,eAAP;AACH,CAfoC,EAArC;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAII,YAAY;AAAG;AAAe,YAAY;AAC1C,WAASA,YAAT,GAAwB,CACvB;;AACDA,EAAAA,YAAY,CAACC,aAAb,GAA6B,UAAUt5B,QAAV,EAAoB;AAC7C,QAAIu5B,UAAU,GAAGv5B,QAAQ,CAAC5P,QAAT,EAAjB;;AACA,QAAI,CAAC,KAAKopC,YAAL,CAAkBD,UAAlB,CAAL,EAAoC;AAChC,WAAKC,YAAL,CAAkBD,UAAlB,IAAgC,IAAIN,eAAJ,EAAhC;AACH;;AACD,WAAO,KAAKO,YAAL,CAAkBD,UAAlB,CAAP;AACH,GAND;;AAOAF,EAAAA,YAAY,CAACI,mBAAb,GAAmC,UAAUz5B,QAAV,EAAoB05B,eAApB,EAAqC;AACpE,QAAIH,UAAU,GAAGv5B,QAAQ,CAAC5P,QAAT,EAAjB;;AACA,QAAI,CAAC,KAAKupC,UAAL,CAAgBJ,UAAhB,CAAL,EAAkC;AAC9B,WAAKI,UAAL,CAAgBJ,UAAhB,IAA8BG,eAAe,EAA7C;AACH;;AACD,WAAO,KAAKC,UAAL,CAAgBJ,UAAhB,CAAP;AACH,GAND;;AAOAF,EAAAA,YAAY,CAACG,YAAb,GAA4B,EAA5B;AACAH,EAAAA,YAAY,CAACM,UAAb,GAA0B,EAA1B;AACA,SAAON,YAAP;AACH,CApBiC,EAAlC;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIO,aAAa;AAAG;AAAe,YAAY;AAC3C,WAASA,aAAT,CAAuBC,WAAvB,EAAoC;AAChC,SAAKA,WAAL,GAAmBA,WAAnB;AACA,SAAKC,KAAL,GAAa,IAAb;AACH;;AACDF,EAAAA,aAAa,CAACpqC,SAAd,CAAwBO,GAAxB,GAA8B,YAAY;AACtC,QAAIgqC,QAAQ,GAAG,KAAKF,WAAL,CAAiB9pC,GAAjB,EAAf;;AACA,QAAI2wB,KAAK,GAAGvzB,QAAQ,CAAC,EAAD,EAAK4sC,QAAL,CAApB;;AACA,QAAI,KAAKD,KAAT,EAAgB;AACZhkC,MAAAA,IAAI,CAAC,KAAKgkC,KAAN,EAAa,UAAUE,IAAV,EAAgBrqC,KAAhB,EAAuB;AACpC+wB,QAAAA,KAAK,CAACsZ,IAAD,CAAL,GAActZ,KAAK,CAACsZ,IAAD,CAAL,GAAcrqC,KAA5B;AACH,OAFG,CAAJ;AAGH;;AACD,SAAKmqC,KAAL,GAAaC,QAAb;AACA,WAAOrZ,KAAP;AACH,GAVD;;AAWA,SAAOkZ,aAAP;AACH,CAjBkC,EAAnC;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIK,oBAAoB,GAAG,KAAK,IAAhC;AACA,IAAIC,oBAAoB,GAAG,KAAK,IAAhC,C,CACA;;AACA,IAAIC,qBAAqB,GAAG,IAAI,EAAJ,GAAS,IAArC;;AACA,IAAIC,aAAa;AAAG;AAAe,YAAY;AAC3C;AACJ;AACA;AACA;AACI,WAASA,aAAT,CAAuBC,UAAvB,EAAmCC,OAAnC,EAA4C;AACxC,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKC,cAAL,GAAsB,EAAtB;AACA,SAAKC,cAAL,GAAsB,IAAIZ,aAAJ,CAAkBS,UAAlB,CAAtB;AACA,QAAIvhC,OAAO,GAAGmhC,oBAAoB,GAC9B,CAACC,oBAAoB,GAAGD,oBAAxB,IAAgD7lC,IAAI,CAACkQ,MAAL,EADpD;AAEA1L,IAAAA,qBAAqB,CAAC,KAAK6hC,YAAL,CAAkB7nC,IAAlB,CAAuB,IAAvB,CAAD,EAA+BwB,IAAI,CAACC,KAAL,CAAWyE,OAAX,CAA/B,CAArB;AACH;;AACDshC,EAAAA,aAAa,CAAC5qC,SAAd,CAAwBkrC,WAAxB,GAAsC,UAAUV,IAAV,EAAgB;AAClD,SAAKO,cAAL,CAAoBP,IAApB,IAA4B,IAA5B;AACH,GAFD;;AAGAI,EAAAA,aAAa,CAAC5qC,SAAd,CAAwBirC,YAAxB,GAAuC,YAAY;AAC/C,QAAInrB,KAAK,GAAG,IAAZ;;AACA,QAAIqrB,KAAK,GAAG,KAAKH,cAAL,CAAoBzqC,GAApB,EAAZ;AACA,QAAI6qC,aAAa,GAAG,EAApB;AACA,QAAIC,iBAAiB,GAAG,KAAxB;AACA/kC,IAAAA,IAAI,CAAC6kC,KAAD,EAAQ,UAAUX,IAAV,EAAgBrqC,KAAhB,EAAuB;AAC/B,UAAIA,KAAK,GAAG,CAAR,IAAalC,QAAQ,CAAC6hB,KAAK,CAACirB,cAAP,EAAuBP,IAAvB,CAAzB,EAAuD;AACnDY,QAAAA,aAAa,CAACZ,IAAD,CAAb,GAAsBrqC,KAAtB;AACAkrC,QAAAA,iBAAiB,GAAG,IAApB;AACH;AACJ,KALG,CAAJ;;AAMA,QAAIA,iBAAJ,EAAuB;AACnB,WAAKP,OAAL,CAAaQ,WAAb,CAAyBF,aAAzB;AACH,KAb8C,CAc/C;;;AACAhiC,IAAAA,qBAAqB,CAAC,KAAK6hC,YAAL,CAAkB7nC,IAAlB,CAAuB,IAAvB,CAAD,EAA+BwB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACkQ,MAAL,KAAgB,CAAhB,GAAoB61B,qBAA/B,CAA/B,CAArB;AACH,GAhBD;;AAiBA,SAAOC,aAAP;AACH,CAlCkC,EAAnC;AAoCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIW,UAAU;AAAG;AAAe,YAAY;AACxC,WAASA,UAAT,GAAsB;AAClB,SAAKC,WAAL,GAAmB,EAAnB;AACA;AACR;AACA;;AACQ,SAAKC,eAAL,GAAuB,CAAvB;AACH;;AACD,SAAOF,UAAP;AACH,CAT+B,EAAhC;AAUA;AACA;AACA;;;AACA,SAASG,qBAAT,CAA+BC,UAA/B,EAA2CC,aAA3C,EAA0D;AACtD;AACA,MAAIC,QAAQ,GAAG,IAAf;;AACA,OAAK,IAAItpC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqpC,aAAa,CAACvpC,MAAlC,EAA0CE,CAAC,EAA3C,EAA+C;AAC3C,QAAIyB,IAAI,GAAG4nC,aAAa,CAACrpC,CAAD,CAAxB;AACA,QAAIiG,IAAI,GAAGxE,IAAI,CAACygB,OAAL,EAAX;;AACA,QAAIonB,QAAQ,KAAK,IAAb,IAAqB,CAAClgC,UAAU,CAACnD,IAAD,EAAOqjC,QAAQ,CAACrjC,IAAhB,CAApC,EAA2D;AACvDmjC,MAAAA,UAAU,CAACH,WAAX,CAAuB1lC,IAAvB,CAA4B+lC,QAA5B;AACAA,MAAAA,QAAQ,GAAG,IAAX;AACH;;AACD,QAAIA,QAAQ,KAAK,IAAjB,EAAuB;AACnBA,MAAAA,QAAQ,GAAG;AAAExP,QAAAA,MAAM,EAAE,EAAV;AAAc7zB,QAAAA,IAAI,EAAEA;AAApB,OAAX;AACH;;AACDqjC,IAAAA,QAAQ,CAACxP,MAAT,CAAgBv2B,IAAhB,CAAqB9B,IAArB;AACH;;AACD,MAAI6nC,QAAJ,EAAc;AACVF,IAAAA,UAAU,CAACH,WAAX,CAAuB1lC,IAAvB,CAA4B+lC,QAA5B;AACH;AACJ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,2BAAT,CAAqCH,UAArC,EAAiDnjC,IAAjD,EAAuDojC,aAAvD,EAAsE;AAClEF,EAAAA,qBAAqB,CAACC,UAAD,EAAaC,aAAb,CAArB;AACAG,EAAAA,4CAA4C,CAACJ,UAAD,EAAa,UAAUK,SAAV,EAAqB;AAC1E,WAAOrgC,UAAU,CAACqgC,SAAD,EAAYxjC,IAAZ,CAAjB;AACH,GAF2C,CAA5C;AAGH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASyjC,mCAAT,CAA6CN,UAA7C,EAAyDO,WAAzD,EAAsEN,aAAtE,EAAqF;AACjFF,EAAAA,qBAAqB,CAACC,UAAD,EAAaC,aAAb,CAArB;AACAG,EAAAA,4CAA4C,CAACJ,UAAD,EAAa,UAAUK,SAAV,EAAqB;AAC1E,WAAOlgC,YAAY,CAACkgC,SAAD,EAAYE,WAAZ,CAAZ,IACHpgC,YAAY,CAACogC,WAAD,EAAcF,SAAd,CADhB;AAEH,GAH2C,CAA5C;AAIH;;AACD,SAASD,4CAAT,CAAsDJ,UAAtD,EAAkE7X,SAAlE,EAA6E;AACzE6X,EAAAA,UAAU,CAACF,eAAX;AACA,MAAIU,OAAO,GAAG,IAAd;;AACA,OAAK,IAAI5pC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGopC,UAAU,CAACH,WAAX,CAAuBnpC,MAA3C,EAAmDE,CAAC,EAApD,EAAwD;AACpD,QAAI6pC,SAAS,GAAGT,UAAU,CAACH,WAAX,CAAuBjpC,CAAvB,CAAhB;;AACA,QAAI6pC,SAAJ,EAAe;AACX,UAAIJ,SAAS,GAAGI,SAAS,CAAC5jC,IAA1B;;AACA,UAAIsrB,SAAS,CAACkY,SAAD,CAAb,EAA0B;AACtBK,QAAAA,cAAc,CAACV,UAAU,CAACH,WAAX,CAAuBjpC,CAAvB,CAAD,CAAd;AACAopC,QAAAA,UAAU,CAACH,WAAX,CAAuBjpC,CAAvB,IAA4B,IAA5B;AACH,OAHD,MAIK;AACD4pC,QAAAA,OAAO,GAAG,KAAV;AACH;AACJ;AACJ;;AACD,MAAIA,OAAJ,EAAa;AACTR,IAAAA,UAAU,CAACH,WAAX,GAAyB,EAAzB;AACH;;AACDG,EAAAA,UAAU,CAACF,eAAX;AACH;AACD;AACA;AACA;;;AACA,SAASY,cAAT,CAAwBD,SAAxB,EAAmC;AAC/B,OAAK,IAAI7pC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6pC,SAAS,CAAC/P,MAAV,CAAiBh6B,MAArC,EAA6CE,CAAC,EAA9C,EAAkD;AAC9C,QAAIkjB,SAAS,GAAG2mB,SAAS,CAAC/P,MAAV,CAAiB95B,CAAjB,CAAhB;;AACA,QAAIkjB,SAAS,KAAK,IAAlB,EAAwB;AACpB2mB,MAAAA,SAAS,CAAC/P,MAAV,CAAiB95B,CAAjB,IAAsB,IAAtB;AACA,UAAI+pC,OAAO,GAAG7mB,SAAS,CAACZ,cAAV,EAAd;;AACA,UAAIjiB,MAAJ,EAAY;AACRO,QAAAA,GAAG,CAAC,YAAYsiB,SAAS,CAAC7kB,QAAV,EAAb,CAAH;AACH;;AACDmI,MAAAA,cAAc,CAACujC,OAAD,CAAd;AACH;AACJ;AACJ;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,IAAIC,YAAY;AAAG;AAAe,YAAY;AAC1C,WAASA,YAAT,CAAsBC,cAAtB,EAAsC;AAClC,SAAKA,cAAL,GAAsBA,cAAtB;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACAvuC,IAAAA,MAAM,CAACuE,KAAK,CAACC,OAAN,CAAc8pC,cAAd,KAAiCA,cAAc,CAACnqC,MAAf,GAAwB,CAA1D,EAA6D,4BAA7D,CAAN;AACH;AACD;AACJ;AACA;;;AACIkqC,EAAAA,YAAY,CAACvsC,SAAb,CAAuB0sC,OAAvB,GAAiC,UAAUh6B,SAAV,EAAqB;AAClD,QAAIxQ,OAAO,GAAG,EAAd;;AACA,SAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGC,SAAS,CAACC,MAAhC,EAAwCF,EAAE,EAA1C,EAA8C;AAC1CD,MAAAA,OAAO,CAACC,EAAE,GAAG,CAAN,CAAP,GAAkBC,SAAS,CAACD,EAAD,CAA3B;AACH;;AACD,QAAIM,KAAK,CAACC,OAAN,CAAc,KAAK+pC,UAAL,CAAgB/5B,SAAhB,CAAd,CAAJ,EAA+C;AAC3C;AACA,UAAIi6B,SAAS,GAAGnvC,QAAQ,CAAC,KAAKivC,UAAL,CAAgB/5B,SAAhB,CAAD,CAAxB;;AACA,WAAK,IAAInQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoqC,SAAS,CAACtqC,MAA9B,EAAsCE,CAAC,EAAvC,EAA2C;AACvCoqC,QAAAA,SAAS,CAACpqC,CAAD,CAAT,CAAa8qB,QAAb,CAAsB1qB,KAAtB,CAA4BgqC,SAAS,CAACpqC,CAAD,CAAT,CAAagrB,OAAzC,EAAkDrrB,OAAlD;AACH;AACJ;AACJ,GAZD;;AAaAqqC,EAAAA,YAAY,CAACvsC,SAAb,CAAuBotB,EAAvB,GAA4B,UAAU1a,SAAV,EAAqB2a,QAArB,EAA+BE,OAA/B,EAAwC;AAChE,SAAKqf,kBAAL,CAAwBl6B,SAAxB;AACA,SAAK+5B,UAAL,CAAgB/5B,SAAhB,IAA6B,KAAK+5B,UAAL,CAAgB/5B,SAAhB,KAA8B,EAA3D;AACA,SAAK+5B,UAAL,CAAgB/5B,SAAhB,EAA2B5M,IAA3B,CAAgC;AAAEunB,MAAAA,QAAQ,EAAEA,QAAZ;AAAsBE,MAAAA,OAAO,EAAEA;AAA/B,KAAhC;AACA,QAAI9H,SAAS,GAAG,KAAKonB,eAAL,CAAqBn6B,SAArB,CAAhB;;AACA,QAAI+S,SAAJ,EAAe;AACX4H,MAAAA,QAAQ,CAAC1qB,KAAT,CAAe4qB,OAAf,EAAwB9H,SAAxB;AACH;AACJ,GARD;;AASA8mB,EAAAA,YAAY,CAACvsC,SAAb,CAAuBguB,GAAvB,GAA6B,UAAUtb,SAAV,EAAqB2a,QAArB,EAA+BE,OAA/B,EAAwC;AACjE,SAAKqf,kBAAL,CAAwBl6B,SAAxB;AACA,QAAIi6B,SAAS,GAAG,KAAKF,UAAL,CAAgB/5B,SAAhB,KAA8B,EAA9C;;AACA,SAAK,IAAInQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoqC,SAAS,CAACtqC,MAA9B,EAAsCE,CAAC,EAAvC,EAA2C;AACvC,UAAIoqC,SAAS,CAACpqC,CAAD,CAAT,CAAa8qB,QAAb,KAA0BA,QAA1B,KACC,CAACE,OAAD,IAAYA,OAAO,KAAKof,SAAS,CAACpqC,CAAD,CAAT,CAAagrB,OADtC,CAAJ,EACoD;AAChDof,QAAAA,SAAS,CAACnK,MAAV,CAAiBjgC,CAAjB,EAAoB,CAApB;AACA;AACH;AACJ;AACJ,GAVD;;AAWAgqC,EAAAA,YAAY,CAACvsC,SAAb,CAAuB4sC,kBAAvB,GAA4C,UAAUl6B,SAAV,EAAqB;AAC7DxU,IAAAA,MAAM,CAAC,KAAKsuC,cAAL,CAAoB3a,IAApB,CAAyB,UAAUib,EAAV,EAAc;AAC1C,aAAOA,EAAE,KAAKp6B,SAAd;AACH,KAFM,CAAD,EAEF,oBAAoBA,SAFlB,CAAN;AAGH,GAJD;;AAKA,SAAO65B,YAAP;AACH,CAhDiC,EAAlC;AAkDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIQ,iBAAiB;AAAG;AAAe,UAAU12B,MAAV,EAAkB;AACrD3Y,EAAAA,SAAS,CAACqvC,iBAAD,EAAoB12B,MAApB,CAAT;;AACA,WAAS02B,iBAAT,GAA6B;AACzB,QAAIjtB,KAAK,GAAGzJ,MAAM,CAACnG,IAAP,CAAY,IAAZ,EAAkB,CAAC,SAAD,CAAlB,KAAkC,IAA9C;;AACA,QAAI88B,MAAJ;AACA,QAAIC,gBAAJ;;AACA,QAAI,OAAO3oC,QAAP,KAAoB,WAApB,IACA,OAAOA,QAAQ,CAACQ,gBAAhB,KAAqC,WADzC,EACsD;AAClD,UAAI,OAAOR,QAAQ,CAAC,QAAD,CAAf,KAA8B,WAAlC,EAA+C;AAC3C;AACA2oC,QAAAA,gBAAgB,GAAG,kBAAnB;AACAD,QAAAA,MAAM,GAAG,QAAT;AACH,OAJD,MAKK,IAAI,OAAO1oC,QAAQ,CAAC,WAAD,CAAf,KAAiC,WAArC,EAAkD;AACnD2oC,QAAAA,gBAAgB,GAAG,qBAAnB;AACAD,QAAAA,MAAM,GAAG,WAAT;AACH,OAHI,MAIA,IAAI,OAAO1oC,QAAQ,CAAC,UAAD,CAAf,KAAgC,WAApC,EAAiD;AAClD2oC,QAAAA,gBAAgB,GAAG,oBAAnB;AACAD,QAAAA,MAAM,GAAG,UAAT;AACH,OAHI,MAIA,IAAI,OAAO1oC,QAAQ,CAAC,cAAD,CAAf,KAAoC,WAAxC,EAAqD;AACtD2oC,QAAAA,gBAAgB,GAAG,wBAAnB;AACAD,QAAAA,MAAM,GAAG,cAAT;AACH;AACJ,KAvBwB,CAwBzB;AACA;AACA;AACA;;;AACAltB,IAAAA,KAAK,CAACotB,QAAN,GAAiB,IAAjB;;AACA,QAAID,gBAAJ,EAAsB;AAClB3oC,MAAAA,QAAQ,CAACQ,gBAAT,CAA0BmoC,gBAA1B,EAA4C,YAAY;AACpD,YAAIhL,OAAO,GAAG,CAAC39B,QAAQ,CAAC0oC,MAAD,CAAvB;;AACA,YAAI/K,OAAO,KAAKniB,KAAK,CAACotB,QAAtB,EAAgC;AAC5BptB,UAAAA,KAAK,CAACotB,QAAN,GAAiBjL,OAAjB;;AACAniB,UAAAA,KAAK,CAAC4sB,OAAN,CAAc,SAAd,EAAyBzK,OAAzB;AACH;AACJ,OAND,EAMG,KANH;AAOH;;AACD,WAAOniB,KAAP;AACH;;AACDitB,EAAAA,iBAAiB,CAACI,WAAlB,GAAgC,YAAY;AACxC,WAAO,IAAIJ,iBAAJ,EAAP;AACH,GAFD;;AAGAA,EAAAA,iBAAiB,CAAC/sC,SAAlB,CAA4B6sC,eAA5B,GAA8C,UAAUn6B,SAAV,EAAqB;AAC/DxU,IAAAA,MAAM,CAACwU,SAAS,KAAK,SAAf,EAA0B,yBAAyBA,SAAnD,CAAN;AACA,WAAO,CAAC,KAAKw6B,QAAN,CAAP;AACH,GAHD;;AAIA,SAAOH,iBAAP;AACH,CAlDsC,CAkDrCR,YAlDqC,CAAvC;AAoDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIa,aAAa;AAAG;AAAe,UAAU/2B,MAAV,EAAkB;AACjD3Y,EAAAA,SAAS,CAAC0vC,aAAD,EAAgB/2B,MAAhB,CAAT;;AACA,WAAS+2B,aAAT,GAAyB;AACrB,QAAIttB,KAAK,GAAGzJ,MAAM,CAACnG,IAAP,CAAY,IAAZ,EAAkB,CAAC,QAAD,CAAlB,KAAiC,IAA7C;;AACA4P,IAAAA,KAAK,CAACutB,OAAN,GAAgB,IAAhB,CAFqB,CAGrB;AACA;AACA;AACA;;AACA,QAAI,OAAOnsC,MAAP,KAAkB,WAAlB,IACA,OAAOA,MAAM,CAAC4D,gBAAd,KAAmC,WADnC,IAEA,CAAC7F,eAAe,EAFpB,EAEwB;AACpBiC,MAAAA,MAAM,CAAC4D,gBAAP,CAAwB,QAAxB,EAAkC,YAAY;AAC1C,YAAI,CAACgb,KAAK,CAACutB,OAAX,EAAoB;AAChBvtB,UAAAA,KAAK,CAACutB,OAAN,GAAgB,IAAhB;;AACAvtB,UAAAA,KAAK,CAAC4sB,OAAN,CAAc,QAAd,EAAwB,IAAxB;AACH;AACJ,OALD,EAKG,KALH;AAMAxrC,MAAAA,MAAM,CAAC4D,gBAAP,CAAwB,SAAxB,EAAmC,YAAY;AAC3C,YAAIgb,KAAK,CAACutB,OAAV,EAAmB;AACfvtB,UAAAA,KAAK,CAACutB,OAAN,GAAgB,KAAhB;;AACAvtB,UAAAA,KAAK,CAAC4sB,OAAN,CAAc,QAAd,EAAwB,KAAxB;AACH;AACJ,OALD,EAKG,KALH;AAMH;;AACD,WAAO5sB,KAAP;AACH;;AACDstB,EAAAA,aAAa,CAACD,WAAd,GAA4B,YAAY;AACpC,WAAO,IAAIC,aAAJ,EAAP;AACH,GAFD;;AAGAA,EAAAA,aAAa,CAACptC,SAAd,CAAwB6sC,eAAxB,GAA0C,UAAUn6B,SAAV,EAAqB;AAC3DxU,IAAAA,MAAM,CAACwU,SAAS,KAAK,QAAf,EAAyB,yBAAyBA,SAAlD,CAAN;AACA,WAAO,CAAC,KAAK26B,OAAN,CAAP;AACH,GAHD;;AAIAD,EAAAA,aAAa,CAACptC,SAAd,CAAwBstC,eAAxB,GAA0C,YAAY;AAClD,WAAO,KAAKD,OAAZ;AACH,GAFD;;AAGA,SAAOD,aAAP;AACH,CAtCkC,CAsCjCb,YAtCiC,CAAnC;AAwCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,IAAIgB,cAAc;AAAG;AAAe,YAAY;AAC5C;AACJ;AACA;AACI,WAASA,cAAT,CAAwBC,UAAxB,EAAoC;AAChC,SAAKA,UAAL,GAAkBA,UAAlB;AACA,SAAKC,gBAAL,GAAwB,EAAxB;AACA,SAAKC,kBAAL,GAA0B,CAA1B;AACA,SAAKC,kBAAL,GAA0B,CAAC,CAA3B;AACA,SAAKC,OAAL,GAAe,IAAf;AACH;;AACDL,EAAAA,cAAc,CAACvtC,SAAf,CAAyB6tC,UAAzB,GAAsC,UAAUC,WAAV,EAAuBzgB,QAAvB,EAAiC;AACnE,SAAKsgB,kBAAL,GAA0BG,WAA1B;AACA,SAAKF,OAAL,GAAevgB,QAAf;;AACA,QAAI,KAAKsgB,kBAAL,GAA0B,KAAKD,kBAAnC,EAAuD;AACnD,WAAKE,OAAL;AACA,WAAKA,OAAL,GAAe,IAAf;AACH;AACJ,GAPD;AAQA;AACJ;AACA;AACA;AACA;;;AACIL,EAAAA,cAAc,CAACvtC,SAAf,CAAyB+tC,cAAzB,GAA0C,UAAUC,UAAV,EAAsBhqC,IAAtB,EAA4B;AAClE,QAAI8b,KAAK,GAAG,IAAZ;;AACA,SAAK2tB,gBAAL,CAAsBO,UAAtB,IAAoChqC,IAApC;;AACA,QAAIiqC,OAAO,GAAG,YAAY;AACtB,UAAIC,SAAS,GAAGC,MAAM,CAACV,gBAAP,CAAwBU,MAAM,CAACT,kBAA/B,CAAhB;AACA,aAAOS,MAAM,CAACV,gBAAP,CAAwBU,MAAM,CAACT,kBAA/B,CAAP;;AACA,UAAIU,OAAO,GAAG,UAAU7rC,CAAV,EAAa;AACvB,YAAI2rC,SAAS,CAAC3rC,CAAD,CAAb,EAAkB;AACdwG,UAAAA,cAAc,CAAC,YAAY;AACvB+W,YAAAA,KAAK,CAAC0tB,UAAN,CAAiBU,SAAS,CAAC3rC,CAAD,CAA1B;AACH,WAFa,CAAd;AAGH;AACJ,OAND;;AAOA,WAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2rC,SAAS,CAAC7rC,MAA9B,EAAsC,EAAEE,CAAxC,EAA2C;AACvC6rC,QAAAA,OAAO,CAAC7rC,CAAD,CAAP;AACH;;AACD,UAAI4rC,MAAM,CAACT,kBAAP,KAA8BS,MAAM,CAACR,kBAAzC,EAA6D;AACzD,YAAIQ,MAAM,CAACP,OAAX,EAAoB;AAChBO,UAAAA,MAAM,CAACP,OAAP;AACAO,UAAAA,MAAM,CAACP,OAAP,GAAiB,IAAjB;AACH;;AACD,eAAO,OAAP;AACH;;AACDO,MAAAA,MAAM,CAACT,kBAAP;AACH,KArBD;;AAsBA,QAAIS,MAAM,GAAG,IAAb;;AACA,WAAO,KAAKV,gBAAL,CAAsB,KAAKC,kBAA3B,CAAP,EAAuD;AACnD,UAAIW,OAAO,GAAGJ,OAAO,EAArB;;AACA,UAAII,OAAO,KAAK,OAAhB,EACI;AACP;AACJ,GA/BD;;AAgCA,SAAOd,cAAP;AACH,CAzDmC,EAApC;AA2DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIe,6BAA6B,GAAG,OAApC;AACA,IAAIC,+BAA+B,GAAG,OAAtC;AACA,IAAIC,iCAAiC,GAAG,YAAxC;AACA,IAAIC,8BAA8B,GAAG,SAArC;AACA,IAAIC,0BAA0B,GAAG,IAAjC;AACA,IAAIC,0BAA0B,GAAG,IAAjC;AACA,IAAIC,8BAA8B,GAAG,KAArC;AACA,IAAIC,mCAAmC,GAAG,IAA1C;AACA,IAAIC,mCAAmC,GAAG,KAA1C;AACA,IAAIC,oCAAoC,GAAG,IAA3C;AACA,IAAIC,4BAA4B,GAAG,GAAnC;AACA,IAAIC,6CAA6C,GAAG,QAApD,C,CACA;AACA;AACA;;AACA,IAAIC,iBAAiB,GAAG,IAAxB;AACA,IAAIC,eAAe,GAAG,EAAtB,C,CAA0B;;AAC1B,IAAIC,gBAAgB,GAAGF,iBAAiB,GAAGC,eAA3C;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIE,0BAA0B,GAAG,KAAjC;AACA;AACA;AACA;;AACA,IAAIC,kBAAkB,GAAG,KAAzB;AACA;AACA;AACA;;AACA,IAAIC,qBAAqB;AAAG;AAAe,YAAY;AACnD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,WAASA,qBAAT,CAA+BC,MAA/B,EAAuCh/B,QAAvC,EAAiDi/B,aAAjD,EAAgEC,kBAAhE,EAAoFC,aAApF,EAAmG;AAC/F,SAAKH,MAAL,GAAcA,MAAd;AACA,SAAKh/B,QAAL,GAAgBA,QAAhB;AACA,SAAKi/B,aAAL,GAAqBA,aAArB;AACA,SAAKC,kBAAL,GAA0BA,kBAA1B;AACA,SAAKC,aAAL,GAAqBA,aAArB;AACA,SAAKC,SAAL,GAAiB,CAAjB;AACA,SAAKC,aAAL,GAAqB,CAArB;AACA,SAAKC,cAAL,GAAsB,KAAtB;AACA,SAAKC,IAAL,GAAY1sC,UAAU,CAACmsC,MAAD,CAAtB;AACA,SAAKQ,MAAL,GAAcnG,YAAY,CAACC,aAAb,CAA2Bt5B,QAA3B,CAAd;;AACA,SAAKy/B,KAAL,GAAa,UAAUthC,MAAV,EAAkB;AAC3B,aAAO6B,QAAQ,CAAC/B,aAAT,CAAuBjB,YAAvB,EAAqCmB,MAArC,CAAP;AACH,KAFD;AAGH;AACD;AACJ;AACA;AACA;;;AACI4gC,EAAAA,qBAAqB,CAACvvC,SAAtB,CAAgCkwC,IAAhC,GAAuC,UAAUC,SAAV,EAAqBC,YAArB,EAAmC;AACtE,QAAItwB,KAAK,GAAG,IAAZ;;AACA,SAAKuwB,aAAL,GAAqB,CAArB;AACA,SAAKC,aAAL,GAAqBF,YAArB;AACA,SAAKG,eAAL,GAAuB,IAAIhD,cAAJ,CAAmB4C,SAAnB,CAAvB;AACA,SAAKK,SAAL,GAAiB,KAAjB;AACA,SAAKC,oBAAL,GAA4B9rC,UAAU,CAAC,YAAY;AAC/Cmb,MAAAA,KAAK,CAACiwB,IAAN,CAAW,8BAAX,EAD+C,CAE/C;;;AACAjwB,MAAAA,KAAK,CAAC4wB,SAAN;;AACA5wB,MAAAA,KAAK,CAAC2wB,oBAAN,GAA6B,IAA7B,CAJ+C,CAK/C;AACH,KANqC,EAMnC7rC,IAAI,CAACC,KAAL,CAAWyqC,kBAAX,CANmC,CAAtC,CANsE,CAatE;;AACAlrC,IAAAA,mBAAmB,CAAC,YAAY;AAC5B,UAAI0b,KAAK,CAAC0wB,SAAV,EAAqB;AACjB;AACH,OAH2B,CAI5B;;;AACA1wB,MAAAA,KAAK,CAAC6wB,eAAN,GAAwB,IAAIC,0BAAJ,CAA+B,YAAY;AAC/D,YAAIC,IAAI,GAAG,EAAX;;AACA,aAAK,IAAI1uC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGC,SAAS,CAACC,MAAhC,EAAwCF,EAAE,EAA1C,EAA8C;AAC1C0uC,UAAAA,IAAI,CAAC1uC,EAAD,CAAJ,GAAWC,SAAS,CAACD,EAAD,CAApB;AACH;;AACD,YAAIoN,EAAE,GAAG3R,MAAM,CAACizC,IAAD,EAAO,CAAP,CAAf;AAAA,YAA0BC,OAAO,GAAGvhC,EAAE,CAAC,CAAD,CAAtC;AAAA,YAA2CwhC,IAAI,GAAGxhC,EAAE,CAAC,CAAD,CAApD;AAAA,YAAyDyhC,IAAI,GAAGzhC,EAAE,CAAC,CAAD,CAAlE;AAAA,YAAuE0hC,IAAI,GAAG1hC,EAAE,CAAC,CAAD,CAAhF;AAAA,YAAqF2hC,IAAI,GAAG3hC,EAAE,CAAC,CAAD,CAA9F;;AACAuQ,QAAAA,KAAK,CAACqxB,uBAAN,CAA8BN,IAA9B;;AACA,YAAI,CAAC/wB,KAAK,CAAC6wB,eAAX,EAA4B;AACxB,iBADwB,CAChB;AACX;;AACD,YAAI7wB,KAAK,CAAC2wB,oBAAV,EAAgC;AAC5BW,UAAAA,YAAY,CAACtxB,KAAK,CAAC2wB,oBAAP,CAAZ;AACA3wB,UAAAA,KAAK,CAAC2wB,oBAAN,GAA6B,IAA7B;AACH;;AACD3wB,QAAAA,KAAK,CAACgwB,cAAN,GAAuB,IAAvB;;AACA,YAAIgB,OAAO,KAAKxC,6BAAhB,EAA+C;AAC3CxuB,UAAAA,KAAK,CAACre,EAAN,GAAWsvC,IAAX;AACAjxB,UAAAA,KAAK,CAACuxB,QAAN,GAAiBL,IAAjB;AACH,SAHD,MAIK,IAAIF,OAAO,KAAKvC,+BAAhB,EAAiD;AAClD;AACA,cAAIwC,IAAJ,EAAU;AACN;AACA;AACAjxB,YAAAA,KAAK,CAAC6wB,eAAN,CAAsBW,YAAtB,GAAqC,KAArC,CAHM,CAIN;AACA;;AACAxxB,YAAAA,KAAK,CAACywB,eAAN,CAAsB1C,UAAtB,CAAiCkD,IAAjC,EAAuC,YAAY;AAC/CjxB,cAAAA,KAAK,CAAC4wB,SAAN;AACH,aAFD;AAGH,WATD,MAUK;AACD5wB,YAAAA,KAAK,CAAC4wB,SAAN;AACH;AACJ,SAfI,MAgBA;AACD,gBAAM,IAAIjtC,KAAJ,CAAU,oCAAoCqtC,OAA9C,CAAN;AACH;AACJ,OAtCuB,EAsCrB,YAAY;AACX,YAAID,IAAI,GAAG,EAAX;;AACA,aAAK,IAAI1uC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGC,SAAS,CAACC,MAAhC,EAAwCF,EAAE,EAA1C,EAA8C;AAC1C0uC,UAAAA,IAAI,CAAC1uC,EAAD,CAAJ,GAAWC,SAAS,CAACD,EAAD,CAApB;AACH;;AACD,YAAIoN,EAAE,GAAG3R,MAAM,CAACizC,IAAD,EAAO,CAAP,CAAf;AAAA,YAA0BU,EAAE,GAAGhiC,EAAE,CAAC,CAAD,CAAjC;AAAA,YAAsCvL,IAAI,GAAGuL,EAAE,CAAC,CAAD,CAA/C;;AACAuQ,QAAAA,KAAK,CAACqxB,uBAAN,CAA8BN,IAA9B;;AACA/wB,QAAAA,KAAK,CAACywB,eAAN,CAAsBxC,cAAtB,CAAqCwD,EAArC,EAAyCvtC,IAAzC;AACH,OA9CuB,EA8CrB,YAAY;AACX8b,QAAAA,KAAK,CAAC4wB,SAAN;AACH,OAhDuB,EAgDrB5wB,KAAK,CAACmwB,KAhDe,CAAxB,CAL4B,CAsD5B;AACA;;AACA,UAAIuB,SAAS,GAAG,EAAhB;AACAA,MAAAA,SAAS,CAAClD,6BAAD,CAAT,GAA2C,GAA3C;AACAkD,MAAAA,SAAS,CAAC5C,8BAAD,CAAT,GAA4ChqC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACkQ,MAAL,KAAgB,SAA3B,CAA5C;;AACA,UAAIgL,KAAK,CAAC6wB,eAAN,CAAsBc,wBAA1B,EAAoD;AAChDD,QAAAA,SAAS,CAAC3C,mCAAD,CAAT,GAAiD/uB,KAAK,CAAC6wB,eAAN,CAAsBc,wBAAvE;AACH;;AACDD,MAAAA,SAAS,CAACxkC,aAAD,CAAT,GAA2BD,gBAA3B;;AACA,UAAI+S,KAAK,CAAC4vB,kBAAV,EAA8B;AAC1B8B,QAAAA,SAAS,CAACvkC,uBAAD,CAAT,GAAqC6S,KAAK,CAAC4vB,kBAA3C;AACH;;AACD,UAAI5vB,KAAK,CAAC6vB,aAAV,EAAyB;AACrB6B,QAAAA,SAAS,CAACnkC,kBAAD,CAAT,GAAgCyS,KAAK,CAAC6vB,aAAtC;AACH;;AACD,UAAI7vB,KAAK,CAAC2vB,aAAV,EAAyB;AACrB+B,QAAAA,SAAS,CAAClkC,oBAAD,CAAT,GAAkCwS,KAAK,CAAC2vB,aAAxC;AACH;;AACD,UAAI,OAAO7rC,QAAP,KAAoB,WAApB,IACAA,QAAQ,CAAC8tC,QADT,IAEAtkC,eAAe,CAACrF,IAAhB,CAAqBnE,QAAQ,CAAC8tC,QAA9B,CAFJ,EAE6C;AACzCF,QAAAA,SAAS,CAACtkC,aAAD,CAAT,GAA2BC,SAA3B;AACH;;AACD,UAAIwkC,UAAU,GAAG7xB,KAAK,CAACmwB,KAAN,CAAYuB,SAAZ,CAAjB;;AACA1xB,MAAAA,KAAK,CAACiwB,IAAN,CAAW,iCAAiC4B,UAA5C;;AACA7xB,MAAAA,KAAK,CAAC6wB,eAAN,CAAsBiB,MAAtB,CAA6BD,UAA7B,EAAyC,YAAY;AACjD;AACH,OAFD;AAGH,KAlFkB,CAAnB;AAmFH,GAjGD;AAkGA;AACJ;AACA;;;AACIpC,EAAAA,qBAAqB,CAACvvC,SAAtB,CAAgC6xC,KAAhC,GAAwC,YAAY;AAChD,SAAKlB,eAAL,CAAqBmB,aAArB,CAAmC,KAAKrwC,EAAxC,EAA4C,KAAK4vC,QAAjD;AACA,SAAKU,sBAAL,CAA4B,KAAKtwC,EAAjC,EAAqC,KAAK4vC,QAA1C;AACH,GAHD;AAIA;AACJ;AACA;;;AACI9B,EAAAA,qBAAqB,CAACyC,UAAtB,GAAmC,YAAY;AAC3CzC,IAAAA,qBAAqB,CAAC0C,WAAtB,GAAoC,IAApC;AACH,GAFD;AAGA;AACJ;AACA;;;AACI1C,EAAAA,qBAAqB,CAAC2C,aAAtB,GAAsC,YAAY;AAC9C3C,IAAAA,qBAAqB,CAAC4C,cAAtB,GAAuC,IAAvC;AACH,GAFD,CA/ImD,CAkJnD;;;AACA5C,EAAAA,qBAAqB,CAAC6C,WAAtB,GAAoC,YAAY;AAC5C,QAAI9zC,SAAS,EAAb,EAAiB;AACb,aAAO,KAAP;AACH,KAFD,MAGK,IAAIixC,qBAAqB,CAAC0C,WAA1B,EAAuC;AACxC,aAAO,IAAP;AACH,KAFI,MAGA;AACD;AACA;AACA,aAAQ,CAAC1C,qBAAqB,CAAC4C,cAAvB,IACJ,OAAO7tC,QAAP,KAAoB,WADhB,IAEJA,QAAQ,CAAC+tC,aAAT,IAA0B,IAFtB,IAGJ,CAACvqC,8BAA8B,EAH3B,IAIJ,CAACG,iBAAiB,EAJtB;AAKH;AACJ,GAhBD;AAiBA;AACJ;AACA;;;AACIsnC,EAAAA,qBAAqB,CAACvvC,SAAtB,CAAgCsyC,qBAAhC,GAAwD,YAAY,CAAG,CAAvE;AACA;AACJ;AACA;;;AACI/C,EAAAA,qBAAqB,CAACvvC,SAAtB,CAAgCuyC,SAAhC,GAA4C,YAAY;AACpD,SAAK/B,SAAL,GAAiB,IAAjB;;AACA,QAAI,KAAKG,eAAT,EAA0B;AACtB,WAAKA,eAAL,CAAqB6B,KAArB;AACA,WAAK7B,eAAL,GAAuB,IAAvB;AACH,KALmD,CAMpD;;;AACA,QAAI,KAAK8B,cAAT,EAAyB;AACrBnuC,MAAAA,QAAQ,CAACI,IAAT,CAAcguC,WAAd,CAA0B,KAAKD,cAA/B;AACA,WAAKA,cAAL,GAAsB,IAAtB;AACH;;AACD,QAAI,KAAKhC,oBAAT,EAA+B;AAC3BW,MAAAA,YAAY,CAAC,KAAKX,oBAAN,CAAZ;AACA,WAAKA,oBAAL,GAA4B,IAA5B;AACH;AACJ,GAfD;AAgBA;AACJ;AACA;;;AACIlB,EAAAA,qBAAqB,CAACvvC,SAAtB,CAAgC0wC,SAAhC,GAA4C,YAAY;AACpD,QAAI,CAAC,KAAKF,SAAV,EAAqB;AACjB,WAAKT,IAAL,CAAU,4BAAV;AACA,WAAKwC,SAAL;;AACA,UAAI,KAAKjC,aAAT,EAAwB;AACpB,aAAKA,aAAL,CAAmB,KAAKR,cAAxB;AACA,aAAKQ,aAAL,GAAqB,IAArB;AACH;AACJ;AACJ,GATD;AAUA;AACJ;AACA;AACA;;;AACIf,EAAAA,qBAAqB,CAACvvC,SAAtB,CAAgCwyC,KAAhC,GAAwC,YAAY;AAChD,QAAI,CAAC,KAAKhC,SAAV,EAAqB;AACjB,WAAKT,IAAL,CAAU,2BAAV;AACA,WAAKwC,SAAL;AACH;AACJ,GALD;AAMA;AACJ;AACA;AACA;AACA;;;AACIhD,EAAAA,qBAAqB,CAACvvC,SAAtB,CAAgC2yC,IAAhC,GAAuC,UAAU3uC,IAAV,EAAgB;AACnD,QAAI4uC,OAAO,GAAG70C,SAAS,CAACiG,IAAD,CAAvB;AACA,SAAK4rC,SAAL,IAAkBgD,OAAO,CAACvwC,MAA1B;AACA,SAAK2tC,MAAL,CAAYrG,gBAAZ,CAA6B,YAA7B,EAA2CiJ,OAAO,CAACvwC,MAAnD,EAHmD,CAInD;;AACA,QAAIwwC,UAAU,GAAG3zC,YAAY,CAAC0zC,OAAD,CAA7B,CALmD,CAMnD;AACA;;AACA,QAAIzsC,QAAQ,GAAGH,iBAAiB,CAAC6sC,UAAD,EAAazD,gBAAb,CAAhC,CARmD,CASnD;AACA;;AACA,SAAK,IAAI7sC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4D,QAAQ,CAAC9D,MAA7B,EAAqCE,CAAC,EAAtC,EAA0C;AACtC,WAAKouC,eAAL,CAAqBmC,cAArB,CAAoC,KAAKzC,aAAzC,EAAwDlqC,QAAQ,CAAC9D,MAAjE,EAAyE8D,QAAQ,CAAC5D,CAAD,CAAjF;AACA,WAAK8tC,aAAL;AACH;AACJ,GAfD;AAgBA;AACJ;AACA;AACA;AACA;;;AACId,EAAAA,qBAAqB,CAACvvC,SAAtB,CAAgC+xC,sBAAhC,GAAyD,UAAUtwC,EAAV,EAAcsxC,EAAd,EAAkB;AACvE,QAAIz0C,SAAS,EAAb,EAAiB;AACb;AACH;;AACD,SAAKm0C,cAAL,GAAsBnuC,QAAQ,CAAC+tC,aAAT,CAAuB,QAAvB,CAAtB;AACA,QAAIb,SAAS,GAAG,EAAhB;AACAA,IAAAA,SAAS,CAACvC,6CAAD,CAAT,GAA2D,GAA3D;AACAuC,IAAAA,SAAS,CAAC9C,0BAAD,CAAT,GAAwCjtC,EAAxC;AACA+vC,IAAAA,SAAS,CAAC7C,0BAAD,CAAT,GAAwCoE,EAAxC;AACA,SAAKN,cAAL,CAAoBO,GAApB,GAA0B,KAAK/C,KAAL,CAAWuB,SAAX,CAA1B;AACA,SAAKiB,cAAL,CAAoBQ,KAApB,CAA0BC,OAA1B,GAAoC,MAApC;AACA5uC,IAAAA,QAAQ,CAACI,IAAT,CAAcyuC,WAAd,CAA0B,KAAKV,cAA/B;AACH,GAZD;AAaA;AACJ;AACA;;;AACIlD,EAAAA,qBAAqB,CAACvvC,SAAtB,CAAgCmxC,uBAAhC,GAA0D,UAAUN,IAAV,EAAgB;AACtE;AACA,QAAIhB,aAAa,GAAG9xC,SAAS,CAAC8yC,IAAD,CAAT,CAAgBxuC,MAApC;AACA,SAAKwtC,aAAL,IAAsBA,aAAtB;AACA,SAAKG,MAAL,CAAYrG,gBAAZ,CAA6B,gBAA7B,EAA+CkG,aAA/C;AACH,GALD;;AAMA,SAAON,qBAAP;AACH,CAnQ0C,EAA3C;AAoQA;AACA;AACA;;;AACA,IAAIqB,0BAA0B;AAAG;AAAe,YAAY;AACxD;AACJ;AACA;AACA;AACA;AACA;AACI,WAASA,0BAAT,CAAoCwC,SAApC,EAA+CC,WAA/C,EAA4DjD,YAA5D,EAA0EH,KAA1E,EAAiF;AAC7E,SAAKG,YAAL,GAAoBA,YAApB;AACA,SAAKH,KAAL,GAAaA,KAAb,CAF6E,CAG7E;AACA;;AACA,SAAKqD,mBAAL,GAA2B,IAAIC,GAAJ,EAA3B,CAL6E,CAM7E;;AACA,SAAKC,WAAL,GAAmB,EAAnB,CAP6E,CAQ7E;AACA;AACA;AACA;AACA;;AACA,SAAKC,aAAL,GAAqB7uC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACkQ,MAAL,KAAgB,SAA3B,CAArB,CAb6E,CAc7E;AACA;;AACA,SAAKw8B,YAAL,GAAoB,IAApB;;AACA,QAAI,CAAChzC,SAAS,EAAd,EAAkB;AACd;AACA;AACA;AACA;AACA,WAAKmzC,wBAAL,GAAgCjwC,aAAa,EAA7C;AACAN,MAAAA,MAAM,CAACstC,iCAAiC,GAAG,KAAKiD,wBAA1C,CAAN,GAA4E2B,SAA5E;AACAlyC,MAAAA,MAAM,CAACutC,8BAA8B,GAAG,KAAKgD,wBAAvC,CAAN,GAAyE4B,WAAzE,CAPc,CAQd;;AACA,WAAKK,QAAL,GAAgB9C,0BAA0B,CAAC+C,aAA3B,EAAhB,CATc,CAUd;;AACA,UAAIC,MAAM,GAAG,EAAb,CAXc,CAYd;AACA;;AACA,UAAI,KAAKF,QAAL,CAAcV,GAAd,IACA,KAAKU,QAAL,CAAcV,GAAd,CAAkBprC,MAAlB,CAAyB,CAAzB,EAA4B,cAAcvF,MAA1C,MAAsD,aAD1D,EACyE;AACrE,YAAIwxC,aAAa,GAAGvvC,QAAQ,CAAC2J,MAA7B;AACA2lC,QAAAA,MAAM,GAAG,8BAA8BC,aAA9B,GAA8C,aAAvD;AACH;;AACD,UAAIC,cAAc,GAAG,iBAAiBF,MAAjB,GAA0B,gBAA/C;;AACA,UAAI;AACA,aAAKF,QAAL,CAAcK,GAAd,CAAkB7D,IAAlB;AACA,aAAKwD,QAAL,CAAcK,GAAd,CAAkB3Q,KAAlB,CAAwB0Q,cAAxB;AACA,aAAKJ,QAAL,CAAcK,GAAd,CAAkBvB,KAAlB;AACH,OAJD,CAKA,OAAOpxC,CAAP,EAAU;AACN+B,QAAAA,GAAG,CAAC,yBAAD,CAAH;;AACA,YAAI/B,CAAC,CAAC4H,KAAN,EAAa;AACT7F,UAAAA,GAAG,CAAC/B,CAAC,CAAC4H,KAAH,CAAH;AACH;;AACD7F,QAAAA,GAAG,CAAC/B,CAAD,CAAH;AACH;AACJ,KAhCD,MAiCK;AACD,WAAKgyC,SAAL,GAAiBA,SAAjB;AACA,WAAKC,WAAL,GAAmBA,WAAnB;AACH;AACJ;AACD;AACJ;AACA;AACA;;;AACIzC,EAAAA,0BAA0B,CAAC+C,aAA3B,GAA2C,YAAY;AACnD,QAAIK,MAAM,GAAG1vC,QAAQ,CAAC+tC,aAAT,CAAuB,QAAvB,CAAb;AACA2B,IAAAA,MAAM,CAACf,KAAP,CAAaC,OAAb,GAAuB,MAAvB,CAFmD,CAGnD;;AACA,QAAI5uC,QAAQ,CAACI,IAAb,EAAmB;AACfJ,MAAAA,QAAQ,CAACI,IAAT,CAAcyuC,WAAd,CAA0Ba,MAA1B;;AACA,UAAI;AACA;AACA;AACA;AACA,YAAI7uC,CAAC,GAAG6uC,MAAM,CAACC,aAAP,CAAqB3vC,QAA7B;;AACA,YAAI,CAACa,CAAL,EAAQ;AACJ;AACAhC,UAAAA,GAAG,CAAC,+BAAD,CAAH;AACH;AACJ,OATD,CAUA,OAAO/B,CAAP,EAAU;AACN,YAAI6M,MAAM,GAAG3J,QAAQ,CAAC2J,MAAtB;AACA+lC,QAAAA,MAAM,CAAChB,GAAP,GACI,kEACI/kC,MADJ,GAEI,0BAHR;AAIH;AACJ,KAnBD,MAoBK;AACD;AACA;AACA,YAAM,mGAAN;AACH,KA5BkD,CA6BnD;;;AACA,QAAI+lC,MAAM,CAACE,eAAX,EAA4B;AACxBF,MAAAA,MAAM,CAACD,GAAP,GAAaC,MAAM,CAACE,eAApB,CADwB,CACa;AACxC,KAFD,MAGK,IAAIF,MAAM,CAACC,aAAX,EAA0B;AAC3BD,MAAAA,MAAM,CAACD,GAAP,GAAaC,MAAM,CAACC,aAAP,CAAqB3vC,QAAlC,CAD2B,CACiB;AAC5C;AACH,KAHI,MAIA,IAAI0vC,MAAM,CAAC1vC,QAAX,EAAqB;AACtB;AACA0vC,MAAAA,MAAM,CAACD,GAAP,GAAaC,MAAM,CAAC1vC,QAApB,CAFsB,CAEQ;AACjC;;AACD,WAAO0vC,MAAP;AACH,GA1CD;AA2CA;AACJ;AACA;;;AACIpD,EAAAA,0BAA0B,CAAC5wC,SAA3B,CAAqCwyC,KAArC,GAA6C,YAAY;AACrD,QAAI1yB,KAAK,GAAG,IAAZ,CADqD,CAErD;;;AACA,SAAKq0B,KAAL,GAAa,KAAb;;AACA,QAAI,KAAKT,QAAT,EAAmB;AACf;AACA;AACA;AACA,WAAKA,QAAL,CAAcK,GAAd,CAAkBrvC,IAAlB,CAAuB0vC,SAAvB,GAAmC,EAAnC;AACAzvC,MAAAA,UAAU,CAAC,YAAY;AACnB,YAAImb,KAAK,CAAC4zB,QAAN,KAAmB,IAAvB,EAA6B;AACzBpvC,UAAAA,QAAQ,CAACI,IAAT,CAAcguC,WAAd,CAA0B5yB,KAAK,CAAC4zB,QAAhC;AACA5zB,UAAAA,KAAK,CAAC4zB,QAAN,GAAiB,IAAjB;AACH;AACJ,OALS,EAKP9uC,IAAI,CAACC,KAAL,CAAW,CAAX,CALO,CAAV;AAMH,KAfoD,CAgBrD;;;AACA,QAAIurC,YAAY,GAAG,KAAKA,YAAxB;;AACA,QAAIA,YAAJ,EAAkB;AACd,WAAKA,YAAL,GAAoB,IAApB;AACAA,MAAAA,YAAY;AACf;AACJ,GAtBD;AAuBA;AACJ;AACA;AACA;AACA;;;AACIQ,EAAAA,0BAA0B,CAAC5wC,SAA3B,CAAqC8xC,aAArC,GAAqD,UAAUrwC,EAAV,EAAcsxC,EAAd,EAAkB;AACnE,SAAKsB,IAAL,GAAY5yC,EAAZ;AACA,SAAK6yC,IAAL,GAAYvB,EAAZ;AACA,SAAKoB,KAAL,GAAa,IAAb,CAHmE,CAInE;;AACA,WAAO,KAAKI,WAAL,EAAP,EAA2B,CAAG;AACjC,GAND;AAOA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACI3D,EAAAA,0BAA0B,CAAC5wC,SAA3B,CAAqCu0C,WAArC,GAAmD,YAAY;AAC3D;AACA;AACA;AACA,QAAI,KAAKJ,KAAL,IACA,KAAK7C,YADL,IAEA,KAAKgC,mBAAL,CAAyBxhB,IAAzB,IAAiC,KAAK0hB,WAAL,CAAiBnxC,MAAjB,GAA0B,CAA1B,GAA8B,CAA9B,GAAkC,CAAnE,CAFJ,EAE2E;AACvE;AACA,WAAKoxC,aAAL;AACA,UAAIjC,SAAS,GAAG,EAAhB;AACAA,MAAAA,SAAS,CAAC9C,0BAAD,CAAT,GAAwC,KAAK2F,IAA7C;AACA7C,MAAAA,SAAS,CAAC7C,0BAAD,CAAT,GAAwC,KAAK2F,IAA7C;AACA9C,MAAAA,SAAS,CAAC5C,8BAAD,CAAT,GAA4C,KAAK6E,aAAjD;AACA,UAAIe,MAAM,GAAG,KAAKvE,KAAL,CAAWuB,SAAX,CAAb,CAPuE,CAQvE;;AACA,UAAIiD,aAAa,GAAG,EAApB;AACA,UAAIlyC,CAAC,GAAG,CAAR;;AACA,aAAO,KAAKixC,WAAL,CAAiBnxC,MAAjB,GAA0B,CAAjC,EAAoC;AAChC;AACA,YAAIqyC,OAAO,GAAG,KAAKlB,WAAL,CAAiB,CAAjB,CAAd;;AACA,YAAIkB,OAAO,CAACC,CAAR,CAAUtyC,MAAV,GACA8sC,eADA,GAEAsF,aAAa,CAACpyC,MAFd,IAGA6sC,iBAHJ,EAGuB;AACnB;AACA,cAAI0F,MAAM,GAAG,KAAKpB,WAAL,CAAiBqB,KAAjB,EAAb;AACAJ,UAAAA,aAAa,GACTA,aAAa,GACT,GADJ,GAEI3F,mCAFJ,GAGIvsC,CAHJ,GAII,GAJJ,GAKIqyC,MAAM,CAACE,GALX,GAMI,GANJ,GAOI/F,oCAPJ,GAQIxsC,CARJ,GASI,GATJ,GAUIqyC,MAAM,CAACG,EAVX,GAWI,GAXJ,GAYI/F,4BAZJ,GAaIzsC,CAbJ,GAcI,GAdJ,GAeIqyC,MAAM,CAACD,CAhBf;AAiBApyC,UAAAA,CAAC;AACJ,SAxBD,MAyBK;AACD;AACH;AACJ;;AACDiyC,MAAAA,MAAM,GAAGA,MAAM,GAAGC,aAAlB;AACA,WAAKO,eAAL,CAAqBR,MAArB,EAA6B,KAAKf,aAAlC;AACA,aAAO,IAAP;AACH,KAhDD,MAiDK;AACD,aAAO,KAAP;AACH;AACJ,GAxDD;AAyDA;AACJ;AACA;AACA;AACA;AACA;;;AACI7C,EAAAA,0BAA0B,CAAC5wC,SAA3B,CAAqC8yC,cAArC,GAAsD,UAAUmC,MAAV,EAAkBC,SAAlB,EAA6BlxC,IAA7B,EAAmC;AACrF;AACA,SAAKwvC,WAAL,CAAiB1tC,IAAjB,CAAsB;AAAEgvC,MAAAA,GAAG,EAAEG,MAAP;AAAeF,MAAAA,EAAE,EAAEG,SAAnB;AAA8BP,MAAAA,CAAC,EAAE3wC;AAAjC,KAAtB,EAFqF,CAGrF;AACA;;AACA,QAAI,KAAKmwC,KAAT,EAAgB;AACZ,WAAKI,WAAL;AACH;AACJ,GARD;AASA;AACJ;AACA;AACA;AACA;;;AACI3D,EAAAA,0BAA0B,CAAC5wC,SAA3B,CAAqCg1C,eAArC,GAAuD,UAAUG,GAAV,EAAeC,MAAf,EAAuB;AAC1E,QAAIt1B,KAAK,GAAG,IAAZ,CAD0E,CAE1E;;;AACA,SAAKwzB,mBAAL,CAAyB+B,GAAzB,CAA6BD,MAA7B;;AACA,QAAIE,YAAY,GAAG,YAAY;AAC3Bx1B,MAAAA,KAAK,CAACwzB,mBAAN,CAA0BhhB,MAA1B,CAAiC8iB,MAAjC;;AACAt1B,MAAAA,KAAK,CAACy0B,WAAN;AACH,KAHD,CAJ0E,CAQ1E;AACA;;;AACA,QAAIgB,gBAAgB,GAAG5wC,UAAU,CAAC2wC,YAAD,EAAe1wC,IAAI,CAACC,KAAL,CAAWwqC,0BAAX,CAAf,CAAjC;;AACA,QAAImG,YAAY,GAAG,YAAY;AAC3B;AACApE,MAAAA,YAAY,CAACmE,gBAAD,CAAZ,CAF2B,CAG3B;;AACAD,MAAAA,YAAY;AACf,KALD;;AAMA,SAAK1D,MAAL,CAAYuD,GAAZ,EAAiBK,YAAjB;AACH,GAlBD;AAmBA;AACJ;AACA;AACA;AACA;;;AACI5E,EAAAA,0BAA0B,CAAC5wC,SAA3B,CAAqC4xC,MAArC,GAA8C,UAAUuD,GAAV,EAAeM,MAAf,EAAuB;AACjE,QAAI31B,KAAK,GAAG,IAAZ;;AACA,QAAIxhB,SAAS,EAAb,EAAiB;AACb;AACA,WAAKo3C,cAAL,CAAoBP,GAApB,EAAyBM,MAAzB;AACH,KAHD,MAIK;AACD9wC,MAAAA,UAAU,CAAC,YAAY;AACnB,YAAI;AACA;AACA,cAAI,CAACmb,KAAK,CAACwxB,YAAX,EAAyB;AACrB;AACH;;AACD,cAAIqE,WAAW,GAAG71B,KAAK,CAAC4zB,QAAN,CAAeK,GAAf,CAAmB1B,aAAnB,CAAiC,QAAjC,CAAlB;;AACAsD,UAAAA,WAAW,CAACjnC,IAAZ,GAAmB,iBAAnB;AACAinC,UAAAA,WAAW,CAACC,KAAZ,GAAoB,IAApB;AACAD,UAAAA,WAAW,CAAC3C,GAAZ,GAAkBmC,GAAlB,CARA,CASA;;AACAQ,UAAAA,WAAW,CAACE,MAAZ,GAAqBF,WAAW,CAACG,kBAAZ,GAAiC,YAAY;AAC9D;AACA,gBAAIC,MAAM,GAAGJ,WAAW,CAACpxC,UAAzB;;AACA,gBAAI,CAACwxC,MAAD,IAAWA,MAAM,KAAK,QAAtB,IAAkCA,MAAM,KAAK,UAAjD,EAA6D;AACzD;AACAJ,cAAAA,WAAW,CAACE,MAAZ,GAAqBF,WAAW,CAACG,kBAAZ,GAAiC,IAAtD;;AACA,kBAAIH,WAAW,CAACK,UAAhB,EAA4B;AACxBL,gBAAAA,WAAW,CAACK,UAAZ,CAAuBtD,WAAvB,CAAmCiD,WAAnC;AACH;;AACDF,cAAAA,MAAM;AACT;AACJ,WAXD;;AAYAE,UAAAA,WAAW,CAACM,OAAZ,GAAsB,YAAY;AAC9B9yC,YAAAA,GAAG,CAAC,sCAAsCgyC,GAAvC,CAAH;AACAr1B,YAAAA,KAAK,CAACwxB,YAAN,GAAqB,KAArB;;AACAxxB,YAAAA,KAAK,CAAC0yB,KAAN;AACH,WAJD;;AAKA1yB,UAAAA,KAAK,CAAC4zB,QAAN,CAAeK,GAAf,CAAmBrvC,IAAnB,CAAwByuC,WAAxB,CAAoCwC,WAApC;AACH,SA5BD,CA6BA,OAAOv0C,CAAP,EAAU,CACN;AACH;AACJ,OAjCS,EAiCPwD,IAAI,CAACC,KAAL,CAAW,CAAX,CAjCO,CAAV;AAkCH;AACJ,GA1CD;;AA2CA,SAAO+rC,0BAAP;AACH,CA3S+C,EAAhD;AA6SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA,IAAIsF,WAAW,GAAG,EAAlB,C,CACA;;AACA,SAASC,aAAT,CAAuBC,OAAvB,EAAgC;AAC5BF,EAAAA,WAAW,GAAGE,OAAd;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,wBAAwB,GAAG,KAA/B;AACA,IAAIC,4BAA4B,GAAG,KAAnC;AACA,IAAIC,aAAa,GAAG,IAApB;;AACA,IAAI,OAAOC,YAAP,KAAwB,WAA5B,EAAyC;AACrCD,EAAAA,aAAa,GAAGC,YAAhB;AACH,CAFD,MAGK,IAAI,OAAOC,SAAP,KAAqB,WAAzB,EAAsC;AACvCF,EAAAA,aAAa,GAAGE,SAAhB;AACH;AACD;AACA;AACA;;;AACA,IAAIC,mBAAmB;AAAG;AAAe,YAAY;AACjD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACI,WAASA,mBAAT,CAA6BlH,MAA7B,EAAqCh/B,QAArC,EAA+Ci/B,aAA/C,EAA8DC,kBAA9D,EAAkFC,aAAlF,EAAiG;AAC7F,SAAKH,MAAL,GAAcA,MAAd;AACA,SAAKC,aAAL,GAAqBA,aAArB;AACA,SAAKkH,cAAL,GAAsB,IAAtB;AACA,SAAKC,MAAL,GAAc,IAAd;AACA,SAAKC,WAAL,GAAmB,CAAnB;AACA,SAAKjH,SAAL,GAAiB,CAAjB;AACA,SAAKC,aAAL,GAAqB,CAArB;AACA,SAAKE,IAAL,GAAY1sC,UAAU,CAAC,KAAKmsC,MAAN,CAAtB;AACA,SAAKQ,MAAL,GAAcnG,YAAY,CAACC,aAAb,CAA2Bt5B,QAA3B,CAAd;AACA,SAAK5B,OAAL,GAAe8nC,mBAAmB,CAACI,cAApB,CAAmCtmC,QAAnC,EAA6Ck/B,kBAA7C,EAAiEC,aAAjE,CAAf;AACA,SAAK7hC,SAAL,GAAiB0C,QAAQ,CAAC1C,SAA1B;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACI4oC,EAAAA,mBAAmB,CAACI,cAApB,GAAqC,UAAUtmC,QAAV,EAAoBk/B,kBAApB,EAAwCC,aAAxC,EAAuD;AACxF,QAAI6B,SAAS,GAAG,EAAhB;AACAA,IAAAA,SAAS,CAACxkC,aAAD,CAAT,GAA2BD,gBAA3B;;AACA,QAAI,CAACzO,SAAS,EAAV,IACA,OAAOsF,QAAP,KAAoB,WADpB,IAEAA,QAAQ,CAAC8tC,QAFT,IAGAtkC,eAAe,CAACrF,IAAhB,CAAqBnE,QAAQ,CAAC8tC,QAA9B,CAHJ,EAG6C;AACzCF,MAAAA,SAAS,CAACtkC,aAAD,CAAT,GAA2BC,SAA3B;AACH;;AACD,QAAIuiC,kBAAJ,EAAwB;AACpB8B,MAAAA,SAAS,CAACvkC,uBAAD,CAAT,GAAqCyiC,kBAArC;AACH;;AACD,QAAIC,aAAJ,EAAmB;AACf6B,MAAAA,SAAS,CAACnkC,kBAAD,CAAT,GAAgCsiC,aAAhC;AACH;;AACD,WAAOn/B,QAAQ,CAAC/B,aAAT,CAAuBlB,SAAvB,EAAkCikC,SAAlC,CAAP;AACH,GAhBD;AAiBA;AACJ;AACA;AACA;;;AACIkF,EAAAA,mBAAmB,CAAC12C,SAApB,CAA8BkwC,IAA9B,GAAqC,UAAUC,SAAV,EAAqBC,YAArB,EAAmC;AACpE,QAAItwB,KAAK,GAAG,IAAZ;;AACA,SAAKswB,YAAL,GAAoBA,YAApB;AACA,SAAKD,SAAL,GAAiBA,SAAjB;AACA,SAAKJ,IAAL,CAAU,6BAA6B,KAAKnhC,OAA5C;AACA,SAAKkhC,cAAL,GAAsB,KAAtB,CALoE,CAMpE;;AACAzuC,IAAAA,iBAAiB,CAACpB,GAAlB,CAAsB,4BAAtB,EAAoD,IAApD;;AACA,QAAI;AACA,UAAI3B,SAAS,EAAb,EAAiB;AACb,YAAIy4C,MAAM,GAAG,KAAKjpC,SAAL,GAAiB,WAAjB,GAA+B,MAA5C,CADa,CAEb;;AACA,YAAIkpC,OAAO,GAAG;AACVC,UAAAA,OAAO,EAAE;AACL,0BAAc,cAAclqC,gBAAd,GAAiC,GAAjC,GAAuCmpC,WAAvC,GAAqD,GAArD,GAA2DgB,OAAO,CAACC,QAAnE,GAA8E,GAA9E,GAAoFJ,MAD7F;AAEL,gCAAoB,KAAKtH,aAAL,IAAsB;AAFrC;AADC,SAAd,CAHa,CASb;;AACA,YAAI2H,GAAG,GAAGF,OAAO,CAAC,KAAD,CAAjB;AACA,YAAIG,KAAK,GAAG,KAAKzoC,OAAL,CAAa9K,OAAb,CAAqB,QAArB,MAAmC,CAAnC,GACNszC,GAAG,CAAC,aAAD,CAAH,IAAsBA,GAAG,CAAC,aAAD,CADnB,GAENA,GAAG,CAAC,YAAD,CAAH,IAAqBA,GAAG,CAAC,YAAD,CAF9B;;AAGA,YAAIC,KAAJ,EAAW;AACPL,UAAAA,OAAO,CAAC,OAAD,CAAP,GAAmB;AAAEM,YAAAA,MAAM,EAAED;AAAV,WAAnB;AACH;;AACD,aAAKE,MAAL,GAAc,IAAIhB,aAAJ,CAAkB,KAAK3nC,OAAvB,EAAgC,EAAhC,EAAoCooC,OAApC,CAAd;AACH,OAlBD,MAmBK;AACD,YAAIA,OAAO,GAAG;AACVC,UAAAA,OAAO,EAAE;AACL,gCAAoB,KAAKxH,aAAL,IAAsB;AADrC;AADC,SAAd;AAKA,aAAK8H,MAAL,GAAc,IAAIhB,aAAJ,CAAkB,KAAK3nC,OAAvB,EAAgC,EAAhC,EAAoCooC,OAApC,CAAd;AACH;AACJ,KA5BD,CA6BA,OAAO51C,CAAP,EAAU;AACN,WAAK2uC,IAAL,CAAU,gCAAV;AACA,UAAIxsC,KAAK,GAAGnC,CAAC,CAACkB,OAAF,IAAalB,CAAC,CAAC4C,IAA3B;;AACA,UAAIT,KAAJ,EAAW;AACP,aAAKwsC,IAAL,CAAUxsC,KAAV;AACH;;AACD,WAAKmtC,SAAL;AACA;AACH;;AACD,SAAK6G,MAAL,CAAYC,MAAZ,GAAqB,YAAY;AAC7B13B,MAAAA,KAAK,CAACiwB,IAAN,CAAW,sBAAX;;AACAjwB,MAAAA,KAAK,CAACgwB,cAAN,GAAuB,IAAvB;AACH,KAHD;;AAIA,SAAKyH,MAAL,CAAYE,OAAZ,GAAsB,YAAY;AAC9B33B,MAAAA,KAAK,CAACiwB,IAAN,CAAW,wCAAX;;AACAjwB,MAAAA,KAAK,CAACy3B,MAAN,GAAe,IAAf;;AACAz3B,MAAAA,KAAK,CAAC4wB,SAAN;AACH,KAJD;;AAKA,SAAK6G,MAAL,CAAYG,SAAZ,GAAwB,UAAUC,CAAV,EAAa;AACjC73B,MAAAA,KAAK,CAAC83B,mBAAN,CAA0BD,CAA1B;AACH,KAFD;;AAGA,SAAKJ,MAAL,CAAYtB,OAAZ,GAAsB,UAAU70C,CAAV,EAAa;AAC/B0e,MAAAA,KAAK,CAACiwB,IAAN,CAAW,uCAAX,EAD+B,CAE/B;;;AACA,UAAIxsC,KAAK,GAAGnC,CAAC,CAACkB,OAAF,IAAalB,CAAC,CAAC4C,IAA3B;;AACA,UAAIT,KAAJ,EAAW;AACPuc,QAAAA,KAAK,CAACiwB,IAAN,CAAWxsC,KAAX;AACH;;AACDuc,MAAAA,KAAK,CAAC4wB,SAAN;AACH,KARD;AASH,GAnED;AAoEA;AACJ;AACA;;;AACIgG,EAAAA,mBAAmB,CAAC12C,SAApB,CAA8B6xC,KAA9B,GAAsC,YAAY,CAAG,CAArD;;AACA6E,EAAAA,mBAAmB,CAACxE,aAApB,GAAoC,YAAY;AAC5CwE,IAAAA,mBAAmB,CAACvE,cAApB,GAAqC,IAArC;AACH,GAFD;;AAGAuE,EAAAA,mBAAmB,CAACtE,WAApB,GAAkC,YAAY;AAC1C,QAAIyF,YAAY,GAAG,KAAnB;;AACA,QAAI,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAAS,CAAC5uC,SAAlD,EAA6D;AACzD,UAAI6uC,eAAe,GAAG,gCAAtB;AACA,UAAIC,eAAe,GAAGF,SAAS,CAAC5uC,SAAV,CAAoB+uC,KAApB,CAA0BF,eAA1B,CAAtB;;AACA,UAAIC,eAAe,IAAIA,eAAe,CAAC31C,MAAhB,GAAyB,CAAhD,EAAmD;AAC/C,YAAI61C,UAAU,CAACF,eAAe,CAAC,CAAD,CAAhB,CAAV,GAAiC,GAArC,EAA0C;AACtCH,UAAAA,YAAY,GAAG,IAAf;AACH;AACJ;AACJ;;AACD,WAAQ,CAACA,YAAD,IACJtB,aAAa,KAAK,IADd,IAEJ,CAACG,mBAAmB,CAACvE,cAFzB;AAGH,GAdD;AAeA;AACJ;AACA;;;AACIuE,EAAAA,mBAAmB,CAACyB,gBAApB,GAAuC,YAAY;AAC/C;AACA;AACA,WAAQ92C,iBAAiB,CAACN,iBAAlB,IACJM,iBAAiB,CAACd,GAAlB,CAAsB,4BAAtB,MAAwD,IAD5D;AAEH,GALD;;AAMAm2C,EAAAA,mBAAmB,CAAC12C,SAApB,CAA8BsyC,qBAA9B,GAAsD,YAAY;AAC9DjxC,IAAAA,iBAAiB,CAACX,MAAlB,CAAyB,4BAAzB;AACH,GAFD;;AAGAg2C,EAAAA,mBAAmB,CAAC12C,SAApB,CAA8Bo4C,YAA9B,GAA6C,UAAUp0C,IAAV,EAAgB;AACzD,SAAK4yC,MAAL,CAAY9wC,IAAZ,CAAiB9B,IAAjB;;AACA,QAAI,KAAK4yC,MAAL,CAAYv0C,MAAZ,KAAuB,KAAKw0C,WAAhC,EAA6C;AACzC,UAAIwB,QAAQ,GAAG,KAAKzB,MAAL,CAAYpvC,IAAZ,CAAiB,EAAjB,CAAf;AACA,WAAKovC,MAAL,GAAc,IAAd;AACA,UAAI0B,QAAQ,GAAGt6C,QAAQ,CAACq6C,QAAD,CAAvB,CAHyC,CAIzC;;AACA,WAAKlI,SAAL,CAAemI,QAAf;AACH;AACJ,GATD;AAUA;AACJ;AACA;;;AACI5B,EAAAA,mBAAmB,CAAC12C,SAApB,CAA8Bu4C,oBAA9B,GAAqD,UAAUC,UAAV,EAAsB;AACvE,SAAK3B,WAAL,GAAmB2B,UAAnB;AACA,SAAK5B,MAAL,GAAc,EAAd;AACH,GAHD;AAIA;AACJ;AACA;AACA;;;AACIF,EAAAA,mBAAmB,CAAC12C,SAApB,CAA8By4C,kBAA9B,GAAmD,UAAUz0C,IAAV,EAAgB;AAC/D9F,IAAAA,MAAM,CAAC,KAAK04C,MAAL,KAAgB,IAAjB,EAAuB,gCAAvB,CAAN,CAD+D,CAE/D;AACA;;AACA,QAAI5yC,IAAI,CAAC3B,MAAL,IAAe,CAAnB,EAAsB;AAClB,UAAIm2C,UAAU,GAAGv0C,MAAM,CAACD,IAAD,CAAvB;;AACA,UAAI,CAAC00C,KAAK,CAACF,UAAD,CAAV,EAAwB;AACpB,aAAKD,oBAAL,CAA0BC,UAA1B;AACA,eAAO,IAAP;AACH;AACJ;;AACD,SAAKD,oBAAL,CAA0B,CAA1B;AACA,WAAOv0C,IAAP;AACH,GAbD;AAcA;AACJ;AACA;AACA;;;AACI0yC,EAAAA,mBAAmB,CAAC12C,SAApB,CAA8B43C,mBAA9B,GAAoD,UAAUe,IAAV,EAAgB;AAChE,QAAI,KAAKpB,MAAL,KAAgB,IAApB,EAA0B;AACtB,aADsB,CACd;AACX;;AACD,QAAIvzC,IAAI,GAAG20C,IAAI,CAAC,MAAD,CAAf;AACA,SAAK9I,aAAL,IAAsB7rC,IAAI,CAAC3B,MAA3B;AACA,SAAK2tC,MAAL,CAAYrG,gBAAZ,CAA6B,gBAA7B,EAA+C3lC,IAAI,CAAC3B,MAApD;AACA,SAAKu2C,cAAL;;AACA,QAAI,KAAKhC,MAAL,KAAgB,IAApB,EAA0B;AACtB;AACA,WAAKwB,YAAL,CAAkBp0C,IAAlB;AACH,KAHD,MAIK;AACD;AACA,UAAI60C,aAAa,GAAG,KAAKJ,kBAAL,CAAwBz0C,IAAxB,CAApB;;AACA,UAAI60C,aAAa,KAAK,IAAtB,EAA4B;AACxB,aAAKT,YAAL,CAAkBS,aAAlB;AACH;AACJ;AACJ,GAnBD;AAoBA;AACJ;AACA;AACA;;;AACInC,EAAAA,mBAAmB,CAAC12C,SAApB,CAA8B2yC,IAA9B,GAAqC,UAAU3uC,IAAV,EAAgB;AACjD,SAAK40C,cAAL;AACA,QAAIhG,OAAO,GAAG70C,SAAS,CAACiG,IAAD,CAAvB;AACA,SAAK4rC,SAAL,IAAkBgD,OAAO,CAACvwC,MAA1B;AACA,SAAK2tC,MAAL,CAAYrG,gBAAZ,CAA6B,YAA7B,EAA2CiJ,OAAO,CAACvwC,MAAnD,EAJiD,CAKjD;AACA;;AACA,QAAI8D,QAAQ,GAAGH,iBAAiB,CAAC4sC,OAAD,EAAUyD,wBAAV,CAAhC,CAPiD,CAQjD;;AACA,QAAIlwC,QAAQ,CAAC9D,MAAT,GAAkB,CAAtB,EAAyB;AACrB,WAAKy2C,WAAL,CAAiBxuC,MAAM,CAACnE,QAAQ,CAAC9D,MAAV,CAAvB;AACH,KAXgD,CAYjD;;;AACA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4D,QAAQ,CAAC9D,MAA7B,EAAqCE,CAAC,EAAtC,EAA0C;AACtC,WAAKu2C,WAAL,CAAiB3yC,QAAQ,CAAC5D,CAAD,CAAzB;AACH;AACJ,GAhBD;;AAiBAm0C,EAAAA,mBAAmB,CAAC12C,SAApB,CAA8BuyC,SAA9B,GAA0C,YAAY;AAClD,SAAK/B,SAAL,GAAiB,IAAjB;;AACA,QAAI,KAAKmG,cAAT,EAAyB;AACrBoC,MAAAA,aAAa,CAAC,KAAKpC,cAAN,CAAb;AACA,WAAKA,cAAL,GAAsB,IAAtB;AACH;;AACD,QAAI,KAAKY,MAAT,EAAiB;AACb,WAAKA,MAAL,CAAY/E,KAAZ;AACA,WAAK+E,MAAL,GAAc,IAAd;AACH;AACJ,GAVD;;AAWAb,EAAAA,mBAAmB,CAAC12C,SAApB,CAA8B0wC,SAA9B,GAA0C,YAAY;AAClD,QAAI,CAAC,KAAKF,SAAV,EAAqB;AACjB,WAAKT,IAAL,CAAU,6BAAV;AACA,WAAKwC,SAAL,GAFiB,CAGjB;;AACA,UAAI,KAAKnC,YAAT,EAAuB;AACnB,aAAKA,YAAL,CAAkB,KAAKN,cAAvB;AACA,aAAKM,YAAL,GAAoB,IAApB;AACH;AACJ;AACJ,GAVD;AAWA;AACJ;AACA;AACA;;;AACIsG,EAAAA,mBAAmB,CAAC12C,SAApB,CAA8BwyC,KAA9B,GAAsC,YAAY;AAC9C,QAAI,CAAC,KAAKhC,SAAV,EAAqB;AACjB,WAAKT,IAAL,CAAU,2BAAV;AACA,WAAKwC,SAAL;AACH;AACJ,GALD;AAMA;AACJ;AACA;AACA;;;AACImE,EAAAA,mBAAmB,CAAC12C,SAApB,CAA8B44C,cAA9B,GAA+C,YAAY;AACvD,QAAI94B,KAAK,GAAG,IAAZ;;AACAi5B,IAAAA,aAAa,CAAC,KAAKpC,cAAN,CAAb;AACA,SAAKA,cAAL,GAAsBqC,WAAW,CAAC,YAAY;AAC1C;AACA,UAAIl5B,KAAK,CAACy3B,MAAV,EAAkB;AACdz3B,QAAAA,KAAK,CAACg5B,WAAN,CAAkB,GAAlB;AACH;;AACDh5B,MAAAA,KAAK,CAAC84B,cAAN,GAL0C,CAM1C;;AACH,KAPgC,EAO9Bh0C,IAAI,CAACC,KAAL,CAAWyxC,4BAAX,CAP8B,CAAjC;AAQH,GAXD;AAYA;AACJ;AACA;AACA;AACA;;;AACII,EAAAA,mBAAmB,CAAC12C,SAApB,CAA8B84C,WAA9B,GAA4C,UAAUn3C,GAAV,EAAe;AACvD;AACA;AACA;AACA,QAAI;AACA,WAAK41C,MAAL,CAAY5E,IAAZ,CAAiBhxC,GAAjB;AACH,KAFD,CAGA,OAAOP,CAAP,EAAU;AACN,WAAK2uC,IAAL,CAAU,yCAAV,EAAqD3uC,CAAC,CAACkB,OAAF,IAAalB,CAAC,CAAC4C,IAApE,EAA0E,qBAA1E;AACAW,MAAAA,UAAU,CAAC,KAAK+rC,SAAL,CAAettC,IAAf,CAAoB,IAApB,CAAD,EAA4B,CAA5B,CAAV;AACH;AACJ,GAXD;AAYA;AACJ;AACA;;;AACIszC,EAAAA,mBAAmB,CAACuC,4BAApB,GAAmD,CAAnD;AACA;AACJ;AACA;;AACIvC,EAAAA,mBAAmB,CAACwC,cAApB,GAAqC,KAArC;AACA,SAAOxC,mBAAP;AACH,CAlTwC,EAAzC;AAoTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIyC,gBAAgB;AAAG;AAAe,YAAY;AAC9C;AACJ;AACA;AACI,WAASA,gBAAT,CAA0B3oC,QAA1B,EAAoC;AAChC,SAAK4oC,eAAL,CAAqB5oC,QAArB;AACH;;AACDnE,EAAAA,MAAM,CAACC,cAAP,CAAsB6sC,gBAAtB,EAAwC,gBAAxC,EAA0D;AACtD54C,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,CAACgvC,qBAAD,EAAwBmH,mBAAxB,CAAP;AACH,KAHqD;AAItDnqC,IAAAA,UAAU,EAAE,KAJ0C;AAKtDC,IAAAA,YAAY,EAAE;AALwC,GAA1D;;AAOA2sC,EAAAA,gBAAgB,CAACn5C,SAAjB,CAA2Bo5C,eAA3B,GAA6C,UAAU5oC,QAAV,EAAoB;AAC7D,QAAIlB,GAAJ,EAASC,EAAT;;AACA,QAAI8pC,qBAAqB,GAAG3C,mBAAmB,IAAIA,mBAAmB,CAAC,aAAD,CAAnB,EAAnD;AACA,QAAI4C,oBAAoB,GAAGD,qBAAqB,IAAI,CAAC3C,mBAAmB,CAACyB,gBAApB,EAArD;;AACA,QAAI3nC,QAAQ,CAAC3C,aAAb,EAA4B;AACxB,UAAI,CAACwrC,qBAAL,EAA4B;AACxB31C,QAAAA,IAAI,CAAC,iFAAD,CAAJ;AACH;;AACD41C,MAAAA,oBAAoB,GAAG,IAAvB;AACH;;AACD,QAAIA,oBAAJ,EAA0B;AACtB,WAAKC,WAAL,GAAmB,CAAC7C,mBAAD,CAAnB;AACH,KAFD,MAGK;AACD,UAAI8C,UAAU,GAAI,KAAKD,WAAL,GAAmB,EAArC;;AACA,UAAI;AACA,aAAK,IAAI7pC,EAAE,GAAGjS,QAAQ,CAAC07C,gBAAgB,CAACM,cAAlB,CAAjB,EAAoD9pC,EAAE,GAAGD,EAAE,CAACE,IAAH,EAA9D,EAAyE,CAACD,EAAE,CAACE,IAA7E,EAAmFF,EAAE,GAAGD,EAAE,CAACE,IAAH,EAAxF,EAAmG;AAC/F,cAAI8pC,SAAS,GAAG/pC,EAAE,CAACxP,KAAnB;;AACA,cAAIu5C,SAAS,IAAIA,SAAS,CAAC,aAAD,CAAT,EAAjB,EAA6C;AACzCF,YAAAA,UAAU,CAAC1zC,IAAX,CAAgB4zC,SAAhB;AACH;AACJ;AACJ,OAPD,CAQA,OAAO1pC,KAAP,EAAc;AAAEV,QAAAA,GAAG,GAAG;AAAE/L,UAAAA,KAAK,EAAEyM;AAAT,SAAN;AAAyB,OARzC,SASQ;AACJ,YAAI;AACA,cAAIL,EAAE,IAAI,CAACA,EAAE,CAACE,IAAV,KAAmBN,EAAE,GAAGG,EAAE,CAACO,MAA3B,CAAJ,EAAwCV,EAAE,CAACW,IAAH,CAAQR,EAAR;AAC3C,SAFD,SAGQ;AAAE,cAAIJ,GAAJ,EAAS,MAAMA,GAAG,CAAC/L,KAAV;AAAkB;AACxC;AACJ;AACJ,GA/BD;AAgCA;AACJ;AACA;;;AACI41C,EAAAA,gBAAgB,CAACn5C,SAAjB,CAA2B25C,gBAA3B,GAA8C,YAAY;AACtD,QAAI,KAAKJ,WAAL,CAAiBl3C,MAAjB,GAA0B,CAA9B,EAAiC;AAC7B,aAAO,KAAKk3C,WAAL,CAAiB,CAAjB,CAAP;AACH,KAFD,MAGK;AACD,YAAM,IAAI91C,KAAJ,CAAU,yBAAV,CAAN;AACH;AACJ,GAPD;AAQA;AACJ;AACA;;;AACI01C,EAAAA,gBAAgB,CAACn5C,SAAjB,CAA2B45C,gBAA3B,GAA8C,YAAY;AACtD,QAAI,KAAKL,WAAL,CAAiBl3C,MAAjB,GAA0B,CAA9B,EAAiC;AAC7B,aAAO,KAAKk3C,WAAL,CAAiB,CAAjB,CAAP;AACH,KAFD,MAGK;AACD,aAAO,IAAP;AACH;AACJ,GAPD;;AAQA,SAAOJ,gBAAP;AACH,CArEqC,EAAtC;AAuEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIU,eAAe,GAAG,KAAtB,C,CACA;AACA;;AACA,IAAIC,mCAAmC,GAAG,IAA1C,C,CACA;AACA;AACA;;AACA,IAAIC,2BAA2B,GAAG,KAAK,IAAvC;AACA,IAAIC,+BAA+B,GAAG,MAAM,IAA5C;AACA,IAAIC,YAAY,GAAG,GAAnB;AACA,IAAIC,YAAY,GAAG,GAAnB;AACA,IAAIC,gBAAgB,GAAG,GAAvB;AACA,IAAIC,aAAa,GAAG,GAApB;AACA,IAAIC,aAAa,GAAG,GAApB;AACA,IAAIC,YAAY,GAAG,GAAnB;AACA,IAAIC,UAAU,GAAG,GAAjB;AACA,IAAIC,gBAAgB,GAAG,GAAvB;AACA,IAAIC,IAAI,GAAG,GAAX;AACA,IAAIC,YAAY,GAAG,GAAnB;AACA;AACA;AACA;AACA;;AACA,IAAIC,UAAU;AAAG;AAAe,YAAY;AACxC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,WAASA,UAAT,CAAoBl5C,EAApB,EAAwBm5C,SAAxB,EAAmCC,cAAnC,EAAmDrN,UAAnD,EAA+DsN,QAA/D,EAAyExK,aAAzE,EAAwFyK,OAAxF,EAAiGpL,aAAjG,EAAgH;AAC5G,SAAKluC,EAAL,GAAUA,EAAV;AACA,SAAKm5C,SAAL,GAAiBA,SAAjB;AACA,SAAKC,cAAL,GAAsBA,cAAtB;AACA,SAAKrN,UAAL,GAAkBA,UAAlB;AACA,SAAKsN,QAAL,GAAgBA,QAAhB;AACA,SAAKxK,aAAL,GAAqBA,aAArB;AACA,SAAKyK,OAAL,GAAeA,OAAf;AACA,SAAKpL,aAAL,GAAqBA,aAArB;AACA,SAAKqL,eAAL,GAAuB,CAAvB;AACA,SAAKC,mBAAL,GAA2B,EAA3B;AACA,SAAKC,MAAL,GAAc;AAAE;AAAhB;AACA,SAAKnL,IAAL,GAAY1sC,UAAU,CAAC,OAAO,KAAK5B,EAAZ,GAAiB,GAAlB,CAAtB;AACA,SAAK05C,iBAAL,GAAyB,IAAIhC,gBAAJ,CAAqByB,SAArB,CAAzB;AACA,SAAK7K,IAAL,CAAU,oBAAV;AACA,SAAKqL,MAAL;AACH;AACD;AACJ;AACA;;;AACIT,EAAAA,UAAU,CAAC36C,SAAX,CAAqBo7C,MAArB,GAA8B,YAAY;AACtC,QAAIt7B,KAAK,GAAG,IAAZ;;AACA,QAAIu7B,IAAI,GAAG,KAAKF,iBAAL,CAAuBxB,gBAAvB,EAAX;AACA,SAAK2B,KAAL,GAAa,IAAID,IAAJ,CAAS,KAAKE,gBAAL,EAAT,EAAkC,KAAKX,SAAvC,EAAkD,KAAKC,cAAvD,EAAuEhpC,SAAvE,EAAkF,KAAK89B,aAAvF,CAAb,CAHsC,CAItC;AACA;;AACA,SAAK6L,yBAAL,GAAiCH,IAAI,CAAC,8BAAD,CAAJ,IAAwC,CAAzE;AACA,QAAII,iBAAiB,GAAG,KAAKC,aAAL,CAAmB,KAAKJ,KAAxB,CAAxB;AACA,QAAIK,gBAAgB,GAAG,KAAKC,gBAAL,CAAsB,KAAKN,KAA3B,CAAvB;AACA,SAAKO,GAAL,GAAW,KAAKP,KAAhB;AACA,SAAKQ,GAAL,GAAW,KAAKR,KAAhB;AACA,SAAKS,cAAL,GAAsB,IAAtB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA;AACR;AACA;AACA;AACA;AACA;;AACQr3C,IAAAA,UAAU,CAAC,YAAY;AACnB;AACAmb,MAAAA,KAAK,CAACw7B,KAAN,IAAex7B,KAAK,CAACw7B,KAAN,CAAYpL,IAAZ,CAAiBuL,iBAAjB,EAAoCE,gBAApC,CAAf;AACH,KAHS,EAGP/2C,IAAI,CAACC,KAAL,CAAW,CAAX,CAHO,CAAV;AAIA,QAAIo3C,gBAAgB,GAAGZ,IAAI,CAAC,gBAAD,CAAJ,IAA0B,CAAjD;;AACA,QAAIY,gBAAgB,GAAG,CAAvB,EAA0B;AACtB,WAAKC,eAAL,GAAuB9yC,qBAAqB,CAAC,YAAY;AACrD0W,QAAAA,KAAK,CAACo8B,eAAN,GAAwB,IAAxB;;AACA,YAAI,CAACp8B,KAAK,CAACk8B,UAAX,EAAuB;AACnB,cAAIl8B,KAAK,CAACw7B,KAAN,IACAx7B,KAAK,CAACw7B,KAAN,CAAYzL,aAAZ,GAA4BmK,+BADhC,EACiE;AAC7Dl6B,YAAAA,KAAK,CAACiwB,IAAN,CAAW,0DACPjwB,KAAK,CAACw7B,KAAN,CAAYzL,aADL,GAEP,sCAFJ;;AAGA/vB,YAAAA,KAAK,CAACk8B,UAAN,GAAmB,IAAnB;;AACAl8B,YAAAA,KAAK,CAACw7B,KAAN,CAAYhJ,qBAAZ;AACH,WAPD,MAQK,IAAIxyB,KAAK,CAACw7B,KAAN,IACLx7B,KAAK,CAACw7B,KAAN,CAAY1L,SAAZ,GAAwBmK,2BADvB,EACoD;AACrDj6B,YAAAA,KAAK,CAACiwB,IAAN,CAAW,sDACPjwB,KAAK,CAACw7B,KAAN,CAAY1L,SADL,GAEP,oCAFJ,EADqD,CAIrD;AACA;;AACH,WAPI,MAQA;AACD9vB,YAAAA,KAAK,CAACiwB,IAAN,CAAW,6CAAX;;AACAjwB,YAAAA,KAAK,CAAC0yB,KAAN;AACH;AACJ,SAvBoD,CAwBrD;;AACH,OAzB2C,EAyBzC5tC,IAAI,CAACC,KAAL,CAAWo3C,gBAAX,CAzByC,CAA5C;AA0BH;AACJ,GApDD;;AAqDAtB,EAAAA,UAAU,CAAC36C,SAAX,CAAqBu7C,gBAArB,GAAwC,YAAY;AAChD,WAAO,OAAO,KAAK95C,EAAZ,GAAiB,GAAjB,GAAuB,KAAKu5C,eAAL,EAA9B;AACH,GAFD;;AAGAL,EAAAA,UAAU,CAAC36C,SAAX,CAAqB47C,gBAArB,GAAwC,UAAUP,IAAV,EAAgB;AACpD,QAAIv7B,KAAK,GAAG,IAAZ;;AACA,WAAO,UAAUq8B,aAAV,EAAyB;AAC5B,UAAId,IAAI,KAAKv7B,KAAK,CAACw7B,KAAnB,EAA0B;AACtBx7B,QAAAA,KAAK,CAACs8B,iBAAN,CAAwBD,aAAxB;AACH,OAFD,MAGK,IAAId,IAAI,KAAKv7B,KAAK,CAACi8B,cAAnB,EAAmC;AACpCj8B,QAAAA,KAAK,CAACiwB,IAAN,CAAW,4BAAX;;AACAjwB,QAAAA,KAAK,CAACu8B,0BAAN;AACH,OAHI,MAIA;AACDv8B,QAAAA,KAAK,CAACiwB,IAAN,CAAW,2BAAX;AACH;AACJ,KAXD;AAYH,GAdD;;AAeA4K,EAAAA,UAAU,CAAC36C,SAAX,CAAqB07C,aAArB,GAAqC,UAAUL,IAAV,EAAgB;AACjD,QAAIv7B,KAAK,GAAG,IAAZ;;AACA,WAAO,UAAUxd,OAAV,EAAmB;AACtB,UAAIwd,KAAK,CAACo7B,MAAN,KAAiB;AAAE;AAAvB,QAA2C;AACvC,cAAIG,IAAI,KAAKv7B,KAAK,CAACg8B,GAAnB,EAAwB;AACpBh8B,YAAAA,KAAK,CAACw8B,yBAAN,CAAgCh6C,OAAhC;AACH,WAFD,MAGK,IAAI+4C,IAAI,KAAKv7B,KAAK,CAACi8B,cAAnB,EAAmC;AACpCj8B,YAAAA,KAAK,CAACy8B,2BAAN,CAAkCj6C,OAAlC;AACH,WAFI,MAGA;AACDwd,YAAAA,KAAK,CAACiwB,IAAN,CAAW,2BAAX;AACH;AACJ;AACJ,KAZD;AAaH,GAfD;AAgBA;AACJ;AACA;;;AACI4K,EAAAA,UAAU,CAAC36C,SAAX,CAAqBw8C,WAArB,GAAmC,UAAUC,OAAV,EAAmB;AAClD;AACA,QAAIC,GAAG,GAAG;AAAEC,MAAAA,CAAC,EAAE,GAAL;AAAUhI,MAAAA,CAAC,EAAE8H;AAAb,KAAV;AACA,SAAKG,SAAL,CAAeF,GAAf;AACH,GAJD;;AAKA/B,EAAAA,UAAU,CAAC36C,SAAX,CAAqB68C,oBAArB,GAA4C,YAAY;AACpD,QAAI,KAAKhB,GAAL,KAAa,KAAKE,cAAlB,IAAoC,KAAKD,GAAL,KAAa,KAAKC,cAA1D,EAA0E;AACtE,WAAKhM,IAAL,CAAU,6CAA6C,KAAKgM,cAAL,CAAoBvM,MAA3E;AACA,WAAK8L,KAAL,GAAa,KAAKS,cAAlB;AACA,WAAKA,cAAL,GAAsB,IAAtB,CAHsE,CAItE;AACH;AACJ,GAPD;;AAQApB,EAAAA,UAAU,CAAC36C,SAAX,CAAqB88C,mBAArB,GAA2C,UAAUC,WAAV,EAAuB;AAC9D,QAAI9C,YAAY,IAAI8C,WAApB,EAAiC;AAC7B,UAAIC,GAAG,GAAGD,WAAW,CAAC9C,YAAD,CAArB;;AACA,UAAI+C,GAAG,KAAKzC,UAAZ,EAAwB;AACpB,aAAK0C,0BAAL;AACH,OAFD,MAGK,IAAID,GAAG,KAAK5C,aAAZ,EAA2B;AAC5B;AACA,aAAKrK,IAAL,CAAU,sCAAV;AACA,aAAKgM,cAAL,CAAoBvJ,KAApB,GAH4B,CAI5B;;AACA,YAAI,KAAKqJ,GAAL,KAAa,KAAKE,cAAlB,IACA,KAAKD,GAAL,KAAa,KAAKC,cADtB,EACsC;AAClC,eAAKvJ,KAAL;AACH;AACJ,OATI,MAUA,IAAIwK,GAAG,KAAK1C,YAAZ,EAA0B;AAC3B,aAAKvK,IAAL,CAAU,wBAAV;AACA,aAAKmN,2BAAL;AACA,aAAKD,0BAAL;AACH;AACJ;AACJ,GAtBD;;AAuBAtC,EAAAA,UAAU,CAAC36C,SAAX,CAAqBu8C,2BAArB,GAAmD,UAAUY,UAAV,EAAsB;AACrE,QAAIC,KAAK,GAAG33C,UAAU,CAAC,GAAD,EAAM03C,UAAN,CAAtB;AACA,QAAIn5C,IAAI,GAAGyB,UAAU,CAAC,GAAD,EAAM03C,UAAN,CAArB;;AACA,QAAIC,KAAK,KAAK,GAAd,EAAmB;AACf,WAAKN,mBAAL,CAAyB94C,IAAzB;AACH,KAFD,MAGK,IAAIo5C,KAAK,KAAK,GAAd,EAAmB;AACpB;AACA,WAAKnC,mBAAL,CAAyBn1C,IAAzB,CAA8B9B,IAA9B;AACH,KAHI,MAIA;AACD,YAAM,IAAIP,KAAJ,CAAU,6BAA6B25C,KAAvC,CAAN;AACH;AACJ,GAbD;;AAcAzC,EAAAA,UAAU,CAAC36C,SAAX,CAAqBi9C,0BAArB,GAAkD,YAAY;AAC1D,QAAI,KAAKC,2BAAL,IAAoC,CAAxC,EAA2C;AACvC,WAAKnN,IAAL,CAAU,kCAAV;AACA,WAAKiM,UAAL,GAAkB,IAAlB;AACA,WAAKD,cAAL,CAAoBzJ,qBAApB;AACA,WAAK+K,mBAAL;AACH,KALD,MAMK;AACD;AACA,WAAKtN,IAAL,CAAU,4BAAV;AACA,WAAKgM,cAAL,CAAoBpJ,IAApB,CAAyB;AAAEgK,QAAAA,CAAC,EAAE,GAAL;AAAUhI,QAAAA,CAAC,EAAE;AAAEgI,UAAAA,CAAC,EAAElC,IAAL;AAAW9F,UAAAA,CAAC,EAAE;AAAd;AAAb,OAAzB;AACH;AACJ,GAZD;;AAaAgG,EAAAA,UAAU,CAAC36C,SAAX,CAAqBq9C,mBAArB,GAA2C,YAAY;AACnD;AACA,SAAKtB,cAAL,CAAoBlK,KAApB,GAFmD,CAGnD;;AACA,SAAK9B,IAAL,CAAU,iCAAV;AACA,SAAKgM,cAAL,CAAoBpJ,IAApB,CAAyB;AAAEgK,MAAAA,CAAC,EAAE,GAAL;AAAUhI,MAAAA,CAAC,EAAE;AAAEgI,QAAAA,CAAC,EAAEpC,UAAL;AAAiB5F,QAAAA,CAAC,EAAE;AAApB;AAAb,KAAzB,EALmD,CAMnD;AACA;;AACA,SAAK5E,IAAL,CAAU,gCAAV;AACA,SAAKuL,KAAL,CAAW3I,IAAX,CAAgB;AAAEgK,MAAAA,CAAC,EAAE,GAAL;AAAUhI,MAAAA,CAAC,EAAE;AAAEgI,QAAAA,CAAC,EAAEnC,gBAAL;AAAuB7F,QAAAA,CAAC,EAAE;AAA1B;AAAb,KAAhB;AACA,SAAKkH,GAAL,GAAW,KAAKE,cAAhB;AACA,SAAKc,oBAAL;AACH,GAZD;;AAaAlC,EAAAA,UAAU,CAAC36C,SAAX,CAAqBs8C,yBAArB,GAAiD,UAAUa,UAAV,EAAsB;AACnE;AACA,QAAIC,KAAK,GAAG33C,UAAU,CAAC,GAAD,EAAM03C,UAAN,CAAtB;AACA,QAAIn5C,IAAI,GAAGyB,UAAU,CAAC,GAAD,EAAM03C,UAAN,CAArB;;AACA,QAAIC,KAAK,KAAK,GAAd,EAAmB;AACf,WAAKE,UAAL,CAAgBt5C,IAAhB;AACH,KAFD,MAGK,IAAIo5C,KAAK,KAAK,GAAd,EAAmB;AACpB,WAAKG,cAAL,CAAoBv5C,IAApB;AACH;AACJ,GAVD;;AAWA22C,EAAAA,UAAU,CAAC36C,SAAX,CAAqBu9C,cAArB,GAAsC,UAAUj7C,OAAV,EAAmB;AACrD,SAAKk7C,kBAAL,GADqD,CAErD;;AACA,SAAKhQ,UAAL,CAAgBlrC,OAAhB;AACH,GAJD;;AAKAq4C,EAAAA,UAAU,CAAC36C,SAAX,CAAqBw9C,kBAArB,GAA0C,YAAY;AAClD,QAAI,CAAC,KAAKxB,UAAV,EAAsB;AAClB,WAAKR,yBAAL;;AACA,UAAI,KAAKA,yBAAL,IAAkC,CAAtC,EAAyC;AACrC,aAAKzL,IAAL,CAAU,gCAAV;AACA,aAAKiM,UAAL,GAAkB,IAAlB;AACA,aAAKV,KAAL,CAAWhJ,qBAAX;AACH;AACJ;AACJ,GATD;;AAUAqI,EAAAA,UAAU,CAAC36C,SAAX,CAAqBs9C,UAArB,GAAkC,UAAUP,WAAV,EAAuB;AACrD,QAAIC,GAAG,GAAGv3C,UAAU,CAACw0C,YAAD,EAAe8C,WAAf,CAApB;;AACA,QAAI7C,YAAY,IAAI6C,WAApB,EAAiC;AAC7B,UAAIU,OAAO,GAAGV,WAAW,CAAC7C,YAAD,CAAzB;;AACA,UAAI8C,GAAG,KAAKtC,YAAZ,EAA0B;AACtB,aAAKgD,YAAL,CAAkBD,OAAlB;AACH,OAFD,MAGK,IAAIT,GAAG,KAAKxC,gBAAZ,EAA8B;AAC/B,aAAKzK,IAAL,CAAU,mCAAV;AACA,aAAK+L,GAAL,GAAW,KAAKC,cAAhB;;AACA,aAAK,IAAIx5C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK04C,mBAAL,CAAyB54C,MAA7C,EAAqD,EAAEE,CAAvD,EAA0D;AACtD,eAAKg7C,cAAL,CAAoB,KAAKtC,mBAAL,CAAyB14C,CAAzB,CAApB;AACH;;AACD,aAAK04C,mBAAL,GAA2B,EAA3B;AACA,aAAK4B,oBAAL;AACH,OARI,MASA,IAAIG,GAAG,KAAK7C,gBAAZ,EAA8B;AAC/B;AACA;AACA,aAAKwD,qBAAL,CAA2BF,OAA3B;AACH,OAJI,MAKA,IAAIT,GAAG,KAAK5C,aAAZ,EAA2B;AAC5B;AACA,aAAKwD,QAAL,CAAcH,OAAd;AACH,OAHI,MAIA,IAAIT,GAAG,KAAK3C,aAAZ,EAA2B;AAC5B92C,QAAAA,KAAK,CAAC,mBAAmBk6C,OAApB,CAAL;AACH,OAFI,MAGA,IAAIT,GAAG,KAAK1C,YAAZ,EAA0B;AAC3B,aAAKvK,IAAL,CAAU,sBAAV;AACA,aAAKyN,kBAAL;AACA,aAAKK,6BAAL;AACH,OAJI,MAKA;AACDt6C,QAAAA,KAAK,CAAC,qCAAqCy5C,GAAtC,CAAL;AACH;AACJ;AACJ,GArCD;AAsCA;AACJ;AACA;;;AACIrC,EAAAA,UAAU,CAAC36C,SAAX,CAAqB09C,YAArB,GAAoC,UAAUI,SAAV,EAAqB;AACrD,QAAIC,SAAS,GAAGD,SAAS,CAAC/I,EAA1B;AACA,QAAIqB,OAAO,GAAG0H,SAAS,CAACr3C,CAAxB;AACA,QAAIiH,IAAI,GAAGowC,SAAS,CAACE,CAArB;AACA,SAAKC,SAAL,GAAiBH,SAAS,CAACj3C,CAA3B;AACA,SAAK+zC,SAAL,CAAersC,UAAf,CAA0Bb,IAA1B,EALqD,CAMrD;;AACA,QAAI,KAAKwtC,MAAL,KAAgB;AAAE;AAAtB,MAAwC;AACpC,aAAKI,KAAL,CAAWzJ,KAAX;AACA,aAAKqM,wBAAL,CAA8B,KAAK5C,KAAnC,EAA0CyC,SAA1C;;AACA,YAAIhxC,gBAAgB,KAAKqpC,OAAzB,EAAkC;AAC9B1yC,UAAAA,IAAI,CAAC,oCAAD,CAAJ;AACH,SALmC,CAMpC;;;AACA,aAAKy6C,gBAAL;AACH;AACJ,GAhBD;;AAiBAxD,EAAAA,UAAU,CAAC36C,SAAX,CAAqBm+C,gBAArB,GAAwC,YAAY;AAChD,QAAI9C,IAAI,GAAG,KAAKF,iBAAL,CAAuBvB,gBAAvB,EAAX;;AACA,QAAIyB,IAAJ,EAAU;AACN,WAAK+C,aAAL,CAAmB/C,IAAnB;AACH;AACJ,GALD;;AAMAV,EAAAA,UAAU,CAAC36C,SAAX,CAAqBo+C,aAArB,GAAqC,UAAU/C,IAAV,EAAgB;AACjD,QAAIv7B,KAAK,GAAG,IAAZ;;AACA,SAAKi8B,cAAL,GAAsB,IAAIV,IAAJ,CAAS,KAAKE,gBAAL,EAAT,EAAkC,KAAKX,SAAvC,EAAkD,KAAKC,cAAvD,EAAuE,KAAKoD,SAA5E,CAAtB,CAFiD,CAGjD;AACA;;AACA,SAAKf,2BAAL,GACI7B,IAAI,CAAC,8BAAD,CAAJ,IAAwC,CAD5C;AAEA,QAAIlL,SAAS,GAAG,KAAKuL,aAAL,CAAmB,KAAKK,cAAxB,CAAhB;AACA,QAAI3L,YAAY,GAAG,KAAKwL,gBAAL,CAAsB,KAAKG,cAA3B,CAAnB;AACA,SAAKA,cAAL,CAAoB7L,IAApB,CAAyBC,SAAzB,EAAoCC,YAApC,EATiD,CAUjD;;AACAhnC,IAAAA,qBAAqB,CAAC,YAAY;AAC9B,UAAI0W,KAAK,CAACi8B,cAAV,EAA0B;AACtBj8B,QAAAA,KAAK,CAACiwB,IAAN,CAAW,8BAAX;;AACAjwB,QAAAA,KAAK,CAACi8B,cAAN,CAAqBvJ,KAArB;AACH;AACJ,KALoB,EAKlB5tC,IAAI,CAACC,KAAL,CAAWg1C,eAAX,CALkB,CAArB;AAMH,GAjBD;;AAkBAc,EAAAA,UAAU,CAAC36C,SAAX,CAAqB49C,QAArB,GAAgC,UAAUlwC,IAAV,EAAgB;AAC5C,SAAKqiC,IAAL,CAAU,uCAAuCriC,IAAjD;AACA,SAAKktC,SAAL,CAAersC,UAAf,CAA0Bb,IAA1B,EAF4C,CAG5C;AACA;;AACA,QAAI,KAAKwtC,MAAL,KAAgB;AAAE;AAAtB,MAAuC;AACnC,aAAK1I,KAAL;AACH,OAFD,MAGK;AACD;AACA,WAAK6L,iBAAL;AACA,WAAKjD,MAAL;AACH;AACJ,GAbD;;AAcAT,EAAAA,UAAU,CAAC36C,SAAX,CAAqBk+C,wBAArB,GAAgD,UAAU7C,IAAV,EAAgB0C,SAAhB,EAA2B;AACvE,QAAIj+B,KAAK,GAAG,IAAZ;;AACA,SAAKiwB,IAAL,CAAU,kCAAV;AACA,SAAKuL,KAAL,GAAaD,IAAb;AACA,SAAKH,MAAL,GAAc;AAAE;AAAhB;;AACA,QAAI,KAAKJ,QAAT,EAAmB;AACf,WAAKA,QAAL,CAAciD,SAAd,EAAyB,KAAKE,SAA9B;AACA,WAAKnD,QAAL,GAAgB,IAAhB;AACH,KARsE,CASvE;AACA;;;AACA,QAAI,KAAKU,yBAAL,KAAmC,CAAvC,EAA0C;AACtC,WAAKzL,IAAL,CAAU,gCAAV;AACA,WAAKiM,UAAL,GAAkB,IAAlB;AACH,KAHD,MAIK;AACD5yC,MAAAA,qBAAqB,CAAC,YAAY;AAC9B0W,QAAAA,KAAK,CAAC+9B,6BAAN;AACH,OAFoB,EAElBj5C,IAAI,CAACC,KAAL,CAAWi1C,mCAAX,CAFkB,CAArB;AAGH;AACJ,GApBD;;AAqBAa,EAAAA,UAAU,CAAC36C,SAAX,CAAqB69C,6BAArB,GAAqD,YAAY;AAC7D;AACA,QAAI,CAAC,KAAK7B,UAAN,IAAoB,KAAKd,MAAL,KAAgB;AAAE;AAA1C,MAA2D;AACvD,aAAKnL,IAAL,CAAU,0BAAV;AACA,aAAK6M,SAAL,CAAe;AAAED,UAAAA,CAAC,EAAE,GAAL;AAAUhI,UAAAA,CAAC,EAAE;AAAEgI,YAAAA,CAAC,EAAElC,IAAL;AAAW9F,YAAAA,CAAC,EAAE;AAAd;AAAb,SAAf;AACH;AACJ,GAND;;AAOAgG,EAAAA,UAAU,CAAC36C,SAAX,CAAqBq8C,0BAArB,GAAkD,YAAY;AAC1D,QAAIhB,IAAI,GAAG,KAAKU,cAAhB;AACA,SAAKA,cAAL,GAAsB,IAAtB;;AACA,QAAI,KAAKF,GAAL,KAAaR,IAAb,IAAqB,KAAKS,GAAL,KAAaT,IAAtC,EAA4C;AACxC;AACA,WAAK7I,KAAL;AACH;AACJ,GAPD;AAQA;AACJ;AACA;AACA;;;AACImI,EAAAA,UAAU,CAAC36C,SAAX,CAAqBo8C,iBAArB,GAAyC,UAAUD,aAAV,EAAyB;AAC9D,SAAKb,KAAL,GAAa,IAAb,CAD8D,CAE9D;AACA;;AACA,QAAI,CAACa,aAAD,IAAkB,KAAKjB,MAAL,KAAgB;AAAE;AAAxC,MAA0D;AACtD,aAAKnL,IAAL,CAAU,6BAAV,EADsD,CAEtD;;AACA,YAAI,KAAK6K,SAAL,CAAevsC,eAAf,EAAJ,EAAsC;AAClChN,UAAAA,iBAAiB,CAACX,MAAlB,CAAyB,UAAU,KAAKk6C,SAAL,CAAeltC,IAAlD,EADkC,CAElC;;AACA,eAAKktC,SAAL,CAAe1sC,YAAf,GAA8B,KAAK0sC,SAAL,CAAeltC,IAA7C;AACH;AACJ,OARD,MASK,IAAI,KAAKwtC,MAAL,KAAgB;AAAE;AAAtB,MAAuC;AACxC,aAAKnL,IAAL,CAAU,2BAAV;AACH;;AACD,SAAKyC,KAAL;AACH,GAjBD;;AAkBAmI,EAAAA,UAAU,CAAC36C,SAAX,CAAqB29C,qBAArB,GAA6C,UAAUp1C,MAAV,EAAkB;AAC3D,SAAKwnC,IAAL,CAAU,wDAAV;;AACA,QAAI,KAAKgL,OAAT,EAAkB;AACd,WAAKA,OAAL,CAAaxyC,MAAb;AACA,WAAKwyC,OAAL,GAAe,IAAf;AACH,KAL0D,CAM3D;AACA;;;AACA,SAAKzK,aAAL,GAAqB,IAArB;AACA,SAAKkC,KAAL;AACH,GAVD;;AAWAmI,EAAAA,UAAU,CAAC36C,SAAX,CAAqB48C,SAArB,GAAiC,UAAU54C,IAAV,EAAgB;AAC7C,QAAI,KAAKk3C,MAAL,KAAgB;AAAE;AAAtB,MAAuC;AACnC,cAAM,6BAAN;AACH,OAFD,MAGK;AACD,WAAKW,GAAL,CAASlJ,IAAT,CAAc3uC,IAAd;AACH;AACJ,GAPD;AAQA;AACJ;AACA;;;AACI22C,EAAAA,UAAU,CAAC36C,SAAX,CAAqBwyC,KAArB,GAA6B,YAAY;AACrC,QAAI,KAAK0I,MAAL,KAAgB;AAAE;AAAtB,MAA0C;AACtC,aAAKnL,IAAL,CAAU,8BAAV;AACA,aAAKmL,MAAL,GAAc;AAAE;AAAhB;AACA,aAAKmD,iBAAL;;AACA,YAAI,KAAK/N,aAAT,EAAwB;AACpB,eAAKA,aAAL;AACA,eAAKA,aAAL,GAAqB,IAArB;AACH;AACJ;AACJ,GAVD;;AAWAqK,EAAAA,UAAU,CAAC36C,SAAX,CAAqBq+C,iBAArB,GAAyC,YAAY;AACjD,SAAKtO,IAAL,CAAU,+BAAV;;AACA,QAAI,KAAKuL,KAAT,EAAgB;AACZ,WAAKA,KAAL,CAAW9I,KAAX;AACA,WAAK8I,KAAL,GAAa,IAAb;AACH;;AACD,QAAI,KAAKS,cAAT,EAAyB;AACrB,WAAKA,cAAL,CAAoBvJ,KAApB;AACA,WAAKuJ,cAAL,GAAsB,IAAtB;AACH;;AACD,QAAI,KAAKG,eAAT,EAA0B;AACtB9K,MAAAA,YAAY,CAAC,KAAK8K,eAAN,CAAZ;AACA,WAAKA,eAAL,GAAuB,IAAvB;AACH;AACJ,GAdD;;AAeA,SAAOvB,UAAP;AACH,CA1a+B,EAAhC;AA4aA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAI2D,aAAa;AAAG;AAAe,YAAY;AAC3C,WAASA,aAAT,GAAyB,CACxB;;AACDA,EAAAA,aAAa,CAACt+C,SAAd,CAAwBu+C,GAAxB,GAA8B,UAAUz0C,UAAV,EAAsB9F,IAAtB,EAA4BqP,UAA5B,EAAwCsF,IAAxC,EAA8C,CAAG,CAA/E;;AACA2lC,EAAAA,aAAa,CAACt+C,SAAd,CAAwB+4B,KAAxB,GAAgC,UAAUjvB,UAAV,EAAsB9F,IAAtB,EAA4BqP,UAA5B,EAAwCsF,IAAxC,EAA8C,CAAG,CAAjF;AACA;AACJ;AACA;AACA;;;AACI2lC,EAAAA,aAAa,CAACt+C,SAAd,CAAwBw+C,gBAAxB,GAA2C,UAAUC,KAAV,EAAiB,CAAG,CAA/D;;AACAH,EAAAA,aAAa,CAACt+C,SAAd,CAAwB0+C,eAAxB,GAA0C,UAAU50C,UAAV,EAAsB9F,IAAtB,EAA4BqP,UAA5B,EAAwC,CAAG,CAArF;;AACAirC,EAAAA,aAAa,CAACt+C,SAAd,CAAwB2+C,iBAAxB,GAA4C,UAAU70C,UAAV,EAAsB9F,IAAtB,EAA4BqP,UAA5B,EAAwC,CAAG,CAAvF;;AACAirC,EAAAA,aAAa,CAACt+C,SAAd,CAAwBuT,kBAAxB,GAA6C,UAAUzJ,UAAV,EAAsBuJ,UAAtB,EAAkC,CAAG,CAAlF;;AACAirC,EAAAA,aAAa,CAACt+C,SAAd,CAAwBsrC,WAAxB,GAAsC,UAAUH,KAAV,EAAiB,CAAG,CAA1D;;AACA,SAAOmT,aAAP;AACH,CAfkC,EAAnC;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIM,mBAAmB,GAAG,IAA1B;AACA,IAAIC,2BAA2B,GAAG,KAAK,CAAL,GAAS,IAA3C,C,CAAiD;;AACjD,IAAIC,mBAAmB,GAAG,IAAI,IAA9B;AACA,IAAIC,8BAA8B,GAAG,KAAK,IAA1C,C,CAAgD;;AAChD,IAAIC,0BAA0B,GAAG,GAAjC;AACA,IAAIC,6BAA6B,GAAG,KAApC,C,CAA2C;;AAC3C,IAAIC,4BAA4B,GAAG,aAAnC,C,CACA;;AACA,IAAIC,4BAA4B,GAAG,CAAnC;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,oBAAoB;AAAG;AAAe,UAAU/oC,MAAV,EAAkB;AACxD3Y,EAAAA,SAAS,CAAC0hD,oBAAD,EAAuB/oC,MAAvB,CAAT;AACA;AACJ;AACA;AACA;AACA;;;AACI,WAAS+oC,oBAAT,CAA8BxE,SAA9B,EAAyCC,cAAzC,EAAyDwE,aAAzD,EAAwEC,gBAAxE,EAA0FC,mBAA1F,EAA+GC,kBAA/G,EAAmIC,aAAnI,EAAkJ;AAC9I,QAAI3/B,KAAK,GAAGzJ,MAAM,CAACnG,IAAP,CAAY,IAAZ,KAAqB,IAAjC;;AACA4P,IAAAA,KAAK,CAAC86B,SAAN,GAAkBA,SAAlB;AACA96B,IAAAA,KAAK,CAAC+6B,cAAN,GAAuBA,cAAvB;AACA/6B,IAAAA,KAAK,CAACu/B,aAAN,GAAsBA,aAAtB;AACAv/B,IAAAA,KAAK,CAACw/B,gBAAN,GAAyBA,gBAAzB;AACAx/B,IAAAA,KAAK,CAACy/B,mBAAN,GAA4BA,mBAA5B;AACAz/B,IAAAA,KAAK,CAAC0/B,kBAAN,GAA2BA,kBAA3B;AACA1/B,IAAAA,KAAK,CAAC2/B,aAAN,GAAsBA,aAAtB,CAR8I,CAS9I;;AACA3/B,IAAAA,KAAK,CAACre,EAAN,GAAW29C,oBAAoB,CAACM,2BAArB,EAAX;AACA5/B,IAAAA,KAAK,CAACiwB,IAAN,GAAa1sC,UAAU,CAAC,OAAOyc,KAAK,CAACre,EAAb,GAAkB,GAAnB,CAAvB;AACAqe,IAAAA,KAAK,CAAC6/B,iBAAN,GAA0B,EAA1B;AACA;;AACA7/B,IAAAA,KAAK,CAAC8/B,OAAN,GAAgB,IAAIhuB,GAAJ,EAAhB;AACA9R,IAAAA,KAAK,CAAC+/B,gBAAN,GAAyB,EAAzB;AACA//B,IAAAA,KAAK,CAACggC,gBAAN,GAAyB,EAAzB;AACAhgC,IAAAA,KAAK,CAACigC,oBAAN,GAA6B,CAA7B;AACAjgC,IAAAA,KAAK,CAACkgC,oBAAN,GAA6B,CAA7B;AACAlgC,IAAAA,KAAK,CAACmgC,yBAAN,GAAkC,EAAlC;AACAngC,IAAAA,KAAK,CAACogC,UAAN,GAAmB,KAAnB;AACApgC,IAAAA,KAAK,CAACqgC,eAAN,GAAwBvB,mBAAxB;AACA9+B,IAAAA,KAAK,CAACsgC,kBAAN,GAA2BvB,2BAA3B;AACA/+B,IAAAA,KAAK,CAACugC,sBAAN,GAA+B,IAA/B;AACAvgC,IAAAA,KAAK,CAAC6vB,aAAN,GAAsB,IAAtB;AACA7vB,IAAAA,KAAK,CAACwgC,yBAAN,GAAkC,IAAlC;AACAxgC,IAAAA,KAAK,CAACotB,QAAN,GAAiB,KAAjB,CA1B8I,CA2B9I;;AACAptB,IAAAA,KAAK,CAACygC,cAAN,GAAuB,EAAvB;AACAzgC,IAAAA,KAAK,CAAC0gC,cAAN,GAAuB,CAAvB;AACA1gC,IAAAA,KAAK,CAAC2gC,SAAN,GAAkB,IAAlB;AACA3gC,IAAAA,KAAK,CAAC4gC,UAAN,GAAmB,IAAnB;AACA5gC,IAAAA,KAAK,CAAC6gC,kBAAN,GAA2B,KAA3B;AACA7gC,IAAAA,KAAK,CAAC8gC,sBAAN,GAA+B,CAA/B;AACA9gC,IAAAA,KAAK,CAAC+gC,gBAAN,GAAyB,IAAzB;AACA/gC,IAAAA,KAAK,CAACghC,0BAAN,GAAmC,IAAnC;AACAhhC,IAAAA,KAAK,CAACihC,8BAAN,GAAuC,IAAvC;;AACA,QAAItB,aAAa,IAAI,CAACnhD,SAAS,EAA/B,EAAmC;AAC/B,YAAM,IAAImF,KAAJ,CAAU,gFAAV,CAAN;AACH;;AACDqc,IAAAA,KAAK,CAACkhC,gBAAN,CAAuB,CAAvB;;AACAjU,IAAAA,iBAAiB,CAACI,WAAlB,GAAgC/f,EAAhC,CAAmC,SAAnC,EAA8CtN,KAAK,CAACmhC,UAApD,EAAgEnhC,KAAhE;;AACA,QAAI86B,SAAS,CAACltC,IAAV,CAAe5J,OAAf,CAAuB,SAAvB,MAAsC,CAAC,CAA3C,EAA8C;AAC1CspC,MAAAA,aAAa,CAACD,WAAd,GAA4B/f,EAA5B,CAA+B,QAA/B,EAAyCtN,KAAK,CAACohC,SAA/C,EAA0DphC,KAA1D;AACH;;AACD,WAAOA,KAAP;AACH;;AACDs/B,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+Bw8C,WAA/B,GAA6C,UAAUhkC,MAAV,EAAkB9T,IAAlB,EAAwBy8C,UAAxB,EAAoC;AAC7E,QAAIC,SAAS,GAAG,EAAE,KAAKZ,cAAvB;AACA,QAAI9D,GAAG,GAAG;AAAEjX,MAAAA,CAAC,EAAE2b,SAAL;AAAgBj8C,MAAAA,CAAC,EAAEqT,MAAnB;AAA2BpT,MAAAA,CAAC,EAAEV;AAA9B,KAAV;AACA,SAAKqrC,IAAL,CAAUhyC,SAAS,CAAC2+C,GAAD,CAAnB;AACAx+C,IAAAA,MAAM,CAAC,KAAKgiD,UAAN,EAAkB,wDAAlB,CAAN;AACA,SAAKO,SAAL,CAAejE,WAAf,CAA2BE,GAA3B;;AACA,QAAIyE,UAAJ,EAAgB;AACZ,WAAKZ,cAAL,CAAoBa,SAApB,IAAiCD,UAAjC;AACH;AACJ,GATD;;AAUA/B,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+BO,GAA/B,GAAqC,UAAU+H,KAAV,EAAiB;AAClD,QAAIwX,KAAK,GAAG,IAAZ;;AACA,QAAIxM,QAAQ,GAAG,IAAI3U,QAAJ,EAAf;AACA,QAAI0iD,OAAO,GAAG;AACVC,MAAAA,CAAC,EAAEh5C,KAAK,CAACE,IAAN,CAAW5H,QAAX,EADO;AAEV2gD,MAAAA,CAAC,EAAEj5C,KAAK,CAACmnB,WAAN;AAFO,KAAd;AAIA,QAAI+xB,cAAc,GAAG;AACjBhpC,MAAAA,MAAM,EAAE,GADS;AAEjB6oC,MAAAA,OAAO,EAAEA,OAFQ;AAGjBhuC,MAAAA,UAAU,EAAE,UAAU/Q,OAAV,EAAmB;AAC3B,YAAIm7C,OAAO,GAAGn7C,OAAO,CAAC,GAAD,CAArB;;AACA,YAAIA,OAAO,CAAC,GAAD,CAAP,KAAiB,IAArB,EAA2B;AACvBwd,UAAAA,KAAK,CAACu/B,aAAN,CAAoBgC,OAAO,CAAC,GAAD,CAA3B,EAAkC5D,OAAlC;AACA;AAAY,eADZ;AAEA;AAAQ,cAFR;;AAGAnqC,UAAAA,QAAQ,CAACmb,OAAT,CAAiBgvB,OAAjB;AACH,SALD,MAMK;AACDnqC,UAAAA,QAAQ,CAACqb,MAAT,CAAgB8uB,OAAhB;AACH;AACJ;AAdgB,KAArB;AAgBA,SAAKqC,gBAAL,CAAsBh6C,IAAtB,CAA2B07C,cAA3B;AACA,SAAKxB,oBAAL;AACA,QAAIznC,KAAK,GAAG,KAAKunC,gBAAL,CAAsBz9C,MAAtB,GAA+B,CAA3C;;AACA,QAAI,CAAC,KAAK69C,UAAV,EAAsB;AAClBv7C,MAAAA,UAAU,CAAC,YAAY;AACnB,YAAIpE,GAAG,GAAGuf,KAAK,CAACggC,gBAAN,CAAuBvnC,KAAvB,CAAV;;AACA,YAAIhY,GAAG,KAAKsR,SAAR,IAAqB2vC,cAAc,KAAKjhD,GAA5C,EAAiD;AAC7C;AACH;;AACD,eAAOuf,KAAK,CAACggC,gBAAN,CAAuBvnC,KAAvB,CAAP;AACAuH,QAAAA,KAAK,CAACkgC,oBAAN;;AACA,YAAIlgC,KAAK,CAACkgC,oBAAN,KAA+B,CAAnC,EAAsC;AAClClgC,UAAAA,KAAK,CAACggC,gBAAN,GAAyB,EAAzB;AACH;;AACDhgC,QAAAA,KAAK,CAACiwB,IAAN,CAAW,SAASx3B,KAAT,GAAiB,0BAA5B;;AACAjF,QAAAA,QAAQ,CAACqb,MAAT,CAAgB,IAAIlrB,KAAJ,CAAU,oBAAV,CAAhB;AACH,OAZS,EAYPq7C,mBAZO,CAAV;AAaH;;AACD,QAAI,KAAKoB,UAAT,EAAqB;AACjB,WAAKuB,QAAL,CAAclpC,KAAd;AACH;;AACD,WAAOjF,QAAQ,CAACG,OAAhB;AACH,GA7CD;AA8CA;AACJ;AACA;;;AACI2rC,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+B0hD,MAA/B,GAAwC,UAAUp5C,KAAV,EAAiBq5C,aAAjB,EAAgCrc,GAAhC,EAAqCjyB,UAArC,EAAiD;AACrF,QAAIyf,OAAO,GAAGxqB,KAAK,CAAConB,eAAN,EAAd;AACA,QAAI5lB,UAAU,GAAGxB,KAAK,CAACE,IAAN,CAAW5H,QAAX,EAAjB;AACA,SAAKmvC,IAAL,CAAU,uBAAuBjmC,UAAvB,GAAoC,GAApC,GAA0CgpB,OAApD;;AACA,QAAI,CAAC,KAAK8sB,OAAL,CAAa7tB,GAAb,CAAiBjoB,UAAjB,CAAL,EAAmC;AAC/B,WAAK81C,OAAL,CAAa3/C,GAAb,CAAiB6J,UAAjB,EAA6B,IAAI8nB,GAAJ,EAA7B;AACH;;AACD1zB,IAAAA,MAAM,CAACoK,KAAK,CAACgd,cAAN,GAAuBkG,SAAvB,MACH,CAACljB,KAAK,CAACgd,cAAN,GAAuBiG,YAAvB,EADC,EACsC,oDADtC,CAAN;AAEArtB,IAAAA,MAAM,CAAC,CAAC,KAAK0hD,OAAL,CAAar/C,GAAb,CAAiBuJ,UAAjB,EAA6BioB,GAA7B,CAAiCe,OAAjC,CAAF,EAA6C,8CAA7C,CAAN;AACA,QAAI8uB,UAAU,GAAG;AACbvuC,MAAAA,UAAU,EAAEA,UADC;AAEbg0B,MAAAA,MAAM,EAAEsa,aAFK;AAGbr5C,MAAAA,KAAK,EAAEA,KAHM;AAIbg9B,MAAAA,GAAG,EAAEA;AAJQ,KAAjB;AAMA,SAAKsa,OAAL,CAAar/C,GAAb,CAAiBuJ,UAAjB,EAA6B7J,GAA7B,CAAiC6yB,OAAjC,EAA0C8uB,UAA1C;;AACA,QAAI,KAAK1B,UAAT,EAAqB;AACjB,WAAK2B,WAAL,CAAiBD,UAAjB;AACH;AACJ,GApBD;;AAqBAxC,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+ByhD,QAA/B,GAA0C,UAAUlpC,KAAV,EAAiB;AACvD,QAAIuH,KAAK,GAAG,IAAZ;;AACA,QAAIvf,GAAG,GAAG,KAAKu/C,gBAAL,CAAsBvnC,KAAtB,CAAV;AACA,SAAKikC,WAAL,CAAiB,GAAjB,EAAsBj8C,GAAG,CAAC8gD,OAA1B,EAAmC,UAAU/+C,OAAV,EAAmB;AAClD,aAAOwd,KAAK,CAACggC,gBAAN,CAAuBvnC,KAAvB,CAAP;AACAuH,MAAAA,KAAK,CAACkgC,oBAAN;;AACA,UAAIlgC,KAAK,CAACkgC,oBAAN,KAA+B,CAAnC,EAAsC;AAClClgC,QAAAA,KAAK,CAACggC,gBAAN,GAAyB,EAAzB;AACH;;AACD,UAAIv/C,GAAG,CAAC8S,UAAR,EAAoB;AAChB9S,QAAAA,GAAG,CAAC8S,UAAJ,CAAe/Q,OAAf;AACH;AACJ,KATD;AAUH,GAbD;;AAcA88C,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+B6hD,WAA/B,GAA6C,UAAUD,UAAV,EAAsB;AAC/D,QAAI9hC,KAAK,GAAG,IAAZ;;AACA,QAAIxX,KAAK,GAAGs5C,UAAU,CAACt5C,KAAvB;AACA,QAAIwB,UAAU,GAAGxB,KAAK,CAACE,IAAN,CAAW5H,QAAX,EAAjB;AACA,QAAIkyB,OAAO,GAAGxqB,KAAK,CAAConB,eAAN,EAAd;AACA,SAAKqgB,IAAL,CAAU,eAAejmC,UAAf,GAA4B,OAA5B,GAAsCgpB,OAAhD;AACA,QAAIgvB,GAAG,GAAG;AAAE;AAASR,MAAAA,CAAC,EAAEx3C;AAAd,KAAV;AACA,QAAI0O,MAAM,GAAG,GAAb,CAP+D,CAQ/D;;AACA,QAAIopC,UAAU,CAACtc,GAAf,EAAoB;AAChBwc,MAAAA,GAAG,CAAC,GAAD,CAAH,GAAWx5C,KAAK,CAACmnB,WAAN,EAAX;AACAqyB,MAAAA,GAAG,CAAC,GAAD,CAAH,GAAWF,UAAU,CAACtc,GAAtB;AACH;;AACDwc,IAAAA,GAAG;AAAE;AAAQ,OAAV,CAAH,GAAoBF,UAAU,CAACva,MAAX,EAApB;AACA,SAAKmV,WAAL,CAAiBhkC,MAAjB,EAAyBspC,GAAzB,EAA8B,UAAUx/C,OAAV,EAAmB;AAC7C,UAAIm7C,OAAO,GAAGn7C,OAAO;AAAE;AAAQ,SAAV,CAArB;AACA,UAAIsmC,MAAM,GAAGtmC,OAAO;AAAE;AAAU,SAAZ,CAApB,CAF6C,CAG7C;;AACA88C,MAAAA,oBAAoB,CAAC2C,qBAArB,CAA2CtE,OAA3C,EAAoDn1C,KAApD;;AACA,UAAI05C,iBAAiB,GAAGliC,KAAK,CAAC8/B,OAAN,CAAcr/C,GAAd,CAAkBuJ,UAAlB,KACpBgW,KAAK,CAAC8/B,OAAN,CAAcr/C,GAAd,CAAkBuJ,UAAlB,EAA8BvJ,GAA9B,CAAkCuyB,OAAlC,CADJ,CAL6C,CAO7C;;;AACA,UAAIkvB,iBAAiB,KAAKJ,UAA1B,EAAsC;AAClC9hC,QAAAA,KAAK,CAACiwB,IAAN,CAAW,iBAAX,EAA8BztC,OAA9B;;AACA,YAAIsmC,MAAM,KAAK,IAAf,EAAqB;AACjB9oB,UAAAA,KAAK,CAACmiC,aAAN,CAAoBn4C,UAApB,EAAgCgpB,OAAhC;AACH;;AACD,YAAI8uB,UAAU,CAACvuC,UAAf,EAA2B;AACvBuuC,UAAAA,UAAU,CAACvuC,UAAX,CAAsBu1B,MAAtB,EAA8B6U,OAA9B;AACH;AACJ;AACJ,KAjBD;AAkBH,GAhCD;;AAiCA2B,EAAAA,oBAAoB,CAAC2C,qBAArB,GAA6C,UAAUtE,OAAV,EAAmBn1C,KAAnB,EAA0B;AACnE,QAAIm1C,OAAO,IAAI,OAAOA,OAAP,KAAmB,QAA9B,IAA0Cx/C,QAAQ,CAACw/C,OAAD,EAAU,GAAV,CAAtD,EAAsE;AAClE;AACA,UAAIyE,QAAQ,GAAGrjD,OAAO,CAAC4+C,OAAD,EAAU,GAAV,CAAtB;;AACA,UAAIh7C,KAAK,CAACC,OAAN,CAAcw/C,QAAd,KAA2B,CAACA,QAAQ,CAACp+C,OAAT,CAAiB,UAAjB,CAAhC,EAA8D;AAC1D,YAAIq+C,SAAS,GAAG,kBAAkB75C,KAAK,CAACgd,cAAN,GAAuBC,QAAvB,GAAkC3kB,QAAlC,EAAlB,GAAiE,GAAjF;AACA,YAAIwhD,SAAS,GAAG95C,KAAK,CAACE,IAAN,CAAW5H,QAAX,EAAhB;AACA8C,QAAAA,IAAI,CAAC,mEACA,6CAA6Cy+C,SAA7C,GAAyD,MADzD,KAEAC,SAAS,GAAG,iDAFZ,CAAD,CAAJ;AAGH;AACJ;AACJ,GAZD;AAaA;AACJ;AACA;;;AACIhD,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+Bw+C,gBAA/B,GAAkD,UAAUC,KAAV,EAAiB;AAC/D,SAAKiC,UAAL,GAAkBjC,KAAlB;AACA,SAAK1O,IAAL,CAAU,sBAAV;;AACA,QAAI,KAAK2Q,UAAT,EAAqB;AACjB,WAAK2B,OAAL;AACH,KAFD,MAGK;AACD;AACA;AACA,UAAI,KAAKnC,UAAT,EAAqB;AACjB,aAAK1D,WAAL,CAAiB,QAAjB,EAA2B,EAA3B,EAA+B,YAAY,CAAG,CAA9C;AACH;AACJ;;AACD,SAAK8F,sCAAL,CAA4C7D,KAA5C;AACH,GAdD;;AAeAW,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+BsiD,sCAA/B,GAAwE,UAAUC,UAAV,EAAsB;AAC1F;AACA;AACA,QAAIC,gBAAgB,GAAGD,UAAU,IAAIA,UAAU,CAAClgD,MAAX,KAAsB,EAA3D;;AACA,QAAImgD,gBAAgB,IAAIrjD,OAAO,CAACojD,UAAD,CAA/B,EAA6C;AACzC,WAAKxS,IAAL,CAAU,+DAAV;AACA,WAAKqQ,kBAAL,GAA0BrB,8BAA1B;AACH;AACJ,GARD;AASA;AACJ;AACA;AACA;;;AACIK,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+BqiD,OAA/B,GAAyC,YAAY;AACjD,QAAIviC,KAAK,GAAG,IAAZ;;AACA,QAAI,KAAKogC,UAAL,IAAmB,KAAKQ,UAA5B,EAAwC;AACpC,UAAI+B,OAAO,GAAG,KAAK/B,UAAnB;AACA,UAAIgC,UAAU,GAAGtjD,aAAa,CAACqjD,OAAD,CAAb,GAAyB,MAAzB,GAAkC,OAAnD;AACA,UAAIE,WAAW,GAAG;AAAEC,QAAAA,IAAI,EAAEH;AAAR,OAAlB;;AACA,UAAI,KAAKhD,aAAL,KAAuB,IAA3B,EAAiC;AAC7BkD,QAAAA,WAAW,CAAC,QAAD,CAAX,GAAwB,IAAxB;AACH,OAFD,MAGK,IAAI,OAAO,KAAKlD,aAAZ,KAA8B,QAAlC,EAA4C;AAC7CkD,QAAAA,WAAW,CAAC,SAAD,CAAX,GAAyB,KAAKlD,aAA9B;AACH;;AACD,WAAKjD,WAAL,CAAiBkG,UAAjB,EAA6BC,WAA7B,EAA0C,UAAUE,GAAV,EAAe;AACrD,YAAIja,MAAM,GAAGia,GAAG;AAAE;AAAU,WAAZ,CAAhB;AACA,YAAI7+C,IAAI,GAAG6+C,GAAG;AAAE;AAAQ,WAAV,CAAH,IAAqB,OAAhC;;AACA,YAAI/iC,KAAK,CAAC4gC,UAAN,KAAqB+B,OAAzB,EAAkC;AAC9B,cAAI7Z,MAAM,KAAK,IAAf,EAAqB;AACjB9oB,YAAAA,KAAK,CAAC8gC,sBAAN,GAA+B,CAA/B;AACH,WAFD,MAGK;AACD;AACA9gC,YAAAA,KAAK,CAACgjC,cAAN,CAAqBla,MAArB,EAA6B5kC,IAA7B;AACH;AACJ;AACJ,OAZD;AAaH;AACJ,GA1BD;AA2BA;AACJ;AACA;;;AACIo7C,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+B+iD,QAA/B,GAA0C,UAAUz6C,KAAV,EAAiBg9B,GAAjB,EAAsB;AAC5D,QAAIx7B,UAAU,GAAGxB,KAAK,CAACE,IAAN,CAAW5H,QAAX,EAAjB;AACA,QAAIkyB,OAAO,GAAGxqB,KAAK,CAAConB,eAAN,EAAd;AACA,SAAKqgB,IAAL,CAAU,yBAAyBjmC,UAAzB,GAAsC,GAAtC,GAA4CgpB,OAAtD;AACA50B,IAAAA,MAAM,CAACoK,KAAK,CAACgd,cAAN,GAAuBkG,SAAvB,MACH,CAACljB,KAAK,CAACgd,cAAN,GAAuBiG,YAAvB,EADC,EACsC,sDADtC,CAAN;AAEA,QAAIm2B,MAAM,GAAG,KAAKO,aAAL,CAAmBn4C,UAAnB,EAA+BgpB,OAA/B,CAAb;;AACA,QAAI4uB,MAAM,IAAI,KAAKxB,UAAnB,EAA+B;AAC3B,WAAK8C,aAAL,CAAmBl5C,UAAnB,EAA+BgpB,OAA/B,EAAwCxqB,KAAK,CAACmnB,WAAN,EAAxC,EAA6D6V,GAA7D;AACH;AACJ,GAVD;;AAWA8Z,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+BgjD,aAA/B,GAA+C,UAAUl5C,UAAV,EAAsBgpB,OAAtB,EAA+BmwB,QAA/B,EAAyC3d,GAAzC,EAA8C;AACzF,SAAKyK,IAAL,CAAU,iBAAiBjmC,UAAjB,GAA8B,OAA9B,GAAwCgpB,OAAlD;AACA,QAAIgvB,GAAG,GAAG;AAAE;AAASR,MAAAA,CAAC,EAAEx3C;AAAd,KAAV;AACA,QAAI0O,MAAM,GAAG,GAAb,CAHyF,CAIzF;;AACA,QAAI8sB,GAAJ,EAAS;AACLwc,MAAAA,GAAG,CAAC,GAAD,CAAH,GAAWmB,QAAX;AACAnB,MAAAA,GAAG,CAAC,GAAD,CAAH,GAAWxc,GAAX;AACH;;AACD,SAAKkX,WAAL,CAAiBhkC,MAAjB,EAAyBspC,GAAzB;AACH,GAVD;AAWA;AACJ;AACA;;;AACI1C,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+B0+C,eAA/B,GAAiD,UAAU50C,UAAV,EAAsB9F,IAAtB,EAA4BqP,UAA5B,EAAwC;AACrF,QAAI,KAAK6sC,UAAT,EAAqB;AACjB,WAAKgD,iBAAL,CAAuB,GAAvB,EAA4Bp5C,UAA5B,EAAwC9F,IAAxC,EAA8CqP,UAA9C;AACH,KAFD,MAGK;AACD,WAAK4sC,yBAAL,CAA+Bn6C,IAA/B,CAAoC;AAChCgE,QAAAA,UAAU,EAAEA,UADoB;AAEhC0O,QAAAA,MAAM,EAAE,GAFwB;AAGhCxU,QAAAA,IAAI,EAAEA,IAH0B;AAIhCqP,QAAAA,UAAU,EAAEA;AAJoB,OAApC;AAMH;AACJ,GAZD;AAaA;AACJ;AACA;;;AACI+rC,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+B2+C,iBAA/B,GAAmD,UAAU70C,UAAV,EAAsB9F,IAAtB,EAA4BqP,UAA5B,EAAwC;AACvF,QAAI,KAAK6sC,UAAT,EAAqB;AACjB,WAAKgD,iBAAL,CAAuB,IAAvB,EAA6Bp5C,UAA7B,EAAyC9F,IAAzC,EAA+CqP,UAA/C;AACH,KAFD,MAGK;AACD,WAAK4sC,yBAAL,CAA+Bn6C,IAA/B,CAAoC;AAChCgE,QAAAA,UAAU,EAAEA,UADoB;AAEhC0O,QAAAA,MAAM,EAAE,IAFwB;AAGhCxU,QAAAA,IAAI,EAAEA,IAH0B;AAIhCqP,QAAAA,UAAU,EAAEA;AAJoB,OAApC;AAMH;AACJ,GAZD;AAaA;AACJ;AACA;;;AACI+rC,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+BuT,kBAA/B,GAAoD,UAAUzJ,UAAV,EAAsBuJ,UAAtB,EAAkC;AAClF,QAAI,KAAK6sC,UAAT,EAAqB;AACjB,WAAKgD,iBAAL,CAAuB,IAAvB,EAA6Bp5C,UAA7B,EAAyC,IAAzC,EAA+CuJ,UAA/C;AACH,KAFD,MAGK;AACD,WAAK4sC,yBAAL,CAA+Bn6C,IAA/B,CAAoC;AAChCgE,QAAAA,UAAU,EAAEA,UADoB;AAEhC0O,QAAAA,MAAM,EAAE,IAFwB;AAGhCxU,QAAAA,IAAI,EAAE,IAH0B;AAIhCqP,QAAAA,UAAU,EAAEA;AAJoB,OAApC;AAMH;AACJ,GAZD;;AAaA+rC,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+BkjD,iBAA/B,GAAmD,UAAU1qC,MAAV,EAAkB1O,UAAlB,EAA8B9F,IAA9B,EAAoCqP,UAApC,EAAgD;AAC/F,QAAIguC,OAAO,GAAG;AAAE;AAASC,MAAAA,CAAC,EAAEx3C,UAAd;;AAA0B;AAAS6qC,MAAAA,CAAC,EAAE3wC;AAAtC,KAAd;AACA,SAAK+rC,IAAL,CAAU,kBAAkBv3B,MAA5B,EAAoC6oC,OAApC;AACA,SAAK7E,WAAL,CAAiBhkC,MAAjB,EAAyB6oC,OAAzB,EAAkC,UAAU8B,QAAV,EAAoB;AAClD,UAAI9vC,UAAJ,EAAgB;AACZ1O,QAAAA,UAAU,CAAC,YAAY;AACnB0O,UAAAA,UAAU,CAAC8vC,QAAQ;AAAE;AAAU,aAAZ,CAAT,EAA2BA,QAAQ;AAAE;AAAU,aAAZ,CAAnC,CAAV;AACH,SAFS,EAEPv+C,IAAI,CAACC,KAAL,CAAW,CAAX,CAFO,CAAV;AAGH;AACJ,KAND;AAOH,GAVD;AAWA;AACJ;AACA;;;AACIu6C,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+Bu+C,GAA/B,GAAqC,UAAUz0C,UAAV,EAAsB9F,IAAtB,EAA4BqP,UAA5B,EAAwCsF,IAAxC,EAA8C;AAC/E,SAAKyqC,WAAL,CAAiB,GAAjB,EAAsBt5C,UAAtB,EAAkC9F,IAAlC,EAAwCqP,UAAxC,EAAoDsF,IAApD;AACH,GAFD;AAGA;AACJ;AACA;;;AACIymC,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+B+4B,KAA/B,GAAuC,UAAUjvB,UAAV,EAAsB9F,IAAtB,EAA4BqP,UAA5B,EAAwCsF,IAAxC,EAA8C;AACjF,SAAKyqC,WAAL,CAAiB,GAAjB,EAAsBt5C,UAAtB,EAAkC9F,IAAlC,EAAwCqP,UAAxC,EAAoDsF,IAApD;AACH,GAFD;;AAGAymC,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+BojD,WAA/B,GAA6C,UAAU5qC,MAAV,EAAkB1O,UAAlB,EAA8B9F,IAA9B,EAAoCqP,UAApC,EAAgDsF,IAAhD,EAAsD;AAC/F,QAAI0oC,OAAO,GAAG;AACV;AAASC,MAAAA,CAAC,EAAEx3C,UADF;;AAEV;AAAS6qC,MAAAA,CAAC,EAAE3wC;AAFF,KAAd;;AAIA,QAAI2U,IAAI,KAAK9G,SAAb,EAAwB;AACpBwvC,MAAAA,OAAO;AAAE;AAAQ,SAAV,CAAP,GAAwB1oC,IAAxB;AACH,KAP8F,CAQ/F;;;AACA,SAAKknC,gBAAL,CAAsB/5C,IAAtB,CAA2B;AACvB0S,MAAAA,MAAM,EAAEA,MADe;AAEvB6oC,MAAAA,OAAO,EAAEA,OAFc;AAGvBhuC,MAAAA,UAAU,EAAEA;AAHW,KAA3B;AAKA,SAAK0sC,oBAAL;AACA,QAAIxnC,KAAK,GAAG,KAAKsnC,gBAAL,CAAsBx9C,MAAtB,GAA+B,CAA3C;;AACA,QAAI,KAAK69C,UAAT,EAAqB;AACjB,WAAKmD,QAAL,CAAc9qC,KAAd;AACH,KAFD,MAGK;AACD,WAAKw3B,IAAL,CAAU,oBAAoBjmC,UAA9B;AACH;AACJ,GAtBD;;AAuBAs1C,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+BqjD,QAA/B,GAA0C,UAAU9qC,KAAV,EAAiB;AACvD,QAAIuH,KAAK,GAAG,IAAZ;;AACA,QAAItH,MAAM,GAAG,KAAKqnC,gBAAL,CAAsBtnC,KAAtB,EAA6BC,MAA1C;AACA,QAAI6oC,OAAO,GAAG,KAAKxB,gBAAL,CAAsBtnC,KAAtB,EAA6B8oC,OAA3C;AACA,QAAIhuC,UAAU,GAAG,KAAKwsC,gBAAL,CAAsBtnC,KAAtB,EAA6BlF,UAA9C;AACA,SAAKwsC,gBAAL,CAAsBtnC,KAAtB,EAA6B+qC,MAA7B,GAAsC,KAAKpD,UAA3C;AACA,SAAK1D,WAAL,CAAiBhkC,MAAjB,EAAyB6oC,OAAzB,EAAkC,UAAU/+C,OAAV,EAAmB;AACjDwd,MAAAA,KAAK,CAACiwB,IAAN,CAAWv3B,MAAM,GAAG,WAApB,EAAiClW,OAAjC;;AACA,aAAOwd,KAAK,CAAC+/B,gBAAN,CAAuBtnC,KAAvB,CAAP;AACAuH,MAAAA,KAAK,CAACigC,oBAAN,GAHiD,CAIjD;;AACA,UAAIjgC,KAAK,CAACigC,oBAAN,KAA+B,CAAnC,EAAsC;AAClCjgC,QAAAA,KAAK,CAAC+/B,gBAAN,GAAyB,EAAzB;AACH;;AACD,UAAIxsC,UAAJ,EAAgB;AACZA,QAAAA,UAAU,CAAC/Q,OAAO;AAAE;AAAU,WAAZ,CAAR,EAA0BA,OAAO;AAAE;AAAU,WAAZ,CAAjC,CAAV;AACH;AACJ,KAXD;AAYH,GAlBD;AAmBA;AACJ;AACA;;;AACI88C,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+BsrC,WAA/B,GAA6C,UAAUH,KAAV,EAAiB;AAC1D,QAAIrrB,KAAK,GAAG,IAAZ,CAD0D,CAE1D;;;AACA,QAAI,KAAKogC,UAAT,EAAqB;AACjB,UAAImB,OAAO,GAAG;AAAE;AAAaj7C,QAAAA,CAAC,EAAE+kC;AAAlB,OAAd;AACA,WAAK4E,IAAL,CAAU,aAAV,EAAyBsR,OAAzB;AACA,WAAK7E,WAAL;AAAiB;AAAU,SAA3B,EAAgC6E,OAAhC,EAAyC,UAAU7mC,MAAV,EAAkB;AACvD,YAAIouB,MAAM,GAAGpuB,MAAM;AAAE;AAAU,WAAZ,CAAnB;;AACA,YAAIouB,MAAM,KAAK,IAAf,EAAqB;AACjB,cAAI2a,WAAW,GAAG/oC,MAAM;AAAE;AAAU,aAAZ,CAAxB;;AACAsF,UAAAA,KAAK,CAACiwB,IAAN,CAAW,aAAX,EAA0B,0BAA0BwT,WAApD;AACH;AACJ,OAND;AAOH;AACJ,GAdD;;AAeAnE,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+Bu9C,cAA/B,GAAgD,UAAUj7C,OAAV,EAAmB;AAC/D,QAAI,OAAOA,OAAX,EAAoB;AAChB;AACA,WAAKytC,IAAL,CAAU,kBAAkBhyC,SAAS,CAACuE,OAAD,CAArC;AACA,UAAIkhD,MAAM,GAAGlhD,OAAO,CAAC,GAAD,CAApB;AACA,UAAI6+C,UAAU,GAAG,KAAKZ,cAAL,CAAoBiD,MAApB,CAAjB;;AACA,UAAIrC,UAAJ,EAAgB;AACZ,eAAO,KAAKZ,cAAL,CAAoBiD,MAApB,CAAP;AACArC,QAAAA,UAAU,CAAC7+C,OAAO;AAAE;AAAQ,WAAV,CAAR,CAAV;AACH;AACJ,KATD,MAUK,IAAI,WAAWA,OAAf,EAAwB;AACzB,YAAM,uCAAuCA,OAAO,CAAC,OAAD,CAApD;AACH,KAFI,MAGA,IAAI,OAAOA,OAAX,EAAoB;AACrB;AACA,WAAKmhD,WAAL,CAAiBnhD,OAAO,CAAC,GAAD,CAAxB,EAA+BA,OAAO,CAAC,GAAD,CAAtC;AACH;AACJ,GAlBD;;AAmBA88C,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+ByjD,WAA/B,GAA6C,UAAUjrC,MAAV,EAAkB9T,IAAlB,EAAwB;AACjE,SAAKqrC,IAAL,CAAU,qBAAV,EAAiCv3B,MAAjC,EAAyC9T,IAAzC;;AACA,QAAI8T,MAAM,KAAK,GAAf,EAAoB;AAChB,WAAK6mC,aAAL,CAAmB36C,IAAI;AAAE;AAAQ,SAAV,CAAvB,EAAuCA,IAAI;AAAE;AAAQ,SAAV,CAA3C;AACA;AAAY,WADZ,EACmBA,IAAI,CAAC,GAAD,CADvB;AAEH,KAHD,MAIK,IAAI8T,MAAM,KAAK,GAAf,EAAoB;AACrB,WAAK6mC,aAAL,CAAmB36C,IAAI;AAAE;AAAQ,SAAV,CAAvB,EAAuCA,IAAI;AAAE;AAAQ,SAAV,CAA3C;AACA;AAAa,UADb,EACmBA,IAAI,CAAC,GAAD,CADvB;AAEH,KAHI,MAIA,IAAI8T,MAAM,KAAK,GAAf,EAAoB;AACrB,WAAKkrC,gBAAL,CAAsBh/C,IAAI;AAAE;AAAQ,SAAV,CAA1B,EAA0CA,IAAI;AAAE;AAAS,SAAX,CAA9C;AACH,KAFI,MAGA,IAAI8T,MAAM,KAAK,IAAf,EAAqB;AACtB,WAAKsqC,cAAL,CAAoBp+C,IAAI;AAAE;AAAe,SAAjB,CAAxB,EAA+CA,IAAI;AAAE;AAAiB,SAAnB,CAAnD;AACH,KAFI,MAGA,IAAI8T,MAAM,KAAK,IAAf,EAAqB;AACtB,WAAKmrC,sBAAL,CAA4Bj/C,IAA5B;AACH,KAFI,MAGA;AACDnB,MAAAA,KAAK,CAAC,+CACFxF,SAAS,CAACya,MAAD,CADP,GAEF,oCAFC,CAAL;AAGH;AACJ,GAxBD;;AAyBA4mC,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+B86C,QAA/B,GAA0C,UAAUiD,SAAV,EAAqBE,SAArB,EAAgC;AACtE,SAAKlO,IAAL,CAAU,kBAAV;AACA,SAAKmQ,UAAL,GAAkB,IAAlB;AACA,SAAKa,8BAAL,GAAsC,IAAIxwB,IAAJ,GAAWC,OAAX,EAAtC;AACA,SAAKozB,gBAAL,CAAsB7F,SAAtB;AACA,SAAKpO,aAAL,GAAqBsO,SAArB;;AACA,QAAI,KAAK4C,gBAAT,EAA2B;AACvB,WAAKgD,iBAAL;AACH;;AACD,SAAKC,aAAL;AACA,SAAKjD,gBAAL,GAAwB,KAAxB;AACA,SAAKvB,gBAAL,CAAsB,IAAtB;AACH,GAZD;;AAaAF,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+BghD,gBAA/B,GAAkD,UAAU13C,OAAV,EAAmB;AACjE,QAAIwW,KAAK,GAAG,IAAZ;;AACA5hB,IAAAA,MAAM,CAAC,CAAC,KAAKuiD,SAAP,EAAkB,wDAAlB,CAAN;;AACA,QAAI,KAAKH,yBAAT,EAAoC;AAChClP,MAAAA,YAAY,CAAC,KAAKkP,yBAAN,CAAZ;AACH,KALgE,CAMjE;AACA;;;AACA,SAAKA,yBAAL,GAAiC37C,UAAU,CAAC,YAAY;AACpDmb,MAAAA,KAAK,CAACwgC,yBAAN,GAAkC,IAAlC;;AACAxgC,MAAAA,KAAK,CAACikC,oBAAN,GAFoD,CAGpD;;AACH,KAJ0C,EAIxCn/C,IAAI,CAACC,KAAL,CAAWyE,OAAX,CAJwC,CAA3C;AAKH,GAbD;;AAcA81C,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+BihD,UAA/B,GAA4C,UAAUhf,OAAV,EAAmB;AAC3D;AACA,QAAIA,OAAO,IACP,CAAC,KAAKiL,QADN,IAEA,KAAKiT,eAAL,KAAyB,KAAKC,kBAFlC,EAEsD;AAClD,WAAKrQ,IAAL,CAAU,yCAAV;AACA,WAAKoQ,eAAL,GAAuBvB,mBAAvB;;AACA,UAAI,CAAC,KAAK6B,SAAV,EAAqB;AACjB,aAAKO,gBAAL,CAAsB,CAAtB;AACH;AACJ;;AACD,SAAK9T,QAAL,GAAgBjL,OAAhB;AACH,GAZD;;AAaAmd,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+BkhD,SAA/B,GAA2C,UAAU8C,MAAV,EAAkB;AACzD,QAAIA,MAAJ,EAAY;AACR,WAAKjU,IAAL,CAAU,sBAAV;AACA,WAAKoQ,eAAL,GAAuBvB,mBAAvB;;AACA,UAAI,CAAC,KAAK6B,SAAV,EAAqB;AACjB,aAAKO,gBAAL,CAAsB,CAAtB;AACH;AACJ,KAND,MAOK;AACD,WAAKjR,IAAL,CAAU,4CAAV;;AACA,UAAI,KAAK0Q,SAAT,EAAoB;AAChB,aAAKA,SAAL,CAAejO,KAAf;AACH;AACJ;AACJ,GAdD;;AAeA4M,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+BikD,qBAA/B,GAAuD,YAAY;AAC/D,SAAKlU,IAAL,CAAU,0BAAV;AACA,SAAKmQ,UAAL,GAAkB,KAAlB;AACA,SAAKO,SAAL,GAAiB,IAAjB,CAH+D,CAI/D;;AACA,SAAKyD,uBAAL,GAL+D,CAM/D;;AACA,SAAK3D,cAAL,GAAsB,EAAtB;;AACA,QAAI,KAAK4D,gBAAL,EAAJ,EAA6B;AACzB,UAAI,CAAC,KAAKjX,QAAV,EAAoB;AAChB,aAAK6C,IAAL,CAAU,4CAAV;AACA,aAAKoQ,eAAL,GAAuB,KAAKC,kBAA5B;AACA,aAAKU,0BAAL,GAAkC,IAAIvwB,IAAJ,GAAWC,OAAX,EAAlC;AACH,OAJD,MAKK,IAAI,KAAKuwB,8BAAT,EAAyC;AAC1C;AACA,YAAIqD,6BAA6B,GAAG,IAAI7zB,IAAJ,GAAWC,OAAX,KAAuB,KAAKuwB,8BAAhE;;AACA,YAAIqD,6BAA6B,GAAGnF,6BAApC,EAAmE;AAC/D,eAAKkB,eAAL,GAAuBvB,mBAAvB;AACH;;AACD,aAAKmC,8BAAL,GAAsC,IAAtC;AACH;;AACD,UAAIsD,2BAA2B,GAAG,IAAI9zB,IAAJ,GAAWC,OAAX,KAAuB,KAAKswB,0BAA9D;AACA,UAAIwD,cAAc,GAAG1/C,IAAI,CAACuH,GAAL,CAAS,CAAT,EAAY,KAAKg0C,eAAL,GAAuBkE,2BAAnC,CAArB;AACAC,MAAAA,cAAc,GAAG1/C,IAAI,CAACkQ,MAAL,KAAgBwvC,cAAjC;AACA,WAAKvU,IAAL,CAAU,4BAA4BuU,cAA5B,GAA6C,IAAvD;AACA,WAAKtD,gBAAL,CAAsBsD,cAAtB,EAlByB,CAmBzB;;AACA,WAAKnE,eAAL,GAAuBv7C,IAAI,CAACuC,GAAL,CAAS,KAAKi5C,kBAAd,EAAkC,KAAKD,eAAL,GAAuBnB,0BAAzD,CAAvB;AACH;;AACD,SAAKM,gBAAL,CAAsB,KAAtB;AACH,GA/BD;;AAgCAF,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+B+jD,oBAA/B,GAAsD,YAAY;AAC9D,QAAIjkC,KAAK,GAAG,IAAZ;;AACA,QAAI,KAAKqkC,gBAAL,EAAJ,EAA6B;AACzB,WAAKpU,IAAL,CAAU,6BAAV;AACA,WAAK+Q,0BAAL,GAAkC,IAAIvwB,IAAJ,GAAWC,OAAX,EAAlC;AACA,WAAKuwB,8BAAL,GAAsC,IAAtC;AACA,UAAIwD,eAAe,GAAG,KAAKhH,cAAL,CAAoBn6C,IAApB,CAAyB,IAAzB,CAAtB;AACA,UAAIohD,SAAS,GAAG,KAAK1J,QAAL,CAAc13C,IAAd,CAAmB,IAAnB,CAAhB;AACA,UAAIqhD,cAAc,GAAG,KAAKR,qBAAL,CAA2B7gD,IAA3B,CAAgC,IAAhC,CAArB;AACA,UAAIshD,QAAQ,GAAG,KAAKjjD,EAAL,GAAU,GAAV,GAAgB29C,oBAAoB,CAACuF,iBAArB,EAA/B;AACA,UAAIxyB,MAAM,GAAG,IAAb;AACA,UAAIyyB,eAAe,GAAG,KAAKjV,aAA3B;AACA,UAAIkV,UAAU,GAAG,KAAjB;AACA,UAAIC,YAAY,GAAG,IAAnB;;AACA,UAAIC,SAAS,GAAG,YAAY;AACxB,YAAID,YAAJ,EAAkB;AACdA,UAAAA,YAAY,CAACtS,KAAb;AACH,SAFD,MAGK;AACDqS,UAAAA,UAAU,GAAG,IAAb;AACAJ,UAAAA,cAAc;AACjB;AACJ,OARD;;AASA,UAAIO,aAAa,GAAG,UAAUtI,GAAV,EAAe;AAC/Bx+C,QAAAA,MAAM,CAAC4mD,YAAD,EAAe,wDAAf,CAAN;AACAA,QAAAA,YAAY,CAACtI,WAAb,CAAyBE,GAAzB;AACH,OAHD;;AAIA,WAAK+D,SAAL,GAAiB;AACbjO,QAAAA,KAAK,EAAEuS,SADM;AAEbvI,QAAAA,WAAW,EAAEwI;AAFA,OAAjB;AAIA,UAAIC,YAAY,GAAG,KAAKtE,kBAAxB;AACA,WAAKA,kBAAL,GAA0B,KAA1B,CA9ByB,CA+BzB;;AACA,WAAKnB,kBAAL,CACK0F,QADL,CACcD,YADd,EAEKE,IAFL,CAEU,UAAU3qC,MAAV,EAAkB;AACxB,YAAI,CAACqqC,UAAL,EAAiB;AACb1hD,UAAAA,GAAG,CAAC,4CAAD,CAAH;AACAgvB,UAAAA,MAAM,CAACuuB,UAAP,GAAoBlmC,MAAM,IAAIA,MAAM,CAAC4qC,WAArC;AACAN,UAAAA,YAAY,GAAG,IAAInK,UAAJ,CAAe+J,QAAf,EAAyBvyB,MAAM,CAACyoB,SAAhC,EAA2CzoB,MAAM,CAAC0oB,cAAlD,EAAkE0J,eAAlE,EAAmFC,SAAnF,EAA8FC,cAA9F;AACf;AAAc,oBAAUl8C,MAAV,EAAkB;AAC5B7E,YAAAA,IAAI,CAAC6E,MAAM,GAAG,IAAT,GAAgB4pB,MAAM,CAACyoB,SAAP,CAAiBh6C,QAAjB,EAAhB,GAA8C,GAA/C,CAAJ;AACAuxB,YAAAA,MAAM,CAACkzB,SAAP,CAAiBnG,4BAAjB;AACH,WAJc,EAIZ0F,eAJY,CAAf;AAKH,SARD,MASK;AACDzhD,UAAAA,GAAG,CAAC,uCAAD,CAAH;AACH;AACJ,OAfD,EAgBKgiD,IAhBL,CAgBU,IAhBV,EAgBgB,UAAU5hD,KAAV,EAAiB;AAC7B4uB,QAAAA,MAAM,CAAC4d,IAAP,CAAY,0BAA0BxsC,KAAtC;;AACA,YAAI,CAACshD,UAAL,EAAiB;AACb,cAAI/kC,KAAK,CAAC86B,SAAN,CAAgB9sC,SAApB,EAA+B;AAC3B;AACA;AACA;AACApK,YAAAA,IAAI,CAACH,KAAD,CAAJ;AACH;;AACDwhD,UAAAA,SAAS;AACZ;AACJ,OA3BD;AA4BH;AACJ,GA/DD;;AAgEA3F,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+BqlD,SAA/B,GAA2C,UAAU98C,MAAV,EAAkB;AACzDpF,IAAAA,GAAG,CAAC,yCAAyCoF,MAA1C,CAAH;AACA,SAAKo3C,iBAAL,CAAuBp3C,MAAvB,IAAiC,IAAjC;;AACA,QAAI,KAAKk4C,SAAT,EAAoB;AAChB,WAAKA,SAAL,CAAejO,KAAf;AACH,KAFD,MAGK;AACD,UAAI,KAAK8N,yBAAT,EAAoC;AAChClP,QAAAA,YAAY,CAAC,KAAKkP,yBAAN,CAAZ;AACA,aAAKA,yBAAL,GAAiC,IAAjC;AACH;;AACD,UAAI,KAAKJ,UAAT,EAAqB;AACjB,aAAK+D,qBAAL;AACH;AACJ;AACJ,GAfD;;AAgBA7E,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+BslD,MAA/B,GAAwC,UAAU/8C,MAAV,EAAkB;AACtDpF,IAAAA,GAAG,CAAC,qCAAqCoF,MAAtC,CAAH;AACA,WAAO,KAAKo3C,iBAAL,CAAuBp3C,MAAvB,CAAP;;AACA,QAAIlJ,OAAO,CAAC,KAAKsgD,iBAAN,CAAX,EAAqC;AACjC,WAAKQ,eAAL,GAAuBvB,mBAAvB;;AACA,UAAI,CAAC,KAAK6B,SAAV,EAAqB;AACjB,aAAKO,gBAAL,CAAsB,CAAtB;AACH;AACJ;AACJ,GATD;;AAUA5B,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+B4jD,gBAA/B,GAAkD,UAAU7F,SAAV,EAAqB;AACnE,QAAI7sB,KAAK,GAAG6sB,SAAS,GAAG,IAAIxtB,IAAJ,GAAWC,OAAX,EAAxB;AACA,SAAK+uB,mBAAL,CAAyB;AAAEgG,MAAAA,gBAAgB,EAAEr0B;AAApB,KAAzB;AACH,GAHD;;AAIAkuB,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+BkkD,uBAA/B,GAAyD,YAAY;AACjE,SAAK,IAAI3hD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKs9C,gBAAL,CAAsBx9C,MAA1C,EAAkDE,CAAC,EAAnD,EAAuD;AACnD,UAAIg8C,GAAG,GAAG,KAAKsB,gBAAL,CAAsBt9C,CAAtB,CAAV;;AACA,UAAIg8C,GAAG;AAAI;AAAS,aAAOA,GAAG,CAAC8C,OAA3B,IAAsC9C,GAAG,CAAC+E,MAA9C,EAAsD;AAClD,YAAI/E,GAAG,CAAClrC,UAAR,EAAoB;AAChBkrC,UAAAA,GAAG,CAAClrC,UAAJ,CAAe,YAAf;AACH;;AACD,eAAO,KAAKwsC,gBAAL,CAAsBt9C,CAAtB,CAAP;AACA,aAAKw9C,oBAAL;AACH;AACJ,KAVgE,CAWjE;;;AACA,QAAI,KAAKA,oBAAL,KAA8B,CAAlC,EAAqC;AACjC,WAAKF,gBAAL,GAAwB,EAAxB;AACH;AACJ,GAfD;;AAgBAT,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+B0jD,gBAA/B,GAAkD,UAAU55C,UAAV,EAAsBxB,KAAtB,EAA6B;AAC3E;AACA,QAAIwqB,OAAJ;;AACA,QAAI,CAACxqB,KAAL,EAAY;AACRwqB,MAAAA,OAAO,GAAG,SAAV;AACH,KAFD,MAGK;AACDA,MAAAA,OAAO,GAAGxqB,KAAK,CAACxJ,GAAN,CAAU,UAAUyiD,CAAV,EAAa;AAAE,eAAO57C,iBAAiB,CAAC47C,CAAD,CAAxB;AAA8B,OAAvD,EAAyD/5C,IAAzD,CAA8D,GAA9D,CAAV;AACH;;AACD,QAAIk6C,MAAM,GAAG,KAAKO,aAAL,CAAmBn4C,UAAnB,EAA+BgpB,OAA/B,CAAb;;AACA,QAAI4uB,MAAM,IAAIA,MAAM,CAACruC,UAArB,EAAiC;AAC7BquC,MAAAA,MAAM,CAACruC,UAAP,CAAkB,mBAAlB;AACH;AACJ,GAbD;;AAcA+rC,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+BiiD,aAA/B,GAA+C,UAAUn4C,UAAV,EAAsBgpB,OAAtB,EAA+B;AAC1E,QAAI0yB,oBAAoB,GAAG,IAAIj8C,IAAJ,CAASO,UAAT,EAAqBlJ,QAArB,EAA3B,CAD0E,CACd;;AAC5D,QAAI8gD,MAAJ;;AACA,QAAI,KAAK9B,OAAL,CAAa7tB,GAAb,CAAiByzB,oBAAjB,CAAJ,EAA4C;AACxC,UAAI1mD,GAAG,GAAG,KAAK8gD,OAAL,CAAar/C,GAAb,CAAiBilD,oBAAjB,CAAV;AACA9D,MAAAA,MAAM,GAAG5iD,GAAG,CAACyB,GAAJ,CAAQuyB,OAAR,CAAT;AACAh0B,MAAAA,GAAG,CAACwzB,MAAJ,CAAWQ,OAAX;;AACA,UAAIh0B,GAAG,CAACgzB,IAAJ,KAAa,CAAjB,EAAoB;AAChB,aAAK8tB,OAAL,CAAattB,MAAb,CAAoBkzB,oBAApB;AACH;AACJ,KAPD,MAQK;AACD;AACA9D,MAAAA,MAAM,GAAG7vC,SAAT;AACH;;AACD,WAAO6vC,MAAP;AACH,GAhBD;;AAiBAtC,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+B8iD,cAA/B,GAAgD,UAAU2C,UAAV,EAAsBC,WAAtB,EAAmC;AAC/EviD,IAAAA,GAAG,CAAC,yBAAyBsiD,UAAzB,GAAsC,GAAtC,GAA4CC,WAA7C,CAAH;AACA,SAAKhF,UAAL,GAAkB,IAAlB;AACA,SAAKC,kBAAL,GAA0B,IAA1B;AACA,SAAKF,SAAL,CAAejO,KAAf;;AACA,QAAIiT,UAAU,KAAK,eAAf,IAAkCA,UAAU,KAAK,mBAArD,EAA0E;AACtE;AACA;AACA;AACA,WAAK7E,sBAAL;;AACA,UAAI,KAAKA,sBAAL,IAA+BzB,4BAAnC,EAAiE;AAC7D;AACA,aAAKgB,eAAL,GAAuBpB,8BAAvB,CAF6D,CAG7D;AACA;;AACA,aAAKS,kBAAL,CAAwBmG,qBAAxB;AACH;AACJ;AACJ,GAlBD;;AAmBAvG,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+B2jD,sBAA/B,GAAwD,UAAUj/C,IAAV,EAAgB;AACpE,QAAI,KAAK27C,sBAAT,EAAiC;AAC7B,WAAKA,sBAAL,CAA4B37C,IAA5B;AACH,KAFD,MAGK;AACD,UAAI,SAASA,IAAb,EAAmB;AACfkhD,QAAAA,OAAO,CAACziD,GAAR,CAAY,eAAeuB,IAAI,CAAC,KAAD,CAAJ,CAAYyK,OAAZ,CAAoB,IAApB,EAA0B,cAA1B,CAA3B;AACH;AACJ;AACJ,GATD;;AAUAiwC,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+B8jD,aAA/B,GAA+C,YAAY;AACvD,QAAIx0C,GAAJ,EAASC,EAAT,EAAa0vB,GAAb,EAAkBvvB,EAAlB,CADuD,CAEvD;;;AACA,SAAK2yC,OAAL;;AACA,QAAI;AACA;AACA;AACA,WAAK,IAAI1yC,EAAE,GAAGlS,QAAQ,CAAC,KAAKmiD,OAAL,CAAatvB,MAAb,EAAD,CAAjB,EAA0CgP,EAAE,GAAG3vB,EAAE,CAACC,IAAH,EAApD,EAA+D,CAAC0vB,EAAE,CAACzvB,IAAnE,EAAyEyvB,EAAE,GAAG3vB,EAAE,CAACC,IAAH,EAA9E,EAAyF;AACrF,YAAIw4B,OAAO,GAAG9I,EAAE,CAACn/B,KAAjB;;AACA,YAAI;AACA,eAAK,IAAI0lD,EAAE,IAAI5mB,GAAG,GAAG,KAAK,CAAX,EAAcxhC,QAAQ,CAAC2qC,OAAO,CAAC9X,MAAR,EAAD,CAA1B,CAAN,EAAqDw1B,EAAE,GAAGD,EAAE,CAACj2C,IAAH,EAA/D,EAA0E,CAACk2C,EAAE,CAACj2C,IAA9E,EAAoFi2C,EAAE,GAAGD,EAAE,CAACj2C,IAAH,EAAzF,EAAoG;AAChG,gBAAIgyC,UAAU,GAAGkE,EAAE,CAAC3lD,KAApB;AACA,iBAAK0hD,WAAL,CAAiBD,UAAjB;AACH;AACJ,SALD,CAMA,OAAOpiB,KAAP,EAAc;AAAEP,UAAAA,GAAG,GAAG;AAAE17B,YAAAA,KAAK,EAAEi8B;AAAT,WAAN;AAAyB,SANzC,SAOQ;AACJ,cAAI;AACA,gBAAIsmB,EAAE,IAAI,CAACA,EAAE,CAACj2C,IAAV,KAAmBH,EAAE,GAAGm2C,EAAE,CAAC51C,MAA3B,CAAJ,EAAwCP,EAAE,CAACQ,IAAH,CAAQ21C,EAAR;AAC3C,WAFD,SAGQ;AAAE,gBAAI5mB,GAAJ,EAAS,MAAMA,GAAG,CAAC17B,KAAV;AAAkB;AACxC;AACJ;AACJ,KAnBD,CAoBA,OAAOyM,KAAP,EAAc;AAAEV,MAAAA,GAAG,GAAG;AAAE/L,QAAAA,KAAK,EAAEyM;AAAT,OAAN;AAAyB,KApBzC,SAqBQ;AACJ,UAAI;AACA,YAAIsvB,EAAE,IAAI,CAACA,EAAE,CAACzvB,IAAV,KAAmBN,EAAE,GAAGI,EAAE,CAACM,MAA3B,CAAJ,EAAwCV,EAAE,CAACW,IAAH,CAAQP,EAAR;AAC3C,OAFD,SAGQ;AAAE,YAAIL,GAAJ,EAAS,MAAMA,GAAG,CAAC/L,KAAV;AAAkB;AACxC;;AACD,SAAK,IAAIhB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKs9C,gBAAL,CAAsBx9C,MAA1C,EAAkDE,CAAC,EAAnD,EAAuD;AACnD,UAAI,KAAKs9C,gBAAL,CAAsBt9C,CAAtB,CAAJ,EAA8B;AAC1B,aAAK8gD,QAAL,CAAc9gD,CAAd;AACH;AACJ;;AACD,WAAO,KAAK09C,yBAAL,CAA+B59C,MAAtC,EAA8C;AAC1C,UAAIg/C,OAAO,GAAG,KAAKpB,yBAAL,CAA+BpL,KAA/B,EAAd;AACA,WAAKqO,iBAAL,CAAuB7B,OAAO,CAAC7oC,MAA/B,EAAuC6oC,OAAO,CAACv3C,UAA/C,EAA2Du3C,OAAO,CAACr9C,IAAnE,EAAyEq9C,OAAO,CAAChuC,UAAjF;AACH;;AACD,SAAK,IAAI9Q,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKu9C,gBAAL,CAAsBz9C,MAA1C,EAAkDE,CAAC,EAAnD,EAAuD;AACnD,UAAI,KAAKu9C,gBAAL,CAAsBv9C,CAAtB,CAAJ,EAA8B;AAC1B,aAAKk/C,QAAL,CAAcl/C,CAAd;AACH;AACJ;AACJ,GA7CD;AA8CA;AACJ;AACA;;;AACI68C,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+B6jD,iBAA/B,GAAmD,YAAY;AAC3D,QAAI1Y,KAAK,GAAG,EAAZ;AACA,QAAI4a,UAAU,GAAG,IAAjB;;AACA,QAAIznD,SAAS,EAAb,EAAiB;AACb,UAAI,KAAKs8C,SAAL,CAAe9sC,SAAnB,EAA8B;AAC1Bi4C,QAAAA,UAAU,GAAG,YAAb;AACH,OAFD,MAGK;AACDA,QAAAA,UAAU,GAAG,MAAb;AACH;AACJ;;AACD5a,IAAAA,KAAK,CAAC,SAAS4a,UAAT,GAAsB,GAAtB,GAA4B7P,WAAW,CAAC/mC,OAAZ,CAAoB,KAApB,EAA2B,GAA3B,CAA7B,CAAL,GAAqE,CAArE;;AACA,QAAIlQ,eAAe,EAAnB,EAAuB;AACnBksC,MAAAA,KAAK,CAAC,mBAAD,CAAL,GAA6B,CAA7B;AACH,KAFD,MAGK,IAAI7rC,aAAa,EAAjB,EAAqB;AACtB6rC,MAAAA,KAAK,CAAC,uBAAD,CAAL,GAAiC,CAAjC;AACH;;AACD,SAAKG,WAAL,CAAiBH,KAAjB;AACH,GAnBD;;AAoBAiU,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+BmkD,gBAA/B,GAAkD,YAAY;AAC1D,QAAIH,MAAM,GAAG5W,aAAa,CAACD,WAAd,GAA4BG,eAA5B,EAAb;AACA,WAAOjuC,OAAO,CAAC,KAAKsgD,iBAAN,CAAP,IAAmCqE,MAA1C;AACH,GAHD;;AAIA5E,EAAAA,oBAAoB,CAACM,2BAArB,GAAmD,CAAnD;AACA;AACJ;AACA;;AACIN,EAAAA,oBAAoB,CAACuF,iBAArB,GAAyC,CAAzC;AACA,SAAOvF,oBAAP;AACH,CApxByC,CAoxBxCd,aApxBwC,CAA1C;AAsxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAI0H,kBAAkB;AAAG;AAAe,UAAU3vC,MAAV,EAAkB;AACtD3Y,EAAAA,SAAS,CAACsoD,kBAAD,EAAqB3vC,MAArB,CAAT;AACA;AACJ;AACA;AACA;;;AACI,WAAS2vC,kBAAT,CAA4BpL,SAA5B,EAAuCyE,aAAvC,EAAsDG,kBAAtD,EAA0E;AACtE,QAAI1/B,KAAK,GAAGzJ,MAAM,CAACnG,IAAP,CAAY,IAAZ,KAAqB,IAAjC;;AACA4P,IAAAA,KAAK,CAAC86B,SAAN,GAAkBA,SAAlB;AACA96B,IAAAA,KAAK,CAACu/B,aAAN,GAAsBA,aAAtB;AACAv/B,IAAAA,KAAK,CAAC0/B,kBAAN,GAA2BA,kBAA3B;AACA;;AACA1/B,IAAAA,KAAK,CAACiwB,IAAN,GAAa1sC,UAAU,CAAC,SAAD,CAAvB;AACA;AACR;AACA;AACA;;AACQyc,IAAAA,KAAK,CAACmmC,QAAN,GAAiB,EAAjB;AACA,WAAOnmC,KAAP;AACH;;AACDkmC,EAAAA,kBAAkB,CAAChmD,SAAnB,CAA6BsrC,WAA7B,GAA2C,UAAUH,KAAV,EAAiB;AACxD,UAAM,IAAI1nC,KAAJ,CAAU,yBAAV,CAAN;AACH,GAFD;;AAGAuiD,EAAAA,kBAAkB,CAACE,YAAnB,GAAkC,UAAU59C,KAAV,EAAiBg9B,GAAjB,EAAsB;AACpD,QAAIA,GAAG,KAAKzzB,SAAZ,EAAuB;AACnB,aAAO,SAASyzB,GAAhB;AACH,KAFD,MAGK;AACDpnC,MAAAA,MAAM,CAACoK,KAAK,CAACgd,cAAN,GAAuBkG,SAAvB,EAAD,EAAqC,gDAArC,CAAN;AACA,aAAOljB,KAAK,CAACE,IAAN,CAAW5H,QAAX,EAAP;AACH;AACJ,GARD;AASA;;;AACAolD,EAAAA,kBAAkB,CAAChmD,SAAnB,CAA6B0hD,MAA7B,GAAsC,UAAUp5C,KAAV,EAAiBq5C,aAAjB,EAAgCrc,GAAhC,EAAqCjyB,UAArC,EAAiD;AACnF,QAAIyM,KAAK,GAAG,IAAZ;;AACA,QAAIhW,UAAU,GAAGxB,KAAK,CAACE,IAAN,CAAW5H,QAAX,EAAjB;AACA,SAAKmvC,IAAL,CAAU,uBAAuBjmC,UAAvB,GAAoC,GAApC,GAA0CxB,KAAK,CAAConB,eAAN,EAApD,EAHmF,CAInF;;AACA,QAAIy2B,QAAQ,GAAGH,kBAAkB,CAACE,YAAnB,CAAgC59C,KAAhC,EAAuCg9B,GAAvC,CAAf;AACA,QAAI8gB,UAAU,GAAG,EAAjB;AACA,SAAKH,QAAL,CAAcE,QAAd,IAA0BC,UAA1B;AACA,QAAIC,qBAAqB,GAAGl6B,sCAAsC,CAAC7jB,KAAK,CAACgd,cAAN,EAAD,CAAlE;AACA,SAAKghC,YAAL,CAAkBx8C,UAAU,GAAG,OAA/B,EAAwCu8C,qBAAxC,EAA+D,UAAU9iD,KAAV,EAAiBiX,MAAjB,EAAyB;AACpF,UAAIxW,IAAI,GAAGwW,MAAX;;AACA,UAAIjX,KAAK,KAAK,GAAd,EAAmB;AACfS,QAAAA,IAAI,GAAG,IAAP;AACAT,QAAAA,KAAK,GAAG,IAAR;AACH;;AACD,UAAIA,KAAK,KAAK,IAAd,EAAoB;AAChBuc,QAAAA,KAAK,CAACu/B,aAAN,CAAoBv1C,UAApB,EAAgC9F,IAAhC;AAAsC;AAAa,aAAnD,EAA0DshC,GAA1D;AACH;;AACD,UAAIzmC,OAAO,CAACihB,KAAK,CAACmmC,QAAP,EAAiBE,QAAjB,CAAP,KAAsCC,UAA1C,EAAsD;AAClD,YAAIG,QAAJ;;AACA,YAAI,CAAChjD,KAAL,EAAY;AACRgjD,UAAAA,QAAQ,GAAG,IAAX;AACH,SAFD,MAGK,IAAIhjD,KAAK,KAAK,GAAd,EAAmB;AACpBgjD,UAAAA,QAAQ,GAAG,mBAAX;AACH,SAFI,MAGA;AACDA,UAAAA,QAAQ,GAAG,gBAAgBhjD,KAA3B;AACH;;AACD8P,QAAAA,UAAU,CAACkzC,QAAD,EAAW,IAAX,CAAV;AACH;AACJ,KAtBD;AAuBH,GAhCD;AAiCA;;;AACAP,EAAAA,kBAAkB,CAAChmD,SAAnB,CAA6B+iD,QAA7B,GAAwC,UAAUz6C,KAAV,EAAiBg9B,GAAjB,EAAsB;AAC1D,QAAI6gB,QAAQ,GAAGH,kBAAkB,CAACE,YAAnB,CAAgC59C,KAAhC,EAAuCg9B,GAAvC,CAAf;AACA,WAAO,KAAK2gB,QAAL,CAAcE,QAAd,CAAP;AACH,GAHD;;AAIAH,EAAAA,kBAAkB,CAAChmD,SAAnB,CAA6BO,GAA7B,GAAmC,UAAU+H,KAAV,EAAiB;AAChD,QAAIwX,KAAK,GAAG,IAAZ;;AACA,QAAIumC,qBAAqB,GAAGl6B,sCAAsC,CAAC7jB,KAAK,CAACgd,cAAN,EAAD,CAAlE;AACA,QAAIxb,UAAU,GAAGxB,KAAK,CAACE,IAAN,CAAW5H,QAAX,EAAjB;AACA,QAAI0S,QAAQ,GAAG,IAAI3U,QAAJ,EAAf;AACA,SAAK2nD,YAAL,CAAkBx8C,UAAU,GAAG,OAA/B,EAAwCu8C,qBAAxC,EAA+D,UAAU9iD,KAAV,EAAiBiX,MAAjB,EAAyB;AACpF,UAAIxW,IAAI,GAAGwW,MAAX;;AACA,UAAIjX,KAAK,KAAK,GAAd,EAAmB;AACfS,QAAAA,IAAI,GAAG,IAAP;AACAT,QAAAA,KAAK,GAAG,IAAR;AACH;;AACD,UAAIA,KAAK,KAAK,IAAd,EAAoB;AAChBuc,QAAAA,KAAK,CAACu/B,aAAN,CAAoBv1C,UAApB,EAAgC9F,IAAhC;AACA;AAAa,aADb;AAEA;AAAS,YAFT;;AAGAsP,QAAAA,QAAQ,CAACmb,OAAT,CAAiBzqB,IAAjB;AACH,OALD,MAMK;AACDsP,QAAAA,QAAQ,CAACqb,MAAT,CAAgB,IAAIlrB,KAAJ,CAAUO,IAAV,CAAhB;AACH;AACJ,KAfD;AAgBA,WAAOsP,QAAQ,CAACG,OAAhB;AACH,GAtBD;AAuBA;;;AACAuyC,EAAAA,kBAAkB,CAAChmD,SAAnB,CAA6Bw+C,gBAA7B,GAAgD,UAAUC,KAAV,EAAiB,CAC7D;AACH,GAFD;AAGA;AACJ;AACA;AACA;;;AACIuH,EAAAA,kBAAkB,CAAChmD,SAAnB,CAA6BsmD,YAA7B,GAA4C,UAAUx8C,UAAV,EAAsBu8C,qBAAtB,EAA6Ch5B,QAA7C,EAAuD;AAC/F,QAAIvN,KAAK,GAAG,IAAZ;;AACA,QAAIumC,qBAAqB,KAAK,KAAK,CAAnC,EAAsC;AAAEA,MAAAA,qBAAqB,GAAG,EAAxB;AAA6B;;AACrEA,IAAAA,qBAAqB,CAAC,QAAD,CAArB,GAAkC,QAAlC;AACA,SAAK7G,kBAAL,CACK0F,QADL;AACc;AAAkB,SADhC,EAEKC,IAFL,CAEU,UAAUqB,aAAV,EAAyB;AAC/B,UAAIC,SAAS,GAAGD,aAAa,IAAIA,aAAa,CAACpB,WAA/C;;AACA,UAAIqB,SAAJ,EAAe;AACXJ,QAAAA,qBAAqB,CAAC,MAAD,CAArB,GAAgCI,SAAhC;AACH;;AACD,UAAItR,GAAG,GAAG,CAACr1B,KAAK,CAAC86B,SAAN,CAAgBjtC,MAAhB,GAAyB,UAAzB,GAAsC,SAAvC,IACNmS,KAAK,CAAC86B,SAAN,CAAgBltC,IADV,GAEN5D,UAFM,GAGN,GAHM,GAIN,KAJM,GAKNgW,KAAK,CAAC86B,SAAN,CAAgBhtC,SALV,GAMNrO,WAAW,CAAC8mD,qBAAD,CANf;;AAOAvmC,MAAAA,KAAK,CAACiwB,IAAN,CAAW,8BAA8BoF,GAAzC;;AACA,UAAIuR,GAAG,GAAG,IAAIC,cAAJ,EAAV;;AACAD,MAAAA,GAAG,CAAC5Q,kBAAJ,GAAyB,YAAY;AACjC,YAAIzoB,QAAQ,IAAIq5B,GAAG,CAACniD,UAAJ,KAAmB,CAAnC,EAAsC;AAClCub,UAAAA,KAAK,CAACiwB,IAAN,CAAW,uBAAuBoF,GAAvB,GAA6B,oBAAxC,EAA8DuR,GAAG,CAAC9d,MAAlE,EAA0E,WAA1E,EAAuF8d,GAAG,CAACE,YAA3F;;AACA,cAAI/D,GAAG,GAAG,IAAV;;AACA,cAAI6D,GAAG,CAAC9d,MAAJ,IAAc,GAAd,IAAqB8d,GAAG,CAAC9d,MAAJ,GAAa,GAAtC,EAA2C;AACvC,gBAAI;AACAia,cAAAA,GAAG,GAAG7kD,QAAQ,CAAC0oD,GAAG,CAACE,YAAL,CAAd;AACH,aAFD,CAGA,OAAOxlD,CAAP,EAAU;AACNsC,cAAAA,IAAI,CAAC,uCACDyxC,GADC,GAED,IAFC,GAGDuR,GAAG,CAACE,YAHJ,CAAJ;AAIH;;AACDv5B,YAAAA,QAAQ,CAAC,IAAD,EAAOw1B,GAAP,CAAR;AACH,WAXD,MAYK;AACD;AACA,gBAAI6D,GAAG,CAAC9d,MAAJ,KAAe,GAAf,IAAsB8d,GAAG,CAAC9d,MAAJ,KAAe,GAAzC,EAA8C;AAC1CllC,cAAAA,IAAI,CAAC,wCACDyxC,GADC,GAED,WAFC,GAGDuR,GAAG,CAAC9d,MAHJ,CAAJ;AAIH;;AACDvb,YAAAA,QAAQ,CAACq5B,GAAG,CAAC9d,MAAL,CAAR;AACH;;AACDvb,UAAAA,QAAQ,GAAG,IAAX;AACH;AACJ,OA5BD;;AA6BAq5B,MAAAA,GAAG,CAACxW,IAAJ,CAAS,KAAT,EAAgBiF,GAAhB;AAAqB;AAAkB,UAAvC;AACAuR,MAAAA,GAAG,CAAC/T,IAAJ;AACH,KA/CD;AAgDH,GApDD;;AAqDA,SAAOqT,kBAAP;AACH,CA5JuC,CA4JtC1H,aA5JsC,CAAxC;AA8JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA,IAAIuI,QAAQ;AAAG;AAAe,YAAY;AACtC,WAASA,QAAT,GAAoB;AAChB;AACA;AACA,SAAKl1B,QAAL,GAAgB,EAAhB;AACA,SAAKm1B,UAAL,GAAkB,CAAlB;AACA,SAAK3mD,KAAL,GAAa,IAAb;AACH;;AACD,SAAO0mD,QAAP;AACH,CAT6B,EAA9B;AAUA;AACA;AACA;AACA;AACA;;;AACA,IAAIE,IAAI;AAAG;AAAe,YAAY;AAClC;AACJ;AACA;AACA;AACA;AACI,WAASA,IAAT,CAAcC,KAAd,EAAqBC,OAArB,EAA8BxjC,KAA9B,EAAqC;AACjC,QAAIujC,KAAK,KAAK,KAAK,CAAnB,EAAsB;AAAEA,MAAAA,KAAK,GAAG,EAAR;AAAa;;AACrC,QAAIC,OAAO,KAAK,KAAK,CAArB,EAAwB;AAAEA,MAAAA,OAAO,GAAG,IAAV;AAAiB;;AAC3C,QAAIxjC,KAAK,KAAK,KAAK,CAAnB,EAAsB;AAAEA,MAAAA,KAAK,GAAG,IAAIojC,QAAJ,EAAR;AAAyB;;AACjD,SAAKG,KAAL,GAAaA,KAAb;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKxjC,KAAL,GAAaA,KAAb;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACIsjC,EAAAA,IAAI,CAAC/mD,SAAL,CAAeknD,OAAf,GAAyB,UAAUC,OAAV,EAAmB;AACxC;AACA,QAAI3+C,IAAI,GAAG2+C,OAAO,YAAY59C,IAAnB,GAA0B49C,OAA1B,GAAoC,IAAI59C,IAAJ,CAAS49C,OAAT,CAA/C;AACA,QAAI16C,KAAK,GAAG,IAAZ;AAAA,QAAkBmD,IAAI,GAAG5F,YAAY,CAACxB,IAAD,CAArC;;AACA,WAAOoH,IAAI,KAAK,IAAhB,EAAsB;AAClB,UAAIoI,SAAS,GAAGnZ,OAAO,CAAC4N,KAAK,CAACgX,KAAN,CAAYkO,QAAb,EAAuB/hB,IAAvB,CAAP,IAAuC,IAAIi3C,QAAJ,EAAvD;AACAp6C,MAAAA,KAAK,GAAG,IAAIs6C,IAAJ,CAASn3C,IAAT,EAAenD,KAAf,EAAsBuL,SAAtB,CAAR;AACAxP,MAAAA,IAAI,GAAG0B,YAAY,CAAC1B,IAAD,CAAnB;AACAoH,MAAAA,IAAI,GAAG5F,YAAY,CAACxB,IAAD,CAAnB;AACH;;AACD,WAAOiE,KAAP;AACH,GAXD;AAYA;AACJ;AACA;AACA;AACA;;;AACIs6C,EAAAA,IAAI,CAAC/mD,SAAL,CAAe0Y,QAAf,GAA0B,YAAY;AAClC,WAAO,KAAK+K,KAAL,CAAWtjB,KAAlB;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;;;AACI4mD,EAAAA,IAAI,CAAC/mD,SAAL,CAAeonD,QAAf,GAA0B,UAAUjnD,KAAV,EAAiB;AACvCjC,IAAAA,MAAM,CAAC,OAAOiC,KAAP,KAAiB,WAAlB,EAA+B,+BAA/B,CAAN;AACA,SAAKsjB,KAAL,CAAWtjB,KAAX,GAAmBA,KAAnB;AACA,SAAKknD,cAAL;AACH,GAJD;AAKA;AACJ;AACA;;;AACIN,EAAAA,IAAI,CAAC/mD,SAAL,CAAeiyB,KAAf,GAAuB,YAAY;AAC/B,SAAKxO,KAAL,CAAWtjB,KAAX,GAAmB,IAAnB;AACA,SAAKsjB,KAAL,CAAWkO,QAAX,GAAsB,EAAtB;AACA,SAAKlO,KAAL,CAAWqjC,UAAX,GAAwB,CAAxB;AACA,SAAKO,cAAL;AACH,GALD;AAMA;AACJ;AACA;;;AACIN,EAAAA,IAAI,CAAC/mD,SAAL,CAAemkB,WAAf,GAA6B,YAAY;AACrC,WAAO,KAAKV,KAAL,CAAWqjC,UAAX,GAAwB,CAA/B;AACH,GAFD;AAGA;AACJ;AACA;;;AACIC,EAAAA,IAAI,CAAC/mD,SAAL,CAAeX,OAAf,GAAyB,YAAY;AACjC,WAAO,KAAKqZ,QAAL,OAAoB,IAApB,IAA4B,CAAC,KAAKyL,WAAL,EAApC;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;;;AACI4iC,EAAAA,IAAI,CAAC/mD,SAAL,CAAesY,YAAf,GAA8B,UAAUE,MAAV,EAAkB;AAC5C,QAAIsH,KAAK,GAAG,IAAZ;;AACAxZ,IAAAA,IAAI,CAAC,KAAKmd,KAAL,CAAWkO,QAAZ,EAAsB,UAAUllB,KAAV,EAAiB+R,SAAjB,EAA4B;AAClDhG,MAAAA,MAAM,CAAC,IAAIuuC,IAAJ,CAASt6C,KAAT,EAAgBqT,KAAhB,EAAuBtB,SAAvB,CAAD,CAAN;AACH,KAFG,CAAJ;AAGH,GALD;AAMA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIuoC,EAAAA,IAAI,CAAC/mD,SAAL,CAAesnD,iBAAf,GAAmC,UAAU9uC,MAAV,EAAkB+uC,WAAlB,EAA+BC,aAA/B,EAA8C;AAC7E,QAAID,WAAW,IAAI,CAACC,aAApB,EAAmC;AAC/BhvC,MAAAA,MAAM,CAAC,IAAD,CAAN;AACH;;AACD,SAAKF,YAAL,CAAkB,UAAU7L,KAAV,EAAiB;AAC/BA,MAAAA,KAAK,CAAC66C,iBAAN,CAAwB9uC,MAAxB;AAAgC;AAAiB,UAAjD,EAAuDgvC,aAAvD;AACH,KAFD;;AAGA,QAAID,WAAW,IAAIC,aAAnB,EAAkC;AAC9BhvC,MAAAA,MAAM,CAAC,IAAD,CAAN;AACH;AACJ,GAVD;AAWA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIuuC,EAAAA,IAAI,CAAC/mD,SAAL,CAAeynD,eAAf,GAAiC,UAAUjvC,MAAV,EAAkB+uC,WAAlB,EAA+B;AAC5D,QAAIhyC,IAAI,GAAGgyC,WAAW,GAAG,IAAH,GAAU,KAAKG,MAAL,EAAhC;;AACA,WAAOnyC,IAAI,KAAK,IAAhB,EAAsB;AAClB,UAAIiD,MAAM,CAACjD,IAAD,CAAV,EAAkB;AACd,eAAO,IAAP;AACH;;AACDA,MAAAA,IAAI,GAAGA,IAAI,CAACmyC,MAAL,EAAP;AACH;;AACD,WAAO,KAAP;AACH,GATD;AAUA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIX,EAAAA,IAAI,CAAC/mD,SAAL,CAAe2nD,mCAAf,GAAqD,UAAUnvC,MAAV,EAAkB;AACnE,SAAKF,YAAL,CAAkB,UAAU7L,KAAV,EAAiB;AAC/B,UAAIA,KAAK,CAACiM,QAAN,OAAqB,IAAzB,EAA+B;AAC3BF,QAAAA,MAAM,CAAC/L,KAAD,CAAN;AACH,OAFD,MAGK;AACDA,QAAAA,KAAK,CAACk7C,mCAAN,CAA0CnvC,MAA1C;AACH;AACJ,KAPD;AAQH,GATD;AAUA;AACJ;AACA;;;AACIuuC,EAAAA,IAAI,CAAC/mD,SAAL,CAAewI,IAAf,GAAsB,YAAY;AAC9B,WAAO,IAAIe,IAAJ,CAAS,KAAK09C,OAAL,KAAiB,IAAjB,GACV,KAAKD,KADK,GAEV,KAAKC,OAAL,CAAaz+C,IAAb,KAAsB,GAAtB,GAA4B,KAAKw+C,KAFhC,CAAP;AAGH,GAJD;AAKA;AACJ;AACA;;;AACID,EAAAA,IAAI,CAAC/mD,SAAL,CAAeW,IAAf,GAAsB,YAAY;AAC9B,WAAO,KAAKqmD,KAAZ;AACH,GAFD;AAGA;AACJ;AACA;;;AACID,EAAAA,IAAI,CAAC/mD,SAAL,CAAe0nD,MAAf,GAAwB,YAAY;AAChC,WAAO,KAAKT,OAAZ;AACH,GAFD;AAGA;AACJ;AACA;;;AACIF,EAAAA,IAAI,CAAC/mD,SAAL,CAAeqnD,cAAf,GAAgC,YAAY;AACxC,QAAI,KAAKJ,OAAL,KAAiB,IAArB,EAA2B;AACvB,WAAKA,OAAL,CAAaW,YAAb,CAA0B,KAAKZ,KAA/B,EAAsC,IAAtC;AACH;AACJ,GAJD;AAKA;AACJ;AACA;AACA;AACA;AACA;;;AACID,EAAAA,IAAI,CAAC/mD,SAAL,CAAe4nD,YAAf,GAA8B,UAAUhwC,SAAV,EAAqBnL,KAArB,EAA4B;AACtD,QAAIo7C,UAAU,GAAGp7C,KAAK,CAACpN,OAAN,EAAjB;AACA,QAAIyoD,WAAW,GAAG7pD,QAAQ,CAAC,KAAKwlB,KAAL,CAAWkO,QAAZ,EAAsB/Z,SAAtB,CAA1B;;AACA,QAAIiwC,UAAU,IAAIC,WAAlB,EAA+B;AAC3B,aAAO,KAAKrkC,KAAL,CAAWkO,QAAX,CAAoB/Z,SAApB,CAAP;AACA,WAAK6L,KAAL,CAAWqjC,UAAX;AACA,WAAKO,cAAL;AACH,KAJD,MAKK,IAAI,CAACQ,UAAD,IAAe,CAACC,WAApB,EAAiC;AAClC,WAAKrkC,KAAL,CAAWkO,QAAX,CAAoB/Z,SAApB,IAAiCnL,KAAK,CAACgX,KAAvC;AACA,WAAKA,KAAL,CAAWqjC,UAAX;AACA,WAAKO,cAAL;AACH;AACJ,GAbD;;AAcA,SAAON,IAAP;AACH,CA1LyB,EAA1B;AA4LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIgB,gBAAgB,GAAG,gBAAvB;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,uBAAuB,GAAG,EAA9B;AACA,IAAIC,iBAAJ;;AACA,CAAC,UAAUA,iBAAV,EAA6B;AAC1B;AACA;AACA;AACAA,EAAAA,iBAAiB,CAACA,iBAAiB,CAAC,KAAD,CAAjB,GAA2B,CAA5B,CAAjB,GAAkD,KAAlD,CAJ0B,CAK1B;AACA;;AACAA,EAAAA,iBAAiB,CAACA,iBAAiB,CAAC,MAAD,CAAjB,GAA4B,CAA7B,CAAjB,GAAmD,MAAnD,CAP0B,CAQ1B;AACA;;AACAA,EAAAA,iBAAiB,CAACA,iBAAiB,CAAC,WAAD,CAAjB,GAAiC,CAAlC,CAAjB,GAAwD,WAAxD,CAV0B,CAW1B;AACA;;AACAA,EAAAA,iBAAiB,CAACA,iBAAiB,CAAC,kBAAD,CAAjB,GAAwC,CAAzC,CAAjB,GAA+D,kBAA/D,CAb0B,CAc1B;;AACAA,EAAAA,iBAAiB,CAACA,iBAAiB,CAAC,aAAD,CAAjB,GAAmC,CAApC,CAAjB,GAA0D,aAA1D;AACH,CAhBD,EAgBGA,iBAAiB,KAAKA,iBAAiB,GAAG,EAAzB,CAhBpB;AAiBA;AACA;AACA;;;AACA,IAAIC,IAAI;AAAG;AAAe,YAAY;AAClC,WAASA,IAAT,CAActN,SAAd,EAAyBuN,gBAAzB,EAA2CC,GAA3C,EAAgD5I,kBAAhD,EAAoE;AAChE,SAAK5E,SAAL,GAAiBA,SAAjB;AACA,SAAKuN,gBAAL,GAAwBA,gBAAxB;AACA,SAAKC,GAAL,GAAWA,GAAX;AACA,SAAK5I,kBAAL,GAA0BA,kBAA1B;AACA,SAAK6I,eAAL,GAAuB,CAAvB;AACA,SAAKrd,cAAL,GAAsB,IAAtB;AACA,SAAKsd,WAAL,GAAmB,IAAI/c,UAAJ,EAAnB;AACA,SAAKgd,YAAL,GAAoB,CAApB;AACA,SAAKC,4BAAL,GAAoC,IAApC;AACA;;AACA,SAAKlY,aAAL,GAAqB,IAAI5e,kBAAJ,EAArB;AACA;;AACA,SAAK+2B,qBAAL,GAA6B,IAAI1B,IAAJ,EAA7B,CAbgE,CAchE;;AACA,SAAK2B,qBAAL,GAA6B,IAA7B,CAfgE,CAgBhE;;AACA,SAAKxoD,GAAL,GAAW,KAAK06C,SAAL,CAAe9rC,WAAf,EAAX;AACH;;AACDo5C,EAAAA,IAAI,CAACloD,SAAL,CAAe6xC,KAAf,GAAuB,YAAY;AAC/B,QAAI/xB,KAAK,GAAG,IAAZ;;AACA,SAAKkwB,MAAL,GAAcnG,YAAY,CAACC,aAAb,CAA2B,KAAK8Q,SAAhC,CAAd;;AACA,QAAI,KAAKuN,gBAAL,IAAyBl/C,YAAY,EAAzC,EAA6C;AACzC,WAAK6hC,OAAL,GAAe,IAAIkb,kBAAJ,CAAuB,KAAKpL,SAA5B,EAAuC,KAAKyE,aAAL,CAAmBj8C,IAAnB,CAAwB,IAAxB,CAAvC,EAAsE,KAAKo8C,kBAA3E,CAAf,CADyC,CAEzC;;AACA76C,MAAAA,UAAU,CAAC,KAAK26C,gBAAL,CAAsBl8C,IAAtB,CAA2B,IAA3B,EAAiC,IAAjC,CAAD,EAAyC,CAAzC,CAAV;AACH,KAJD,MAKK;AACD,UAAIulD,YAAY,GAAG,KAAKP,GAAL,CAASpR,OAAT,CAAiB,8BAAjB,CAAnB,CADC,CAED;;AACA,UAAI,OAAO2R,YAAP,KAAwB,WAAxB,IAAuCA,YAAY,KAAK,IAA5D,EAAkE;AAC9D,YAAI,OAAOA,YAAP,KAAwB,QAA5B,EAAsC;AAClC,gBAAM,IAAIllD,KAAJ,CAAU,oEAAV,CAAN;AACH;;AACD,YAAI;AACA1F,UAAAA,SAAS,CAAC4qD,YAAD,CAAT;AACH,SAFD,CAGA,OAAOvnD,CAAP,EAAU;AACN,gBAAM,IAAIqC,KAAJ,CAAU,oCAAoCrC,CAA9C,CAAN;AACH;AACJ;;AACD,WAAKsnD,qBAAL,GAA6B,IAAItJ,oBAAJ,CAAyB,KAAKxE,SAA9B,EAAyC,KAAKwN,GAAL,CAASpR,OAAT,CAAiB4R,KAA1D,EAAiE,KAAKvJ,aAAL,CAAmBj8C,IAAnB,CAAwB,IAAxB,CAAjE,EAAgG,KAAKk8C,gBAAL,CAAsBl8C,IAAtB,CAA2B,IAA3B,CAAhG,EAAkI,KAAKm8C,mBAAL,CAAyBn8C,IAAzB,CAA8B,IAA9B,CAAlI,EAAuK,KAAKo8C,kBAA5K,EAAgMmJ,YAAhM,CAA7B;AACA,WAAK7d,OAAL,GAAe,KAAK4d,qBAApB;AACH;;AACD,SAAKlJ,kBAAL,CAAwBqJ,sBAAxB,CAA+C,UAAUpK,KAAV,EAAiB;AAC5D3+B,MAAAA,KAAK,CAACgrB,OAAN,CAAc0T,gBAAd,CAA+BC,KAA/B;AACH,KAFD,EAzB+B,CA4B/B;AACA;;AACA,SAAKqK,cAAL,GAAsBjf,YAAY,CAACI,mBAAb,CAAiC,KAAK2Q,SAAtC,EAAiD,YAAY;AAAE,aAAO,IAAIhQ,aAAJ,CAAkB9qB,KAAK,CAACkwB,MAAxB,EAAgClwB,KAAK,CAACgrB,OAAtC,CAAP;AAAwD,KAAvH,CAAtB,CA9B+B,CA+B/B;;AACA,SAAKie,SAAL,GAAiB,IAAI1f,cAAJ,EAAjB;AACA,SAAK2f,aAAL,GAAqB,IAAI3kB,QAAJ,CAAa;AAC9B6C,MAAAA,cAAc,EAAE,UAAU5+B,KAAV,EAAiBg9B,GAAjB,EAAsBqc,aAAtB,EAAqCtuC,UAArC,EAAiD;AAC7D,YAAI41C,UAAU,GAAG,EAAjB;;AACA,YAAI1zC,IAAI,GAAGuK,KAAK,CAACipC,SAAN,CAAgBhzB,OAAhB,CAAwBztB,KAAK,CAACE,IAA9B,CAAX,CAF6D,CAG7D;AACA;;;AACA,YAAI,CAAC+M,IAAI,CAAClW,OAAL,EAAL,EAAqB;AACjB4pD,UAAAA,UAAU,GAAGnpC,KAAK,CAACkpC,aAAN,CAAoB9jB,oBAApB,CAAyC58B,KAAK,CAACE,IAA/C,EAAqD+M,IAArD,CAAb;AACA5Q,UAAAA,UAAU,CAAC,YAAY;AACnB0O,YAAAA,UAAU,CAAC,IAAD,CAAV;AACH,WAFS,EAEP,CAFO,CAAV;AAGH;;AACD,eAAO41C,UAAP;AACH,OAb6B;AAc9B1hB,MAAAA,aAAa,EAAE,YAAY,CAAG;AAdA,KAAb,CAArB;AAgBA,SAAK2hB,WAAL,CAAiB,WAAjB,EAA8B,KAA9B;AACA,SAAKC,eAAL,GAAuB,IAAI9kB,QAAJ,CAAa;AAChC6C,MAAAA,cAAc,EAAE,UAAU5+B,KAAV,EAAiBg9B,GAAjB,EAAsBqc,aAAtB,EAAqCtuC,UAArC,EAAiD;AAC7DyM,QAAAA,KAAK,CAACgrB,OAAN,CAAc4W,MAAd,CAAqBp5C,KAArB,EAA4Bq5C,aAA5B,EAA2Crc,GAA3C,EAAgD,UAAUsD,MAAV,EAAkB5kC,IAAlB,EAAwB;AACpE,cAAIq4B,MAAM,GAAGhpB,UAAU,CAACu1B,MAAD,EAAS5kC,IAAT,CAAvB;AACAioC,UAAAA,mCAAmC,CAACnsB,KAAK,CAACwoC,WAAP,EAAoBhgD,KAAK,CAACE,IAA1B,EAAgC6zB,MAAhC,CAAnC;AACH,SAHD,EAD6D,CAK7D;;;AACA,eAAO,EAAP;AACH,OAR+B;AAShCkL,MAAAA,aAAa,EAAE,UAAUj/B,KAAV,EAAiBg9B,GAAjB,EAAsB;AACjCxlB,QAAAA,KAAK,CAACgrB,OAAN,CAAciY,QAAd,CAAuBz6C,KAAvB,EAA8Bg9B,GAA9B;AACH;AAX+B,KAAb,CAAvB;AAaH,GA/DD;AAgEA;AACJ;AACA;;;AACI4iB,EAAAA,IAAI,CAACloD,SAAL,CAAeY,QAAf,GAA0B,YAAY;AAClC,WAAQ,CAAC,KAAKg6C,SAAL,CAAejtC,MAAf,GAAwB,UAAxB,GAAqC,SAAtC,IAAmD,KAAKitC,SAAL,CAAeltC,IAA1E;AACH,GAFD;AAGA;AACJ;AACA;;;AACIw6C,EAAAA,IAAI,CAACloD,SAAL,CAAeW,IAAf,GAAsB,YAAY;AAC9B,WAAO,KAAKi6C,SAAL,CAAehtC,SAAtB;AACH,GAFD;AAGA;AACJ;AACA;;;AACIs6C,EAAAA,IAAI,CAACloD,SAAL,CAAeopD,UAAf,GAA4B,YAAY;AACpC,QAAIC,UAAU,GAAG,KAAKN,SAAL,CAAehzB,OAAf,CAAuB,IAAIxsB,IAAJ,CAAS,wBAAT,CAAvB,CAAjB;AACA,QAAI+/C,MAAM,GAAGD,UAAU,CAAC/yC,GAAX,MAAoB,CAAjC;AACA,WAAO,IAAIia,IAAJ,GAAWC,OAAX,KAAuB84B,MAA9B;AACH,GAJD;AAKA;AACJ;AACA;;;AACIpB,EAAAA,IAAI,CAACloD,SAAL,CAAeupD,oBAAf,GAAsC,YAAY;AAC9C,WAAOl5B,kBAAkB,CAAC;AACtB0tB,MAAAA,SAAS,EAAE,KAAKqL,UAAL;AADW,KAAD,CAAzB;AAGH,GAJD;AAKA;AACJ;AACA;;;AACIlB,EAAAA,IAAI,CAACloD,SAAL,CAAeq/C,aAAf,GAA+B,UAAUv1C,UAAV,EAAsB9F,IAAtB,EAA4BwlD,OAA5B,EAAqClkB,GAArC,EAA0C;AACrE;AACA,SAAK+iB,eAAL;AACA,QAAI7/C,IAAI,GAAG,IAAIe,IAAJ,CAASO,UAAT,CAAX;AACA9F,IAAAA,IAAI,GAAG,KAAKwkD,4BAAL,GACD,KAAKA,4BAAL,CAAkC1+C,UAAlC,EAA8C9F,IAA9C,CADC,GAEDA,IAFN;AAGA,QAAIq4B,MAAM,GAAG,EAAb;;AACA,QAAIiJ,GAAJ,EAAS;AACL,UAAIkkB,OAAJ,EAAa;AACT,YAAIC,cAAc,GAAG3qD,GAAG,CAACkF,IAAD,EAAO,UAAU0lD,GAAV,EAAe;AAAE,iBAAOrnC,cAAc,CAACqnC,GAAD,CAArB;AAA6B,SAArD,CAAxB;AACArtB,QAAAA,MAAM,GAAG,KAAK8sB,eAAL,CAAqBtjB,qBAArB,CAA2Cr9B,IAA3C,EAAiDihD,cAAjD,EAAiEnkB,GAAjE,CAAT;AACH,OAHD,MAIK;AACD,YAAIqkB,UAAU,GAAGtnC,cAAc,CAACre,IAAD,CAA/B;AACAq4B,QAAAA,MAAM,GAAG,KAAK8sB,eAAL,CAAqB9jB,yBAArB,CAA+C78B,IAA/C,EAAqDmhD,UAArD,EAAiErkB,GAAjE,CAAT;AACH;AACJ,KATD,MAUK,IAAIkkB,OAAJ,EAAa;AACd,UAAIzuB,eAAe,GAAGj8B,GAAG,CAACkF,IAAD,EAAO,UAAU0lD,GAAV,EAAe;AAAE,eAAOrnC,cAAc,CAACqnC,GAAD,CAArB;AAA6B,OAArD,CAAzB;AACArtB,MAAAA,MAAM,GAAG,KAAK8sB,eAAL,CAAqBhkB,gBAArB,CAAsC38B,IAAtC,EAA4CuyB,eAA5C,CAAT;AACH,KAHI,MAIA;AACD,UAAI1X,IAAI,GAAGhB,cAAc,CAACre,IAAD,CAAzB;AACAq4B,MAAAA,MAAM,GAAG,KAAK8sB,eAAL,CAAqBjkB,oBAArB,CAA0C18B,IAA1C,EAAgD6a,IAAhD,CAAT;AACH;;AACD,QAAI+D,YAAY,GAAG5e,IAAnB;;AACA,QAAI6zB,MAAM,CAACh6B,MAAP,GAAgB,CAApB,EAAuB;AACnB;AACA;AACA+kB,MAAAA,YAAY,GAAG,KAAKwiC,kBAAL,CAAwBphD,IAAxB,CAAf;AACH;;AACDyjC,IAAAA,mCAAmC,CAAC,KAAKqc,WAAN,EAAmBlhC,YAAnB,EAAiCiV,MAAjC,CAAnC;AACH,GAjCD,CAnHkC,CAqJlC;;;AACA6rB,EAAAA,IAAI,CAACloD,SAAL,CAAe6pD,oBAAf,GAAsC,UAAUx8B,QAAV,EAAoB;AACtD,SAAKm7B,4BAAL,GAAoCn7B,QAApC;AACH,GAFD;;AAGA66B,EAAAA,IAAI,CAACloD,SAAL,CAAes/C,gBAAf,GAAkC,UAAUwK,aAAV,EAAyB;AACvD,SAAKZ,WAAL,CAAiB,WAAjB,EAA8BY,aAA9B;;AACA,QAAIA,aAAa,KAAK,KAAtB,EAA6B;AACzB,WAAKC,sBAAL;AACH;AACJ,GALD;;AAMA7B,EAAAA,IAAI,CAACloD,SAAL,CAAeu/C,mBAAf,GAAqC,UAAU3e,OAAV,EAAmB;AACpD,QAAI9gB,KAAK,GAAG,IAAZ;;AACAxZ,IAAAA,IAAI,CAACs6B,OAAD,EAAU,UAAU1gC,GAAV,EAAeC,KAAf,EAAsB;AAChC2f,MAAAA,KAAK,CAACopC,WAAN,CAAkBhpD,GAAlB,EAAuBC,KAAvB;AACH,KAFG,CAAJ;AAGH,GALD;;AAMA+nD,EAAAA,IAAI,CAACloD,SAAL,CAAekpD,WAAf,GAA6B,UAAUp/C,UAAV,EAAsB3J,KAAtB,EAA6B;AACtD,QAAIqI,IAAI,GAAG,IAAIe,IAAJ,CAAS,YAAYO,UAArB,CAAX;AACA,QAAIgM,OAAO,GAAGuM,cAAc,CAACliB,KAAD,CAA5B;AACA,SAAK4oD,SAAL,CAAexf,cAAf,CAA8B/gC,IAA9B,EAAoCsN,OAApC;AACA,QAAIumB,MAAM,GAAG,KAAK2sB,aAAL,CAAmB9jB,oBAAnB,CAAwC18B,IAAxC,EAA8CsN,OAA9C,CAAb;AACAm2B,IAAAA,mCAAmC,CAAC,KAAKqc,WAAN,EAAmB9/C,IAAnB,EAAyB6zB,MAAzB,CAAnC;AACH,GAND;;AAOA6rB,EAAAA,IAAI,CAACloD,SAAL,CAAegqD,eAAf,GAAiC,YAAY;AACzC,WAAO,KAAKzB,YAAL,EAAP;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIL,EAAAA,IAAI,CAACloD,SAAL,CAAe0Y,QAAf,GAA0B,UAAUpQ,KAAV,EAAiB;AACvC,QAAIwX,KAAK,GAAG,IAAZ,CADuC,CAEvC;;;AACA,QAAImqC,MAAM,GAAG,KAAKd,eAAL,CAAqBvhB,cAArB,CAAoCt/B,KAApC,CAAb;;AACA,QAAI2hD,MAAM,IAAI,IAAd,EAAoB;AAChB,aAAOC,OAAO,CAACz7B,OAAR,CAAgB,IAAIjL,YAAJ,CAAiBymC,MAAjB,EAAyB3hD,KAAK,CAAC+b,MAAN,EAAzB,EAAyC/b,KAAK,CAACgd,cAAN,GAAuBC,QAAvB,EAAzC,CAAhB,CAAP;AACH;;AACD,WAAO,KAAKulB,OAAL,CAAavqC,GAAb,CAAiB+H,KAAjB,EAAwB68C,IAAxB,CAA6B,UAAU1H,OAAV,EAAmB;AACnD,UAAIloC,IAAI,GAAG8M,cAAc,CAACo7B,OAAD,CAAzB;;AACA,UAAIphB,MAAM,GAAGvc,KAAK,CAACqpC,eAAN,CAAsBjkB,oBAAtB,CAA2C58B,KAAK,CAACE,IAAjD,EAAuD+M,IAAvD,CAAb;;AACAu2B,MAAAA,2BAA2B,CAAChsB,KAAK,CAACwoC,WAAP,EAAoBhgD,KAAK,CAACE,IAA1B,EAAgC6zB,MAAhC,CAA3B;AACA,aAAO6tB,OAAO,CAACz7B,OAAR,CAAgB,IAAIjL,YAAJ,CAAiBjO,IAAjB,EAAuBjN,KAAK,CAAC+b,MAAN,EAAvB,EAAuC/b,KAAK,CAACgd,cAAN,GAAuBC,QAAvB,EAAvC,CAAhB,CAAP;AACH,KALM,EAKJ,UAAUmJ,GAAV,EAAe;AACd5O,MAAAA,KAAK,CAACiwB,IAAN,CAAW,mBAAmBhyC,SAAS,CAACuK,KAAD,CAA5B,GAAsC,WAAtC,GAAoDomB,GAA/D;;AACA,aAAOw7B,OAAO,CAACv7B,MAAR,CAAe,IAAIlrB,KAAJ,CAAUirB,GAAV,CAAf,CAAP;AACH,KARM,CAAP;AASH,GAhBD;;AAiBAw5B,EAAAA,IAAI,CAACloD,SAAL,CAAe2T,eAAf,GAAiC,UAAUnL,IAAV,EAAgB2hD,MAAhB,EAAwBzpC,WAAxB,EAAqCrN,UAArC,EAAiD;AAC9E,QAAIyM,KAAK,GAAG,IAAZ;;AACA,SAAKiwB,IAAL,CAAU,KAAV,EAAiB;AACbvnC,MAAAA,IAAI,EAAEA,IAAI,CAAC5H,QAAL,EADO;AAEbT,MAAAA,KAAK,EAAEgqD,MAFM;AAGb34C,MAAAA,QAAQ,EAAEkP;AAHG,KAAjB,EAF8E,CAO9E;AACA;;AACA,QAAIiQ,YAAY,GAAG,KAAK44B,oBAAL,EAAnB;AACA,QAAIa,iBAAiB,GAAG/nC,cAAc,CAAC8nC,MAAD,EAASzpC,WAAT,CAAtC;AACA,QAAIsQ,QAAQ,GAAG,KAAKm4B,eAAL,CAAqB/4B,sBAArB,CAA4C5nB,IAA5C,CAAf;AACA,QAAIsN,OAAO,GAAGyb,4BAA4B,CAAC64B,iBAAD,EAAoBp5B,QAApB,EAA8BL,YAA9B,CAA1C;AACA,QAAIqR,OAAO,GAAG,KAAKgoB,eAAL,EAAd;AACA,QAAI3tB,MAAM,GAAG,KAAK8sB,eAAL,CAAqBxkB,kBAArB,CAAwCn8B,IAAxC,EAA8CsN,OAA9C,EAAuDksB,OAAvD,EAAgE,IAAhE,CAAb;AACA0J,IAAAA,qBAAqB,CAAC,KAAK4c,WAAN,EAAmBjsB,MAAnB,CAArB;AACA,SAAKyO,OAAL,CAAayT,GAAb,CAAiB/1C,IAAI,CAAC5H,QAAL,EAAjB,EAAkCwpD,iBAAiB,CAAC9zC,GAAlB;AAAsB;AAAY,QAAlC,CAAlC,EAA2E,UAAUsyB,MAAV,EAAkB2a,WAAlB,EAA+B;AACtG,UAAI8G,OAAO,GAAGzhB,MAAM,KAAK,IAAzB;;AACA,UAAI,CAACyhB,OAAL,EAAc;AACV3mD,QAAAA,IAAI,CAAC,YAAY8E,IAAZ,GAAmB,WAAnB,GAAiCogC,MAAlC,CAAJ;AACH;;AACD,UAAI0hB,WAAW,GAAGxqC,KAAK,CAACqpC,eAAN,CAAsBjwB,YAAtB,CAAmC8I,OAAnC,EAA4C,CAACqoB,OAA7C,CAAlB;;AACApe,MAAAA,mCAAmC,CAACnsB,KAAK,CAACwoC,WAAP,EAAoB9/C,IAApB,EAA0B8hD,WAA1B,CAAnC;;AACAxqC,MAAAA,KAAK,CAACyqC,sBAAN,CAA6Bl3C,UAA7B,EAAyCu1B,MAAzC,EAAiD2a,WAAjD;AACH,KARD;AASA,QAAIn8B,YAAY,GAAG,KAAKojC,kBAAL,CAAwBhiD,IAAxB,CAAnB;AACA,SAAKohD,kBAAL,CAAwBxiC,YAAxB,EA1B8E,CA2B9E;;AACA6kB,IAAAA,mCAAmC,CAAC,KAAKqc,WAAN,EAAmBlhC,YAAnB,EAAiC,EAAjC,CAAnC;AACH,GA7BD;;AA8BA8gC,EAAAA,IAAI,CAACloD,SAAL,CAAe6B,MAAf,GAAwB,UAAU2G,IAAV,EAAgBiiD,eAAhB,EAAiCp3C,UAAjC,EAA6C;AACjE,QAAIyM,KAAK,GAAG,IAAZ;;AACA,SAAKiwB,IAAL,CAAU,QAAV,EAAoB;AAAEvnC,MAAAA,IAAI,EAAEA,IAAI,CAAC5H,QAAL,EAAR;AAAyBT,MAAAA,KAAK,EAAEsqD;AAAhC,KAApB,EAFiE,CAGjE;;AACA,QAAIpqB,KAAK,GAAG,IAAZ;AACA,QAAI1P,YAAY,GAAG,KAAK44B,oBAAL,EAAnB;AACA,QAAIxuB,eAAe,GAAG,EAAtB;AACAz0B,IAAAA,IAAI,CAACmkD,eAAD,EAAkB,UAAUC,UAAV,EAAsBC,YAAtB,EAAoC;AACtDtqB,MAAAA,KAAK,GAAG,KAAR;AACAtF,MAAAA,eAAe,CAAC2vB,UAAD,CAAf,GAA8Br5B,wBAAwB,CAACzmB,SAAS,CAACpC,IAAD,EAAOkiD,UAAP,CAAV,EAA8BroC,cAAc,CAACsoC,YAAD,CAA5C,EAA4D7qC,KAAK,CAACqpC,eAAlE,EAAmFx4B,YAAnF,CAAtD;AACH,KAHG,CAAJ;;AAIA,QAAI,CAAC0P,KAAL,EAAY;AACR,UAAIuqB,SAAS,GAAG,KAAKZ,eAAL,EAAhB;AACA,UAAI3tB,MAAM,GAAG,KAAK8sB,eAAL,CAAqBrkB,cAArB,CAAoCt8B,IAApC,EAA0CuyB,eAA1C,EAA2D6vB,SAA3D,CAAb;AACAlf,MAAAA,qBAAqB,CAAC,KAAK4c,WAAN,EAAmBjsB,MAAnB,CAArB;AACA,WAAKyO,OAAL,CAAa/R,KAAb,CAAmBvwB,IAAI,CAAC5H,QAAL,EAAnB,EAAoC6pD,eAApC,EAAqD,UAAU7hB,MAAV,EAAkB2a,WAAlB,EAA+B;AAChF,YAAI8G,OAAO,GAAGzhB,MAAM,KAAK,IAAzB;;AACA,YAAI,CAACyhB,OAAL,EAAc;AACV3mD,UAAAA,IAAI,CAAC,eAAe8E,IAAf,GAAsB,WAAtB,GAAoCogC,MAArC,CAAJ;AACH;;AACD,YAAI0hB,WAAW,GAAGxqC,KAAK,CAACqpC,eAAN,CAAsBjwB,YAAtB,CAAmC0xB,SAAnC,EAA8C,CAACP,OAA/C,CAAlB;;AACA,YAAIjjC,YAAY,GAAGkjC,WAAW,CAACjoD,MAAZ,GAAqB,CAArB,GAAyByd,KAAK,CAAC8pC,kBAAN,CAAyBphD,IAAzB,CAAzB,GAA0DA,IAA7E;AACAyjC,QAAAA,mCAAmC,CAACnsB,KAAK,CAACwoC,WAAP,EAAoBlhC,YAApB,EAAkCkjC,WAAlC,CAAnC;;AACAxqC,QAAAA,KAAK,CAACyqC,sBAAN,CAA6Bl3C,UAA7B,EAAyCu1B,MAAzC,EAAiD2a,WAAjD;AACH,OATD;AAUAj9C,MAAAA,IAAI,CAACmkD,eAAD,EAAkB,UAAUve,WAAV,EAAuB;AACzC,YAAI9kB,YAAY,GAAGtH,KAAK,CAAC0qC,kBAAN,CAAyB5/C,SAAS,CAACpC,IAAD,EAAO0jC,WAAP,CAAlC,CAAnB;;AACApsB,QAAAA,KAAK,CAAC8pC,kBAAN,CAAyBxiC,YAAzB;AACH,OAHG,CAAJ,CAdQ,CAkBR;;AACA6kB,MAAAA,mCAAmC,CAAC,KAAKqc,WAAN,EAAmB9/C,IAAnB,EAAyB,EAAzB,CAAnC;AACH,KApBD,MAqBK;AACDrF,MAAAA,GAAG,CAAC,sDAAD,CAAH;AACA,WAAKonD,sBAAL,CAA4Bl3C,UAA5B,EAAwC,IAAxC;AACH;AACJ,GApCD;AAqCA;AACJ;AACA;;;AACI60C,EAAAA,IAAI,CAACloD,SAAL,CAAe+pD,sBAAf,GAAwC,YAAY;AAChD,QAAIjqC,KAAK,GAAG,IAAZ;;AACA,SAAKiwB,IAAL,CAAU,oBAAV;AACA,QAAIpf,YAAY,GAAG,KAAK44B,oBAAL,EAAnB;AACA,QAAIsB,wBAAwB,GAAG,IAAIn5B,kBAAJ,EAA/B;AACA,SAAK4e,aAAL,CAAmB/d,WAAnB,CAA+BxoB,YAAY,EAA3C,EAA+C,UAAUvB,IAAV,EAAgB+M,IAAhB,EAAsB;AACjE,UAAIu1C,QAAQ,GAAGz5B,wBAAwB,CAAC7oB,IAAD,EAAO+M,IAAP,EAAauK,KAAK,CAACqpC,eAAnB,EAAoCx4B,YAApC,CAAvC;AACAk6B,MAAAA,wBAAwB,CAAC74B,QAAzB,CAAkCxpB,IAAlC,EAAwCsiD,QAAxC;AACH,KAHD;AAIA,QAAIzuB,MAAM,GAAG,EAAb;AACAwuB,IAAAA,wBAAwB,CAACt4B,WAAzB,CAAqCxoB,YAAY,EAAjD,EAAqD,UAAUvB,IAAV,EAAgB6a,IAAhB,EAAsB;AACvEgZ,MAAAA,MAAM,GAAGA,MAAM,CAAC+B,MAAP,CAActe,KAAK,CAACqpC,eAAN,CAAsBjkB,oBAAtB,CAA2C18B,IAA3C,EAAiD6a,IAAjD,CAAd,CAAT;;AACA,UAAI+D,YAAY,GAAGtH,KAAK,CAAC0qC,kBAAN,CAAyBhiD,IAAzB,CAAnB;;AACAsX,MAAAA,KAAK,CAAC8pC,kBAAN,CAAyBxiC,YAAzB;AACH,KAJD;AAKA,SAAKkpB,aAAL,GAAqB,IAAI5e,kBAAJ,EAArB;AACAua,IAAAA,mCAAmC,CAAC,KAAKqc,WAAN,EAAmBv+C,YAAY,EAA/B,EAAmCsyB,MAAnC,CAAnC;AACH,GAjBD;;AAkBA6rB,EAAAA,IAAI,CAACloD,SAAL,CAAeuT,kBAAf,GAAoC,UAAU/K,IAAV,EAAgB6K,UAAhB,EAA4B;AAC5D,QAAIyM,KAAK,GAAG,IAAZ;;AACA,SAAKgrB,OAAL,CAAav3B,kBAAb,CAAgC/K,IAAI,CAAC5H,QAAL,EAAhC,EAAiD,UAAUgoC,MAAV,EAAkB2a,WAAlB,EAA+B;AAC5E,UAAI3a,MAAM,KAAK,IAAf,EAAqB;AACjB9oB,QAAAA,KAAK,CAACwwB,aAAN,CAAoBpe,MAApB,CAA2B1pB,IAA3B;AACH;;AACDsX,MAAAA,KAAK,CAACyqC,sBAAN,CAA6Bl3C,UAA7B,EAAyCu1B,MAAzC,EAAiD2a,WAAjD;AACH,KALD;AAMH,GARD;;AASA2E,EAAAA,IAAI,CAACloD,SAAL,CAAe0T,eAAf,GAAiC,UAAUlL,IAAV,EAAgBrI,KAAhB,EAAuBkT,UAAvB,EAAmC;AAChE,QAAIyM,KAAK,GAAG,IAAZ;;AACA,QAAIhK,OAAO,GAAGuM,cAAc,CAACliB,KAAD,CAA5B;AACA,SAAK2qC,OAAL,CAAa4T,eAAb,CAA6Bl2C,IAAI,CAAC5H,QAAL,EAA7B,EAA8CkV,OAAO,CAACQ,GAAR;AAAY;AAAY,QAAxB,CAA9C,EAA6E,UAAUsyB,MAAV,EAAkB2a,WAAlB,EAA+B;AACxG,UAAI3a,MAAM,KAAK,IAAf,EAAqB;AACjB9oB,QAAAA,KAAK,CAACwwB,aAAN,CAAoBte,QAApB,CAA6BxpB,IAA7B,EAAmCsN,OAAnC;AACH;;AACDgK,MAAAA,KAAK,CAACyqC,sBAAN,CAA6Bl3C,UAA7B,EAAyCu1B,MAAzC,EAAiD2a,WAAjD;AACH,KALD;AAMH,GATD;;AAUA2E,EAAAA,IAAI,CAACloD,SAAL,CAAe4T,2BAAf,GAA6C,UAAUpL,IAAV,EAAgBrI,KAAhB,EAAuBqR,QAAvB,EAAiC6B,UAAjC,EAA6C;AACtF,QAAIyM,KAAK,GAAG,IAAZ;;AACA,QAAIhK,OAAO,GAAGuM,cAAc,CAACliB,KAAD,EAAQqR,QAAR,CAA5B;AACA,SAAKs5B,OAAL,CAAa4T,eAAb,CAA6Bl2C,IAAI,CAAC5H,QAAL,EAA7B,EAA8CkV,OAAO,CAACQ,GAAR;AAAY;AAAY,QAAxB,CAA9C,EAA6E,UAAUsyB,MAAV,EAAkB2a,WAAlB,EAA+B;AACxG,UAAI3a,MAAM,KAAK,IAAf,EAAqB;AACjB9oB,QAAAA,KAAK,CAACwwB,aAAN,CAAoBte,QAApB,CAA6BxpB,IAA7B,EAAmCsN,OAAnC;AACH;;AACDgK,MAAAA,KAAK,CAACyqC,sBAAN,CAA6Bl3C,UAA7B,EAAyCu1B,MAAzC,EAAiD2a,WAAjD;AACH,KALD;AAMH,GATD;;AAUA2E,EAAAA,IAAI,CAACloD,SAAL,CAAe+T,kBAAf,GAAoC,UAAUvL,IAAV,EAAgBiiD,eAAhB,EAAiCp3C,UAAjC,EAA6C;AAC7E,QAAIyM,KAAK,GAAG,IAAZ;;AACA,QAAIzgB,OAAO,CAACorD,eAAD,CAAX,EAA8B;AAC1BtnD,MAAAA,GAAG,CAAC,qEAAD,CAAH;AACA,WAAKonD,sBAAL,CAA4Bl3C,UAA5B,EAAwC,IAAxC;AACA;AACH;;AACD,SAAKy3B,OAAL,CAAa6T,iBAAb,CAA+Bn2C,IAAI,CAAC5H,QAAL,EAA/B,EAAgD6pD,eAAhD,EAAiE,UAAU7hB,MAAV,EAAkB2a,WAAlB,EAA+B;AAC5F,UAAI3a,MAAM,KAAK,IAAf,EAAqB;AACjBtiC,QAAAA,IAAI,CAACmkD,eAAD,EAAkB,UAAU7yC,SAAV,EAAqBI,SAArB,EAAgC;AAClD,cAAIE,YAAY,GAAGmK,cAAc,CAACrK,SAAD,CAAjC;;AACA8H,UAAAA,KAAK,CAACwwB,aAAN,CAAoBte,QAApB,CAA6BpnB,SAAS,CAACpC,IAAD,EAAOoP,SAAP,CAAtC,EAAyDM,YAAzD;AACH,SAHG,CAAJ;AAIH;;AACD4H,MAAAA,KAAK,CAACyqC,sBAAN,CAA6Bl3C,UAA7B,EAAyCu1B,MAAzC,EAAiD2a,WAAjD;AACH,KARD;AASH,GAhBD;;AAiBA2E,EAAAA,IAAI,CAACloD,SAAL,CAAe+tB,wBAAf,GAA0C,UAAUzlB,KAAV,EAAiBic,iBAAjB,EAAoC;AAC1E,QAAI8X,MAAJ;;AACA,QAAIryB,YAAY,CAAC1B,KAAK,CAACE,IAAP,CAAZ,KAA6B,OAAjC,EAA0C;AACtC6zB,MAAAA,MAAM,GAAG,KAAK2sB,aAAL,CAAmBnrB,oBAAnB,CAAwCv1B,KAAxC,EAA+Cic,iBAA/C,CAAT;AACH,KAFD,MAGK;AACD8X,MAAAA,MAAM,GAAG,KAAK8sB,eAAL,CAAqBtrB,oBAArB,CAA0Cv1B,KAA1C,EAAiDic,iBAAjD,CAAT;AACH;;AACDunB,IAAAA,2BAA2B,CAAC,KAAKwc,WAAN,EAAmBhgD,KAAK,CAACE,IAAzB,EAA+B6zB,MAA/B,CAA3B;AACH,GATD;;AAUA6rB,EAAAA,IAAI,CAACloD,SAAL,CAAekuB,2BAAf,GAA6C,UAAU5lB,KAAV,EAAiBic,iBAAjB,EAAoC;AAC7E;AACA;AACA,QAAI8X,MAAJ;;AACA,QAAIryB,YAAY,CAAC1B,KAAK,CAACE,IAAP,CAAZ,KAA6B,OAAjC,EAA0C;AACtC6zB,MAAAA,MAAM,GAAG,KAAK2sB,aAAL,CAAmBlrB,uBAAnB,CAA2Cx1B,KAA3C,EAAkDic,iBAAlD,CAAT;AACH,KAFD,MAGK;AACD8X,MAAAA,MAAM,GAAG,KAAK8sB,eAAL,CAAqBrrB,uBAArB,CAA6Cx1B,KAA7C,EAAoDic,iBAApD,CAAT;AACH;;AACDunB,IAAAA,2BAA2B,CAAC,KAAKwc,WAAN,EAAmBhgD,KAAK,CAACE,IAAzB,EAA+B6zB,MAA/B,CAA3B;AACH,GAXD;;AAYA6rB,EAAAA,IAAI,CAACloD,SAAL,CAAeqlD,SAAf,GAA2B,YAAY;AACnC,QAAI,KAAKqD,qBAAT,EAAgC;AAC5B,WAAKA,qBAAL,CAA2BrD,SAA3B,CAAqC0C,gBAArC;AACH;AACJ,GAJD;;AAKAG,EAAAA,IAAI,CAACloD,SAAL,CAAeslD,MAAf,GAAwB,YAAY;AAChC,QAAI,KAAKoD,qBAAT,EAAgC;AAC5B,WAAKA,qBAAL,CAA2BpD,MAA3B,CAAkCyC,gBAAlC;AACH;AACJ,GAJD;;AAKAG,EAAAA,IAAI,CAACloD,SAAL,CAAemrC,KAAf,GAAuB,UAAU4f,SAAV,EAAqB;AACxC,QAAIA,SAAS,KAAK,KAAK,CAAvB,EAA0B;AAAEA,MAAAA,SAAS,GAAG,KAAZ;AAAoB;;AAChD,QAAI,OAAOnF,OAAP,KAAmB,WAAvB,EAAoC;AAChC;AACH;;AACD,QAAIza,KAAJ;;AACA,QAAI4f,SAAJ,EAAe;AACX,UAAI,CAAC,KAAK/f,cAAV,EAA0B;AACtB,aAAKA,cAAL,GAAsB,IAAIZ,aAAJ,CAAkB,KAAK4F,MAAvB,CAAtB;AACH;;AACD7E,MAAAA,KAAK,GAAG,KAAKH,cAAL,CAAoBzqC,GAApB,EAAR;AACH,KALD,MAMK;AACD4qC,MAAAA,KAAK,GAAG,KAAK6E,MAAL,CAAYzvC,GAAZ,EAAR;AACH;;AACD,QAAIyqD,WAAW,GAAG3+C,MAAM,CAACzG,IAAP,CAAYulC,KAAZ,EAAmB8f,MAAnB,CAA0B,UAAUC,aAAV,EAAyBC,YAAzB,EAAuC;AAC/E,aAAOvmD,IAAI,CAACuH,GAAL,CAASg/C,YAAY,CAAC9oD,MAAtB,EAA8B6oD,aAA9B,CAAP;AACH,KAFiB,EAEf,CAFe,CAAlB;AAGA5kD,IAAAA,IAAI,CAAC6kC,KAAD,EAAQ,UAAUX,IAAV,EAAgBrqC,KAAhB,EAAuB;AAC/B,UAAIirD,UAAU,GAAG5gB,IAAjB,CAD+B,CAE/B;;AACA,WAAK,IAAIjoC,CAAC,GAAGioC,IAAI,CAACnoC,MAAlB,EAA0BE,CAAC,GAAGyoD,WAAW,GAAG,CAA5C,EAA+CzoD,CAAC,EAAhD,EAAoD;AAChD6oD,QAAAA,UAAU,IAAI,GAAd;AACH;;AACDxF,MAAAA,OAAO,CAACziD,GAAR,CAAYioD,UAAU,GAAGjrD,KAAzB;AACH,KAPG,CAAJ;AAQH,GA1BD;;AA2BA+nD,EAAAA,IAAI,CAACloD,SAAL,CAAeqrD,qBAAf,GAAuC,UAAUC,MAAV,EAAkB;AACrD,SAAKtb,MAAL,CAAYrG,gBAAZ,CAA6B2hB,MAA7B;AACA,SAAKxC,cAAL,CAAoB5d,WAApB,CAAgCogB,MAAhC;AACH,GAHD;;AAIApD,EAAAA,IAAI,CAACloD,SAAL,CAAe+vC,IAAf,GAAsB,YAAY;AAC9B,QAAI7tC,OAAO,GAAG,EAAd;;AACA,SAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGC,SAAS,CAACC,MAAhC,EAAwCF,EAAE,EAA1C,EAA8C;AAC1CD,MAAAA,OAAO,CAACC,EAAD,CAAP,GAAcC,SAAS,CAACD,EAAD,CAAvB;AACH;;AACD,QAAImB,MAAM,GAAG,EAAb;;AACA,QAAI,KAAKolD,qBAAT,EAAgC;AAC5BplD,MAAAA,MAAM,GAAG,KAAKolD,qBAAL,CAA2BjnD,EAA3B,GAAgC,GAAzC;AACH;;AACD0B,IAAAA,GAAG,CAACR,KAAJ,CAAU,KAAK,CAAf,EAAkBnF,QAAQ,CAAC,CAAC8F,MAAD,CAAD,EAAWpB,OAAX,CAA1B;AACH,GAVD;;AAWAgmD,EAAAA,IAAI,CAACloD,SAAL,CAAeuqD,sBAAf,GAAwC,UAAUl9B,QAAV,EAAoBub,MAApB,EAA4B2a,WAA5B,EAAyC;AAC7E,QAAIl2B,QAAJ,EAAc;AACVtkB,MAAAA,cAAc,CAAC,YAAY;AACvB,YAAI6/B,MAAM,KAAK,IAAf,EAAqB;AACjBvb,UAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,SAFD,MAGK;AACD,cAAIhlB,IAAI,GAAG,CAACugC,MAAM,IAAI,OAAX,EAAoBngC,WAApB,EAAX;AACA,cAAInG,OAAO,GAAG+F,IAAd;;AACA,cAAIk7C,WAAJ,EAAiB;AACbjhD,YAAAA,OAAO,IAAI,OAAOihD,WAAlB;AACH;;AACD,cAAIhgD,KAAK,GAAG,IAAIE,KAAJ,CAAUnB,OAAV,CAAZ,CANC,CAOD;;AACAiB,UAAAA,KAAK,CAAC8E,IAAN,GAAaA,IAAb;AACAglB,UAAAA,QAAQ,CAAC9pB,KAAD,CAAR;AACH;AACJ,OAfa,CAAd;AAgBH;AACJ,GAnBD;;AAoBA8I,EAAAA,MAAM,CAACC,cAAP,CAAsB47C,IAAI,CAACloD,SAA3B,EAAsC,UAAtC,EAAkD;AAC9CO,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKgrD,UAAL,KAAoB,KAAKA,UAAL,GAAkB,IAAIC,QAAJ,CAAa,IAAb,CAAtC,CAAP;AACH,KAH6C;AAI9Cj/C,IAAAA,UAAU,EAAE,KAJkC;AAK9CC,IAAAA,YAAY,EAAE;AALgC,GAAlD;AAOA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI07C,EAAAA,IAAI,CAACloD,SAAL,CAAeyrD,gBAAf,GAAkC,UAAUjjD,IAAV,EAAgBkjD,iBAAhB,EAAmCr4C,UAAnC,EAA+Cs4C,YAA/C,EAA6D;AAC3F,SAAK5b,IAAL,CAAU,oBAAoBvnC,IAA9B,EAD2F,CAE3F;;AACA,QAAIylB,aAAa,GAAG,YAAY,CAAG,CAAnC;;AACA,QAAI29B,QAAQ,GAAG,IAAIC,SAAJ,CAAc,IAAd,EAAoBrjD,IAApB,CAAf;AACAojD,IAAAA,QAAQ,CAACx+B,EAAT,CAAY,OAAZ,EAAqBa,aAArB;;AACA,QAAI69B,SAAS,GAAG,YAAY;AACxBF,MAAAA,QAAQ,CAAC59B,GAAT,CAAa,OAAb,EAAsBC,aAAtB;AACH,KAFD,CAN2F,CAS3F;;;AACA,QAAI89B,WAAW,GAAG;AACdvjD,MAAAA,IAAI,EAAEA,IADQ;AAEd3G,MAAAA,MAAM,EAAE6pD,iBAFM;AAGdr4C,MAAAA,UAAU,EAAEA,UAHE;AAId;AACAu1B,MAAAA,MAAM,EAAE,IALM;AAMd;AACA;AACAojB,MAAAA,KAAK,EAAExqD,aAAa,EARN;AASd;AACAmqD,MAAAA,YAAY,EAAEA,YAVA;AAWd;AACAM,MAAAA,UAAU,EAAE,CAZE;AAad;AACAH,MAAAA,SAAS,EAAEA,SAdG;AAed;AACAI,MAAAA,WAAW,EAAE,IAhBC;AAiBdC,MAAAA,cAAc,EAAE,IAjBF;AAkBdC,MAAAA,oBAAoB,EAAE,IAlBR;AAmBdC,MAAAA,wBAAwB,EAAE,IAnBZ;AAoBdC,MAAAA,6BAA6B,EAAE;AApBjB,KAAlB,CAV2F,CAgC3F;;AACA,QAAIC,YAAY,GAAG,KAAKC,eAAL,CAAqBhkD,IAArB,CAAnB;AACAujD,IAAAA,WAAW,CAACK,oBAAZ,GAAmCG,YAAnC;AACA,QAAIpC,MAAM,GAAG4B,WAAW,CAAClqD,MAAZ,CAAmB0qD,YAAY,CAACj2C,GAAb,EAAnB,CAAb;;AACA,QAAI6zC,MAAM,KAAKt4C,SAAf,EAA0B;AACtB;AACAk6C,MAAAA,WAAW,CAACD,SAAZ;AACAC,MAAAA,WAAW,CAACM,wBAAZ,GAAuC,IAAvC;AACAN,MAAAA,WAAW,CAACO,6BAAZ,GAA4C,IAA5C;;AACA,UAAIP,WAAW,CAAC14C,UAAhB,EAA4B;AACxB;AACA,YAAIa,QAAQ,GAAG,IAAIsP,YAAJ,CAAiBuoC,WAAW,CAACK,oBAA7B,EAAmD,IAAIP,SAAJ,CAAc,IAAd,EAAoBE,WAAW,CAACvjD,IAAhC,CAAnD,EAA0FwR,cAA1F,CAAf;AACA+xC,QAAAA,WAAW,CAAC14C,UAAZ,CAAuB,IAAvB,EAA6B,KAA7B,EAAoCa,QAApC;AACH;AACJ,KAVD,MAWK;AACDpC,MAAAA,oBAAoB,CAAC,oCAAD,EAAuCq4C,MAAvC,EAA+C4B,WAAW,CAACvjD,IAA3D,CAApB,CADC,CAED;;AACAujD,MAAAA,WAAW,CAACnjB,MAAZ,GAAqBqf,iBAAiB,CAACwE,GAAvC;AACA,UAAIC,SAAS,GAAG,KAAKjE,qBAAL,CAA2BvB,OAA3B,CAAmC1+C,IAAnC,CAAhB;AACA,UAAImkD,SAAS,GAAGD,SAAS,CAACh0C,QAAV,MAAwB,EAAxC;AACAi0C,MAAAA,SAAS,CAAC7mD,IAAV,CAAeimD,WAAf;AACAW,MAAAA,SAAS,CAACtF,QAAV,CAAmBuF,SAAnB,EAPC,CAQD;AACA;AACA;AACA;;AACA,UAAIC,eAAe,GAAG,KAAK,CAA3B;;AACA,UAAI,OAAOzC,MAAP,KAAkB,QAAlB,IACAA,MAAM,KAAK,IADX,IAEAlsD,QAAQ,CAACksD,MAAD,EAAS,WAAT,CAFZ,EAEmC;AAC/B;AACAyC,QAAAA,eAAe,GAAG/tD,OAAO,CAACsrD,MAAD,EAAS,WAAT,CAAzB;AACAjsD,QAAAA,MAAM,CAACqT,eAAe,CAACq7C,eAAD,CAAhB,EAAmC,+CACrC,wEADE,CAAN;AAEH,OAPD,MAQK;AACD,YAAIC,WAAW,GAAG,KAAK1D,eAAL,CAAqB/4B,sBAArB,CAA4C5nB,IAA5C,KACd6X,YAAY,CAAC9I,UADjB;AAEAq1C,QAAAA,eAAe,GAAGC,WAAW,CAAC31C,WAAZ,GAA0BZ,GAA1B,EAAlB;AACH;;AACD,UAAIqa,YAAY,GAAG,KAAK44B,oBAAL,EAAnB;AACA,UAAIa,iBAAiB,GAAG/nC,cAAc,CAAC8nC,MAAD,EAASyC,eAAT,CAAtC;AACA,UAAI92C,OAAO,GAAGyb,4BAA4B,CAAC64B,iBAAD,EAAoBmC,YAApB,EAAkC57B,YAAlC,CAA1C;AACAo7B,MAAAA,WAAW,CAACM,wBAAZ,GAAuCjC,iBAAvC;AACA2B,MAAAA,WAAW,CAACO,6BAAZ,GAA4Cx2C,OAA5C;AACAi2C,MAAAA,WAAW,CAACI,cAAZ,GAA6B,KAAKnC,eAAL,EAA7B;AACA,UAAI3tB,MAAM,GAAG,KAAK8sB,eAAL,CAAqBxkB,kBAArB,CAAwCn8B,IAAxC,EAA8CsN,OAA9C,EAAuDi2C,WAAW,CAACI,cAAnE,EAAmFJ,WAAW,CAACJ,YAA/F,CAAb;AACA1f,MAAAA,mCAAmC,CAAC,KAAKqc,WAAN,EAAmB9/C,IAAnB,EAAyB6zB,MAAzB,CAAnC;AACA,WAAKywB,sBAAL;AACH;AACJ,GAnFD;AAoFA;AACJ;AACA;;;AACI5E,EAAAA,IAAI,CAACloD,SAAL,CAAewsD,eAAf,GAAiC,UAAUhkD,IAAV,EAAgBukD,WAAhB,EAA6B;AAC1D,WAAQ,KAAK5D,eAAL,CAAqB/4B,sBAArB,CAA4C5nB,IAA5C,EAAkDukD,WAAlD,KACJ1sC,YAAY,CAAC9I,UADjB;AAEH,GAHD;AAIA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI2wC,EAAAA,IAAI,CAACloD,SAAL,CAAe8sD,sBAAf,GAAwC,UAAUv3C,IAAV,EAAgB;AACpD,QAAIuK,KAAK,GAAG,IAAZ;;AACA,QAAIvK,IAAI,KAAK,KAAK,CAAlB,EAAqB;AAAEA,MAAAA,IAAI,GAAG,KAAKkzC,qBAAZ;AAAoC,KAFP,CAGpD;;;AACA,QAAI,CAAClzC,IAAL,EAAW;AACP,WAAKy3C,oCAAL,CAA0Cz3C,IAA1C;AACH;;AACD,QAAIA,IAAI,CAACmD,QAAL,OAAoB,IAAxB,EAA8B;AAC1B,UAAIu0C,KAAK,GAAG,KAAKC,sBAAL,CAA4B33C,IAA5B,CAAZ;AACArX,MAAAA,MAAM,CAAC+uD,KAAK,CAAC5qD,MAAN,GAAe,CAAhB,EAAmB,uCAAnB,CAAN;AACA,UAAI8qD,MAAM,GAAGF,KAAK,CAACtmC,KAAN,CAAY,UAAUolC,WAAV,EAAuB;AAC5C,eAAOA,WAAW,CAACnjB,MAAZ,KAAuBqf,iBAAiB,CAACwE,GAAhD;AACH,OAFY,CAAb,CAH0B,CAM1B;;AACA,UAAIU,MAAJ,EAAY;AACR,aAAKC,qBAAL,CAA2B73C,IAAI,CAAC/M,IAAL,EAA3B,EAAwCykD,KAAxC;AACH;AACJ,KAVD,MAWK,IAAI13C,IAAI,CAAC4O,WAAL,EAAJ,EAAwB;AACzB5O,MAAAA,IAAI,CAAC+C,YAAL,CAAkB,UAAUN,SAAV,EAAqB;AACnC8H,QAAAA,KAAK,CAACgtC,sBAAN,CAA6B90C,SAA7B;AACH,OAFD;AAGH;AACJ,GAvBD;AAwBA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIkwC,EAAAA,IAAI,CAACloD,SAAL,CAAeotD,qBAAf,GAAuC,UAAU5kD,IAAV,EAAgBykD,KAAhB,EAAuB;AAC1D,QAAIntC,KAAK,GAAG,IAAZ,CAD0D,CAE1D;;;AACA,QAAIutC,YAAY,GAAGJ,KAAK,CAACnuD,GAAN,CAAU,UAAUwuD,GAAV,EAAe;AACxC,aAAOA,GAAG,CAACnB,cAAX;AACH,KAFkB,CAAnB;AAGA,QAAIoB,WAAW,GAAG,KAAKf,eAAL,CAAqBhkD,IAArB,EAA2B6kD,YAA3B,CAAlB;AACA,QAAIG,UAAU,GAAGD,WAAjB;AACA,QAAIE,UAAU,GAAGF,WAAW,CAAC50C,IAAZ,EAAjB;;AACA,SAAK,IAAIpW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0qD,KAAK,CAAC5qD,MAA1B,EAAkCE,CAAC,EAAnC,EAAuC;AACnC,UAAI+qD,GAAG,GAAGL,KAAK,CAAC1qD,CAAD,CAAf;AACArE,MAAAA,MAAM,CAACovD,GAAG,CAAC1kB,MAAJ,KAAeqf,iBAAiB,CAACwE,GAAlC,EAAuC,+DAAvC,CAAN;AACAa,MAAAA,GAAG,CAAC1kB,MAAJ,GAAaqf,iBAAiB,CAACyF,IAA/B;AACAJ,MAAAA,GAAG,CAACrB,UAAJ;AACA,UAAIp4B,YAAY,GAAG7oB,eAAe,CAACxC,IAAD,EAAO8kD,GAAG,CAAC9kD,IAAX,CAAlC,CALmC,CAMnC;;AACAglD,MAAAA,UAAU,GAAGA,UAAU,CAACr1C,WAAX,CAAuB0b;AAAa;AAApC,QAA0Dy5B,GAAG,CAACjB,wBAA9D,CAAb;AACH;;AACD,QAAIsB,UAAU,GAAGH,UAAU,CAACl3C,GAAX,CAAe,IAAf,CAAjB;AACA,QAAIs3C,UAAU,GAAGplD,IAAjB,CAnB0D,CAoB1D;;AACA,SAAKsiC,OAAL,CAAayT,GAAb,CAAiBqP,UAAU,CAAChtD,QAAX,EAAjB,EAAwC+sD,UAAxC,EAAoD,UAAU/kB,MAAV,EAAkB;AAClE9oB,MAAAA,KAAK,CAACiwB,IAAN,CAAW,0BAAX,EAAuC;AACnCvnC,QAAAA,IAAI,EAAEolD,UAAU,CAAChtD,QAAX,EAD6B;AAEnCgoC,QAAAA,MAAM,EAAEA;AAF2B,OAAvC;;AAIA,UAAIvM,MAAM,GAAG,EAAb;;AACA,UAAIuM,MAAM,KAAK,IAAf,EAAqB;AACjB;AACA;AACA;AACA,YAAIjb,SAAS,GAAG,EAAhB;;AACA,aAAK,IAAIprB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0qD,KAAK,CAAC5qD,MAA1B,EAAkCE,CAAC,EAAnC,EAAuC;AACnC0qD,UAAAA,KAAK,CAAC1qD,CAAD,CAAL,CAASqmC,MAAT,GAAkBqf,iBAAiB,CAAC4F,SAApC;AACAxxB,UAAAA,MAAM,GAAGA,MAAM,CAAC+B,MAAP,CAActe,KAAK,CAACqpC,eAAN,CAAsBjwB,YAAtB,CAAmC+zB,KAAK,CAAC1qD,CAAD,CAAL,CAAS4pD,cAA5C,CAAd,CAAT;;AACA,cAAIc,KAAK,CAAC1qD,CAAD,CAAL,CAAS8Q,UAAb,EAAyB;AACrB;AACA;AACA,gBAAIkC,IAAI,GAAG03C,KAAK,CAAC1qD,CAAD,CAAL,CAAS+pD,6BAApB;AACA,gBAAI5nC,GAAG,GAAG,IAAImnC,SAAJ,CAAc/rC,KAAd,EAAqBmtC,KAAK,CAAC1qD,CAAD,CAAL,CAASiG,IAA9B,CAAV;AACA,gBAAI0L,QAAQ,GAAG,IAAIsP,YAAJ,CAAiBjO,IAAjB,EAAuBmP,GAAvB,EAA4B1K,cAA5B,CAAf;AACA2T,YAAAA,SAAS,CAAC7nB,IAAV,CAAemnD,KAAK,CAAC1qD,CAAD,CAAL,CAAS8Q,UAAT,CAAoBjQ,IAApB,CAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C8Q,QAA3C,CAAf;AACH;;AACD+4C,UAAAA,KAAK,CAAC1qD,CAAD,CAAL,CAASupD,SAAT;AACH,SAjBgB,CAkBjB;;;AACAhsC,QAAAA,KAAK,CAACktC,oCAAN,CAA2CltC,KAAK,CAAC2oC,qBAAN,CAA4BvB,OAA5B,CAAoC1+C,IAApC,CAA3C,EAnBiB,CAoBjB;;;AACAsX,QAAAA,KAAK,CAACgtC,sBAAN;;AACA7gB,QAAAA,mCAAmC,CAACnsB,KAAK,CAACwoC,WAAP,EAAoB9/C,IAApB,EAA0B6zB,MAA1B,CAAnC,CAtBiB,CAuBjB;;AACA,aAAK,IAAI95B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGorB,SAAS,CAACtrB,MAA9B,EAAsCE,CAAC,EAAvC,EAA2C;AACvCwG,UAAAA,cAAc,CAAC4kB,SAAS,CAACprB,CAAD,CAAV,CAAd;AACH;AACJ,OA3BD,MA4BK;AACD;AACA,YAAIqmC,MAAM,KAAK,WAAf,EAA4B;AACxB,eAAK,IAAIrmC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0qD,KAAK,CAAC5qD,MAA1B,EAAkCE,CAAC,EAAnC,EAAuC;AACnC,gBAAI0qD,KAAK,CAAC1qD,CAAD,CAAL,CAASqmC,MAAT,KAAoBqf,iBAAiB,CAAC6F,gBAA1C,EAA4D;AACxDb,cAAAA,KAAK,CAAC1qD,CAAD,CAAL,CAASqmC,MAAT,GAAkBqf,iBAAiB,CAAC8F,WAApC;AACH,aAFD,MAGK;AACDd,cAAAA,KAAK,CAAC1qD,CAAD,CAAL,CAASqmC,MAAT,GAAkBqf,iBAAiB,CAACwE,GAApC;AACH;AACJ;AACJ,SATD,MAUK;AACD/oD,UAAAA,IAAI,CAAC,oBAAoBkqD,UAAU,CAAChtD,QAAX,EAApB,GAA4C,WAA5C,GAA0DgoC,MAA3D,CAAJ;;AACA,eAAK,IAAIrmC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0qD,KAAK,CAAC5qD,MAA1B,EAAkCE,CAAC,EAAnC,EAAuC;AACnC0qD,YAAAA,KAAK,CAAC1qD,CAAD,CAAL,CAASqmC,MAAT,GAAkBqf,iBAAiB,CAAC8F,WAApC;AACAd,YAAAA,KAAK,CAAC1qD,CAAD,CAAL,CAAS2pD,WAAT,GAAuBtjB,MAAvB;AACH;AACJ;;AACD9oB,QAAAA,KAAK,CAAC8pC,kBAAN,CAAyBphD,IAAzB;AACH;AACJ,KAvDD,EAuDGilD,UAvDH;AAwDH,GA7ED;AA8EA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIvF,EAAAA,IAAI,CAACloD,SAAL,CAAe4pD,kBAAf,GAAoC,UAAU1d,WAAV,EAAuB;AACvD,QAAI8hB,uBAAuB,GAAG,KAAKC,2BAAL,CAAiC/hB,WAAjC,CAA9B;AACA,QAAI1jC,IAAI,GAAGwlD,uBAAuB,CAACxlD,IAAxB,EAAX;AACA,QAAIykD,KAAK,GAAG,KAAKC,sBAAL,CAA4Bc,uBAA5B,CAAZ;AACA,SAAKE,sBAAL,CAA4BjB,KAA5B,EAAmCzkD,IAAnC;AACA,WAAOA,IAAP;AACH,GAND;AAOA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACI0/C,EAAAA,IAAI,CAACloD,SAAL,CAAekuD,sBAAf,GAAwC,UAAUjB,KAAV,EAAiBzkD,IAAjB,EAAuB;AAC3D,QAAIykD,KAAK,CAAC5qD,MAAN,KAAiB,CAArB,EAAwB;AACpB,aADoB,CACZ;AACX,KAH0D,CAI3D;AACA;AACA;;;AACA,QAAIsrB,SAAS,GAAG,EAAhB;AACA,QAAI0O,MAAM,GAAG,EAAb,CAR2D,CAS3D;;AACA,QAAI8xB,WAAW,GAAGlB,KAAK,CAACvwB,MAAN,CAAa,UAAU6kB,CAAV,EAAa;AACxC,aAAOA,CAAC,CAAC3Y,MAAF,KAAaqf,iBAAiB,CAACwE,GAAtC;AACH,KAFiB,CAAlB;AAGA,QAAIY,YAAY,GAAGc,WAAW,CAACrvD,GAAZ,CAAgB,UAAUyiD,CAAV,EAAa;AAC5C,aAAOA,CAAC,CAAC4K,cAAT;AACH,KAFkB,CAAnB;;AAGA,SAAK,IAAI5pD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0qD,KAAK,CAAC5qD,MAA1B,EAAkCE,CAAC,EAAnC,EAAuC;AACnC,UAAIwpD,WAAW,GAAGkB,KAAK,CAAC1qD,CAAD,CAAvB;AACA,UAAIsxB,YAAY,GAAG7oB,eAAe,CAACxC,IAAD,EAAOujD,WAAW,CAACvjD,IAAnB,CAAlC;AACA,UAAI4lD,gBAAgB,GAAG,KAAvB;AAAA,UAA8BlC,WAAW,GAAG,KAAK,CAAjD;AACAhuD,MAAAA,MAAM,CAAC21B,YAAY,KAAK,IAAlB,EAAwB,+DAAxB,CAAN;;AACA,UAAIk4B,WAAW,CAACnjB,MAAZ,KAAuBqf,iBAAiB,CAAC8F,WAA7C,EAA0D;AACtDK,QAAAA,gBAAgB,GAAG,IAAnB;AACAlC,QAAAA,WAAW,GAAGH,WAAW,CAACG,WAA1B;AACA7vB,QAAAA,MAAM,GAAGA,MAAM,CAAC+B,MAAP,CAAc,KAAK+qB,eAAL,CAAqBjwB,YAArB,CAAkC6yB,WAAW,CAACI,cAA9C,EAA8D,IAA9D,CAAd,CAAT;AACH,OAJD,MAKK,IAAIJ,WAAW,CAACnjB,MAAZ,KAAuBqf,iBAAiB,CAACwE,GAA7C,EAAkD;AACnD,YAAIV,WAAW,CAACE,UAAZ,IAA0BjE,uBAA9B,EAAuD;AACnDoG,UAAAA,gBAAgB,GAAG,IAAnB;AACAlC,UAAAA,WAAW,GAAG,UAAd;AACA7vB,UAAAA,MAAM,GAAGA,MAAM,CAAC+B,MAAP,CAAc,KAAK+qB,eAAL,CAAqBjwB,YAArB,CAAkC6yB,WAAW,CAACI,cAA9C,EAA8D,IAA9D,CAAd,CAAT;AACH,SAJD,MAKK;AACD;AACA,cAAIU,WAAW,GAAG,KAAKL,eAAL,CAAqBT,WAAW,CAACvjD,IAAjC,EAAuC6kD,YAAvC,CAAlB;AACAtB,UAAAA,WAAW,CAACK,oBAAZ,GAAmCS,WAAnC;AACA,cAAIjoB,OAAO,GAAGqoB,KAAK,CAAC1qD,CAAD,CAAL,CAASV,MAAT,CAAgBgrD,WAAW,CAACv2C,GAAZ,EAAhB,CAAd;;AACA,cAAIsuB,OAAO,KAAK/yB,SAAhB,EAA2B;AACvBC,YAAAA,oBAAoB,CAAC,oCAAD,EAAuC8yB,OAAvC,EAAgDmnB,WAAW,CAACvjD,IAA5D,CAApB;AACA,gBAAI6lD,WAAW,GAAGhsC,cAAc,CAACuiB,OAAD,CAAhC;AACA,gBAAI0pB,mBAAmB,GAAG,OAAO1pB,OAAP,KAAmB,QAAnB,IACtBA,OAAO,IAAI,IADW,IAEtB3mC,QAAQ,CAAC2mC,OAAD,EAAU,WAAV,CAFZ;;AAGA,gBAAI,CAAC0pB,mBAAL,EAA0B;AACtB;AACAD,cAAAA,WAAW,GAAGA,WAAW,CAAC52C,cAAZ,CAA2Bo1C,WAAW,CAAC31C,WAAZ,EAA3B,CAAd;AACH;;AACD,gBAAIq3C,UAAU,GAAGxC,WAAW,CAACI,cAA7B;AACA,gBAAIx7B,YAAY,GAAG,KAAK44B,oBAAL,EAAnB;AACA,gBAAIiF,eAAe,GAAGj9B,4BAA4B,CAAC88B,WAAD,EAAcxB,WAAd,EAA2Bl8B,YAA3B,CAAlD;AACAo7B,YAAAA,WAAW,CAACM,wBAAZ,GAAuCgC,WAAvC;AACAtC,YAAAA,WAAW,CAACO,6BAAZ,GAA4CkC,eAA5C;AACAzC,YAAAA,WAAW,CAACI,cAAZ,GAA6B,KAAKnC,eAAL,EAA7B,CAfuB,CAgBvB;;AACAqD,YAAAA,YAAY,CAAC7qB,MAAb,CAAoB6qB,YAAY,CAACvpD,OAAb,CAAqByqD,UAArB,CAApB,EAAsD,CAAtD;AACAlyB,YAAAA,MAAM,GAAGA,MAAM,CAAC+B,MAAP,CAAc,KAAK+qB,eAAL,CAAqBxkB,kBAArB,CAAwConB,WAAW,CAACvjD,IAApD,EAA0DgmD,eAA1D,EAA2EzC,WAAW,CAACI,cAAvF,EAAuGJ,WAAW,CAACJ,YAAnH,CAAd,CAAT;AACAtvB,YAAAA,MAAM,GAAGA,MAAM,CAAC+B,MAAP,CAAc,KAAK+qB,eAAL,CAAqBjwB,YAArB,CAAkCq1B,UAAlC,EAA8C,IAA9C,CAAd,CAAT;AACH,WApBD,MAqBK;AACDH,YAAAA,gBAAgB,GAAG,IAAnB;AACAlC,YAAAA,WAAW,GAAG,QAAd;AACA7vB,YAAAA,MAAM,GAAGA,MAAM,CAAC+B,MAAP,CAAc,KAAK+qB,eAAL,CAAqBjwB,YAArB,CAAkC6yB,WAAW,CAACI,cAA9C,EAA8D,IAA9D,CAAd,CAAT;AACH;AACJ;AACJ;;AACDlgB,MAAAA,mCAAmC,CAAC,KAAKqc,WAAN,EAAmB9/C,IAAnB,EAAyB6zB,MAAzB,CAAnC;AACAA,MAAAA,MAAM,GAAG,EAAT;;AACA,UAAI+xB,gBAAJ,EAAsB;AAClB;AACAnB,QAAAA,KAAK,CAAC1qD,CAAD,CAAL,CAASqmC,MAAT,GAAkBqf,iBAAiB,CAAC4F,SAApC,CAFkB,CAGlB;AACA;AACA;;AACA,SAAC,UAAU/B,SAAV,EAAqB;AAClBnnD,UAAAA,UAAU,CAACmnD,SAAD,EAAYlnD,IAAI,CAACC,KAAL,CAAW,CAAX,CAAZ,CAAV;AACH,SAFD,EAEGooD,KAAK,CAAC1qD,CAAD,CAAL,CAASupD,SAFZ;;AAGA,YAAImB,KAAK,CAAC1qD,CAAD,CAAL,CAAS8Q,UAAb,EAAyB;AACrB,cAAI64C,WAAW,KAAK,QAApB,EAA8B;AAC1B,gBAAIxnC,GAAG,GAAG,IAAImnC,SAAJ,CAAc,IAAd,EAAoBoB,KAAK,CAAC1qD,CAAD,CAAL,CAASiG,IAA7B,CAAV,CAD0B,CAE1B;;AACA,gBAAIimD;AAAU;AAAD,cAAwBxB,KAAK,CAAC1qD,CAAD,CAAL,CAAS6pD,oBAA9C;AACA,gBAAIl4C,QAAQ,GAAG,IAAIsP,YAAJ,CAAiBirC,SAAjB,EAA4B/pC,GAA5B,EAAiC1K,cAAjC,CAAf;AACA2T,YAAAA,SAAS,CAAC7nB,IAAV,CAAemnD,KAAK,CAAC1qD,CAAD,CAAL,CAAS8Q,UAAT,CAAoBjQ,IAApB,CAAyB,IAAzB,EAA+B,IAA/B,EAAqC,KAArC,EAA4C8Q,QAA5C,CAAf;AACH,WAND,MAOK;AACDyZ,YAAAA,SAAS,CAAC7nB,IAAV,CAAemnD,KAAK,CAAC1qD,CAAD,CAAL,CAAS8Q,UAAT,CAAoBjQ,IAApB,CAAyB,IAAzB,EAA+B,IAAIK,KAAJ,CAAUyoD,WAAV,CAA/B,EAAuD,KAAvD,EAA8D,IAA9D,CAAf;AACH;AACJ;AACJ;AACJ,KAzF0D,CA0F3D;;;AACA,SAAKc,oCAAL,CAA0C,KAAKvE,qBAA/C,EA3F2D,CA4F3D;;AACA,SAAK,IAAIlmD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGorB,SAAS,CAACtrB,MAA9B,EAAsCE,CAAC,EAAvC,EAA2C;AACvCwG,MAAAA,cAAc,CAAC4kB,SAAS,CAACprB,CAAD,CAAV,CAAd;AACH,KA/F0D,CAgG3D;;;AACA,SAAKuqD,sBAAL;AACH,GAlGD;AAmGA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI5E,EAAAA,IAAI,CAACloD,SAAL,CAAeiuD,2BAAf,GAA6C,UAAUzlD,IAAV,EAAgB;AACzD,QAAI4P,KAAJ,CADyD,CAEzD;AACA;;AACA,QAAIs2C,eAAe,GAAG,KAAKjG,qBAA3B;AACArwC,IAAAA,KAAK,GAAGpO,YAAY,CAACxB,IAAD,CAApB;;AACA,WAAO4P,KAAK,KAAK,IAAV,IAAkBs2C,eAAe,CAACh2C,QAAhB,OAA+B,IAAxD,EAA8D;AAC1Dg2C,MAAAA,eAAe,GAAGA,eAAe,CAACxH,OAAhB,CAAwB9uC,KAAxB,CAAlB;AACA5P,MAAAA,IAAI,GAAG0B,YAAY,CAAC1B,IAAD,CAAnB;AACA4P,MAAAA,KAAK,GAAGpO,YAAY,CAACxB,IAAD,CAApB;AACH;;AACD,WAAOkmD,eAAP;AACH,GAZD;AAaA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIxG,EAAAA,IAAI,CAACloD,SAAL,CAAektD,sBAAf,GAAwC,UAAUwB,eAAV,EAA2B;AAC/D;AACA,QAAIC,gBAAgB,GAAG,EAAvB;AACA,SAAKC,kCAAL,CAAwCF,eAAxC,EAAyDC,gBAAzD,EAH+D,CAI/D;;AACAA,IAAAA,gBAAgB,CAAC5oD,IAAjB,CAAsB,UAAUZ,CAAV,EAAaC,CAAb,EAAgB;AAClC,aAAOD,CAAC,CAAC6mD,KAAF,GAAU5mD,CAAC,CAAC4mD,KAAnB;AACH,KAFD;AAGA,WAAO2C,gBAAP;AACH,GATD;;AAUAzG,EAAAA,IAAI,CAACloD,SAAL,CAAe4uD,kCAAf,GAAoD,UAAUr5C,IAAV,EAAgB03C,KAAhB,EAAuB;AACvE,QAAIntC,KAAK,GAAG,IAAZ;;AACA,QAAI6sC,SAAS,GAAGp3C,IAAI,CAACmD,QAAL,EAAhB;;AACA,QAAIi0C,SAAS,KAAK,IAAlB,EAAwB;AACpB,WAAK,IAAIpqD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoqD,SAAS,CAACtqD,MAA9B,EAAsCE,CAAC,EAAvC,EAA2C;AACvC0qD,QAAAA,KAAK,CAACnnD,IAAN,CAAW6mD,SAAS,CAACpqD,CAAD,CAApB;AACH;AACJ;;AACDgT,IAAAA,IAAI,CAAC+C,YAAL,CAAkB,UAAU7L,KAAV,EAAiB;AAC/BqT,MAAAA,KAAK,CAAC8uC,kCAAN,CAAyCniD,KAAzC,EAAgDwgD,KAAhD;AACH,KAFD;AAGH,GAXD;AAYA;AACJ;AACA;;;AACI/E,EAAAA,IAAI,CAACloD,SAAL,CAAegtD,oCAAf,GAAsD,UAAUz3C,IAAV,EAAgB;AAClE,QAAIuK,KAAK,GAAG,IAAZ;;AACA,QAAImtC,KAAK,GAAG13C,IAAI,CAACmD,QAAL,EAAZ;;AACA,QAAIu0C,KAAJ,EAAW;AACP,UAAI4B,EAAE,GAAG,CAAT;;AACA,WAAK,IAAI53B,IAAI,GAAG,CAAhB,EAAmBA,IAAI,GAAGg2B,KAAK,CAAC5qD,MAAhC,EAAwC40B,IAAI,EAA5C,EAAgD;AAC5C,YAAIg2B,KAAK,CAACh2B,IAAD,CAAL,CAAY2R,MAAZ,KAAuBqf,iBAAiB,CAAC4F,SAA7C,EAAwD;AACpDZ,UAAAA,KAAK,CAAC4B,EAAD,CAAL,GAAY5B,KAAK,CAACh2B,IAAD,CAAjB;AACA43B,UAAAA,EAAE;AACL;AACJ;;AACD5B,MAAAA,KAAK,CAAC5qD,MAAN,GAAewsD,EAAf;AACAt5C,MAAAA,IAAI,CAAC6xC,QAAL,CAAc6F,KAAK,CAAC5qD,MAAN,GAAe,CAAf,GAAmB4qD,KAAnB,GAA2B,IAAzC;AACH;;AACD13C,IAAAA,IAAI,CAAC+C,YAAL,CAAkB,UAAUN,SAAV,EAAqB;AACnC8H,MAAAA,KAAK,CAACktC,oCAAN,CAA2Ch1C,SAA3C;AACH,KAFD;AAGH,GAjBD;AAkBA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIkwC,EAAAA,IAAI,CAACloD,SAAL,CAAewqD,kBAAf,GAAoC,UAAUhiD,IAAV,EAAgB;AAChD,QAAIsX,KAAK,GAAG,IAAZ;;AACA,QAAIsH,YAAY,GAAG,KAAK6mC,2BAAL,CAAiCzlD,IAAjC,EAAuCA,IAAvC,EAAnB;AACA,QAAIkmD,eAAe,GAAG,KAAKjG,qBAAL,CAA2BvB,OAA3B,CAAmC1+C,IAAnC,CAAtB;AACAkmD,IAAAA,eAAe,CAACjH,eAAhB,CAAgC,UAAUlyC,IAAV,EAAgB;AAC5CuK,MAAAA,KAAK,CAACgvC,wBAAN,CAA+Bv5C,IAA/B;AACH,KAFD;AAGA,SAAKu5C,wBAAL,CAA8BJ,eAA9B;AACAA,IAAAA,eAAe,CAACpH,iBAAhB,CAAkC,UAAU/xC,IAAV,EAAgB;AAC9CuK,MAAAA,KAAK,CAACgvC,wBAAN,CAA+Bv5C,IAA/B;AACH,KAFD;AAGA,WAAO6R,YAAP;AACH,GAZD;AAaA;AACJ;AACA;AACA;AACA;;;AACI8gC,EAAAA,IAAI,CAACloD,SAAL,CAAe8uD,wBAAf,GAA0C,UAAUv5C,IAAV,EAAgB;AACtD,QAAI03C,KAAK,GAAG13C,IAAI,CAACmD,QAAL,EAAZ;;AACA,QAAIu0C,KAAK,KAAK,IAAd,EAAoB;AAChB;AACA;AACA;AACA,UAAIt/B,SAAS,GAAG,EAAhB,CAJgB,CAKhB;AACA;;AACA,UAAI0O,MAAM,GAAG,EAAb;AACA,UAAI0yB,QAAQ,GAAG,CAAC,CAAhB;;AACA,WAAK,IAAIxsD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0qD,KAAK,CAAC5qD,MAA1B,EAAkCE,CAAC,EAAnC,EAAuC;AACnC,YAAI0qD,KAAK,CAAC1qD,CAAD,CAAL,CAASqmC,MAAT,KAAoBqf,iBAAiB,CAAC6F,gBAA1C,EAA4D,CAA5D,KACK,IAAIb,KAAK,CAAC1qD,CAAD,CAAL,CAASqmC,MAAT,KAAoBqf,iBAAiB,CAACyF,IAA1C,EAAgD;AACjDxvD,UAAAA,MAAM,CAAC6wD,QAAQ,KAAKxsD,CAAC,GAAG,CAAlB,EAAqB,iDAArB,CAAN;AACAwsD,UAAAA,QAAQ,GAAGxsD,CAAX,CAFiD,CAGjD;;AACA0qD,UAAAA,KAAK,CAAC1qD,CAAD,CAAL,CAASqmC,MAAT,GAAkBqf,iBAAiB,CAAC6F,gBAApC;AACAb,UAAAA,KAAK,CAAC1qD,CAAD,CAAL,CAAS2pD,WAAT,GAAuB,KAAvB;AACH,SANI,MAOA;AACDhuD,UAAAA,MAAM,CAAC+uD,KAAK,CAAC1qD,CAAD,CAAL,CAASqmC,MAAT,KAAoBqf,iBAAiB,CAACwE,GAAvC,EAA4C,wCAA5C,CAAN,CADC,CAED;;AACAQ,UAAAA,KAAK,CAAC1qD,CAAD,CAAL,CAASupD,SAAT;AACAzvB,UAAAA,MAAM,GAAGA,MAAM,CAAC+B,MAAP,CAAc,KAAK+qB,eAAL,CAAqBjwB,YAArB,CAAkC+zB,KAAK,CAAC1qD,CAAD,CAAL,CAAS4pD,cAA3C,EAA2D,IAA3D,CAAd,CAAT;;AACA,cAAIc,KAAK,CAAC1qD,CAAD,CAAL,CAAS8Q,UAAb,EAAyB;AACrB,gBAAIa,QAAQ,GAAG,IAAf;AACAyZ,YAAAA,SAAS,CAAC7nB,IAAV,CAAemnD,KAAK,CAAC1qD,CAAD,CAAL,CAAS8Q,UAAT,CAAoBjQ,IAApB,CAAyB,IAAzB,EAA+B,IAAIK,KAAJ,CAAU,KAAV,CAA/B,EAAiD,KAAjD,EAAwDyQ,QAAxD,CAAf;AACH;AACJ;AACJ;;AACD,UAAI66C,QAAQ,KAAK,CAAC,CAAlB,EAAqB;AACjB;AACAx5C,QAAAA,IAAI,CAAC6xC,QAAL,CAAc,IAAd;AACH,OAHD,MAIK;AACD;AACA6F,QAAAA,KAAK,CAAC5qD,MAAN,GAAe0sD,QAAQ,GAAG,CAA1B;AACH,OApCe,CAqChB;;;AACA9iB,MAAAA,mCAAmC,CAAC,KAAKqc,WAAN,EAAmB/yC,IAAI,CAAC/M,IAAL,EAAnB,EAAgC6zB,MAAhC,CAAnC;;AACA,WAAK,IAAI95B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGorB,SAAS,CAACtrB,MAA9B,EAAsCE,CAAC,EAAvC,EAA2C;AACvCwG,QAAAA,cAAc,CAAC4kB,SAAS,CAACprB,CAAD,CAAV,CAAd;AACH;AACJ;AACJ,GA7CD;;AA8CA,SAAO2lD,IAAP;AACH,CA/5ByB,EAA1B;AAi6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAI2D,SAAS;AAAG;AAAe,UAAUx1C,MAAV,EAAkB;AAC7C3Y,EAAAA,SAAS,CAACmuD,SAAD,EAAYx1C,MAAZ,CAAT;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACI,WAASw1C,SAAT,CAAmBn/B,IAAnB,EAAyBlkB,IAAzB,EAA+B;AAC3B,QAAIsX,KAAK,GAAG,IAAZ;;AACA,QAAI,EAAE4M,IAAI,YAAYw7B,IAAlB,CAAJ,EAA6B;AACzB,YAAM,IAAIzkD,KAAJ,CAAU,2DAAV,CAAN;AACH,KAJ0B,CAK3B;;;AACAqc,IAAAA,KAAK,GAAGzJ,MAAM,CAACnG,IAAP,CAAY,IAAZ,EAAkBwc,IAAlB,EAAwBlkB,IAAxB,EAA8B,IAAI8hB,WAAJ,EAA9B,EAAiD,KAAjD,KAA2D,IAAnE;AACA,WAAOxK,KAAP;AACH;AACD;;;AACA+rC,EAAAA,SAAS,CAAC7rD,SAAV,CAAoBokB,MAApB,GAA6B,YAAY;AACrC3lB,IAAAA,gBAAgB,CAAC,eAAD,EAAkB,CAAlB,EAAqB,CAArB,EAAwB2D,SAAS,CAACC,MAAlC,CAAhB;;AACA,QAAI0I,WAAW,CAAC,KAAKvC,IAAN,CAAf,EAA4B;AACxB,aAAO,IAAP;AACH,KAFD,MAGK;AACD,aAAO2B,WAAW,CAAC,KAAK3B,IAAN,CAAlB;AACH;AACJ,GARD;;AASAqjD,EAAAA,SAAS,CAAC7rD,SAAV,CAAoByM,KAApB,GAA4B,UAAU3C,UAAV,EAAsB;AAC9CrL,IAAAA,gBAAgB,CAAC,iBAAD,EAAoB,CAApB,EAAuB,CAAvB,EAA0B2D,SAAS,CAACC,MAApC,CAAhB;;AACA,QAAI,OAAOyH,UAAP,KAAsB,QAA1B,EAAoC;AAChCA,MAAAA,UAAU,GAAGQ,MAAM,CAACR,UAAD,CAAnB;AACH,KAFD,MAGK,IAAI,EAAEA,UAAU,YAAYP,IAAxB,CAAJ,EAAmC;AACpC,UAAIS,YAAY,CAAC,KAAKxB,IAAN,CAAZ,KAA4B,IAAhC,EAAsC;AAClCqK,QAAAA,sBAAsB,CAAC,iBAAD,EAAoB,CAApB,EAAuB/I,UAAvB,EAAmC,KAAnC,CAAtB;AACH,OAFD,MAGK;AACD8I,QAAAA,kBAAkB,CAAC,iBAAD,EAAoB,CAApB,EAAuB9I,UAAvB,EAAmC,KAAnC,CAAlB;AACH;AACJ;;AACD,WAAO,IAAI+hD,SAAJ,CAAc,KAAKn/B,IAAnB,EAAyB9hB,SAAS,CAAC,KAAKpC,IAAN,EAAYsB,UAAZ,CAAlC,CAAP;AACH,GAdD;AAeA;;;AACA+hD,EAAAA,SAAS,CAAC7rD,SAAV,CAAoB2kB,SAApB,GAAgC,YAAY;AACxClmB,IAAAA,gBAAgB,CAAC,kBAAD,EAAqB,CAArB,EAAwB,CAAxB,EAA2B2D,SAAS,CAACC,MAArC,CAAhB;AACA,QAAI2sD,UAAU,GAAGtkD,UAAU,CAAC,KAAKlC,IAAN,CAA3B;AACA,WAAOwmD,UAAU,KAAK,IAAf,GAAsB,IAAtB,GAA6B,IAAInD,SAAJ,CAAc,KAAKn/B,IAAnB,EAAyBsiC,UAAzB,CAApC;AACH,GAJD;AAKA;;;AACAnD,EAAAA,SAAS,CAAC7rD,SAAV,CAAoBivD,OAApB,GAA8B,YAAY;AACtCxwD,IAAAA,gBAAgB,CAAC,gBAAD,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB2D,SAAS,CAACC,MAAnC,CAAhB;AACA,QAAIqiB,GAAG,GAAG,IAAV;;AACA,WAAOA,GAAG,CAACC,SAAJ,OAAoB,IAA3B,EAAiC;AAC7BD,MAAAA,GAAG,GAAGA,GAAG,CAACC,SAAJ,EAAN;AACH;;AACD,WAAOD,GAAP;AACH,GAPD;AAQA;;;AACAmnC,EAAAA,SAAS,CAAC7rD,SAAV,CAAoBkvD,YAApB,GAAmC,YAAY;AAC3C,WAAO,KAAKxiC,IAAL,CAAUyiC,QAAjB;AACH,GAFD;;AAGAtD,EAAAA,SAAS,CAAC7rD,SAAV,CAAoBC,GAApB,GAA0B,UAAUkqD,MAAV,EAAkB92C,UAAlB,EAA8B;AACpD5U,IAAAA,gBAAgB,CAAC,eAAD,EAAkB,CAAlB,EAAqB,CAArB,EAAwB2D,SAAS,CAACC,MAAlC,CAAhB;AACAyQ,IAAAA,oBAAoB,CAAC,eAAD,EAAkB,KAAKtK,IAAvB,CAApB;AACAiJ,IAAAA,uBAAuB,CAAC,eAAD,EAAkB,CAAlB,EAAqB04C,MAArB,EAA6B,KAAK3hD,IAAlC,EAAwC,KAAxC,CAAvB;AACA9J,IAAAA,gBAAgB,CAAC,eAAD,EAAkB,CAAlB,EAAqB2U,UAArB,EAAiC,IAAjC,CAAhB;AACA,QAAIC,QAAQ,GAAG,IAAI3U,QAAJ,EAAf;AACA,SAAK+tB,IAAL,CAAU/Y,eAAV,CAA0B,KAAKnL,IAA/B,EAAqC2hD,MAArC;AACA;AAAc,QADd,EACoB72C,QAAQ,CAACE,YAAT,CAAsBH,UAAtB,CADpB;AAEA,WAAOC,QAAQ,CAACG,OAAhB;AACH,GATD;;AAUAo4C,EAAAA,SAAS,CAAC7rD,SAAV,CAAoB6B,MAApB,GAA6B,UAAUgS,aAAV,EAAyBR,UAAzB,EAAqC;AAC9D5U,IAAAA,gBAAgB,CAAC,kBAAD,EAAqB,CAArB,EAAwB,CAAxB,EAA2B2D,SAAS,CAACC,MAArC,CAAhB;AACAyQ,IAAAA,oBAAoB,CAAC,kBAAD,EAAqB,KAAKtK,IAA1B,CAApB;;AACA,QAAI/F,KAAK,CAACC,OAAN,CAAcmR,aAAd,CAAJ,EAAkC;AAC9B,UAAIC,gBAAgB,GAAG,EAAvB;;AACA,WAAK,IAAIvR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsR,aAAa,CAACxR,MAAlC,EAA0C,EAAEE,CAA5C,EAA+C;AAC3CuR,QAAAA,gBAAgB,CAAC,KAAKvR,CAAN,CAAhB,GAA2BsR,aAAa,CAACtR,CAAD,CAAxC;AACH;;AACDsR,MAAAA,aAAa,GAAGC,gBAAhB;AACApQ,MAAAA,IAAI,CAAC,0DACD,2DADC,GAED,uDAFC,GAGD,mCAHA,CAAJ;AAIH;;AACD4O,IAAAA,4BAA4B,CAAC,kBAAD,EAAqB,CAArB,EAAwBuB,aAAxB,EAAuC,KAAKrL,IAA5C,EAAkD,KAAlD,CAA5B;AACA9J,IAAAA,gBAAgB,CAAC,kBAAD,EAAqB,CAArB,EAAwB2U,UAAxB,EAAoC,IAApC,CAAhB;AACA,QAAIC,QAAQ,GAAG,IAAI3U,QAAJ,EAAf;AACA,SAAK+tB,IAAL,CAAU7qB,MAAV,CAAiB,KAAK2G,IAAtB,EAA4BqL,aAA5B,EAA2CP,QAAQ,CAACE,YAAT,CAAsBH,UAAtB,CAA3C;AACA,WAAOC,QAAQ,CAACG,OAAhB;AACH,GAnBD;;AAoBAo4C,EAAAA,SAAS,CAAC7rD,SAAV,CAAoB2T,eAApB,GAAsC,UAAUw2C,MAAV,EAAkBzpC,WAAlB,EAA+BrN,UAA/B,EAA2C;AAC7E5U,IAAAA,gBAAgB,CAAC,2BAAD,EAA8B,CAA9B,EAAiC,CAAjC,EAAoC2D,SAAS,CAACC,MAA9C,CAAhB;AACAyQ,IAAAA,oBAAoB,CAAC,2BAAD,EAA8B,KAAKtK,IAAnC,CAApB;AACAiJ,IAAAA,uBAAuB,CAAC,2BAAD,EAA8B,CAA9B,EAAiC04C,MAAjC,EAAyC,KAAK3hD,IAA9C,EAAoD,KAApD,CAAvB;AACAgK,IAAAA,gBAAgB,CAAC,2BAAD,EAA8B,CAA9B,EAAiCkO,WAAjC,EAA8C,KAA9C,CAAhB;AACAhiB,IAAAA,gBAAgB,CAAC,2BAAD,EAA8B,CAA9B,EAAiC2U,UAAjC,EAA6C,IAA7C,CAAhB;;AACA,QAAI,KAAK+Q,MAAL,OAAkB,SAAlB,IAA+B,KAAKA,MAAL,OAAkB,OAArD,EAA8D;AAC1D,YAAO,uCACH,KAAKA,MAAL,EADG,GAEH,yBAFJ;AAGH;;AACD,QAAI9Q,QAAQ,GAAG,IAAI3U,QAAJ,EAAf;AACA,SAAK+tB,IAAL,CAAU/Y,eAAV,CAA0B,KAAKnL,IAA/B,EAAqC2hD,MAArC,EAA6CzpC,WAA7C,EAA0DpN,QAAQ,CAACE,YAAT,CAAsBH,UAAtB,CAA1D;AACA,WAAOC,QAAQ,CAACG,OAAhB;AACH,GAdD;;AAeAo4C,EAAAA,SAAS,CAAC7rD,SAAV,CAAoBU,MAApB,GAA6B,UAAU2S,UAAV,EAAsB;AAC/C5U,IAAAA,gBAAgB,CAAC,kBAAD,EAAqB,CAArB,EAAwB,CAAxB,EAA2B2D,SAAS,CAACC,MAArC,CAAhB;AACAyQ,IAAAA,oBAAoB,CAAC,kBAAD,EAAqB,KAAKtK,IAA1B,CAApB;AACA9J,IAAAA,gBAAgB,CAAC,kBAAD,EAAqB,CAArB,EAAwB2U,UAAxB,EAAoC,IAApC,CAAhB;AACA,WAAO,KAAKpT,GAAL,CAAS,IAAT,EAAeoT,UAAf,CAAP;AACH,GALD;;AAMAw4C,EAAAA,SAAS,CAAC7rD,SAAV,CAAoB+rD,WAApB,GAAkC,UAAUL,iBAAV,EAA6Br4C,UAA7B,EAAyCs4C,YAAzC,EAAuD;AACrFltD,IAAAA,gBAAgB,CAAC,uBAAD,EAA0B,CAA1B,EAA6B,CAA7B,EAAgC2D,SAAS,CAACC,MAA1C,CAAhB;AACAyQ,IAAAA,oBAAoB,CAAC,uBAAD,EAA0B,KAAKtK,IAA/B,CAApB;AACA9J,IAAAA,gBAAgB,CAAC,uBAAD,EAA0B,CAA1B,EAA6BgtD,iBAA7B,EAAgD,KAAhD,CAAhB;AACAhtD,IAAAA,gBAAgB,CAAC,uBAAD,EAA0B,CAA1B,EAA6B2U,UAA7B,EAAyC,IAAzC,CAAhB,CAJqF,CAKrF;AACA;;AACAL,IAAAA,eAAe,CAAC,uBAAD,EAA0B,CAA1B,EAA6B24C,YAA7B,EAA2C,IAA3C,CAAf;;AACA,QAAI,KAAKvnC,MAAL,OAAkB,SAAlB,IAA+B,KAAKA,MAAL,OAAkB,OAArD,EAA8D;AAC1D,YAAO,mCACH,KAAKA,MAAL,EADG,GAEH,yBAFJ;AAGH;;AACD,QAAIunC,YAAY,KAAK95C,SAArB,EAAgC;AAC5B85C,MAAAA,YAAY,GAAG,IAAf;AACH;;AACD,QAAIr4C,QAAQ,GAAG,IAAI3U,QAAJ,EAAf;;AACA,QAAI,OAAO0U,UAAP,KAAsB,UAA1B,EAAsC;AAClCC,MAAAA,QAAQ,CAACG,OAAT,CAAiB8a,KAAjB,CAAuB,YAAY,CAAG,CAAtC;AACH;;AACD,QAAI6gC,eAAe,GAAG,UAAU7rD,KAAV,EAAiB0Q,SAAjB,EAA4BC,QAA5B,EAAsC;AACxD,UAAI3Q,KAAJ,EAAW;AACP+P,QAAAA,QAAQ,CAACqb,MAAT,CAAgBprB,KAAhB;AACH,OAFD,MAGK;AACD+P,QAAAA,QAAQ,CAACmb,OAAT,CAAiB,IAAIza,iBAAJ,CAAsBC,SAAtB,EAAiCC,QAAjC,CAAjB;AACH;;AACD,UAAI,OAAOb,UAAP,KAAsB,UAA1B,EAAsC;AAClCA,QAAAA,UAAU,CAAC9P,KAAD,EAAQ0Q,SAAR,EAAmBC,QAAnB,CAAV;AACH;AACJ,KAVD;;AAWA,SAAKwY,IAAL,CAAU++B,gBAAV,CAA2B,KAAKjjD,IAAhC,EAAsCkjD,iBAAtC,EAAyD0D,eAAzD,EAA0EzD,YAA1E;AACA,WAAOr4C,QAAQ,CAACG,OAAhB;AACH,GAjCD;;AAkCAo4C,EAAAA,SAAS,CAAC7rD,SAAV,CAAoBqvD,WAApB,GAAkC,UAAU79C,QAAV,EAAoB6B,UAApB,EAAgC;AAC9D5U,IAAAA,gBAAgB,CAAC,uBAAD,EAA0B,CAA1B,EAA6B,CAA7B,EAAgC2D,SAAS,CAACC,MAA1C,CAAhB;AACAyQ,IAAAA,oBAAoB,CAAC,uBAAD,EAA0B,KAAKtK,IAA/B,CAApB;AACAgK,IAAAA,gBAAgB,CAAC,uBAAD,EAA0B,CAA1B,EAA6BhB,QAA7B,EAAuC,KAAvC,CAAhB;AACA9S,IAAAA,gBAAgB,CAAC,uBAAD,EAA0B,CAA1B,EAA6B2U,UAA7B,EAAyC,IAAzC,CAAhB;AACA,QAAIC,QAAQ,GAAG,IAAI3U,QAAJ,EAAf;AACA,SAAK+tB,IAAL,CAAU/Y,eAAV,CAA0B/I,SAAS,CAAC,KAAKpC,IAAN,EAAY,WAAZ,CAAnC,EAA6DgJ,QAA7D,EAAuE,IAAvE,EAA6E8B,QAAQ,CAACE,YAAT,CAAsBH,UAAtB,CAA7E;AACA,WAAOC,QAAQ,CAACG,OAAhB;AACH,GARD;;AASAo4C,EAAAA,SAAS,CAAC7rD,SAAV,CAAoB8F,IAApB,GAA2B,UAAU3F,KAAV,EAAiBkT,UAAjB,EAA6B;AACpD5U,IAAAA,gBAAgB,CAAC,gBAAD,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB2D,SAAS,CAACC,MAAnC,CAAhB;AACAyQ,IAAAA,oBAAoB,CAAC,gBAAD,EAAmB,KAAKtK,IAAxB,CAApB;AACAiJ,IAAAA,uBAAuB,CAAC,gBAAD,EAAmB,CAAnB,EAAsBtR,KAAtB,EAA6B,KAAKqI,IAAlC,EAAwC,IAAxC,CAAvB;AACA9J,IAAAA,gBAAgB,CAAC,gBAAD,EAAmB,CAAnB,EAAsB2U,UAAtB,EAAkC,IAAlC,CAAhB;AACA,QAAIsB,GAAG,GAAG,KAAK+X,IAAL,CAAU08B,UAAV,EAAV;AACA,QAAIzoD,IAAI,GAAG6T,UAAU,CAACG,GAAD,CAArB,CANoD,CAOpD;AACA;AACA;AACA;AACA;;AACA,QAAI26C,gBAAgB,GAAG,KAAK7iD,KAAL,CAAW9L,IAAX,CAAvB;AACA,QAAI4uD,OAAO,GAAG,KAAK9iD,KAAL,CAAW9L,IAAX,CAAd;AACA,QAAI8S,OAAJ;;AACA,QAAItT,KAAK,IAAI,IAAb,EAAmB;AACfsT,MAAAA,OAAO,GAAG67C,gBAAgB,CAACrvD,GAAjB,CAAqBE,KAArB,EAA4BkT,UAA5B,EAAwC8xC,IAAxC,CAA6C,YAAY;AAAE,eAAOoK,OAAP;AAAiB,OAA5E,CAAV;AACH,KAFD,MAGK;AACD97C,MAAAA,OAAO,GAAGy2C,OAAO,CAACz7B,OAAR,CAAgB8gC,OAAhB,CAAV;AACH;;AACDD,IAAAA,gBAAgB,CAACnK,IAAjB,GAAwB1xC,OAAO,CAAC0xC,IAAR,CAAa/hD,IAAb,CAAkBqQ,OAAlB,CAAxB;AACA67C,IAAAA,gBAAgB,CAAC/gC,KAAjB,GAAyB9a,OAAO,CAAC0xC,IAAR,CAAa/hD,IAAb,CAAkBqQ,OAAlB,EAA2B5B,SAA3B,CAAzB;;AACA,QAAI,OAAOwB,UAAP,KAAsB,UAA1B,EAAsC;AAClCI,MAAAA,OAAO,CAAC8a,KAAR,CAAc,YAAY,CAAG,CAA7B;AACH;;AACD,WAAO+gC,gBAAP;AACH,GA3BD;;AA4BAzD,EAAAA,SAAS,CAAC7rD,SAAV,CAAoBowC,YAApB,GAAmC,YAAY;AAC3Ct9B,IAAAA,oBAAoB,CAAC,wBAAD,EAA2B,KAAKtK,IAAhC,CAApB;AACA,WAAO,IAAI0K,YAAJ,CAAiB,KAAKwZ,IAAtB,EAA4B,KAAKlkB,IAAjC,CAAP;AACH,GAHD;;AAIA6D,EAAAA,MAAM,CAACC,cAAP,CAAsBu/C,SAAS,CAAC7rD,SAAhC,EAA2C,UAA3C,EAAuD;AACnDO,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK2uD,YAAL,EAAP;AACH,KAHkD;AAInD3iD,IAAAA,UAAU,EAAE,KAJuC;AAKnDC,IAAAA,YAAY,EAAE;AALqC,GAAvD;AAOAH,EAAAA,MAAM,CAACC,cAAP,CAAsBu/C,SAAS,CAAC7rD,SAAhC,EAA2C,KAA3C,EAAkD;AAC9CO,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK6jB,MAAL,EAAP;AACH,KAH6C;AAI9C7X,IAAAA,UAAU,EAAE,KAJkC;AAK9CC,IAAAA,YAAY,EAAE;AALgC,GAAlD;AAOAH,EAAAA,MAAM,CAACC,cAAP,CAAsBu/C,SAAS,CAAC7rD,SAAhC,EAA2C,QAA3C,EAAqD;AACjDO,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKokB,SAAL,EAAP;AACH,KAHgD;AAIjDpY,IAAAA,UAAU,EAAE,KAJqC;AAKjDC,IAAAA,YAAY,EAAE;AALmC,GAArD;AAOAH,EAAAA,MAAM,CAACC,cAAP,CAAsBu/C,SAAS,CAAC7rD,SAAhC,EAA2C,MAA3C,EAAmD;AAC/CO,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK0uD,OAAL,EAAP;AACH,KAH8C;AAI/C1iD,IAAAA,UAAU,EAAE,KAJmC;AAK/CC,IAAAA,YAAY,EAAE;AALiC,GAAnD;AAOA,SAAOq/C,SAAP;AACH,CAzN8B,CAyN7Bp/B,KAzN6B,CAA/B;AA0NA;AACA;AACA;AACA;AACA;AACA;;;AACAA,KAAK,CAACD,sBAAN,GAA+Bq/B,SAA/B;AACAntB,SAAS,CAAClS,sBAAV,GAAmCq/B,SAAnC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA,IAAI2D,yBAAyB;AAAG;AAAe,YAAY;AACvD,WAASA,yBAAT,CAAmCC,IAAnC,EAAyCC,aAAzC,EAAwD;AACpD,QAAI5vC,KAAK,GAAG,IAAZ;;AACA,SAAK2vC,IAAL,GAAYA,IAAZ;AACA,SAAKC,aAAL,GAAqBA,aAArB;AACA,SAAKC,KAAL,GAAa,IAAb;AACA,SAAKA,KAAL,GAAaD,aAAa,CAACE,YAAd,CAA2B;AAAEh+C,MAAAA,QAAQ,EAAE;AAAZ,KAA3B,CAAb;;AACA,QAAI,CAAC,KAAK+9C,KAAV,EAAiB;AACbD,MAAAA,aAAa,CAACnvD,GAAd,GAAoB4kD,IAApB,CAAyB,UAAU0K,IAAV,EAAgB;AAAE,eAAQ/vC,KAAK,CAAC6vC,KAAN,GAAcE,IAAtB;AAA8B,OAAzE;AACH;AACJ;;AACDL,EAAAA,yBAAyB,CAACxvD,SAA1B,CAAoCklD,QAApC,GAA+C,UAAUD,YAAV,EAAwB;AACnE,QAAI,CAAC,KAAK0K,KAAV,EAAiB;AACb,aAAOzF,OAAO,CAACz7B,OAAR,CAAgB,IAAhB,CAAP;AACH;;AACD,WAAO,KAAKkhC,KAAL,CAAWzK,QAAX,CAAoBD,YAApB,EAAkC12B,KAAlC,CAAwC,UAAUhrB,KAAV,EAAiB;AAC5D;AACA;AACA,UAAIA,KAAK,IAAIA,KAAK,CAAC8E,IAAN,KAAe,4BAA5B,EAA0D;AACtDlF,QAAAA,GAAG,CAAC,gEAAD,CAAH;AACA,eAAO,IAAP;AACH,OAHD,MAIK;AACD,eAAO+mD,OAAO,CAACv7B,MAAR,CAAeprB,KAAf,CAAP;AACH;AACJ,KAVM,CAAP;AAWH,GAfD;;AAgBAisD,EAAAA,yBAAyB,CAACxvD,SAA1B,CAAoC6oD,sBAApC,GAA6D,UAAU7hB,QAAV,EAAoB;AAC7E;AACA;AACA,QAAI,KAAK2oB,KAAT,EAAgB;AACZ,WAAKA,KAAL,CAAWG,oBAAX,CAAgC9oB,QAAhC;AACH,KAFD,MAGK;AACDriC,MAAAA,UAAU,CAAC,YAAY;AAAE,eAAOqiC,QAAQ,CAAC,IAAD,CAAf;AAAwB,OAAvC,EAAyC,CAAzC,CAAV;AACA,WAAK0oB,aAAL,CACKnvD,GADL,GAEK4kD,IAFL,CAEU,UAAU0K,IAAV,EAAgB;AAAE,eAAOA,IAAI,CAACC,oBAAL,CAA0B9oB,QAA1B,CAAP;AAA6C,OAFzE;AAGH;AACJ,GAZD;;AAaAwoB,EAAAA,yBAAyB,CAACxvD,SAA1B,CAAoC+vD,yBAApC,GAAgE,UAAU/oB,QAAV,EAAoB;AAChF,SAAK0oB,aAAL,CACKnvD,GADL,GAEK4kD,IAFL,CAEU,UAAU0K,IAAV,EAAgB;AAAE,aAAOA,IAAI,CAACG,uBAAL,CAA6BhpB,QAA7B,CAAP;AAAgD,KAF5E;AAGH,GAJD;;AAKAwoB,EAAAA,yBAAyB,CAACxvD,SAA1B,CAAoC2lD,qBAApC,GAA4D,YAAY;AACpE,QAAIsK,YAAY,GAAG,4DACf,KAAKR,IAAL,CAAU9uD,IADK,GAEf,yDAFe,GAGf,yBAHJ;;AAIA,QAAI,gBAAgB,KAAK8uD,IAAL,CAAUzY,OAA9B,EAAuC;AACnCiZ,MAAAA,YAAY,IACR,qEACI,8EADJ,GAEI,UAHR;AAIH,KALD,MAMK,IAAI,oBAAoB,KAAKR,IAAL,CAAUzY,OAAlC,EAA2C;AAC5CiZ,MAAAA,YAAY,IACR,yEACI,8EADJ,GAEI,UAHR;AAIH,KALI,MAMA;AACDA,MAAAA,YAAY,IACR,qEACI,4DADJ,GAEI,uCAHR;AAIH;;AACDvsD,IAAAA,IAAI,CAACusD,YAAD,CAAJ;AACH,GAxBD;;AAyBA,SAAOT,yBAAP;AACH,CAvE8C,EAA/C;AAwEA;;;AACA,IAAIU,0BAA0B;AAAG;AAAe,YAAY;AACxD,WAASA,0BAAT,GAAsC,CACrC;;AACDA,EAAAA,0BAA0B,CAAClwD,SAA3B,CAAqCklD,QAArC,GAAgD,UAAUD,YAAV,EAAwB;AACpE,WAAOiF,OAAO,CAACz7B,OAAR,CAAgB;AACnB22B,MAAAA,WAAW,EAAE8K,0BAA0B,CAACC;AADrB,KAAhB,CAAP;AAGH,GAJD;;AAKAD,EAAAA,0BAA0B,CAAClwD,SAA3B,CAAqC6oD,sBAArC,GAA8D,UAAU7hB,QAAV,EAAoB;AAC9E;AACA;AACAA,IAAAA,QAAQ,CAACkpB,0BAA0B,CAACC,mBAA5B,CAAR;AACH,GAJD;;AAKAD,EAAAA,0BAA0B,CAAClwD,SAA3B,CAAqC+vD,yBAArC,GAAiE,UAAU/oB,QAAV,EAAoB,CAAG,CAAxF;;AACAkpB,EAAAA,0BAA0B,CAAClwD,SAA3B,CAAqC2lD,qBAArC,GAA6D,YAAY,CAAG,CAA5E;;AACAuK,EAAAA,0BAA0B,CAACC,mBAA3B,GAAiD,OAAjD;AACA,SAAOD,0BAAP;AACH,CAjB+C,EAAhD;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIE,mCAAmC,GAAG,iCAA1C;;AACA,IAAIC,eAAJ;AACA;AACA;AACA;;;AACA,IAAIC,WAAW;AAAG;AAAe,YAAY;AACzC,WAASA,WAAT,GAAuB;AACnB,SAAKC,MAAL,GAAc,EAAd;AACA;AACR;AACA;;AACQ,SAAKC,cAAL,GAAsB,KAAtB;AACH;;AACDF,EAAAA,WAAW,CAACnjB,WAAZ,GAA0B,YAAY;AAClC,QAAI,CAACkjB,eAAL,EAAsB;AAClBA,MAAAA,eAAe,GAAG,IAAIC,WAAJ,EAAlB;AACH;;AACD,WAAOD,eAAP;AACH,GALD,CARyC,CAczC;;;AACAC,EAAAA,WAAW,CAACtwD,SAAZ,CAAsBqlD,SAAtB,GAAkC,YAAY;AAC1C,QAAI/1C,GAAJ,EAASC,EAAT,EAAa0vB,GAAb,EAAkBvvB,EAAlB;;AACA,QAAI;AACA,WAAK,IAAIC,EAAE,GAAGlS,QAAQ,CAAC4O,MAAM,CAACzG,IAAP,CAAY,KAAK2qD,MAAjB,CAAD,CAAjB,EAA6CjxB,EAAE,GAAG3vB,EAAE,CAACC,IAAH,EAAvD,EAAkE,CAAC0vB,EAAE,CAACzvB,IAAtE,EAA4EyvB,EAAE,GAAG3vB,EAAE,CAACC,IAAH,EAAjF,EAA4F;AACxF,YAAI6gD,OAAO,GAAGnxB,EAAE,CAACn/B,KAAjB;;AACA,YAAI;AACA,eAAK,IAAI0lD,EAAE,IAAI5mB,GAAG,GAAG,KAAK,CAAX,EAAcxhC,QAAQ,CAAC4O,MAAM,CAACzG,IAAP,CAAY,KAAK2qD,MAAL,CAAYE,OAAZ,CAAZ,CAAD,CAA1B,CAAN,EAAsE3K,EAAE,GAAGD,EAAE,CAACj2C,IAAH,EAAhF,EAA2F,CAACk2C,EAAE,CAACj2C,IAA/F,EAAqGi2C,EAAE,GAAGD,EAAE,CAACj2C,IAAH,EAA1G,EAAqH;AACjH,gBAAI8gD,KAAK,GAAG5K,EAAE,CAAC3lD,KAAf;AACA,iBAAKowD,MAAL,CAAYE,OAAZ,EAAqBC,KAArB,EAA4BrL,SAA5B;AACH;AACJ,SALD,CAMA,OAAO7lB,KAAP,EAAc;AAAEP,UAAAA,GAAG,GAAG;AAAE17B,YAAAA,KAAK,EAAEi8B;AAAT,WAAN;AAAyB,SANzC,SAOQ;AACJ,cAAI;AACA,gBAAIsmB,EAAE,IAAI,CAACA,EAAE,CAACj2C,IAAV,KAAmBH,EAAE,GAAGm2C,EAAE,CAAC51C,MAA3B,CAAJ,EAAwCP,EAAE,CAACQ,IAAH,CAAQ21C,EAAR;AAC3C,WAFD,SAGQ;AAAE,gBAAI5mB,GAAJ,EAAS,MAAMA,GAAG,CAAC17B,KAAV;AAAkB;AACxC;AACJ;AACJ,KAjBD,CAkBA,OAAOyM,KAAP,EAAc;AAAEV,MAAAA,GAAG,GAAG;AAAE/L,QAAAA,KAAK,EAAEyM;AAAT,OAAN;AAAyB,KAlBzC,SAmBQ;AACJ,UAAI;AACA,YAAIsvB,EAAE,IAAI,CAACA,EAAE,CAACzvB,IAAV,KAAmBN,EAAE,GAAGI,EAAE,CAACM,MAA3B,CAAJ,EAAwCV,EAAE,CAACW,IAAH,CAAQP,EAAR;AAC3C,OAFD,SAGQ;AAAE,YAAIL,GAAJ,EAAS,MAAMA,GAAG,CAAC/L,KAAV;AAAkB;AACxC;AACJ,GA3BD;;AA4BA+sD,EAAAA,WAAW,CAACtwD,SAAZ,CAAsBslD,MAAtB,GAA+B,YAAY;AACvC,QAAI5lB,GAAJ,EAASnwB,EAAT,EAAaqwB,GAAb,EAAkBlwB,EAAlB;;AACA,QAAI;AACA,WAAK,IAAIC,EAAE,GAAGlS,QAAQ,CAAC4O,MAAM,CAACzG,IAAP,CAAY,KAAK2qD,MAAjB,CAAD,CAAjB,EAA6CjxB,EAAE,GAAG3vB,EAAE,CAACC,IAAH,EAAvD,EAAkE,CAAC0vB,EAAE,CAACzvB,IAAtE,EAA4EyvB,EAAE,GAAG3vB,EAAE,CAACC,IAAH,EAAjF,EAA4F;AACxF,YAAI6gD,OAAO,GAAGnxB,EAAE,CAACn/B,KAAjB;;AACA,YAAI;AACA,eAAK,IAAI0lD,EAAE,IAAIjmB,GAAG,GAAG,KAAK,CAAX,EAAcniC,QAAQ,CAAC4O,MAAM,CAACzG,IAAP,CAAY,KAAK2qD,MAAL,CAAYE,OAAZ,CAAZ,CAAD,CAA1B,CAAN,EAAsE3K,EAAE,GAAGD,EAAE,CAACj2C,IAAH,EAAhF,EAA2F,CAACk2C,EAAE,CAACj2C,IAA/F,EAAqGi2C,EAAE,GAAGD,EAAE,CAACj2C,IAAH,EAA1G,EAAqH;AACjH,gBAAI8gD,KAAK,GAAG5K,EAAE,CAAC3lD,KAAf;AACA,iBAAKowD,MAAL,CAAYE,OAAZ,EAAqBC,KAArB,EAA4BpL,MAA5B;AACH;AACJ,SALD,CAMA,OAAOzlB,KAAP,EAAc;AAAED,UAAAA,GAAG,GAAG;AAAEr8B,YAAAA,KAAK,EAAEs8B;AAAT,WAAN;AAAyB,SANzC,SAOQ;AACJ,cAAI;AACA,gBAAIimB,EAAE,IAAI,CAACA,EAAE,CAACj2C,IAAV,KAAmBH,EAAE,GAAGm2C,EAAE,CAAC51C,MAA3B,CAAJ,EAAwCP,EAAE,CAACQ,IAAH,CAAQ21C,EAAR;AAC3C,WAFD,SAGQ;AAAE,gBAAIjmB,GAAJ,EAAS,MAAMA,GAAG,CAACr8B,KAAV;AAAkB;AACxC;AACJ;AACJ,KAjBD,CAkBA,OAAOo8B,KAAP,EAAc;AAAED,MAAAA,GAAG,GAAG;AAAEn8B,QAAAA,KAAK,EAAEo8B;AAAT,OAAN;AAAyB,KAlBzC,SAmBQ;AACJ,UAAI;AACA,YAAIL,EAAE,IAAI,CAACA,EAAE,CAACzvB,IAAV,KAAmBN,EAAE,GAAGI,EAAE,CAACM,MAA3B,CAAJ,EAAwCV,EAAE,CAACW,IAAH,CAAQP,EAAR;AAC3C,OAFD,SAGQ;AAAE,YAAI+vB,GAAJ,EAAS,MAAMA,GAAG,CAACn8B,KAAV;AAAkB;AACxC;AACJ,GA3BD;AA4BA;AACJ;AACA;;;AACI+sD,EAAAA,WAAW,CAACtwD,SAAZ,CAAsB2wD,qBAAtB,GAA8C,UAAUjkC,IAAV,EAAgBhf,IAAhB,EAAsBgD,IAAtB,EAA4B;AACtEgc,IAAAA,IAAI,CAACkuB,SAAL,GAAiB,IAAIntC,QAAJ,CAAaC,IAAI,GAAG,GAAP,GAAagD,IAA1B;AACjB;AAAc,SADG,EACIgc,IAAI,CAACkuB,SAAL,CAAehtC,SADnB,EAC8B8e,IAAI,CAACkuB,SAAL,CAAe/sC,aAD7C,EAC4D6e,IAAI,CAACkuB,SAAL,CAAe9sC,SAD3E,EACsF4e,IAAI,CAACkuB,SAAL,CAAe7sC,cADrG,EACqH2e,IAAI,CAACkuB,SAAL,CAAe5sC,6BADpI,CAAjB;;AAEA,QAAI0e,IAAI,CAACkuB,SAAL,CAAe9sC,SAAnB,EAA8B;AAC1B4e,MAAAA,IAAI,CAAC8yB,kBAAL,GAA0B,IAAI0Q,0BAAJ,EAA1B;AACH;AACJ,GAND;AAOA;AACJ;AACA;;;AACII,EAAAA,WAAW,CAACtwD,SAAZ,CAAsB4wD,eAAtB,GAAwC,UAAUxI,GAAV,EAAeyI,YAAf,EAA6B1b,GAA7B,EAAkCrnC,SAAlC,EAA6C;AACjF,QAAI4iD,KAAK,GAAGvb,GAAG,IAAIiT,GAAG,CAACpR,OAAJ,CAAY8Z,WAA/B;;AACA,QAAIJ,KAAK,KAAK7+C,SAAd,EAAyB;AACrB,UAAI,CAACu2C,GAAG,CAACpR,OAAJ,CAAY+Z,SAAjB,EAA4B;AACxBvtD,QAAAA,KAAK,CAAC,+DACF,sDADC,CAAL;AAEH;;AACDL,MAAAA,GAAG,CAAC,iCAAD,EAAoCilD,GAAG,CAACpR,OAAJ,CAAY+Z,SAAhD,CAAH;AACAL,MAAAA,KAAK,GAAGtI,GAAG,CAACpR,OAAJ,CAAY+Z,SAAZ,GAAwB,8BAAhC;AACH;;AACD,QAAI1gD,SAAS,GAAGF,aAAa,CAACugD,KAAD,EAAQ5iD,SAAR,CAA7B;AACA,QAAI0C,QAAQ,GAAGH,SAAS,CAACG,QAAzB;AACA,QAAIwgD,UAAJ;AACA,QAAIC,cAAc,GAAGp/C,SAArB;;AACA,QAAI,OAAOqlC,OAAP,KAAmB,WAAvB,EAAoC;AAChC+Z,MAAAA,cAAc,GAAG/Z,OAAO,CAACE,GAAR,CAAYgZ,mCAAZ,CAAjB;AACH;;AACD,QAAIa,cAAJ,EAAoB;AAChBD,MAAAA,UAAU,GAAG,IAAb;AACAN,MAAAA,KAAK,GAAG,YAAYO,cAAZ,GAA6B,MAA7B,GAAsCzgD,QAAQ,CAAC5C,SAAvD;AACAyC,MAAAA,SAAS,GAAGF,aAAa,CAACugD,KAAD,EAAQ5iD,SAAR,CAAzB;AACA0C,MAAAA,QAAQ,GAAGH,SAAS,CAACG,QAArB;AACH,KALD,MAMK;AACDwgD,MAAAA,UAAU,GAAG,CAAC3gD,SAAS,CAACG,QAAV,CAAmB7C,MAAjC;AACH;;AACD,QAAIujD,iBAAiB,GAAGpjD,SAAS,IAAIkjD,UAAb,GAClB,IAAId,0BAAJ,EADkB,GAElB,IAAIV,yBAAJ,CAA8BpH,GAA9B,EAAmCyI,YAAnC,CAFN;AAGA99C,IAAAA,WAAW,CAAC,+BAAD,EAAkC,CAAlC,EAAqC1C,SAArC,CAAX;;AACA,QAAI,CAACtF,WAAW,CAACsF,SAAS,CAAC7H,IAAX,CAAhB,EAAkC;AAC9BhF,MAAAA,KAAK,CAAC,gEACF,+BADC,CAAL;AAEH;;AACD,QAAIkpB,IAAI,GAAG,KAAKykC,UAAL,CAAgB3gD,QAAhB,EAA0B43C,GAA1B,EAA+B8I,iBAA/B,CAAX;AACA,WAAOxkC,IAAI,CAACyiC,QAAZ;AACH,GApCD;AAqCA;AACJ;AACA;AACA;;;AACImB,EAAAA,WAAW,CAACtwD,SAAZ,CAAsBoxD,UAAtB,GAAmC,UAAU1kC,IAAV,EAAgB;AAC/C,QAAI2kC,QAAQ,GAAGxyD,OAAO,CAAC,KAAK0xD,MAAN,EAAc7jC,IAAI,CAAC07B,GAAL,CAASznD,IAAvB,CAAtB,CAD+C,CAE/C;;AACA,QAAI,CAAC0wD,QAAD,IAAaxyD,OAAO,CAACwyD,QAAD,EAAW3kC,IAAI,CAACxsB,GAAhB,CAAP,KAAgCwsB,IAAjD,EAAuD;AACnDlpB,MAAAA,KAAK,CAAC,cAAckpB,IAAI,CAAC07B,GAAL,CAASznD,IAAvB,GAA8B,GAA9B,GAAoC+rB,IAAI,CAACkuB,SAAzC,GAAqD,6BAAtD,CAAL;AACH;;AACDluB,IAAAA,IAAI,CAAC24B,SAAL;AACA,WAAOgM,QAAQ,CAAC3kC,IAAI,CAACxsB,GAAN,CAAf;AACH,GARD;AASA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIowD,EAAAA,WAAW,CAACtwD,SAAZ,CAAsBmxD,UAAtB,GAAmC,UAAU3gD,QAAV,EAAoB43C,GAApB,EAAyB8I,iBAAzB,EAA4C;AAC3E,QAAIG,QAAQ,GAAGxyD,OAAO,CAAC,KAAK0xD,MAAN,EAAcnI,GAAG,CAACznD,IAAlB,CAAtB;;AACA,QAAI,CAAC0wD,QAAL,EAAe;AACXA,MAAAA,QAAQ,GAAG,EAAX;AACA,WAAKd,MAAL,CAAYnI,GAAG,CAACznD,IAAhB,IAAwB0wD,QAAxB;AACH;;AACD,QAAI3kC,IAAI,GAAG7tB,OAAO,CAACwyD,QAAD,EAAW7gD,QAAQ,CAAC1B,WAAT,EAAX,CAAlB;;AACA,QAAI4d,IAAJ,EAAU;AACNlpB,MAAAA,KAAK,CAAC,yHAAD,CAAL;AACH;;AACDkpB,IAAAA,IAAI,GAAG,IAAIw7B,IAAJ,CAAS13C,QAAT,EAAmB,KAAKggD,cAAxB,EAAwCpI,GAAxC,EAA6C8I,iBAA7C,CAAP;AACAG,IAAAA,QAAQ,CAAC7gD,QAAQ,CAAC1B,WAAT,EAAD,CAAR,GAAmC4d,IAAnC;AACA,WAAOA,IAAP;AACH,GAbD;AAcA;AACJ;AACA;;;AACI4jC,EAAAA,WAAW,CAACtwD,SAAZ,CAAsBsxD,eAAtB,GAAwC,UAAUA,eAAV,EAA2B;AAC/D,SAAKd,cAAL,GAAsBc,eAAtB;AACH,GAFD;;AAGA,SAAOhB,WAAP;AACH,CAlKgC,EAAjC;AAoKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA,IAAI9E,QAAQ;AAAG;AAAe,YAAY;AACtC;AACJ;AACA;AACI,WAASA,QAAT,CAAkB+F,aAAlB,EAAiC;AAC7B,QAAIzxC,KAAK,GAAG,IAAZ;;AACA,SAAKyxC,aAAL,GAAqBA,aAArB;AACA;;AACA,SAAKC,gBAAL,GAAwB,KAAxB;AACA,SAAKC,QAAL,GAAgB;AACZn/B,MAAAA,MAAM,EAAE,YAAY;AAAE,eAAOz0B,SAAS,CAACiiB,KAAD,EAAQ,KAAK,CAAb,EAAgB,KAAK,CAArB,EAAwB,YAAY;AACtE,iBAAOhiB,WAAW,CAAC,IAAD,EAAO,UAAUyR,EAAV,EAAc;AACnC,iBAAKmiD,aAAL,CAAmB,QAAnB;AACApB,YAAAA,WAAW,CAACnjB,WAAZ,GAA0BikB,UAA1B,CAAqC,KAAKj+C,KAA1C;AACA,iBAAKo+C,aAAL,GAAqB,IAArB;AACA,iBAAKI,aAAL,GAAqB,IAArB;AACA,mBAAO,CAAC;AAAE;AAAH,aAAP;AACH,WANiB,CAAlB;AAOH,SARqC,CAAhB;AAQjB;AATO,KAAhB;;AAWA,QAAI,EAAEJ,aAAa,YAAYrJ,IAA3B,CAAJ,EAAsC;AAClC1kD,MAAAA,KAAK,CAAC,sEAAD,CAAL;AACH;AACJ;;AACD6I,EAAAA,MAAM,CAACC,cAAP,CAAsBk/C,QAAQ,CAACxrD,SAA/B,EAA0C,OAA1C,EAAmD;AAC/CO,IAAAA,GAAG,EAAE,YAAY;AACb,UAAI,CAAC,KAAKixD,gBAAV,EAA4B;AACxB,aAAKD,aAAL,CAAmB1f,KAAnB;AACA,aAAK2f,gBAAL,GAAwB,IAAxB;AACH;;AACD,aAAO,KAAKD,aAAZ;AACH,KAP8C;AAQ/ChlD,IAAAA,UAAU,EAAE,KARmC;AAS/CC,IAAAA,YAAY,EAAE;AATiC,GAAnD;AAWAH,EAAAA,MAAM,CAACC,cAAP,CAAsBk/C,QAAQ,CAACxrD,SAA/B,EAA0C,OAA1C,EAAmD;AAC/CO,IAAAA,GAAG,EAAE,YAAY;AACb,UAAI,CAAC,KAAKoxD,aAAV,EAAyB;AACrB,aAAKA,aAAL,GAAqB,IAAI9F,SAAJ,CAAc,KAAK14C,KAAnB,EAA0BpJ,YAAY,EAAtC,CAArB;AACH;;AACD,aAAO,KAAK4nD,aAAZ;AACH,KAN8C;AAO/CplD,IAAAA,UAAU,EAAE,KAPmC;AAQ/CC,IAAAA,YAAY,EAAE;AARiC,GAAnD;AAUAH,EAAAA,MAAM,CAACC,cAAP,CAAsBk/C,QAAQ,CAACxrD,SAA/B,EAA0C,KAA1C,EAAiD;AAC7CO,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK4S,KAAL,CAAWi1C,GAAlB;AACH,KAH4C;AAI7C77C,IAAAA,UAAU,EAAE,KAJiC;AAK7CC,IAAAA,YAAY,EAAE;AAL+B,GAAjD;AAOA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AACIg/C,EAAAA,QAAQ,CAACxrD,SAAT,CAAmB4xD,WAAnB,GAAiC,UAAUlkD,IAAV,EAAgBgD,IAAhB,EAAsB;AACnD,SAAKghD,aAAL,CAAmB,aAAnB;;AACA,QAAI,KAAKF,gBAAT,EAA2B;AACvBhuD,MAAAA,KAAK,CAAC,wEAAD,CAAL;AACA;AACH,KALkD,CAMnD;;;AACA8sD,IAAAA,WAAW,CAACnjB,WAAZ,GAA0BwjB,qBAA1B,CAAgD,KAAKY,aAArD,EAAoE7jD,IAApE,EAA0EgD,IAA1E;AACH,GARD;;AASA86C,EAAAA,QAAQ,CAACxrD,SAAT,CAAmB0kB,GAAnB,GAAyB,UAAUlc,IAAV,EAAgB;AACrC,SAAKkpD,aAAL,CAAmB,KAAnB;AACAjzD,IAAAA,gBAAgB,CAAC,cAAD,EAAiB,CAAjB,EAAoB,CAApB,EAAuB2D,SAAS,CAACC,MAAjC,CAAhB;;AACA,QAAImG,IAAI,YAAYqjD,SAApB,EAA+B;AAC3B,aAAO,KAAKgG,UAAL,CAAgBrpD,IAAI,CAAC5H,QAAL,EAAhB,CAAP;AACH;;AACD,WAAO4H,IAAI,KAAKqJ,SAAT,GAAqB,KAAK4K,KAAL,CAAWhQ,KAAX,CAAiBjE,IAAjB,CAArB,GAA8C,KAAKiU,KAA1D;AACH,GAPD;AAQA;AACJ;AACA;AACA;AACA;AACA;;;AACI+uC,EAAAA,QAAQ,CAACxrD,SAAT,CAAmB6xD,UAAnB,GAAgC,UAAU1c,GAAV,EAAe;AAC3C;AACA,QAAI2c,OAAO,GAAG,qBAAd;AACA,SAAKJ,aAAL,CAAmBI,OAAnB;AACArzD,IAAAA,gBAAgB,CAACqzD,OAAD,EAAU,CAAV,EAAa,CAAb,EAAgB1vD,SAAS,CAACC,MAA1B,CAAhB;AACA,QAAI0vD,SAAS,GAAG5hD,aAAa,CAACglC,GAAD,EAAM,KAAKhiC,KAAL,CAAWynC,SAAX,CAAqB9sC,SAA3B,CAA7B;AACAiF,IAAAA,WAAW,CAAC++C,OAAD,EAAU,CAAV,EAAaC,SAAb,CAAX;AACA,QAAIvhD,QAAQ,GAAGuhD,SAAS,CAACvhD,QAAzB;;AACA,QAAI,CAAC,KAAK2C,KAAL,CAAWynC,SAAX,CAAqBxsC,YAArB,EAAD,IACAoC,QAAQ,CAAC9C,IAAT,KAAkB,KAAKyF,KAAL,CAAWynC,SAAX,CAAqBltC,IAD3C,EACiD;AAC7ClK,MAAAA,KAAK,CAACsuD,OAAO,GACT,mDADE,GAEF,SAFE,GAGFthD,QAAQ,CAAC9C,IAHP,GAIF,gBAJE,GAKF,KAAKyF,KAAL,CAAWynC,SAAX,CAAqBltC,IALnB,GAMF,GANC,CAAL;AAOH;;AACD,WAAO,KAAKgX,GAAL,CAASqtC,SAAS,CAACvpD,IAAV,CAAe5H,QAAf,EAAT,CAAP;AACH,GAnBD;;AAoBA4qD,EAAAA,QAAQ,CAACxrD,SAAT,CAAmB0xD,aAAnB,GAAmC,UAAUI,OAAV,EAAmB;AAClD,QAAI,KAAKP,aAAL,KAAuB,IAA3B,EAAiC;AAC7B/tD,MAAAA,KAAK,CAAC,iBAAiBsuD,OAAjB,GAA2B,yBAA5B,CAAL;AACH;AACJ,GAJD,CAvGsC,CA4GtC;;;AACAtG,EAAAA,QAAQ,CAACxrD,SAAT,CAAmBgyD,SAAnB,GAA+B,YAAY;AACvCvzD,IAAAA,gBAAgB,CAAC,oBAAD,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B2D,SAAS,CAACC,MAAvC,CAAhB;AACA,SAAKqvD,aAAL,CAAmB,WAAnB;AACA,SAAKv+C,KAAL,CAAWkyC,SAAX;AACH,GAJD;;AAKAmG,EAAAA,QAAQ,CAACxrD,SAAT,CAAmBiyD,QAAnB,GAA8B,YAAY;AACtCxzD,IAAAA,gBAAgB,CAAC,mBAAD,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B2D,SAAS,CAACC,MAAtC,CAAhB;AACA,SAAKqvD,aAAL,CAAmB,UAAnB;AACA,SAAKv+C,KAAL,CAAWmyC,MAAX;AACH,GAJD;;AAKAkG,EAAAA,QAAQ,CAAC0G,WAAT,GAAuB;AACnBC,IAAAA,SAAS,EAAE;AACP,aAAO;AADA,KADQ;AAInBC,IAAAA,SAAS,EAAE,UAAUlhC,KAAV,EAAiB;AACxB,aAAO;AACH,eAAO;AACH,uBAAaA;AADV;AADJ,OAAP;AAKH;AAVkB,GAAvB;AAYA,SAAOs6B,QAAP;AACH,CApI6B,EAA9B;AAsIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAI6G,gBAAgB,GAAG,YAAY;AAC/B3b,EAAAA,mBAAmB,CAACxE,aAApB;AACA3C,EAAAA,qBAAqB,CAACyC,UAAtB;AACH,CAHD;;AAIA,IAAIsgB,eAAe,GAAG,YAAY;AAC9B/iB,EAAAA,qBAAqB,CAAC2C,aAAtB;AACH,CAFD;AAGA;;;AACA,IAAImH,qBAAqB,GAAG,YAAY;AACpC,SAAO3C,mBAAmB,CAAC,aAAD,CAAnB,EAAP;AACH,CAFD;;AAGA,IAAI6b,wBAAwB,GAAG,UAAU7tC,GAAV,EAAe2I,QAAf,EAAyB;AACpD;AACA3I,EAAAA,GAAG,CAACgI,IAAJ,CAASg8B,qBAAT,CAA+BrI,sBAA/B,GAAwDhzB,QAAxD;AACH,CAHD;;AAIA,IAAI8d,KAAK,GAAG,UAAUzmB,GAAV,EAAeqmC,SAAf,EAA0B;AAClCrmC,EAAAA,GAAG,CAACgI,IAAJ,CAASye,KAAT,CAAe4f,SAAf;AACH,CAFD;;AAGA,IAAIM,qBAAqB,GAAG,UAAU3mC,GAAV,EAAe4mC,MAAf,EAAuB;AAC/C5mC,EAAAA,GAAG,CAACgI,IAAJ,CAAS2+B,qBAAT,CAA+BC,MAA/B;AACH,CAFD;;AAGA,IAAIjD,eAAe,GAAG,UAAU3jC,GAAV,EAAe;AACjC,SAAOA,GAAG,CAACgI,IAAJ,CAAS27B,eAAhB;AACH,CAFD;;AAGA,IAAImK,mBAAmB,GAAG,UAAU9tC,GAAV,EAAe2I,QAAf,EAAyB;AAC/C,SAAO3I,GAAG,CAACgI,IAAJ,CAASm9B,oBAAT,CAA8Bx8B,QAA9B,CAAP;AACH,CAFD;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASolC,cAAT,CAAwBljD,EAAxB,EAA4B;AACxB,MAAI64C,GAAG,GAAG74C,EAAE,CAAC64C,GAAb;AAAA,MAAkBjT,GAAG,GAAG5lC,EAAE,CAAC4lC,GAA3B;AAAA,MAAgCiB,OAAO,GAAG7mC,EAAE,CAAC6mC,OAA7C;AAAA,MAAsDsc,cAAc,GAAGnjD,EAAE,CAACmjD,cAA1E;AAAA,MAA0F9kD,SAAS,GAAG2B,EAAE,CAAC3B,SAAzG;AAAA,MAAoH8B,EAAE,GAAGH,EAAE,CAACzB,SAA5H;AAAA,MAAuIA,SAAS,GAAG4B,EAAE,KAAK,KAAK,CAAZ,GAAgB,KAAhB,GAAwBA,EAA3K;AACAymC,EAAAA,aAAa,CAACC,OAAD,CAAb;AACA;AACJ;AACA;AACA;;AACI,MAAIya,YAAY,GAAG,IAAInxD,QAAJ,CAAa,eAAb,EAA8B,IAAIC,kBAAJ,CAAuB,qBAAvB,CAA9B,CAAnB;AACAkxD,EAAAA,YAAY,CAAC8B,YAAb,CAA0B,IAAI/yD,SAAJ,CAAc,eAAd,EAA+B,YAAY;AAAE,WAAO8yD,cAAP;AAAwB,GAArE,EAAuE;AAAU;AAAjF,GAA1B;AACA,SAAO;AACHE,IAAAA,QAAQ,EAAEtC,WAAW,CAACnjB,WAAZ,GAA0ByjB,eAA1B,CAA0CxI,GAA1C,EAA+CyI,YAA/C,EAA6D1b,GAA7D,EAAkErnC,SAAlE,CADP;AAEHF,IAAAA,SAAS,EAAEA;AAFR,GAAP;AAIH;;AAED,IAAI6jD,QAAQ,GAAG,aAAaplD,MAAM,CAACwmD,MAAP,CAAc;AACxCC,EAAAA,SAAS,EAAE,IAD6B;AAExCT,EAAAA,gBAAgB,EAAEA,gBAFsB;AAGxCC,EAAAA,eAAe,EAAEA,eAHuB;AAIxCjZ,EAAAA,qBAAqB,EAAEA,qBAJiB;AAKxCkZ,EAAAA,wBAAwB,EAAEA,wBALc;AAMxCpnB,EAAAA,KAAK,EAAEA,KANiC;AAOxCkgB,EAAAA,qBAAqB,EAAEA,qBAPiB;AAQxChD,EAAAA,eAAe,EAAEA,eARuB;AASxCmK,EAAAA,mBAAmB,EAAEA,mBATmB;AAUxCC,EAAAA,cAAc,EAAEA;AAVwB,CAAd,CAA5B;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIM,cAAc,GAAG3T,oBAArB,C,CACA;;AACAA,oBAAoB,CAACp/C,SAArB,CAA+BgzD,YAA/B,GAA8C,UAAUlpD,UAAV,EAAsBuJ,UAAtB,EAAkC;AAC5E,OAAKmpC,WAAL,CAAiB,GAAjB,EAAsB;AAAE8E,IAAAA,CAAC,EAAEx3C;AAAL,GAAtB,EAAyCuJ,UAAzC;AACH,CAFD,C,CAGA;;;AACA+rC,oBAAoB,CAACp/C,SAArB,CAA+BizD,IAA/B,GAAsC,UAAUjvD,IAAV,EAAgBkvD,MAAhB,EAAwB;AAC1D,OAAK1W,WAAL,CAAiB,MAAjB,EAAyB;AAAE7H,IAAAA,CAAC,EAAE3wC;AAAL,GAAzB,EAAsCkvD,MAAtC;AACH,CAFD,C,CAGA;;;AACA,IAAIC,kBAAkB,GAAGxY,UAAzB;;AACA,IAAIyY,UAAU,GAAG,UAAUC,OAAV,EAAmB;AAChC,MAAIC,MAAM,GAAGlU,oBAAoB,CAACp/C,SAArB,CAA+Bu+C,GAA5C;;AACAa,EAAAA,oBAAoB,CAACp/C,SAArB,CAA+Bu+C,GAA/B,GAAqC,UAAUz0C,UAAV,EAAsB9F,IAAtB,EAA4BqP,UAA5B,EAAwCsF,IAAxC,EAA8C;AAC/E,QAAIA,IAAI,KAAK9G,SAAb,EAAwB;AACpB8G,MAAAA,IAAI,GAAG06C,OAAO,EAAd;AACH;;AACDC,IAAAA,MAAM,CAACpjD,IAAP,CAAY,IAAZ,EAAkBpG,UAAlB,EAA8B9F,IAA9B,EAAoCqP,UAApC,EAAgDsF,IAAhD;AACH,GALD;;AAMA,SAAO,YAAY;AACfymC,IAAAA,oBAAoB,CAACp/C,SAArB,CAA+Bu+C,GAA/B,GAAqC+U,MAArC;AACH,GAFD;AAGH,CAXD;;AAYA,IAAIC,gBAAgB,GAAG9lD,QAAvB;;AACA,IAAIiiB,eAAe,GAAG,UAAUpnB,KAAV,EAAiB;AACnC,SAAOA,KAAK,CAAConB,eAAN,EAAP;AACH,CAFD;AAGA;AACA;AACA;;;AACA,IAAI4hC,eAAe,GAAG,UAAUA,eAAV,EAA2B;AAC7ChB,EAAAA,WAAW,CAACnjB,WAAZ,GAA0BmkB,eAA1B,CAA0CA,eAA1C;AACH,CAFD;;AAIA,IAAIkC,WAAW,GAAG,aAAannD,MAAM,CAACwmD,MAAP,CAAc;AAC3CC,EAAAA,SAAS,EAAE,IADgC;AAE3CC,EAAAA,cAAc,EAAEA,cAF2B;AAG3CI,EAAAA,kBAAkB,EAAEA,kBAHuB;AAI3CC,EAAAA,UAAU,EAAEA,UAJ+B;AAK3CG,EAAAA,gBAAgB,EAAEA,gBALyB;AAM3C7jC,EAAAA,eAAe,EAAEA,eAN0B;AAO3C4hC,EAAAA,eAAe,EAAEA;AAP0B,CAAd,CAA/B;AAUA,IAAI3wD,IAAI,GAAG,oBAAX;AACA,IAAIy1C,OAAO,GAAG,OAAd;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAI8b,WAAW,GAAG1G,QAAQ,CAAC0G,WAA3B;;AACA,SAASuB,gBAAT,CAA0Bb,QAA1B,EAAoC;AAChC;AACAzc,EAAAA,aAAa,CAACyc,QAAQ,CAAC1c,WAAV,CAAb,CAFgC,CAGhC;;AACA,MAAItoC,SAAS,GAAGglD,QAAQ,CAACnB,QAAT,CAAkBiC,iBAAlB,CAAoC,IAAI9zD,SAAJ,CAAc,UAAd,EAA0B,UAAUkuB,SAAV,EAAqBqnB,GAArB,EAA0B;AACpG;AACA;AACA,QAAIiT,GAAG,GAAGt6B,SAAS,CAAC6lC,WAAV,CAAsB,KAAtB,EAA6B/D,YAA7B,EAAV;AACA,QAAIiB,YAAY,GAAG/iC,SAAS,CAAC6lC,WAAV,CAAsB,eAAtB,CAAnB;AACA,WAAOrD,WAAW,CAACnjB,WAAZ,GAA0ByjB,eAA1B,CAA0CxI,GAA1C,EAA+CyI,YAA/C,EAA6D1b,GAA7D,CAAP;AACH,GANmD,EAMjD;AAAS;AANwC,IAO/Cye,eAP+C,EAQpD;AACA;AACI/H,IAAAA,SAAS,EAAEA,SADf;AAEIp/B,IAAAA,KAAK,EAAEA,KAFX;AAGI++B,IAAAA,QAAQ,EAAEA,QAHd;AAIIhoC,IAAAA,YAAY,EAAEA,YAJlB;AAKI1gB,IAAAA,aAAa,EAAEA,aALnB;AAMI2uD,IAAAA,QAAQ,EAAEA,QANd;AAOIS,IAAAA,WAAW,EAAEA,WAPjB;AAQIsB,IAAAA,WAAW,EAAEA;AARjB,GAToD,EAmB/CK,oBAnB+C,CAmB1B,IAnB0B,CAApC,CAAhB;AAoBAjB,EAAAA,QAAQ,CAACkB,eAAT,CAAyBnzD,IAAzB,EAA+By1C,OAA/B;;AACA,MAAI93C,SAAS,EAAb,EAAiB;AACby1D,IAAAA,MAAM,CAACC,OAAP,GAAiBpmD,SAAjB;AACH;AACJ;;AACD6lD,gBAAgB,CAACl2D,QAAD,CAAhB;AAEA,SAASimB,YAAT,EAAuBgoC,QAAvB,EAAiCt4C,YAAjC,EAA+CuZ,KAA/C,EAAsDo/B,SAAtD,EAAiEqG,WAAjE,EAA8EpvD,aAA9E,EAA6F2wD,gBAA7F","sourcesContent":["import firebase from '@firebase/app';\nimport { __spread, __values, __extends, __assign, __read, __awaiter, __generator } from 'tslib';\nimport { stringify, jsonEval, contains, assert, base64, stringToByteArray, Sha1, isNodeSdk, stringLength, errorPrefix, validateArgCount, validateCallback, Deferred, assertionError, safeGet, map, validateContextObject, deepCopy, isMobileCordova, base64Encode, isAdmin, isValidFormat, isEmpty, isReactNative, querystring } from '@firebase/util';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { Provider, ComponentContainer, Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n */\r\nvar DOMStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * @param domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    function DOMStorageWrapper(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param key The key to save the value under\r\n     * @param value The value being stored, or null to remove the key.\r\n     */\r\n    DOMStorageWrapper.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\r\n        }\r\n    };\r\n    /**\r\n     * @return The value that was stored under this key, or null\r\n     */\r\n    DOMStorageWrapper.prototype.get = function (key) {\r\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return jsonEval(storedVal);\r\n        }\r\n    };\r\n    DOMStorageWrapper.prototype.remove = function (key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    };\r\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\r\n        return this.prefix_ + name;\r\n    };\r\n    DOMStorageWrapper.prototype.toString = function () {\r\n        return this.domStorage_.toString();\r\n    };\r\n    return DOMStorageWrapper;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    MemoryStorage.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    };\r\n    MemoryStorage.prototype.get = function (key) {\r\n        if (contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    };\r\n    MemoryStorage.prototype.remove = function (key) {\r\n        delete this.cache_[key];\r\n    };\r\n    return MemoryStorage;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return Turning off type information until a common interface is defined.\r\n */\r\nvar createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            var domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nvar PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nvar SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logClient = new Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n */\r\nvar LUIDGenerator = (function () {\r\n    var id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param str The string to hash\r\n * @return {!string} The resulting hash\r\n */\r\nvar sha1 = function (str) {\r\n    var utf8Bytes = stringToByteArray(str);\r\n    var sha1 = new Sha1();\r\n    sha1.update(utf8Bytes);\r\n    var sha1Bytes = sha1.digest();\r\n    return base64.encodeByteArray(sha1Bytes);\r\n};\r\nvar buildLogMessage_ = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = '';\r\n    for (var i = 0; i < varArgs.length; i++) {\r\n        var arg = varArgs[i];\r\n        if (Array.isArray(arg) ||\r\n            (arg &&\r\n                typeof arg === 'object' &&\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                typeof arg.length === 'number')) {\r\n            message += buildLogMessage_.apply(null, arg);\r\n        }\r\n        else if (typeof arg === 'object') {\r\n            message += stringify(arg);\r\n        }\r\n        else {\r\n            message += arg;\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n */\r\nvar logger = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n */\r\nvar firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param logger_ A flag to turn on logging, or a custom logger\r\n * @param persistent Whether or not to persist logging settings across refreshes\r\n */\r\nvar enableLogging = function (logger_, persistent) {\r\n    assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = LogLevel.VERBOSE;\r\n        logger = logClient.log.bind(logClient);\r\n        if (persistent) {\r\n            SessionStorage.set('logging_enabled', true);\r\n        }\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger = logger_;\r\n    }\r\n    else {\r\n        logger = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\nvar log = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger === null && SessionStorage.get('logging_enabled') === true) {\r\n            enableLogging(true);\r\n        }\r\n    }\r\n    if (logger) {\r\n        var message = buildLogMessage_.apply(null, varArgs);\r\n        logger(message);\r\n    }\r\n};\r\nvar logWrapper = function (prefix) {\r\n    return function () {\r\n        var varArgs = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            varArgs[_i] = arguments[_i];\r\n        }\r\n        log.apply(void 0, __spread([prefix], varArgs));\r\n    };\r\n};\r\nvar error = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, __spread(varArgs));\r\n    logClient.error(message);\r\n};\r\nvar fatal = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, __spread(varArgs));\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\nvar warn = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, __spread(varArgs));\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nvar warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n */\r\nvar isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data !== data || // NaN\r\n            data === Number.POSITIVE_INFINITY ||\r\n            data === Number.NEGATIVE_INFINITY));\r\n};\r\nvar executeWhenDOMReady = function (fn) {\r\n    if (isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        var called_1 = false;\r\n        var wrappedFn_1 = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn_1, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called_1) {\r\n                called_1 = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn_1, false);\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            document.attachEvent('onreadystatechange', function () {\r\n                if (document.readyState === 'complete') {\r\n                    wrappedFn_1();\r\n                }\r\n            });\r\n            // fallback to onload.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            window.attachEvent('onload', wrappedFn_1);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n */\r\nvar MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n */\r\nvar MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n */\r\nvar nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        var aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @return {!number} comparison result.\r\n */\r\nvar stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\nvar requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + stringify(obj));\r\n    }\r\n};\r\nvar ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return stringify(obj);\r\n    }\r\n    var keys = [];\r\n    // eslint-disable-next-line guard-for-in\r\n    for (var k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    var key = '{';\r\n    for (var i = 0; i < keys.length; i++) {\r\n        if (i !== 0) {\r\n            key += ',';\r\n        }\r\n        key += stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param str The string\r\n * @param segsize The maximum number of chars in the string.\r\n * @return The string, split into appropriately-sized chunks\r\n */\r\nvar splitStringBySize = function (str, segsize) {\r\n    var len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    var dataSegs = [];\r\n    for (var c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj The object or array to iterate over\r\n * @param fn The function to apply\r\n */\r\nfunction each(obj, fn) {\r\n    for (var key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param v A double\r\n *\r\n */\r\nvar doubleToIEEE754String = function (v) {\r\n    assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    var ebits = 11, fbits = 52;\r\n    var bias = (1 << (ebits - 1)) - 1;\r\n    var s, e, f, ln, i;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    var bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    var str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    var hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1) {\r\n            hexByte = '0' + hexByte;\r\n        }\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n */\r\nvar isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n */\r\nvar isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n */\r\nvar errorForServerCode = function (code, query) {\r\n    var reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code === 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code === 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n};\r\n/**\r\n * Used to test for integer-looking strings\r\n */\r\nvar INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\r\n/**\r\n * For use in keys, the minimum possible 32-bit integer.\r\n */\r\nvar INTEGER_32_MIN = -2147483648;\r\n/**\r\n * For use in kyes, the maximum possible 32-bit integer.\r\n */\r\nvar INTEGER_32_MAX = 2147483647;\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n */\r\nvar tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        var intVal = Number(str);\r\n        if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param fn The code to guard.\r\n */\r\nvar exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(function () {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            var stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\r\nvar beingCrawled = function () {\r\n    var userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param fn Function to run.\r\n * @param time Milliseconds to wait before running.\r\n * @return The setTimeout() return value.\r\n */\r\nvar setTimeoutNonBlocking = function (fn, time) {\r\n    var timeout = setTimeout(fn, time);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    if (typeof timeout === 'object' && timeout['unref']) {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nvar Path = /** @class */ (function () {\r\n    /**\r\n     * @param pathOrString Path string to parse, or another path, or the raw\r\n     * tokens array\r\n     */\r\n    function Path(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            var copyTo = 0;\r\n            for (var i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    Path.prototype.toString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '') {\r\n                pathString += '/' + this.pieces_[i];\r\n            }\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    return Path;\r\n}());\r\nfunction newEmptyPath() {\r\n    return new Path('');\r\n}\r\nfunction pathGetFront(path) {\r\n    if (path.pieceNum_ >= path.pieces_.length) {\r\n        return null;\r\n    }\r\n    return path.pieces_[path.pieceNum_];\r\n}\r\n/**\r\n * @return The number of segments in this path\r\n */\r\nfunction pathGetLength(path) {\r\n    return path.pieces_.length - path.pieceNum_;\r\n}\r\nfunction pathPopFront(path) {\r\n    var pieceNum = path.pieceNum_;\r\n    if (pieceNum < path.pieces_.length) {\r\n        pieceNum++;\r\n    }\r\n    return new Path(path.pieces_, pieceNum);\r\n}\r\nfunction pathGetBack(path) {\r\n    if (path.pieceNum_ < path.pieces_.length) {\r\n        return path.pieces_[path.pieces_.length - 1];\r\n    }\r\n    return null;\r\n}\r\nfunction pathToUrlEncodedString(path) {\r\n    var pathString = '';\r\n    for (var i = path.pieceNum_; i < path.pieces_.length; i++) {\r\n        if (path.pieces_[i] !== '') {\r\n            pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\r\n        }\r\n    }\r\n    return pathString || '/';\r\n}\r\n/**\r\n * Shallow copy of the parts of the path.\r\n *\r\n */\r\nfunction pathSlice(path, begin) {\r\n    if (begin === void 0) { begin = 0; }\r\n    return path.pieces_.slice(path.pieceNum_ + begin);\r\n}\r\nfunction pathParent(path) {\r\n    if (path.pieceNum_ >= path.pieces_.length) {\r\n        return null;\r\n    }\r\n    var pieces = [];\r\n    for (var i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\r\n        pieces.push(path.pieces_[i]);\r\n    }\r\n    return new Path(pieces, 0);\r\n}\r\nfunction pathChild(path, childPathObj) {\r\n    var pieces = [];\r\n    for (var i = path.pieceNum_; i < path.pieces_.length; i++) {\r\n        pieces.push(path.pieces_[i]);\r\n    }\r\n    if (childPathObj instanceof Path) {\r\n        for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n            pieces.push(childPathObj.pieces_[i]);\r\n        }\r\n    }\r\n    else {\r\n        var childPieces = childPathObj.split('/');\r\n        for (var i = 0; i < childPieces.length; i++) {\r\n            if (childPieces[i].length > 0) {\r\n                pieces.push(childPieces[i]);\r\n            }\r\n        }\r\n    }\r\n    return new Path(pieces, 0);\r\n}\r\n/**\r\n * @return True if there are no segments in this path\r\n */\r\nfunction pathIsEmpty(path) {\r\n    return path.pieceNum_ >= path.pieces_.length;\r\n}\r\n/**\r\n * @return The path from outerPath to innerPath\r\n */\r\nfunction newRelativePath(outerPath, innerPath) {\r\n    var outer = pathGetFront(outerPath), inner = pathGetFront(innerPath);\r\n    if (outer === null) {\r\n        return innerPath;\r\n    }\r\n    else if (outer === inner) {\r\n        return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\r\n    }\r\n    else {\r\n        throw new Error('INTERNAL ERROR: innerPath (' +\r\n            innerPath +\r\n            ') is not within ' +\r\n            'outerPath (' +\r\n            outerPath +\r\n            ')');\r\n    }\r\n}\r\n/**\r\n * @return -1, 0, 1 if left is less, equal, or greater than the right.\r\n */\r\nfunction pathCompare(left, right) {\r\n    var leftKeys = pathSlice(left, 0);\r\n    var rightKeys = pathSlice(right, 0);\r\n    for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n        var cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n        if (cmp !== 0) {\r\n            return cmp;\r\n        }\r\n    }\r\n    if (leftKeys.length === rightKeys.length) {\r\n        return 0;\r\n    }\r\n    return leftKeys.length < rightKeys.length ? -1 : 1;\r\n}\r\n/**\r\n * @return true if paths are the same.\r\n */\r\nfunction pathEquals(path, other) {\r\n    if (pathGetLength(path) !== pathGetLength(other)) {\r\n        return false;\r\n    }\r\n    for (var i = path.pieceNum_, j = other.pieceNum_; i <= path.pieces_.length; i++, j++) {\r\n        if (path.pieces_[i] !== other.pieces_[j]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * @return True if this path is a parent (or the same as) other\r\n */\r\nfunction pathContains(path, other) {\r\n    var i = path.pieceNum_;\r\n    var j = other.pieceNum_;\r\n    if (pathGetLength(path) > pathGetLength(other)) {\r\n        return false;\r\n    }\r\n    while (i < path.pieces_.length) {\r\n        if (path.pieces_[i] !== other.pieces_[j]) {\r\n            return false;\r\n        }\r\n        ++i;\r\n        ++j;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nvar ValidationPath = /** @class */ (function () {\r\n    /**\r\n     * @param path Initial Path.\r\n     * @param errorPrefix_ Prefix for any error messages.\r\n     */\r\n    function ValidationPath(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        this.parts_ = pathSlice(path, 0);\r\n        /** Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (var i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += stringLength(this.parts_[i]);\r\n        }\r\n        this.checkValid_();\r\n    }\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\r\n        /** @const {number} Maximum key depth. */\r\n        get: function () {\r\n            return 32;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\r\n        /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\r\n        get: function () {\r\n            return 768;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @param child */\r\n    ValidationPath.prototype.push = function (child) {\r\n        // Count the needed '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ += 1;\r\n        }\r\n        this.parts_.push(child);\r\n        this.byteLength_ += stringLength(child);\r\n        this.checkValid_();\r\n    };\r\n    ValidationPath.prototype.pop = function () {\r\n        var last = this.parts_.pop();\r\n        this.byteLength_ -= stringLength(last);\r\n        // Un-count the previous '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ -= 1;\r\n        }\r\n    };\r\n    ValidationPath.prototype.checkValid_ = function () {\r\n        if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'has a key path longer than ' +\r\n                ValidationPath.MAX_PATH_LENGTH_BYTES +\r\n                ' bytes (' +\r\n                this.byteLength_ +\r\n                ').');\r\n        }\r\n        if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'path specified exceeds the maximum depth that can be written (' +\r\n                ValidationPath.MAX_PATH_DEPTH +\r\n                ') or object contains a cycle ' +\r\n                this.toErrorString());\r\n        }\r\n    };\r\n    /**\r\n     * String for use in error messages - uses '.' notation for path.\r\n     */\r\n    ValidationPath.prototype.toErrorString = function () {\r\n        if (this.parts_.length === 0) {\r\n            return '';\r\n        }\r\n        return \"in property '\" + this.parts_.join('.') + \"'\";\r\n    };\r\n    return ValidationPath;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PROTOCOL_VERSION = '5';\r\nvar VERSION_PARAM = 'v';\r\nvar TRANSPORT_SESSION_PARAM = 's';\r\nvar REFERER_PARAM = 'r';\r\nvar FORGE_REF = 'f';\r\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\r\n// firebase.corp.google.com\r\nvar FORGE_DOMAIN_RE = /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\r\nvar LAST_SESSION_PARAM = 'ls';\r\nvar APPLICATION_ID_PARAM = 'p';\r\nvar WEBSOCKET = 'websocket';\r\nvar LONG_POLLING = 'long_polling';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n */\r\nvar RepoInfo = /** @class */ (function () {\r\n    /**\r\n     * @param host Hostname portion of the url for the repo\r\n     * @param secure Whether or not this repo is accessed over ssl\r\n     * @param namespace The namespace represented by the repo\r\n     * @param webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param nodeAdmin Whether this instance uses Admin SDK credentials\r\n     * @param persistenceKey Override the default session persistence storage key\r\n     */\r\n    function RepoInfo(host, secure, namespace, webSocketOnly, nodeAdmin, persistenceKey, includeNamespaceInQueryParams) {\r\n        if (nodeAdmin === void 0) { nodeAdmin = false; }\r\n        if (persistenceKey === void 0) { persistenceKey = ''; }\r\n        if (includeNamespaceInQueryParams === void 0) { includeNamespaceInQueryParams = false; }\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.nodeAdmin = nodeAdmin;\r\n        this.persistenceKey = persistenceKey;\r\n        this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\r\n        this.host = host.toLowerCase();\r\n        this.domain = this.host.substr(this.host.indexOf('.') + 1);\r\n        this.internalHost =\r\n            PersistentStorage.get('host:' + host) || this.host;\r\n    }\r\n    RepoInfo.prototype.needsQueryParam = function () {\r\n        return (this.host !== this.internalHost ||\r\n            this.isCustomHost() ||\r\n            this.includeNamespaceInQueryParams);\r\n    };\r\n    RepoInfo.prototype.isCacheableHost = function () {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    };\r\n    RepoInfo.prototype.isDemoHost = function () {\r\n        return this.domain === 'firebaseio-demo.com';\r\n    };\r\n    RepoInfo.prototype.isCustomHost = function () {\r\n        return (this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com');\r\n    };\r\n    RepoInfo.prototype.updateHost = function (newHost) {\r\n        if (newHost !== this.internalHost) {\r\n            this.internalHost = newHost;\r\n            if (this.isCacheableHost()) {\r\n                PersistentStorage.set('host:' + this.host, this.internalHost);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the websocket URL for this repo\r\n     * @param type of connection\r\n     * @param params list\r\n     * @return The URL for this repo\r\n     */\r\n    RepoInfo.prototype.connectionURL = function (type, params) {\r\n        assert(typeof type === 'string', 'typeof type must == string');\r\n        assert(typeof params === 'object', 'typeof params must == object');\r\n        var connURL;\r\n        if (type === WEBSOCKET) {\r\n            connURL =\r\n                (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\r\n        }\r\n        else if (type === LONG_POLLING) {\r\n            connURL =\r\n                (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\r\n        }\r\n        else {\r\n            throw new Error('Unknown connection type: ' + type);\r\n        }\r\n        if (this.needsQueryParam()) {\r\n            params['ns'] = this.namespace;\r\n        }\r\n        var pairs = [];\r\n        each(params, function (key, value) {\r\n            pairs.push(key + '=' + value);\r\n        });\r\n        return connURL + pairs.join('&');\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toString = function () {\r\n        var str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toURLString = function () {\r\n        var protocol = this.secure ? 'https://' : 'http://';\r\n        var query = this.includeNamespaceInQueryParams\r\n            ? \"?ns=\" + this.namespace\r\n            : '';\r\n        return \"\" + protocol + this.host + \"/\" + query;\r\n    };\r\n    return RepoInfo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction decodePath(pathString) {\r\n    var pathStringDecoded = '';\r\n    var pieces = pathString.split('/');\r\n    for (var i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            var piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @return key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    var e_1, _a;\r\n    var results = {};\r\n    if (queryString.charAt(0) === '?') {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    try {\r\n        for (var _b = __values(queryString.split('&')), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var segment = _c.value;\r\n            if (segment.length === 0) {\r\n                continue;\r\n            }\r\n            var kv = segment.split('=');\r\n            if (kv.length === 2) {\r\n                results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n            }\r\n            else {\r\n                warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\r\n            }\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return results;\r\n}\r\nvar parseRepoInfo = function (dataURL, nodeAdmin) {\r\n    var parsedUrl = parseDatabaseURL(dataURL), namespace = parsedUrl.namespace;\r\n    if (parsedUrl.domain === 'firebase.com') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace === 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, nodeAdmin, webSocketOnly, \r\n        /*persistenceKey=*/ '', \r\n        /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\nvar parseDatabaseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    var host = '', domain = '', subdomain = '', pathString = '', namespace = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    var secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        var colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        var slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        var questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = host.length;\r\n        }\r\n        var hostWithoutPort = host.slice(0, colonInd);\r\n        if (hostWithoutPort.toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        else if (hostWithoutPort.split('.').length <= 2) {\r\n            domain = hostWithoutPort;\r\n        }\r\n        else {\r\n            // Interpret the subdomain of a 3 or more component URL as the namespace name.\r\n            var dotInd = host.indexOf('.');\r\n            subdomain = host.substring(0, dotInd).toLowerCase();\r\n            domain = host.substring(dotInd + 1);\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            namespace = subdomain;\r\n        }\r\n        // Always treat the value of the `ns` as the namespace name if it is present.\r\n        if ('ns' in queryParams) {\r\n            namespace = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host: host,\r\n        port: port,\r\n        domain: domain,\r\n        subdomain: subdomain,\r\n        secure: secure,\r\n        scheme: scheme,\r\n        pathString: pathString,\r\n        namespace: namespace\r\n    };\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n */\r\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n */\r\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n */\r\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\nvar isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\nvar isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\nvar isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\nvar isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority &&\r\n            typeof priority === 'object' &&\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n */\r\nvar validateFirebaseDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined) {\r\n        return;\r\n    }\r\n    validateFirebaseData(errorPrefix(fnName, argumentNumber, optional), data, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n */\r\nvar validateFirebaseData = function (errorPrefix, data, path_) {\r\n    var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            path.toErrorString() +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            path.toErrorString() +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        var hasDotValue_1 = false;\r\n        var hasActualChild_1 = false;\r\n        each(data, function (key, value) {\r\n            if (key === '.value') {\r\n                hasDotValue_1 = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild_1 = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        path.toErrorString() +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            path.push(key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            path.pop();\r\n        });\r\n        if (hasDotValue_1 && hasActualChild_1) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                path.toErrorString() +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n */\r\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    var i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        var keys = pathSlice(curPath);\r\n        for (var j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) ;\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(pathCompare);\r\n    var prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && pathContains(prevPath, curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n */\r\nvar validateFirebaseMergeDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined) {\r\n        return;\r\n    }\r\n    var errorPrefix$1 = errorPrefix(fnName, argumentNumber, optional);\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix$1 + ' must be an object containing the children to replace.');\r\n    }\r\n    var mergePaths = [];\r\n    each(data, function (key, value) {\r\n        var curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix$1, value, pathChild(path, curPath));\r\n        if (pathGetBack(curPath) === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix$1 +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix$1, mergePaths);\r\n};\r\nvar validatePriority = function (fnName, argumentNumber, priority, optional) {\r\n    if (optional && priority === undefined) {\r\n        return;\r\n    }\r\n    if (isInvalidJSONNumber(priority)) {\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    }\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority)) {\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n    }\r\n};\r\nvar validateEventType = function (fnName, argumentNumber, eventType, optional) {\r\n    if (optional && eventType === undefined) {\r\n        return;\r\n    }\r\n    switch (eventType) {\r\n        case 'value':\r\n        case 'child_added':\r\n        case 'child_removed':\r\n        case 'child_changed':\r\n        case 'child_moved':\r\n            break;\r\n        default:\r\n            throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                '\"child_changed\", or \"child_moved\".');\r\n    }\r\n};\r\nvar validateKey = function (fnName, argumentNumber, key, optional) {\r\n    if (optional && key === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidKey(key)) {\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n    }\r\n};\r\nvar validatePathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (optional && pathString === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidPathString(pathString)) {\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n    }\r\n};\r\nvar validateRootPathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentNumber, pathString, optional);\r\n};\r\nvar validateWritablePath = function (fnName, path) {\r\n    if (pathGetFront(path) === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nvar validateUrl = function (fnName, argumentNumber, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    var pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(errorPrefix(fnName, argumentNumber, false) +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\r\nvar validateBoolean = function (fnName, argumentNumber, bool, optional) {\r\n    if (optional && bool === undefined) {\r\n        return;\r\n    }\r\n    if (typeof bool !== 'boolean') {\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar OnDisconnect = /** @class */ (function () {\r\n    function OnDisconnect(repo_, path_) {\r\n        this.repo_ = repo_;\r\n        this.path_ = path_;\r\n    }\r\n    OnDisconnect.prototype.cancel = function (onComplete) {\r\n        validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\r\n        validateCallback('OnDisconnect.cancel', 1, onComplete, true);\r\n        var deferred = new Deferred();\r\n        this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    OnDisconnect.prototype.remove = function (onComplete) {\r\n        validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\r\n        validateWritablePath('OnDisconnect.remove', this.path_);\r\n        validateCallback('OnDisconnect.remove', 1, onComplete, true);\r\n        var deferred = new Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    OnDisconnect.prototype.set = function (value, onComplete) {\r\n        validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.set', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\r\n        validateCallback('OnDisconnect.set', 2, onComplete, true);\r\n        var deferred = new Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\r\n        validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('OnDisconnect.setWithPriority', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\r\n        validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\r\n        validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\r\n        var deferred = new Deferred();\r\n        this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\r\n        validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.update', this.path_);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\r\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\r\n        validateCallback('OnDisconnect.update', 2, onComplete, true);\r\n        var deferred = new Deferred();\r\n        this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TransactionResult = /** @class */ (function () {\r\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     */\r\n    function TransactionResult(committed, snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    TransactionResult.prototype.toJSON = function () {\r\n        validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Modeled after base64 web-safe chars, but ordered by ASCII.\r\nvar PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\nvar MIN_PUSH_CHAR = '-';\r\nvar MAX_PUSH_CHAR = 'z';\r\nvar MAX_KEY_LEN = 786;\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nvar nextPushId = (function () {\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    var lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    var lastRandChars = [];\r\n    return function (now) {\r\n        var duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        var i;\r\n        var timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        assert(now === 0, 'Cannot push at time == 0');\r\n        var id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\r\nvar successor = function (key) {\r\n    if (key === '' + INTEGER_32_MAX) {\r\n        // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\r\n        return MIN_PUSH_CHAR;\r\n    }\r\n    var keyAsInt = tryParseInt(key);\r\n    if (keyAsInt != null) {\r\n        return '' + (keyAsInt + 1);\r\n    }\r\n    var next = new Array(key.length);\r\n    for (var i_1 = 0; i_1 < next.length; i_1++) {\r\n        next[i_1] = key.charAt(i_1);\r\n    }\r\n    if (next.length < MAX_KEY_LEN) {\r\n        next.push(MIN_PUSH_CHAR);\r\n        return next.join('');\r\n    }\r\n    var i = next.length - 1;\r\n    while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\r\n        i--;\r\n    }\r\n    // `successor` was called on the largest possible key, so return the\r\n    // MAX_NAME, which sorts larger than all keys.\r\n    if (i === -1) {\r\n        return MAX_NAME;\r\n    }\r\n    var source = next[i];\r\n    var sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\r\n    next[i] = sourcePlusOne;\r\n    return next.slice(0, i + 1).join('');\r\n};\r\n// `key` is assumed to be non-empty.\r\nvar predecessor = function (key) {\r\n    if (key === '' + INTEGER_32_MIN) {\r\n        return MIN_NAME;\r\n    }\r\n    var keyAsInt = tryParseInt(key);\r\n    if (keyAsInt != null) {\r\n        return '' + (keyAsInt - 1);\r\n    }\r\n    var next = new Array(key.length);\r\n    for (var i = 0; i < next.length; i++) {\r\n        next[i] = key.charAt(i);\r\n    }\r\n    // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\r\n    // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\r\n    // than that, `predecessor(predecessor(key))`, is\r\n    //\r\n    // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\r\n    //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\r\n    //\r\n    // analogous to increment/decrement for base-10 integers.\r\n    //\r\n    // This works because lexigographic comparison works character-by-character,\r\n    // using length as a tie-breaker if one key is a prefix of the other.\r\n    if (next[next.length - 1] === MIN_PUSH_CHAR) {\r\n        if (next.length === 1) {\r\n            // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\r\n            return '' + INTEGER_32_MAX;\r\n        }\r\n        delete next[next.length - 1];\r\n        return next.join('');\r\n    }\r\n    // Replace the last character with it's immediate predecessor, and\r\n    // fill the suffix of the key with MAX_PUSH_CHAR. This is the\r\n    // lexicographically largest possible key smaller than `key`.\r\n    next[next.length - 1] = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(next[next.length - 1]) - 1);\r\n    return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar NamedNode = /** @class */ (function () {\r\n    function NamedNode(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    NamedNode.Wrap = function (name, node) {\r\n        return new NamedNode(name, node);\r\n    };\r\n    return NamedNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Index = /** @class */ (function () {\r\n    function Index() {\r\n    }\r\n    /**\r\n     * @return A standalone comparison function for\r\n     * this index\r\n     */\r\n    Index.prototype.getCompare = function () {\r\n        return this.compare.bind(this);\r\n    };\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     *\r\n     * @return True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        var oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        var newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    };\r\n    /**\r\n     * @return a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    Index.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    return Index;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __EMPTY_NODE;\r\nvar KeyIndex = /** @class */ (function (_super) {\r\n    __extends(KeyIndex, _super);\r\n    function KeyIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\r\n        get: function () {\r\n            return __EMPTY_NODE;\r\n        },\r\n        set: function (val) {\r\n            __EMPTY_NODE = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.compare = function (a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.isDefinedOn = function (node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.maxPost = function () {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    };\r\n    KeyIndex.prototype.makePost = function (indexValue, name) {\r\n        assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @return String representation for inclusion in a query spec\r\n     */\r\n    KeyIndex.prototype.toString = function () {\r\n        return '.key';\r\n    };\r\n    return KeyIndex;\r\n}(Index));\r\nvar KEY_INDEX = new KeyIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_NODE;\r\nfunction setMaxNode(val) {\r\n    MAX_NODE = val;\r\n}\r\nvar priorityHashText = function (priority) {\r\n    if (typeof priority === 'number') {\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    }\r\n    else {\r\n        return 'string:' + priority;\r\n    }\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n */\r\nvar validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        var val = priorityNode.val();\r\n        assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nvar LeafNode = /** @class */ (function () {\r\n    /**\r\n     * @param value_ The value to store in this leaf node. The object type is\r\n     * possible in the event of a deferred value\r\n     * @param priorityNode_ The priority of this node.\r\n     */\r\n    function LeafNode(value_, priorityNode_) {\r\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\r\n        get: function () {\r\n            return __childrenNodeConstructor;\r\n        },\r\n        set: function (val) {\r\n            __childrenNodeConstructor = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isLeafNode = function () {\r\n        return true;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPriority = function () {\r\n        return this.priorityNode_;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getChild = function (path) {\r\n        if (pathIsEmpty(path)) {\r\n            return this;\r\n        }\r\n        else if (pathGetFront(path) === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.hasChild = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\r\n        return null;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = pathGetFront(path);\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            assert(front !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(pathPopFront(path), newChildNode));\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.numChildren = function () {\r\n        return 0;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.forEachChild = function (index, action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.val = function (exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty()) {\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        }\r\n        else {\r\n            return this.getValue();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash = '';\r\n            if (!this.priorityNode_.isEmpty()) {\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            }\r\n            var type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @return The value of the node.\r\n     */\r\n    LeafNode.prototype.getValue = function () {\r\n        return this.value_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.compareTo = function (other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    };\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     */\r\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\r\n        var otherLeafType = typeof otherLeaf.value_;\r\n        var thisLeafType = typeof this.value_;\r\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.withIndex = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.isIndexed = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.equals = function (other) {\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            var otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     */\r\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\r\n    return LeafNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar nodeFromJSON;\r\nvar MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON = val;\r\n}\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\nvar PriorityIndex = /** @class */ (function (_super) {\r\n    __extends(PriorityIndex, _super);\r\n    function PriorityIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.compare = function (a, b) {\r\n        var aPriority = a.node.getPriority();\r\n        var bPriority = b.node.getPriority();\r\n        var indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getPriority().isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.maxPost = function () {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    };\r\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\r\n        var priorityNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    };\r\n    /**\r\n     * @return String representation for inclusion in a query spec\r\n     */\r\n    PriorityIndex.prototype.toString = function () {\r\n        return '.priority';\r\n    };\r\n    return PriorityIndex;\r\n}(Index));\r\nvar PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nvar SortedMapIterator = /** @class */ (function () {\r\n    /**\r\n     * @param node Node to iterate.\r\n     * @param isReverse_ Whether or not to iterate in reverse\r\n     * @param resultGenerator_\r\n     */\r\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\r\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        this.nodeStack_ = [];\r\n        var cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_) {\r\n                cmp *= -1;\r\n            }\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SortedMapIterator.prototype.getNext = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_.pop();\r\n        var result;\r\n        if (this.resultGenerator_) {\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            result = { key: node.key, value: node.value };\r\n        }\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    SortedMapIterator.prototype.hasNext = function () {\r\n        return this.nodeStack_.length > 0;\r\n    };\r\n    SortedMapIterator.prototype.peek = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    };\r\n    return SortedMapIterator;\r\n}());\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nvar LLRBNode = /** @class */ (function () {\r\n    /**\r\n     * @param key Key associated with this node.\r\n     * @param value Value associated with this node.\r\n     * @param color Whether this node is red.\r\n     * @param left Left child.\r\n     * @param right Right child.\r\n     */\r\n    function LLRBNode(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param key New key for the node, or null.\r\n     * @param value New value for the node, or null.\r\n     * @param color New color for the node, or null.\r\n     * @param left New left child for the node, or null.\r\n     * @param right New right child for the node, or null.\r\n     * @return The node copy.\r\n     */\r\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    };\r\n    /**\r\n     * @return The total number of nodes in the tree.\r\n     */\r\n    LLRBNode.prototype.count = function () {\r\n        return this.left.count() + 1 + this.right.count();\r\n    };\r\n    /**\r\n     * @return True if the tree is empty.\r\n     */\r\n    LLRBNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @return The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    LLRBNode.prototype.inorderTraversal = function (action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            !!action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return True if traversal was aborted.\r\n     */\r\n    LLRBNode.prototype.reverseTraversal = function (action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    };\r\n    /**\r\n     * @return The minimum node in the tree.\r\n     */\r\n    LLRBNode.prototype.min_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    };\r\n    /**\r\n     * @return The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.minKey = function () {\r\n        return this.min_().key;\r\n    };\r\n    /**\r\n     * @return The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.maxKey = function () {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param key Key to insert.\r\n     * @param value Value to insert.\r\n     * @param comparator Comparator.\r\n     * @return New tree, with the key/value added.\r\n     */\r\n    LLRBNode.prototype.insert = function (key, value, comparator) {\r\n        var n = this;\r\n        var cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @return New tree, with the minimum key removed.\r\n     */\r\n    LLRBNode.prototype.removeMin_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        var n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_()) {\r\n            n = n.moveRedLeft_();\r\n        }\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @param key The key of the item to remove.\r\n     * @param comparator Comparator.\r\n     * @return New tree, with the specified item removed.\r\n     */\r\n    LLRBNode.prototype.remove = function (key, comparator) {\r\n        var n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_()) {\r\n                n = n.rotateRight_();\r\n            }\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @return Whether this is a RED node.\r\n     */\r\n    LLRBNode.prototype.isRed_ = function () {\r\n        return this.color;\r\n    };\r\n    /**\r\n     * @return New tree after performing any needed rotations.\r\n     */\r\n    LLRBNode.prototype.fixUp_ = function () {\r\n        var n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_()) {\r\n            n = n.rotateLeft_();\r\n        }\r\n        if (n.left.isRed_() && n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n        }\r\n        if (n.left.isRed_() && n.right.isRed_()) {\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @return New tree, after moveRedLeft.\r\n     */\r\n    LLRBNode.prototype.moveRedLeft_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @return New tree, after moveRedRight.\r\n     */\r\n    LLRBNode.prototype.moveRedRight_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @return New tree, after rotateLeft.\r\n     */\r\n    LLRBNode.prototype.rotateLeft_ = function () {\r\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    };\r\n    /**\r\n     * @return New tree, after rotateRight.\r\n     */\r\n    LLRBNode.prototype.rotateRight_ = function () {\r\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    };\r\n    /**\r\n     * @return Newt ree, after colorFlip.\r\n     */\r\n    LLRBNode.prototype.colorFlip_ = function () {\r\n        var left = this.left.copy(null, null, !this.left.color, null, null);\r\n        var right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    };\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @return True if all is well.\r\n     */\r\n    LLRBNode.prototype.checkMaxDepth_ = function () {\r\n        var blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    };\r\n    LLRBNode.prototype.check_ = function () {\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        var blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    };\r\n    LLRBNode.RED = true;\r\n    LLRBNode.BLACK = false;\r\n    return LLRBNode;\r\n}());\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nvar LLRBEmptyNode = /** @class */ (function () {\r\n    function LLRBEmptyNode() {\r\n    }\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @return The node copy.\r\n     */\r\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param key Key to be added.\r\n     * @param value Value to be added.\r\n     * @param comparator Comparator.\r\n     * @return New tree, with item added.\r\n     */\r\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param key The key to remove.\r\n     * @param comparator Comparator.\r\n     * @return New tree, with item removed.\r\n     */\r\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\r\n        return this;\r\n    };\r\n    /**\r\n     * @return The total number of nodes in the tree.\r\n     */\r\n    LLRBEmptyNode.prototype.count = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @return True if the tree is empty.\r\n     */\r\n    LLRBEmptyNode.prototype.isEmpty = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\r\n        return false;\r\n    };\r\n    LLRBEmptyNode.prototype.minKey = function () {\r\n        return null;\r\n    };\r\n    LLRBEmptyNode.prototype.maxKey = function () {\r\n        return null;\r\n    };\r\n    LLRBEmptyNode.prototype.check_ = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @return Whether this node is red.\r\n     */\r\n    LLRBEmptyNode.prototype.isRed_ = function () {\r\n        return false;\r\n    };\r\n    return LLRBEmptyNode;\r\n}());\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nvar SortedMap = /** @class */ (function () {\r\n    /**\r\n     * @param comparator_ Key comparator.\r\n     * @param root_ (Optional) Root node for the map.\r\n     */\r\n    function SortedMap(comparator_, root_) {\r\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param key Key to be added.\r\n     * @param value Value to be added.\r\n     * @return New map, with item added.\r\n     */\r\n    SortedMap.prototype.insert = function (key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param key The key to remove.\r\n     * @return New map, with item removed.\r\n     */\r\n    SortedMap.prototype.remove = function (key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param key The key to look up.\r\n     * @return The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    SortedMap.prototype.get = function (key) {\r\n        var cmp;\r\n        var node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param key The key to find the predecessor of\r\n     * @return The predecessor key.\r\n     */\r\n    SortedMap.prototype.getPredecessorKey = function (key) {\r\n        var cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty()) {\r\n                        node = node.right;\r\n                    }\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    };\r\n    /**\r\n     * @return True if the map is empty.\r\n     */\r\n    SortedMap.prototype.isEmpty = function () {\r\n        return this.root_.isEmpty();\r\n    };\r\n    /**\r\n     * @return The total number of nodes in the map.\r\n     */\r\n    SortedMap.prototype.count = function () {\r\n        return this.root_.count();\r\n    };\r\n    /**\r\n     * @return The minimum key in the map.\r\n     */\r\n    SortedMap.prototype.minKey = function () {\r\n        return this.root_.minKey();\r\n    };\r\n    /**\r\n     * @return The maximum key in the map.\r\n     */\r\n    SortedMap.prototype.maxKey = function () {\r\n        return this.root_.maxKey();\r\n    };\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    SortedMap.prototype.inorderTraversal = function (action) {\r\n        return this.root_.inorderTraversal(action);\r\n    };\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return True if the traversal was aborted.\r\n     */\r\n    SortedMap.prototype.reverseTraversal = function (action) {\r\n        return this.root_.reverseTraversal(action);\r\n    };\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @return The iterator.\r\n     */\r\n    SortedMap.prototype.getIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    };\r\n    /**\r\n     * Always use the same empty node, to reduce memory.\r\n     */\r\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\r\n    return SortedMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_2 = Math.log(2);\r\nvar Base12Num = /** @class */ (function () {\r\n    function Base12Num(length) {\r\n        var logBase2 = function (num) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            return parseInt((Math.log(num) / LOG_2), 10);\r\n        };\r\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        var mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    Base12Num.prototype.nextBitIsOne = function () {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        var result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    };\r\n    return Base12Num;\r\n}());\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @param childList Unsorted list of children\r\n * @param cmp The comparison method to be used\r\n * @param keyFn An optional function to extract K from a node wrapper, if K's\r\n * type is not NamedNode\r\n * @param mapSortFn An optional override for comparator used by the generated sorted map\r\n */\r\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    var buildBalancedTree = function (low, high) {\r\n        var length = high - low;\r\n        var namedNode;\r\n        var key;\r\n        if (length === 0) {\r\n            return null;\r\n        }\r\n        else if (length === 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var middle = parseInt((length / 2), 10) + low;\r\n            var left = buildBalancedTree(low, middle);\r\n            var right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    var buildFrom12Array = function (base12) {\r\n        var node = null;\r\n        var root = null;\r\n        var index = childList.length;\r\n        var buildPennant = function (chunkSize, color) {\r\n            var low = index - chunkSize;\r\n            var high = index;\r\n            index -= chunkSize;\r\n            var childTree = buildBalancedTree(low + 1, high);\r\n            var namedNode = childList[low];\r\n            var key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        var attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (var i = 0; i < base12.count; ++i) {\r\n            var isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    var base12 = new Base12Num(childList.length);\r\n    var root = buildFrom12Array(base12);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _defaultIndexMap;\r\nvar fallbackObject = {};\r\nvar IndexMap = /** @class */ (function () {\r\n    function IndexMap(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    Object.defineProperty(IndexMap, \"Default\", {\r\n        /**\r\n         * The default IndexMap for nodes without a priority\r\n         */\r\n        get: function () {\r\n            assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n            _defaultIndexMap =\r\n                _defaultIndexMap ||\r\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n            return _defaultIndexMap;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    IndexMap.prototype.get = function (indexKey) {\r\n        var sortedMap = safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap) {\r\n            throw new Error('No index defined for ' + indexKey);\r\n        }\r\n        if (sortedMap instanceof SortedMap) {\r\n            return sortedMap;\r\n        }\r\n        else {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n    };\r\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\r\n        return contains(this.indexSet_, indexDefinition.toString());\r\n    };\r\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\r\n        assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        var childList = [];\r\n        var sawIndexedValue = false;\r\n        var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        var next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        var newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        var indexName = indexDefinition.toString();\r\n        var newIndexSet = __assign({}, this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        var newIndexes = __assign({}, this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    };\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     */\r\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\r\n        var _this = this;\r\n        var newIndexes = map(this.indexes_, function (indexedChildren, indexName) {\r\n            var index = safeGet(_this.indexSet_, indexName);\r\n            assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    var childList = [];\r\n                    var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    var next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name !== namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                var newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     */\r\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\r\n        var newIndexes = map(this.indexes_, function (indexedChildren) {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    return IndexMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nvar EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n */\r\nvar ChildrenNode = /** @class */ (function () {\r\n    /**\r\n     * @param children_ List of children of this node..\r\n     * @param priorityNode_ The priority of this node (as a snapshot node).\r\n     */\r\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\r\n        get: function () {\r\n            return (EMPTY_NODE ||\r\n                (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isLeafNode = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPriority = function () {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            var child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getChild = function (path) {\r\n        var front = pathGetFront(path);\r\n        if (front === null) {\r\n            return this;\r\n        }\r\n        return this.getImmediateChild(front).getChild(pathPopFront(path));\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hasChild = function (childName) {\r\n        return this.children_.get(childName) !== null;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            var namedNode = new NamedNode(childName, newChildNode);\r\n            var newChildren = void 0, newIndexMap = void 0;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            var newPriority = newChildren.isEmpty()\r\n                ? EMPTY_NODE\r\n                : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = pathGetFront(path);\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            assert(pathGetFront(path) !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\r\n            var newImmediateChild = this.getImmediateChild(front).updateChild(pathPopFront(path), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isEmpty = function () {\r\n        return this.children_.isEmpty();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.numChildren = function () {\r\n        return this.children_.count();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.val = function (exportFormat) {\r\n        if (this.isEmpty()) {\r\n            return null;\r\n        }\r\n        var obj = {};\r\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            var array = [];\r\n            // eslint-disable-next-line guard-for-in\r\n            for (var key in obj) {\r\n                array[key] = obj[key];\r\n            }\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash_1 = '';\r\n            if (!this.getPriority().isEmpty()) {\r\n                toHash_1 +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            }\r\n            this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                var childHash = childNode.hash();\r\n                if (childHash !== '') {\r\n                    toHash_1 += ':' + key + ':' + childHash;\r\n                }\r\n            });\r\n            this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\r\n        var minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     */\r\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\r\n        var maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.forEachChild = function (index, action) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(function (wrappedNode) {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    };\r\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    };\r\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, function (key) {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.compareTo = function (other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE$2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.isIndexed = function (index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            var otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                var thisIter = this.getIterator(PRIORITY_INDEX);\r\n                var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                var thisCurrent = thisIter.getNext();\r\n                var otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     */\r\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    };\r\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\n    return ChildrenNode;\r\n}());\r\nvar MaxNode = /** @class */ (function (_super) {\r\n    __extends(MaxNode, _super);\r\n    function MaxNode() {\r\n        return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\r\n    }\r\n    MaxNode.prototype.compareTo = function (other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    MaxNode.prototype.equals = function (other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    };\r\n    MaxNode.prototype.getPriority = function () {\r\n        return this;\r\n    };\r\n    MaxNode.prototype.getImmediateChild = function (childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    };\r\n    MaxNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    return MaxNode;\r\n}(ChildrenNode));\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n */\r\nvar MAX_NODE$2 = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE$2)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode(MAX_NODE$2);\r\nsetMaxNode$1(MAX_NODE$2);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param json JSON to create a node for.\r\n * @param priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n */\r\nfunction nodeFromJSON$1(json, priority) {\r\n    if (priority === void 0) { priority = null; }\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        var jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        var children_1 = [];\r\n        var childrenHavePriority_1 = false;\r\n        var hinzeJsonObj = json;\r\n        each(hinzeJsonObj, function (key, child) {\r\n            if (key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                var childNode = nodeFromJSON$1(child);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority_1 =\r\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\r\n                    children_1.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children_1.length === 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, NAME_COMPARATOR);\r\n        if (childrenHavePriority_1) {\r\n            var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        var node_1 = ChildrenNode.EMPTY_NODE;\r\n        each(json, function (key, childData) {\r\n            if (contains(json, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    var childNode = nodeFromJSON$1(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty()) {\r\n                        node_1 = node_1.updateImmediateChild(key, childNode);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return node_1.updatePriority(nodeFromJSON$1(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON$1);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ValueIndex = /** @class */ (function (_super) {\r\n    __extends(ValueIndex, _super);\r\n    function ValueIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.compare = function (a, b) {\r\n        var indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.isDefinedOn = function (node) {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.maxPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MAX;\r\n    };\r\n    ValueIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    };\r\n    /**\r\n     * @return String representation for inclusion in a query spec\r\n     */\r\n    ValueIndex.prototype.toString = function () {\r\n        return '.value';\r\n    };\r\n    return ValueIndex;\r\n}(Index));\r\nvar VALUE_INDEX = new ValueIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PathIndex = /** @class */ (function (_super) {\r\n    __extends(PathIndex, _super);\r\n    function PathIndex(indexPath_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.indexPath_ = indexPath_;\r\n        assert(!pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n        return _this;\r\n    }\r\n    PathIndex.prototype.extractChild = function (snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.compare = function (a, b) {\r\n        var aChild = this.extractChild(a.node);\r\n        var bChild = this.extractChild(b.node);\r\n        var indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.maxPost = function () {\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\r\n        return new NamedNode(MAX_NAME, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.toString = function () {\r\n        return pathSlice(this.indexPath_, 0).join('/');\r\n    };\r\n    return PathIndex;\r\n}(Index));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\r\nvar DataSnapshot = /** @class */ (function () {\r\n    /**\r\n     * @param node_ A SnapshotNode to wrap.\r\n     * @param ref_ The ref of the location this snapshot came from.\r\n     * @param index_ The iteration order for this snapshot\r\n     */\r\n    function DataSnapshot(node_, ref_, index_) {\r\n        this.node_ = node_;\r\n        this.ref_ = ref_;\r\n        this.index_ = index_;\r\n    }\r\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @return JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.val = function () {\r\n        validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\r\n        return this.node_.val();\r\n    };\r\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @return JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\r\n        return this.node_.val(true);\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\r\n        validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\r\n        return this.exportVal();\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @return Whether the snapshot contains a non-null value, or is empty.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\r\n        return !this.node_.isEmpty();\r\n    };\r\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param childPathString Path to a child.\r\n     * @return DataSnapshot for child node.\r\n     */\r\n    DataSnapshot.prototype.child = function (childPathString) {\r\n        validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\r\n        // Ensure the childPath is a string (can be a number)\r\n        childPathString = String(childPathString);\r\n        validatePathString('DataSnapshot.child', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        var childRef = this.ref_.child(childPath);\r\n        return new DataSnapshot(this.node_.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param childPathString Path to a child.\r\n     * @return Whether the child exists.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (childPathString) {\r\n        validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\r\n        validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        return !this.node_.getChild(childPath).isEmpty();\r\n    };\r\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @return The priority.\r\n     */\r\n    DataSnapshot.prototype.getPriority = function () {\r\n        validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\r\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n        return this.node_.getPriority().val();\r\n    };\r\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param action Callback function to be called\r\n     * for each child.\r\n     * @return True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\r\n        validateCallback('DataSnapshot.forEach', 1, action, false);\r\n        if (this.node_.isLeafNode()) {\r\n            return false;\r\n        }\r\n        var childrenNode = this.node_;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this.index_, function (key, node) {\r\n            return action(new DataSnapshot(node, _this.ref_.child(key), PRIORITY_INDEX));\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @return True if the DataSnapshot contains 1 or more child nodes.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\r\n        if (this.node_.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return !this.node_.isEmpty();\r\n        }\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        get: function () {\r\n            return this.ref_.getKey();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @return The number of children that this DataSnapshot contains.\r\n     */\r\n    DataSnapshot.prototype.numChildren = function () {\r\n        validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\r\n        return this.node_.numChildren();\r\n    };\r\n    /**\r\n     * @return The Firebase reference for the location this snapshot's data came\r\n     * from.\r\n     */\r\n    DataSnapshot.prototype.getRef = function () {\r\n        validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\r\n        return this.ref_;\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return DataSnapshot;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n */\r\nvar DataEvent = /** @class */ (function () {\r\n    /**\r\n     * @param eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param eventRegistration The function to call to with the event data. User provided\r\n     * @param snapshot The data backing the event\r\n     * @param prevName Optional, the name of the previous child for child_* events.\r\n     */\r\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getPath = function () {\r\n        var ref = this.snapshot.getRef();\r\n        if (this.eventType === 'value') {\r\n            return ref.path;\r\n        }\r\n        else {\r\n            return ref.getParent().path;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventType = function () {\r\n        return this.eventType;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.toString = function () {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            stringify(this.snapshot.exportVal()));\r\n    };\r\n    return DataEvent;\r\n}());\r\nvar CancelEvent = /** @class */ (function () {\r\n    function CancelEvent(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getPath = function () {\r\n        return this.path;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventType = function () {\r\n        return 'cancel';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.toString = function () {\r\n        return this.path.toString() + ':cancel';\r\n    };\r\n    return CancelEvent;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nvar ValueEventRegistration = /** @class */ (function () {\r\n    function ValueEventRegistration(callback_, cancelCallback_, context_) {\r\n        this.callback_ = callback_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\r\n        return eventType === 'value';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, query.getRef(), index));\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_1 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_1.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_1 = this.callback_;\r\n            return function () {\r\n                cb_1.call(ctx, eventData.snapshot);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.matches = function (other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callback_ || !this.callback_) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return (other.callback_ === this.callback_ && other.context_ === this.context_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callback_ !== null;\r\n    };\r\n    return ValueEventRegistration;\r\n}());\r\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n */\r\nvar ChildEventRegistration = /** @class */ (function () {\r\n    function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\r\n        this.callbacks_ = callbacks_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\r\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return contains(this.callbacks_, eventToCheck);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\r\n        assert(change.childName != null, 'Child events should have a childName.');\r\n        var ref = query.getRef().child(change.childName);\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, ref, index), change.prevName);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_2 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_2.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_2 = this.callbacks_[eventData.eventType];\r\n            return function () {\r\n                cb_2.call(ctx, eventData.snapshot, eventData.prevName);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.matches = function (other) {\r\n        var _this = this;\r\n        if (other instanceof ChildEventRegistration) {\r\n            if (!this.callbacks_ || !other.callbacks_) {\r\n                return true;\r\n            }\r\n            else if (this.context_ === other.context_) {\r\n                var otherKeys = Object.keys(other.callbacks_);\r\n                var thisKeys = Object.keys(this.callbacks_);\r\n                var otherCount = otherKeys.length;\r\n                var thisCount = thisKeys.length;\r\n                if (otherCount === thisCount) {\r\n                    // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\r\n                    // If event types don't match, not a match\r\n                    // If count is not 1, exact match across all\r\n                    if (otherCount === 1) {\r\n                        var otherKey = otherKeys[0];\r\n                        var thisKey = thisKeys[0];\r\n                        return (thisKey === otherKey &&\r\n                            (!other.callbacks_[otherKey] ||\r\n                                !this.callbacks_[thisKey] ||\r\n                                other.callbacks_[otherKey] === this.callbacks_[thisKey]));\r\n                    }\r\n                    else {\r\n                        // Exact match on each key.\r\n                        return thisKeys.every(function (eventType) {\r\n                            return other.callbacks_[eventType] === _this.callbacks_[eventType];\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbacks_ !== null;\r\n    };\r\n    return ChildEventRegistration;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction changeValue(snapshotNode) {\r\n    return { type: \"value\" /* VALUE */, snapshotNode: snapshotNode };\r\n}\r\nfunction changeChildAdded(childName, snapshotNode) {\r\n    return { type: \"child_added\" /* CHILD_ADDED */, snapshotNode: snapshotNode, childName: childName };\r\n}\r\nfunction changeChildRemoved(childName, snapshotNode) {\r\n    return { type: \"child_removed\" /* CHILD_REMOVED */, snapshotNode: snapshotNode, childName: childName };\r\n}\r\nfunction changeChildChanged(childName, snapshotNode, oldSnap) {\r\n    return {\r\n        type: \"child_changed\" /* CHILD_CHANGED */,\r\n        snapshotNode: snapshotNode,\r\n        childName: childName,\r\n        oldSnap: oldSnap\r\n    };\r\n}\r\nfunction changeChildMoved(childName, snapshotNode) {\r\n    return { type: \"child_moved\" /* CHILD_MOVED */, snapshotNode: snapshotNode, childName: childName };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n */\r\nvar IndexedFilter = /** @class */ (function () {\r\n    function IndexedFilter(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        var oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() === newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(changeChildRemoved(key, oldChild));\r\n                }\r\n                else {\r\n                    assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(changeChildChanged(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(changeChildRemoved(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        var oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(changeChildChanged(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(changeChildAdded(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.filtersNodes = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndexedFilter = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    return IndexedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n */\r\nvar RangedFilter = /** @class */ (function () {\r\n    function RangedFilter(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n    }\r\n    RangedFilter.prototype.getStartPost = function () {\r\n        return this.startPost_;\r\n    };\r\n    RangedFilter.prototype.getEndPost = function () {\r\n        return this.endPost_;\r\n    };\r\n    RangedFilter.prototype.matches = function (node) {\r\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\r\n            this.index_.compare(node, this.getEndPost()) <= 0);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        var self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndexedFilter = function () {\r\n        return this.indexedFilter_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    RangedFilter.getStartPost_ = function (params) {\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    };\r\n    RangedFilter.getEndPost_ = function (params) {\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    };\r\n    return RangedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n */\r\nvar LimitedFilter = /** @class */ (function () {\r\n    function LimitedFilter(params) {\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        var filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                var count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    var next = iterator.getNext();\r\n                    var inRange = void 0;\r\n                    if (this.reverse_) {\r\n                        inRange =\r\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\r\n                    }\r\n                    else {\r\n                        inRange =\r\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\r\n                    }\r\n                    if (inRange) {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        // if we have reached the end post, we cannot keep adding elemments\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                var startPost = void 0;\r\n                var endPost = void 0;\r\n                var cmp = void 0;\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getEndPost();\r\n                    endPost = this.rangedFilter_.getStartPost();\r\n                    var indexCompare_1 = this.index_.getCompare();\r\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getStartPost();\r\n                    endPost = this.rangedFilter_.getEndPost();\r\n                    cmp = this.index_.getCompare();\r\n                }\r\n                var count = 0;\r\n                var foundStartPost = false;\r\n                while (iterator.hasNext()) {\r\n                    var next = iterator.getNext();\r\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\r\n                        // start adding\r\n                        foundStartPost = true;\r\n                    }\r\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndexedFilter = function () {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        var cmp;\r\n        if (this.reverse_) {\r\n            var indexCmp_1 = this.index_.getCompare();\r\n            cmp = function (a, b) { return indexCmp_1(b, a); };\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        var oldEventCache = snap;\r\n        assert(oldEventCache.numChildren() === this.limit_, '');\r\n        var newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        var windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildChanged(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildRemoved(childKey, oldChildSnap));\r\n                }\r\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(changeChildAdded(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildRemoved(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(changeChildAdded(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    };\r\n    return LimitedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n */\r\nvar QueryParams = /** @class */ (function () {\r\n    function QueryParams() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.startAfterSet_ = false;\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.endBeforeSet_ = false;\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    QueryParams.prototype.hasStart = function () {\r\n        return this.startSet_;\r\n    };\r\n    QueryParams.prototype.hasStartAfter = function () {\r\n        return this.startAfterSet_;\r\n    };\r\n    QueryParams.prototype.hasEndBefore = function () {\r\n        return this.endBeforeSet_;\r\n    };\r\n    /**\r\n     * @return True if it would return from left.\r\n     */\r\n    QueryParams.prototype.isViewFromLeft = function () {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return this.viewFrom_ === \"l\" /* VIEW_FROM_LEFT */;\r\n        }\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     */\r\n    QueryParams.prototype.getIndexStartValue = function () {\r\n        assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     */\r\n    QueryParams.prototype.getIndexStartName = function () {\r\n        assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    };\r\n    QueryParams.prototype.hasEnd = function () {\r\n        return this.endSet_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     */\r\n    QueryParams.prototype.getIndexEndValue = function () {\r\n        assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     */\r\n    QueryParams.prototype.getIndexEndName = function () {\r\n        assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    };\r\n    QueryParams.prototype.hasLimit = function () {\r\n        return this.limitSet_;\r\n    };\r\n    /**\r\n     * @return True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    QueryParams.prototype.hasAnchoredLimit = function () {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    };\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     */\r\n    QueryParams.prototype.getLimit = function () {\r\n        assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    };\r\n    QueryParams.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    QueryParams.prototype.loadsAllData = function () {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    };\r\n    QueryParams.prototype.isDefault = function () {\r\n        return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\r\n    };\r\n    QueryParams.prototype.copy = function () {\r\n        var copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    };\r\n    return QueryParams;\r\n}());\r\nfunction queryParamsGetNodeFilter(queryParams) {\r\n    if (queryParams.loadsAllData()) {\r\n        return new IndexedFilter(queryParams.getIndex());\r\n    }\r\n    else if (queryParams.hasLimit()) {\r\n        return new LimitedFilter(queryParams);\r\n    }\r\n    else {\r\n        return new RangedFilter(queryParams);\r\n    }\r\n}\r\nfunction queryParamsLimitToFirst(queryParams, newLimit) {\r\n    var newParams = queryParams.copy();\r\n    newParams.limitSet_ = true;\r\n    newParams.limit_ = newLimit;\r\n    newParams.viewFrom_ = \"l\" /* VIEW_FROM_LEFT */;\r\n    return newParams;\r\n}\r\nfunction queryParamsLimitToLast(queryParams, newLimit) {\r\n    var newParams = queryParams.copy();\r\n    newParams.limitSet_ = true;\r\n    newParams.limit_ = newLimit;\r\n    newParams.viewFrom_ = \"r\" /* VIEW_FROM_RIGHT */;\r\n    return newParams;\r\n}\r\nfunction queryParamsStartAt(queryParams, indexValue, key) {\r\n    var newParams = queryParams.copy();\r\n    newParams.startSet_ = true;\r\n    if (indexValue === undefined) {\r\n        indexValue = null;\r\n    }\r\n    newParams.indexStartValue_ = indexValue;\r\n    if (key != null) {\r\n        newParams.startNameSet_ = true;\r\n        newParams.indexStartName_ = key;\r\n    }\r\n    else {\r\n        newParams.startNameSet_ = false;\r\n        newParams.indexStartName_ = '';\r\n    }\r\n    return newParams;\r\n}\r\nfunction queryParamsStartAfter(queryParams, indexValue, key) {\r\n    var params;\r\n    if (queryParams.index_ === KEY_INDEX) {\r\n        if (typeof indexValue === 'string') {\r\n            indexValue = successor(indexValue);\r\n        }\r\n        params = queryParamsStartAt(queryParams, indexValue, key);\r\n    }\r\n    else {\r\n        var childKey = void 0;\r\n        if (key == null) {\r\n            childKey = MAX_NAME;\r\n        }\r\n        else {\r\n            childKey = successor(key);\r\n        }\r\n        params = queryParamsStartAt(queryParams, indexValue, childKey);\r\n    }\r\n    params.startAfterSet_ = true;\r\n    return params;\r\n}\r\nfunction queryParamsEndAt(queryParams, indexValue, key) {\r\n    var newParams = queryParams.copy();\r\n    newParams.endSet_ = true;\r\n    if (indexValue === undefined) {\r\n        indexValue = null;\r\n    }\r\n    newParams.indexEndValue_ = indexValue;\r\n    if (key !== undefined) {\r\n        newParams.endNameSet_ = true;\r\n        newParams.indexEndName_ = key;\r\n    }\r\n    else {\r\n        newParams.endNameSet_ = false;\r\n        newParams.indexEndName_ = '';\r\n    }\r\n    return newParams;\r\n}\r\nfunction queryParamsEndBefore(queryParams, indexValue, key) {\r\n    var childKey;\r\n    var params;\r\n    if (queryParams.index_ === KEY_INDEX) {\r\n        if (typeof indexValue === 'string') {\r\n            indexValue = predecessor(indexValue);\r\n        }\r\n        params = queryParamsEndAt(queryParams, indexValue, key);\r\n    }\r\n    else {\r\n        if (key == null) {\r\n            childKey = MIN_NAME;\r\n        }\r\n        else {\r\n            childKey = predecessor(key);\r\n        }\r\n        params = queryParamsEndAt(queryParams, indexValue, childKey);\r\n    }\r\n    params.endBeforeSet_ = true;\r\n    return params;\r\n}\r\nfunction queryParamsOrderBy(queryParams, index) {\r\n    var newParams = queryParams.copy();\r\n    newParams.index_ = index;\r\n    return newParams;\r\n}\r\n/**\r\n * Returns a set of REST query string parameters representing this query.\r\n *\r\n * @return query string parameters\r\n */\r\nfunction queryParamsToRestQueryStringParameters(queryParams) {\r\n    var qs = {};\r\n    if (queryParams.isDefault()) {\r\n        return qs;\r\n    }\r\n    var orderBy;\r\n    if (queryParams.index_ === PRIORITY_INDEX) {\r\n        orderBy = \"$priority\" /* PRIORITY_INDEX */;\r\n    }\r\n    else if (queryParams.index_ === VALUE_INDEX) {\r\n        orderBy = \"$value\" /* VALUE_INDEX */;\r\n    }\r\n    else if (queryParams.index_ === KEY_INDEX) {\r\n        orderBy = \"$key\" /* KEY_INDEX */;\r\n    }\r\n    else {\r\n        assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n        orderBy = queryParams.index_.toString();\r\n    }\r\n    qs[\"orderBy\" /* ORDER_BY */] = stringify(orderBy);\r\n    if (queryParams.startSet_) {\r\n        qs[\"startAt\" /* START_AT */] = stringify(queryParams.indexStartValue_);\r\n        if (queryParams.startNameSet_) {\r\n            qs[\"startAt\" /* START_AT */] +=\r\n                ',' + stringify(queryParams.indexStartName_);\r\n        }\r\n    }\r\n    if (queryParams.endSet_) {\r\n        qs[\"endAt\" /* END_AT */] = stringify(queryParams.indexEndValue_);\r\n        if (queryParams.endNameSet_) {\r\n            qs[\"endAt\" /* END_AT */] +=\r\n                ',' + stringify(queryParams.indexEndName_);\r\n        }\r\n    }\r\n    if (queryParams.limitSet_) {\r\n        if (queryParams.isViewFromLeft()) {\r\n            qs[\"limitToFirst\" /* LIMIT_TO_FIRST */] = queryParams.limit_;\r\n        }\r\n        else {\r\n            qs[\"limitToLast\" /* LIMIT_TO_LAST */] = queryParams.limit_;\r\n        }\r\n    }\r\n    return qs;\r\n}\r\nfunction queryParamsGetQueryObject(queryParams) {\r\n    var obj = {};\r\n    if (queryParams.startSet_) {\r\n        obj[\"sp\" /* INDEX_START_VALUE */] =\r\n            queryParams.indexStartValue_;\r\n        if (queryParams.startNameSet_) {\r\n            obj[\"sn\" /* INDEX_START_NAME */] =\r\n                queryParams.indexStartName_;\r\n        }\r\n    }\r\n    if (queryParams.endSet_) {\r\n        obj[\"ep\" /* INDEX_END_VALUE */] = queryParams.indexEndValue_;\r\n        if (queryParams.endNameSet_) {\r\n            obj[\"en\" /* INDEX_END_NAME */] = queryParams.indexEndName_;\r\n        }\r\n    }\r\n    if (queryParams.limitSet_) {\r\n        obj[\"l\" /* LIMIT */] = queryParams.limit_;\r\n        var viewFrom = queryParams.viewFrom_;\r\n        if (viewFrom === '') {\r\n            if (queryParams.isViewFromLeft()) {\r\n                viewFrom = \"l\" /* VIEW_FROM_LEFT */;\r\n            }\r\n            else {\r\n                viewFrom = \"r\" /* VIEW_FROM_RIGHT */;\r\n            }\r\n        }\r\n        obj[\"vf\" /* VIEW_FROM */] = viewFrom;\r\n    }\r\n    // For now, priority index is the default, so we only specify if it's some other index\r\n    if (queryParams.index_ !== PRIORITY_INDEX) {\r\n        obj[\"i\" /* INDEX */] = queryParams.index_.toString();\r\n    }\r\n    return obj;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor;\r\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\r\nvar Query = /** @class */ (function () {\r\n    function Query(repo, path, queryParams_, orderByCalled_) {\r\n        this.repo = repo;\r\n        this.path = path;\r\n        this.queryParams_ = queryParams_;\r\n        this.orderByCalled_ = orderByCalled_;\r\n    }\r\n    Object.defineProperty(Query, \"__referenceConstructor\", {\r\n        get: function () {\r\n            assert(__referenceConstructor, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor;\r\n        },\r\n        set: function (val) {\r\n            __referenceConstructor = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Validates start/end values for queries.\r\n     */\r\n    Query.validateQueryEndpoints_ = function (params) {\r\n        var startNode = null;\r\n        var endNode = null;\r\n        if (params.hasStart()) {\r\n            startNode = params.getIndexStartValue();\r\n        }\r\n        if (params.hasEnd()) {\r\n            endNode = params.getIndexEndValue();\r\n        }\r\n        if (params.getIndex() === KEY_INDEX) {\r\n            var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n                'startAt(), endAt(), or equalTo().';\r\n            var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\r\n                'endAt(), endBefore(), or equalTo() must be a string.';\r\n            if (params.hasStart()) {\r\n                var startName = params.getIndexStartName();\r\n                if (startName !== MIN_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof startNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n            if (params.hasEnd()) {\r\n                var endName = params.getIndexEndName();\r\n                if (endName !== MAX_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof endNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n        }\r\n        else if (params.getIndex() === PRIORITY_INDEX) {\r\n            if ((startNode != null && !isValidPriority(startNode)) ||\r\n                (endNode != null && !isValidPriority(endNode))) {\r\n                throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                    'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\r\n                    '(null, a number, or a string).');\r\n            }\r\n        }\r\n        else {\r\n            assert(params.getIndex() instanceof PathIndex ||\r\n                params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n            if ((startNode != null && typeof startNode === 'object') ||\r\n                (endNode != null && typeof endNode === 'object')) {\r\n                throw new Error('Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\r\n                    'equalTo() cannot be an object.');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Validates that limit* has been called with the correct combination of parameters\r\n     */\r\n    Query.validateLimit_ = function (params) {\r\n        if (params.hasStart() &&\r\n            params.hasEnd() &&\r\n            params.hasLimit() &&\r\n            !params.hasAnchoredLimit()) {\r\n            throw new Error(\"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\r\n                'limitToFirst() or limitToLast() instead.');\r\n        }\r\n    };\r\n    /**\r\n     * Validates that no other order by call has been made\r\n     */\r\n    Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\r\n        if (this.orderByCalled_ === true) {\r\n            throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n        }\r\n    };\r\n    Query.prototype.getQueryParams = function () {\r\n        return this.queryParams_;\r\n    };\r\n    Query.prototype.getRef = function () {\r\n        validateArgCount('Query.ref', 0, 0, arguments.length);\r\n        // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\r\n        // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\r\n        // method gets called.\r\n        return new Query.__referenceConstructor(this.repo, this.path);\r\n    };\r\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\r\n        validateArgCount('Query.on', 2, 4, arguments.length);\r\n        validateEventType('Query.on', 1, eventType, false);\r\n        validateCallback('Query.on', 2, callback, false);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\r\n        if (eventType === 'value') {\r\n            this.onValueEvent(callback, ret.cancel, ret.context);\r\n        }\r\n        else {\r\n            var callbacks = {};\r\n            callbacks[eventType] = callback;\r\n            this.onChildEvent(callbacks, ret.cancel, ret.context);\r\n        }\r\n        return callback;\r\n    };\r\n    Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\r\n        var container = new ValueEventRegistration(callback, cancelCallback || null, context || null);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\r\n        var container = new ChildEventRegistration(callbacks, cancelCallback, context);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    Query.prototype.off = function (eventType, callback, context) {\r\n        validateArgCount('Query.off', 0, 3, arguments.length);\r\n        validateEventType('Query.off', 1, eventType, true);\r\n        validateCallback('Query.off', 2, callback, true);\r\n        validateContextObject('Query.off', 3, context, true);\r\n        var container = null;\r\n        var callbacks = null;\r\n        if (eventType === 'value') {\r\n            var valueCallback = callback || null;\r\n            container = new ValueEventRegistration(valueCallback, null, context || null);\r\n        }\r\n        else if (eventType) {\r\n            if (callback) {\r\n                callbacks = {};\r\n                callbacks[eventType] = callback;\r\n            }\r\n            container = new ChildEventRegistration(callbacks, null, context || null);\r\n        }\r\n        this.repo.removeEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * Get the server-value for this query, or return a cached value if not connected.\r\n     */\r\n    Query.prototype.get = function () {\r\n        return this.repo.getValue(this);\r\n    };\r\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     */\r\n    Query.prototype.once = function (eventType, userCallback, failureCallbackOrContext, context) {\r\n        var _this = this;\r\n        validateArgCount('Query.once', 1, 4, arguments.length);\r\n        validateEventType('Query.once', 1, eventType, false);\r\n        validateCallback('Query.once', 2, userCallback, true);\r\n        var ret = Query.getCancelAndContextArgs_('Query.once', failureCallbackOrContext, context);\r\n        // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\r\n        // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\r\n        // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\r\n        // against the Promise specification.\r\n        var firstCall = true;\r\n        var deferred = new Deferred();\r\n        // A dummy error handler in case a user wasn't expecting promises\r\n        deferred.promise.catch(function () { });\r\n        var onceCallback = function (snapshot) {\r\n            // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\r\n            // triggers multiple events (e.g. child_added or child_changed).\r\n            if (firstCall) {\r\n                firstCall = false;\r\n                _this.off(eventType, onceCallback);\r\n                if (userCallback) {\r\n                    userCallback.bind(ret.context)(snapshot);\r\n                }\r\n                deferred.resolve(snapshot);\r\n            }\r\n        };\r\n        this.on(eventType, onceCallback, \r\n        /*cancel=*/ function (err) {\r\n            _this.off(eventType, onceCallback);\r\n            if (ret.cancel) {\r\n                ret.cancel.bind(ret.context)(err);\r\n            }\r\n            deferred.reject(err);\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     */\r\n    Query.prototype.limitToFirst = function (limit) {\r\n        validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToFirst: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, queryParamsLimitToFirst(this.queryParams_, limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     */\r\n    Query.prototype.limitToLast = function (limit) {\r\n        validateArgCount('Query.limitToLast', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToLast: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, queryParamsLimitToLast(this.queryParams_, limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     */\r\n    Query.prototype.orderByChild = function (path) {\r\n        validateArgCount('Query.orderByChild', 1, 1, arguments.length);\r\n        if (path === '$key') {\r\n            throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\r\n        }\r\n        else if (path === '$priority') {\r\n            throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\r\n        }\r\n        else if (path === '$value') {\r\n            throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\r\n        }\r\n        validatePathString('Query.orderByChild', 1, path, false);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByChild');\r\n        var parsedPath = new Path(path);\r\n        if (pathIsEmpty(parsedPath)) {\r\n            throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\r\n        }\r\n        var index = new PathIndex(parsedPath);\r\n        var newParams = queryParamsOrderBy(this.queryParams_, index);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     */\r\n    Query.prototype.orderByKey = function () {\r\n        validateArgCount('Query.orderByKey', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByKey');\r\n        var newParams = queryParamsOrderBy(this.queryParams_, KEY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     */\r\n    Query.prototype.orderByPriority = function () {\r\n        validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByPriority');\r\n        var newParams = queryParamsOrderBy(this.queryParams_, PRIORITY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     */\r\n    Query.prototype.orderByValue = function () {\r\n        validateArgCount('Query.orderByValue', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByValue');\r\n        var newParams = queryParamsOrderBy(this.queryParams_, VALUE_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    Query.prototype.startAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.startAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\r\n        validateKey('Query.startAt', 2, name, true);\r\n        var newParams = queryParamsStartAt(this.queryParams_, value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' +\r\n                'or equalTo).');\r\n        }\r\n        // Calling with no params tells us to start at the beginning.\r\n        if (value === undefined) {\r\n            value = null;\r\n            name = null;\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    Query.prototype.startAfter = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.startAfter', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.startAfter', 1, value, this.path, false);\r\n        validateKey('Query.startAfter', 2, name, true);\r\n        var newParams = queryParamsStartAfter(this.queryParams_, value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.startAfter: Starting point was already set (by another call to startAt, startAfter ' +\r\n                'or equalTo).');\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    Query.prototype.endAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.endAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\r\n        validateKey('Query.endAt', 2, name, true);\r\n        var newParams = queryParamsEndAt(this.queryParams_, value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.endAt: Ending point was already set (by another call to endAt, endBefore, or ' +\r\n                'equalTo).');\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    Query.prototype.endBefore = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.endBefore', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.endBefore', 1, value, this.path, false);\r\n        validateKey('Query.endBefore', 2, name, true);\r\n        var newParams = queryParamsEndBefore(this.queryParams_, value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.endBefore: Ending point was already set (by another call to endAt, endBefore, or ' +\r\n                'equalTo).');\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     */\r\n    Query.prototype.equalTo = function (value, name) {\r\n        validateArgCount('Query.equalTo', 1, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\r\n        validateKey('Query.equalTo', 2, name, true);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\r\n                'equalTo).');\r\n        }\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\r\n                'equalTo).');\r\n        }\r\n        return this.startAt(value, name).endAt(value, name);\r\n    };\r\n    /**\r\n     * @return URL for this location.\r\n     */\r\n    Query.prototype.toString = function () {\r\n        validateArgCount('Query.toString', 0, 0, arguments.length);\r\n        return this.repo.toString() + pathToUrlEncodedString(this.path);\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users.\r\n    Query.prototype.toJSON = function () {\r\n        // An optional spacer argument is unnecessary for a string.\r\n        validateArgCount('Query.toJSON', 0, 1, arguments.length);\r\n        return this.toString();\r\n    };\r\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     */\r\n    Query.prototype.queryObject = function () {\r\n        return queryParamsGetQueryObject(this.queryParams_);\r\n    };\r\n    Query.prototype.queryIdentifier = function () {\r\n        var obj = this.queryObject();\r\n        var id = ObjectToUniqueKey(obj);\r\n        return id === '{}' ? 'default' : id;\r\n    };\r\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     */\r\n    Query.prototype.isEqual = function (other) {\r\n        validateArgCount('Query.isEqual', 1, 1, arguments.length);\r\n        if (!(other instanceof Query)) {\r\n            var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\r\n            throw new Error(error);\r\n        }\r\n        var sameRepo = this.repo === other.repo;\r\n        var samePath = pathEquals(this.path, other.path);\r\n        var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    };\r\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param fnName The function name (on or once)\r\n     *\r\n     */\r\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\r\n        var ret = { cancel: null, context: null };\r\n        if (cancelOrContext && context) {\r\n            ret.cancel = cancelOrContext;\r\n            validateCallback(fnName, 3, ret.cancel, true);\r\n            ret.context = context;\r\n            validateContextObject(fnName, 4, ret.context, true);\r\n        }\r\n        else if (cancelOrContext) {\r\n            // we have either a cancel callback or a context.\r\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\r\n                // it's a context!\r\n                ret.context = cancelOrContext;\r\n            }\r\n            else if (typeof cancelOrContext === 'function') {\r\n                ret.cancel = cancelOrContext;\r\n            }\r\n            else {\r\n                throw new Error(errorPrefix(fnName, 3, true) +\r\n                    ' must either be a cancel callback or a context object.');\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Object.defineProperty(Query.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Query;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ExistingValueProvider = /** @class */ (function () {\r\n    function ExistingValueProvider(node_) {\r\n        this.node_ = node_;\r\n    }\r\n    ExistingValueProvider.prototype.getImmediateChild = function (childName) {\r\n        var child = this.node_.getImmediateChild(childName);\r\n        return new ExistingValueProvider(child);\r\n    };\r\n    ExistingValueProvider.prototype.node = function () {\r\n        return this.node_;\r\n    };\r\n    return ExistingValueProvider;\r\n}());\r\nvar DeferredValueProvider = /** @class */ (function () {\r\n    function DeferredValueProvider(syncTree, path) {\r\n        this.syncTree_ = syncTree;\r\n        this.path_ = path;\r\n    }\r\n    DeferredValueProvider.prototype.getImmediateChild = function (childName) {\r\n        var childPath = pathChild(this.path_, childName);\r\n        return new DeferredValueProvider(this.syncTree_, childPath);\r\n    };\r\n    DeferredValueProvider.prototype.node = function () {\r\n        return this.syncTree_.calcCompleteEventCache(this.path_);\r\n    };\r\n    return DeferredValueProvider;\r\n}());\r\n/**\r\n * Generate placeholders for deferred values.\r\n */\r\nvar generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n */\r\nvar resolveDeferredLeafValue = function (value, existingVal, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n    if (typeof value['.sv'] === 'string') {\r\n        return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\r\n    }\r\n    else if (typeof value['.sv'] === 'object') {\r\n        return resolveComplexDeferredValue(value['.sv'], existingVal);\r\n    }\r\n    else {\r\n        assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\r\n    }\r\n};\r\nvar resolveScalarDeferredValue = function (op, existing, serverValues) {\r\n    switch (op) {\r\n        case 'timestamp':\r\n            return serverValues['timestamp'];\r\n        default:\r\n            assert(false, 'Unexpected server value: ' + op);\r\n    }\r\n};\r\nvar resolveComplexDeferredValue = function (op, existing, unused) {\r\n    if (!op.hasOwnProperty('increment')) {\r\n        assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\r\n    }\r\n    var delta = op['increment'];\r\n    if (typeof delta !== 'number') {\r\n        assert(false, 'Unexpected increment value: ' + delta);\r\n    }\r\n    var existingNode = existing.node();\r\n    assert(existingNode !== null && typeof existingNode !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls');\r\n    // Incrementing a non-number sets the value to the incremented amount\r\n    if (!existingNode.isLeafNode()) {\r\n        return delta;\r\n    }\r\n    var leaf = existingNode;\r\n    var existingVal = leaf.getValue();\r\n    if (typeof existingVal !== 'number') {\r\n        return delta;\r\n    }\r\n    // No need to do over/underflow arithmetic here because JS only handles floats under the covers\r\n    return existingVal + delta;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param path path to which write is relative\r\n * @param node new data written at path\r\n * @param syncTree current data\r\n */\r\nvar resolveDeferredValueTree = function (path, node, syncTree, serverValues) {\r\n    return resolveDeferredValue(node, new DeferredValueProvider(syncTree, path), serverValues);\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n */\r\nvar resolveDeferredValueSnapshot = function (node, existing, serverValues) {\r\n    return resolveDeferredValue(node, new ExistingValueProvider(existing), serverValues);\r\n};\r\nfunction resolveDeferredValue(node, existingVal, serverValues) {\r\n    var rawPri = node.getPriority().val();\r\n    var priority = resolveDeferredLeafValue(rawPri, existingVal.getImmediateChild('.priority'), serverValues);\r\n    var newNode;\r\n    if (node.isLeafNode()) {\r\n        var leafNode = node;\r\n        var value = resolveDeferredLeafValue(leafNode.getValue(), existingVal, serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON$1(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        var childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var newChildNode = resolveDeferredValue(childNode, existingVal.getImmediateChild(childName), serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper class to store a sparse set of snapshots.\r\n */\r\nvar SparseSnapshotTree = /** @class */ (function () {\r\n    function SparseSnapshotTree() {\r\n        this.value = null;\r\n        this.children = new Map();\r\n    }\r\n    /**\r\n     * Gets the node stored at the given path if one exists.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @return The retrieved node, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.find = function (path) {\r\n        if (this.value != null) {\r\n            return this.value.getChild(path);\r\n        }\r\n        else if (!pathIsEmpty(path) && this.children.size > 0) {\r\n            var childKey = pathGetFront(path);\r\n            path = pathPopFront(path);\r\n            if (this.children.has(childKey)) {\r\n                var childTree = this.children.get(childKey);\r\n                return childTree.find(path);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Stores the given node at the specified path. If there is already a node\r\n     * at a shallower path, it merges the new data into that snapshot node.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @param data The new data, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.remember = function (path, data) {\r\n        if (pathIsEmpty(path)) {\r\n            this.value = data;\r\n            this.children.clear();\r\n        }\r\n        else if (this.value !== null) {\r\n            this.value = this.value.updateChild(path, data);\r\n        }\r\n        else {\r\n            var childKey = pathGetFront(path);\r\n            if (!this.children.has(childKey)) {\r\n                this.children.set(childKey, new SparseSnapshotTree());\r\n            }\r\n            var child = this.children.get(childKey);\r\n            path = pathPopFront(path);\r\n            child.remember(path, data);\r\n        }\r\n    };\r\n    /**\r\n     * Purge the data at path from the cache.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @return True if this node should now be removed.\r\n     */\r\n    SparseSnapshotTree.prototype.forget = function (path) {\r\n        if (pathIsEmpty(path)) {\r\n            this.value = null;\r\n            this.children.clear();\r\n            return true;\r\n        }\r\n        else {\r\n            if (this.value !== null) {\r\n                if (this.value.isLeafNode()) {\r\n                    // We're trying to forget a node that doesn't exist\r\n                    return false;\r\n                }\r\n                else {\r\n                    var value = this.value;\r\n                    this.value = null;\r\n                    var self_1 = this;\r\n                    value.forEachChild(PRIORITY_INDEX, function (key, tree) {\r\n                        self_1.remember(new Path(key), tree);\r\n                    });\r\n                    return this.forget(path);\r\n                }\r\n            }\r\n            else if (this.children.size > 0) {\r\n                var childKey = pathGetFront(path);\r\n                path = pathPopFront(path);\r\n                if (this.children.has(childKey)) {\r\n                    var safeToRemove = this.children.get(childKey).forget(path);\r\n                    if (safeToRemove) {\r\n                        this.children.delete(childKey);\r\n                    }\r\n                }\r\n                return this.children.size === 0;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Recursively iterates through all of the stored tree and calls the\r\n     * callback on each one.\r\n     *\r\n     * @param prefixPath Path to look up node for.\r\n     * @param func The function to invoke for each tree.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\r\n        if (this.value !== null) {\r\n            func(prefixPath, this.value);\r\n        }\r\n        else {\r\n            this.forEachChild(function (key, tree) {\r\n                var path = new Path(prefixPath.toString() + '/' + key);\r\n                tree.forEachTree(path, func);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Iterates through each immediate child and triggers the callback.\r\n     *\r\n     * @param func The function to invoke for each child.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachChild = function (func) {\r\n        this.children.forEach(function (tree, key) {\r\n            func(key, tree);\r\n        });\r\n    };\r\n    return SparseSnapshotTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\nfunction newOperationSourceUser() {\r\n    return {\r\n        fromUser: true,\r\n        fromServer: false,\r\n        queryId: null,\r\n        tagged: false\r\n    };\r\n}\r\nfunction newOperationSourceServer() {\r\n    return {\r\n        fromUser: false,\r\n        fromServer: true,\r\n        queryId: null,\r\n        tagged: false\r\n    };\r\n}\r\nfunction newOperationSourceServerTaggedQuery(queryId) {\r\n    return {\r\n        fromUser: false,\r\n        fromServer: true,\r\n        queryId: queryId,\r\n        tagged: true\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar AckUserWrite = /** @class */ (function () {\r\n    /**\r\n     * @param affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n     */\r\n    function AckUserWrite(\r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ affectedTree, \r\n    /** @inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = newOperationSourceUser();\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    AckUserWrite.prototype.operationForChild = function (childName) {\r\n        if (!pathIsEmpty(this.path)) {\r\n            assert(pathGetFront(this.path) === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(pathPopFront(this.path), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            var childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(newEmptyPath(), childTree, this.revert);\r\n        }\r\n    };\r\n    return AckUserWrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n */\r\nvar EmptyChildren = function () {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nvar ImmutableTree = /** @class */ (function () {\r\n    function ImmutableTree(value, children) {\r\n        if (children === void 0) { children = EmptyChildren(); }\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    ImmutableTree.fromObject = function (obj) {\r\n        var tree = new ImmutableTree(null);\r\n        each(obj, function (childPath, childSnap) {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    };\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     */\r\n    ImmutableTree.prototype.isEmpty = function () {\r\n        return this.value === null && this.children.isEmpty();\r\n    };\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n     * on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param relativePath The remainder of the path\r\n     * @param predicate The predicate to satisfy to return a node\r\n     */\r\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: newEmptyPath(), value: this.value };\r\n        }\r\n        else {\r\n            if (pathIsEmpty(relativePath)) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathGetFront(relativePath);\r\n                var child = this.children.get(front);\r\n                if (child !== null) {\r\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(pathPopFront(relativePath), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        var fullPath = pathChild(new Path(front), childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     */\r\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\r\n    };\r\n    /**\r\n     * @return The subtree at the given path\r\n     */\r\n    ImmutableTree.prototype.subtree = function (relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(pathPopFront(relativePath));\r\n            }\r\n            else {\r\n                return new ImmutableTree(null);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param relativePath Path to set value at.\r\n     * @param toSet Value to set.\r\n     * @return Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front) || new ImmutableTree(null);\r\n            var newChild = child.set(pathPopFront(relativePath), toSet);\r\n            var newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param relativePath Path to value to remove.\r\n     * @return Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.remove = function (relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            if (this.children.isEmpty()) {\r\n                return new ImmutableTree(null);\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                var newChild = child.remove(pathPopFront(relativePath));\r\n                var newChildren = void 0;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return new ImmutableTree(null);\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param relativePath Path to get value for.\r\n     * @return Value at path, or null.\r\n     */\r\n    ImmutableTree.prototype.get = function (relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(pathPopFront(relativePath));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param relativePath Path to replace subtree for.\r\n     * @param newTree New tree.\r\n     * @return Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front) || new ImmutableTree(null);\r\n            var newChild = child.setTree(pathPopFront(relativePath), newTree);\r\n            var newChildren = void 0;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     */\r\n    ImmutableTree.prototype.fold = function (fn) {\r\n        return this.fold_(newEmptyPath(), fn);\r\n    };\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     */\r\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\r\n        var accum = {};\r\n        this.children.inorderTraversal(function (childKey, childTree) {\r\n            accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    };\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     */\r\n    ImmutableTree.prototype.findOnPath = function (path, f) {\r\n        return this.findOnPath_(path, newEmptyPath(), f);\r\n    };\r\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\r\n        var result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathIsEmpty(pathToFollow)) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathGetFront(pathToFollow);\r\n                var nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathPopFront(pathToFollow), pathChild(pathSoFar, front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\r\n        return this.foreachOnPath_(path, newEmptyPath(), f);\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\r\n        if (pathIsEmpty(pathToFollow)) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            var front = pathGetFront(pathToFollow);\r\n            var nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathPopFront(pathToFollow), pathChild(currentRelativePath, front), f);\r\n            }\r\n            else {\r\n                return new ImmutableTree(null);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param f A function to be called with the path from the root of the tree to\r\n     * a node, and the value at that node. Called in depth-first order.\r\n     */\r\n    ImmutableTree.prototype.foreach = function (f) {\r\n        this.foreach_(newEmptyPath(), f);\r\n    };\r\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            childTree.foreach_(pathChild(currentRelativePath, childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    };\r\n    ImmutableTree.prototype.foreachChild = function (f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    };\r\n    return ImmutableTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ListenComplete = /** @class */ (function () {\r\n    function ListenComplete(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    ListenComplete.prototype.operationForChild = function (childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            return new ListenComplete(this.source, newEmptyPath());\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, pathPopFront(this.path));\r\n        }\r\n    };\r\n    return ListenComplete;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Overwrite = /** @class */ (function () {\r\n    function Overwrite(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    Overwrite.prototype.operationForChild = function (childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            return new Overwrite(this.source, newEmptyPath(), this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, pathPopFront(this.path), this.snap);\r\n        }\r\n    };\r\n    return Overwrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Merge = /** @class */ (function () {\r\n    function Merge(\r\n    /** @inheritDoc */ source, \r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.operationForChild = function (childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            var childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, newEmptyPath(), childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, newEmptyPath(), childTree);\r\n            }\r\n        }\r\n        else {\r\n            assert(pathGetFront(this.path) === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, pathPopFront(this.path), this.children);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.toString = function () {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    };\r\n    return Merge;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nvar CacheNode = /** @class */ (function () {\r\n    function CacheNode(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     */\r\n    CacheNode.prototype.isFullyInitialized = function () {\r\n        return this.fullyInitialized_;\r\n    };\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     */\r\n    CacheNode.prototype.isFiltered = function () {\r\n        return this.filtered_;\r\n    };\r\n    CacheNode.prototype.isCompleteForPath = function (path) {\r\n        if (pathIsEmpty(path)) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        var childKey = pathGetFront(path);\r\n        return this.isCompleteForChild(childKey);\r\n    };\r\n    CacheNode.prototype.isCompleteForChild = function (key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    };\r\n    CacheNode.prototype.getNode = function () {\r\n        return this.node_;\r\n    };\r\n    return CacheNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n */\r\nvar ViewCache = /** @class */ (function () {\r\n    function ViewCache(eventCache_, serverCache_) {\r\n        this.eventCache_ = eventCache_;\r\n        this.serverCache_ = serverCache_;\r\n    }\r\n    ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\r\n        return new ViewCache(new CacheNode(eventSnap, complete, filtered), this.serverCache_);\r\n    };\r\n    ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\r\n        return new ViewCache(this.eventCache_, new CacheNode(serverSnap, complete, filtered));\r\n    };\r\n    ViewCache.prototype.getEventCache = function () {\r\n        return this.eventCache_;\r\n    };\r\n    ViewCache.prototype.getCompleteEventSnap = function () {\r\n        return this.eventCache_.isFullyInitialized()\r\n            ? this.eventCache_.getNode()\r\n            : null;\r\n    };\r\n    ViewCache.prototype.getServerCache = function () {\r\n        return this.serverCache_;\r\n    };\r\n    ViewCache.prototype.getCompleteServerSnap = function () {\r\n        return this.serverCache_.isFullyInitialized()\r\n            ? this.serverCache_.getNode()\r\n            : null;\r\n    };\r\n    return ViewCache;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ChildChangeAccumulator = /** @class */ (function () {\r\n    function ChildChangeAccumulator() {\r\n        this.changeMap = new Map();\r\n    }\r\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\r\n        var type = change.type;\r\n        var childKey = change.childName;\r\n        assert(type === \"child_added\" /* CHILD_ADDED */ ||\r\n            type === \"child_changed\" /* CHILD_CHANGED */ ||\r\n            type === \"child_removed\" /* CHILD_REMOVED */, 'Only child changes supported for tracking');\r\n        assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        var oldChange = this.changeMap.get(childKey);\r\n        if (oldChange) {\r\n            var oldType = oldChange.type;\r\n            if (type === \"child_added\" /* CHILD_ADDED */ &&\r\n                oldType === \"child_removed\" /* CHILD_REMOVED */) {\r\n                this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.snapshotNode));\r\n            }\r\n            else if (type === \"child_removed\" /* CHILD_REMOVED */ &&\r\n                oldType === \"child_added\" /* CHILD_ADDED */) {\r\n                this.changeMap.delete(childKey);\r\n            }\r\n            else if (type === \"child_removed\" /* CHILD_REMOVED */ &&\r\n                oldType === \"child_changed\" /* CHILD_CHANGED */) {\r\n                this.changeMap.set(childKey, changeChildRemoved(childKey, oldChange.oldSnap));\r\n            }\r\n            else if (type === \"child_changed\" /* CHILD_CHANGED */ &&\r\n                oldType === \"child_added\" /* CHILD_ADDED */) {\r\n                this.changeMap.set(childKey, changeChildAdded(childKey, change.snapshotNode));\r\n            }\r\n            else if (type === \"child_changed\" /* CHILD_CHANGED */ &&\r\n                oldType === \"child_changed\" /* CHILD_CHANGED */) {\r\n                this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap));\r\n            }\r\n            else {\r\n                throw assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap.set(childKey, change);\r\n        }\r\n    };\r\n    ChildChangeAccumulator.prototype.getChanges = function () {\r\n        return Array.from(this.changeMap.values());\r\n    };\r\n    return ChildChangeAccumulator;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n */\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nvar NoCompleteChildSource_ = /** @class */ (function () {\r\n    function NoCompleteChildSource_() {\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\r\n        return null;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        return null;\r\n    };\r\n    return NoCompleteChildSource_;\r\n}());\r\n/**\r\n * Singleton instance.\r\n */\r\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n */\r\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\r\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\r\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\r\n        var node = this.viewCache_.getEventCache();\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            var serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.getServerCache();\r\n            return this.writes_.calcCompleteChild(childKey, serverNode);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        var completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : this.viewCache_.getCompleteServerSnap();\r\n        var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    };\r\n    return WriteTreeCompleteChildSource;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ProcessorResult = /** @class */ (function () {\r\n    function ProcessorResult(viewCache, changes) {\r\n        this.viewCache = viewCache;\r\n        this.changes = changes;\r\n    }\r\n    return ProcessorResult;\r\n}());\r\n/**\r\n */\r\nvar ViewProcessor = /** @class */ (function () {\r\n    function ViewProcessor(filter_) {\r\n        this.filter_ = filter_;\r\n    }\r\n    ViewProcessor.prototype.assertIndexed = function (viewCache) {\r\n        assert(viewCache.getEventCache().getNode().isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\r\n        assert(viewCache.getServerCache().getNode().isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\r\n    };\r\n    ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\r\n        var accumulator = new ChildChangeAccumulator();\r\n        var newViewCache, filterServerNode;\r\n        if (operation.type === OperationType.OVERWRITE) {\r\n            var overwrite = operation;\r\n            if (overwrite.source.fromUser) {\r\n                newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                assert(overwrite.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n                // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n                // again\r\n                filterServerNode =\r\n                    overwrite.source.tagged ||\r\n                        (oldViewCache.getServerCache().isFiltered() &&\r\n                            !pathIsEmpty(overwrite.path));\r\n                newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.MERGE) {\r\n            var merge = operation;\r\n            if (merge.source.fromUser) {\r\n                newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                assert(merge.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered\r\n                filterServerNode =\r\n                    merge.source.tagged || oldViewCache.getServerCache().isFiltered();\r\n                newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n            var ackUserWrite = operation;\r\n            if (!ackUserWrite.revert) {\r\n                newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n            newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\r\n        }\r\n        else {\r\n            throw assertionError('Unknown operation type: ' + operation.type);\r\n        }\r\n        var changes = accumulator.getChanges();\r\n        ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\r\n        return new ProcessorResult(newViewCache, changes);\r\n    };\r\n    ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\r\n        var eventSnap = newViewCache.getEventCache();\r\n        if (eventSnap.isFullyInitialized()) {\r\n            var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n            var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\r\n            if (accumulator.length > 0 ||\r\n                !oldViewCache.getEventCache().isFullyInitialized() ||\r\n                (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\r\n                !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\r\n                accumulator.push(changeValue(newViewCache.getCompleteEventSnap()));\r\n            }\r\n        }\r\n    };\r\n    ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\r\n        var oldEventSnap = viewCache.getEventCache();\r\n        if (writesCache.shadowingWrite(changePath) != null) {\r\n            // we have a shadowing write, ignore changes\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var newEventCache = void 0, serverNode = void 0;\r\n            if (pathIsEmpty(changePath)) {\r\n                // TODO: figure out how this plays with \"sliding ack windows\"\r\n                assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n                if (viewCache.getServerCache().isFiltered()) {\r\n                    // We need to special case this, because we need to only apply writes to complete children, or\r\n                    // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                    // writes cannot be guaranteed to be complete\r\n                    var serverCache = viewCache.getCompleteServerSnap();\r\n                    var completeChildren = serverCache instanceof ChildrenNode\r\n                        ? serverCache\r\n                        : ChildrenNode.EMPTY_NODE;\r\n                    var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\r\n                }\r\n                else {\r\n                    var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\r\n                }\r\n            }\r\n            else {\r\n                var childKey = pathGetFront(changePath);\r\n                if (childKey === '.priority') {\r\n                    assert(pathGetLength(changePath) === 1, \"Can't have a priority with additional path components\");\r\n                    var oldEventNode = oldEventSnap.getNode();\r\n                    serverNode = viewCache.getServerCache().getNode();\r\n                    // we might have overwrites for this priority\r\n                    var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\r\n                    if (updatedPriority != null) {\r\n                        newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\r\n                    }\r\n                    else {\r\n                        // priority didn't change, keep old node\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n                else {\r\n                    var childChangePath = pathPopFront(changePath);\r\n                    // update child\r\n                    var newEventChild = void 0;\r\n                    if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                        serverNode = viewCache.getServerCache().getNode();\r\n                        var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\r\n                        if (eventChildUpdate != null) {\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey)\r\n                                .updateChild(childChangePath, eventChildUpdate);\r\n                        }\r\n                        else {\r\n                            // Nothing changed, just keep the old child\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey);\r\n                        }\r\n                    }\r\n                    else {\r\n                        newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                    }\r\n                    if (newEventChild != null) {\r\n                        newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                    }\r\n                    else {\r\n                        // no complete child available or no change\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n            }\r\n            return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath), this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n        var oldServerSnap = oldViewCache.getServerCache();\r\n        var newServerCache;\r\n        var serverFilter = filterServerNode\r\n            ? this.filter_\r\n            : this.filter_.getIndexedFilter();\r\n        if (pathIsEmpty(changePath)) {\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n        }\r\n        else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n            // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n            var newServerNode = oldServerSnap\r\n                .getNode()\r\n                .updateChild(changePath, changedSnap);\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n        }\r\n        else {\r\n            var childKey = pathGetFront(changePath);\r\n            if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n                pathGetLength(changePath) > 1) {\r\n                // We don't update incomplete nodes with updates intended for other listeners\r\n                return oldViewCache;\r\n            }\r\n            var childChangePath = pathPopFront(changePath);\r\n            var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n            var newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n            if (childKey === '.priority') {\r\n                newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n            }\r\n            else {\r\n                newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n            }\r\n        }\r\n        var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath), serverFilter.filtersNodes());\r\n        var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\r\n    };\r\n    ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n        var oldEventSnap = oldViewCache.getEventCache();\r\n        var newViewCache, newEventCache;\r\n        var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n        if (pathIsEmpty(changePath)) {\r\n            newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\r\n            newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\r\n        }\r\n        else {\r\n            var childKey = pathGetFront(changePath);\r\n            if (childKey === '.priority') {\r\n                newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\r\n                newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n            }\r\n            else {\r\n                var childChangePath = pathPopFront(changePath);\r\n                var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                var newChild = void 0;\r\n                if (pathIsEmpty(childChangePath)) {\r\n                    // Child overwrite, we can replace the child\r\n                    newChild = changedSnap;\r\n                }\r\n                else {\r\n                    var childNode = source.getCompleteChild(childKey);\r\n                    if (childNode != null) {\r\n                        if (pathGetBack(childChangePath) === '.priority' &&\r\n                            childNode.getChild(pathParent(childChangePath)).isEmpty()) {\r\n                            // This is a priority update on an empty node. If this node exists on the server, the\r\n                            // server will send down the priority in the update, so ignore for now\r\n                            newChild = childNode;\r\n                        }\r\n                        else {\r\n                            newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no complete child node available\r\n                        newChild = ChildrenNode.EMPTY_NODE;\r\n                    }\r\n                }\r\n                if (!oldChild.equals(newChild)) {\r\n                    var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                    newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\r\n                }\r\n                else {\r\n                    newViewCache = oldViewCache;\r\n                }\r\n            }\r\n        }\r\n        return newViewCache;\r\n    };\r\n    ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\r\n        return viewCache.getEventCache().isCompleteForChild(childKey);\r\n    };\r\n    ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n        var _this = this;\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = pathChild(path, relativePath);\r\n            if (ViewProcessor.cacheHasChild_(viewCache, pathGetFront(writePath))) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = pathChild(path, relativePath);\r\n            if (!ViewProcessor.cacheHasChild_(viewCache, pathGetFront(writePath))) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    ViewProcessor.prototype.applyMerge_ = function (node, merge) {\r\n        merge.foreach(function (relativePath, childNode) {\r\n            node = node.updateChild(relativePath, childNode);\r\n        });\r\n        return node;\r\n    };\r\n    ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n        var _this = this;\r\n        // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n        // wait for the complete data update coming soon.\r\n        if (viewCache.getServerCache().getNode().isEmpty() &&\r\n            !viewCache.getServerCache().isFullyInitialized()) {\r\n            return viewCache;\r\n        }\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        var viewMergeTree;\r\n        if (pathIsEmpty(path)) {\r\n            viewMergeTree = changedChildren;\r\n        }\r\n        else {\r\n            viewMergeTree = new ImmutableTree(null).setTree(path, changedChildren);\r\n        }\r\n        var serverNode = viewCache.getServerCache().getNode();\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (serverNode.hasChild(childKey)) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\r\n            var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) &&\r\n                childMergeTree.value == null;\r\n            if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childMergeTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n        if (writesCache.shadowingWrite(ackPath) != null) {\r\n            return viewCache;\r\n        }\r\n        // Only filter server node if it is currently filtered\r\n        var filterServerNode = viewCache.getServerCache().isFiltered();\r\n        // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n        // now that it won't be shadowed.\r\n        var serverCache = viewCache.getServerCache();\r\n        if (affectedTree.value != null) {\r\n            // This is an overwrite.\r\n            if ((pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\r\n                serverCache.isCompleteForPath(ackPath)) {\r\n                return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else if (pathIsEmpty(ackPath)) {\r\n                // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n                // should just re-apply whatever we have in our cache as a merge.\r\n                var changedChildren_1 = new ImmutableTree(null);\r\n                serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\r\n                    changedChildren_1 = changedChildren_1.set(new Path(name), node);\r\n                });\r\n                return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else {\r\n                return viewCache;\r\n            }\r\n        }\r\n        else {\r\n            // This is a merge.\r\n            var changedChildren_2 = new ImmutableTree(null);\r\n            affectedTree.foreach(function (mergePath, value) {\r\n                var serverCachePath = pathChild(ackPath, mergePath);\r\n                if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                    changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n                }\r\n            });\r\n            return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    };\r\n    ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\r\n        var oldServerNode = viewCache.getServerCache();\r\n        var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || pathIsEmpty(path), oldServerNode.isFiltered());\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n    };\r\n    ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\r\n        var complete;\r\n        if (writesCache.shadowingWrite(path) != null) {\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n            var oldEventCache = viewCache.getEventCache().getNode();\r\n            var newEventCache = void 0;\r\n            if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\r\n                var newNode = void 0;\r\n                if (viewCache.getServerCache().isFullyInitialized()) {\r\n                    newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                }\r\n                else {\r\n                    var serverChildren = viewCache.getServerCache().getNode();\r\n                    assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                    newNode = writesCache.calcCompleteEventChildren(serverChildren);\r\n                }\r\n                newNode = newNode;\r\n                newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\r\n            }\r\n            else {\r\n                var childKey = pathGetFront(path);\r\n                var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                if (newChild == null &&\r\n                    viewCache.getServerCache().isCompleteForChild(childKey)) {\r\n                    newChild = oldEventCache.getImmediateChild(childKey);\r\n                }\r\n                if (newChild != null) {\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, pathPopFront(path), source, accumulator);\r\n                }\r\n                else if (viewCache.getEventCache().getNode().hasChild(childKey)) {\r\n                    // No complete child available, delete the existing one, if any\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, pathPopFront(path), source, accumulator);\r\n                }\r\n                else {\r\n                    newEventCache = oldEventCache;\r\n                }\r\n                if (newEventCache.isEmpty() &&\r\n                    viewCache.getServerCache().isFullyInitialized()) {\r\n                    // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                    complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    if (complete.isLeafNode()) {\r\n                        newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\r\n                    }\r\n                }\r\n            }\r\n            complete =\r\n                viewCache.getServerCache().isFullyInitialized() ||\r\n                    writesCache.shadowingWrite(newEmptyPath()) != null;\r\n            return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    return ViewProcessor;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n */\r\nvar EventGenerator = /** @class */ (function () {\r\n    function EventGenerator(query_) {\r\n        this.query_ = query_;\r\n        this.index_ = this.query_.getQueryParams().getIndex();\r\n    }\r\n    return EventGenerator;\r\n}());\r\n/**\r\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n *\r\n * Notes:\r\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n *    our index.\r\n *  - prevName will be calculated based on the index ordering.\r\n */\r\nfunction eventGeneratorGenerateEventsForChanges(eventGenerator, changes, eventCache, eventRegistrations) {\r\n    var events = [];\r\n    var moves = [];\r\n    changes.forEach(function (change) {\r\n        if (change.type === \"child_changed\" /* CHILD_CHANGED */ &&\r\n            eventGenerator.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n            moves.push(changeChildMoved(change.childName, change.snapshotNode));\r\n        }\r\n    });\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_removed\" /* CHILD_REMOVED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_added\" /* CHILD_ADDED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_moved\" /* CHILD_MOVED */, moves, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_changed\" /* CHILD_CHANGED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"value\" /* VALUE */, changes, eventRegistrations, eventCache);\r\n    return events;\r\n}\r\n/**\r\n * Given changes of a single change type, generate the corresponding events.\r\n */\r\nfunction eventGeneratorGenerateEventsForType(eventGenerator, events, eventType, changes, registrations, eventCache) {\r\n    var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\r\n    filteredChanges.sort(function (a, b) {\r\n        return eventGeneratorCompareChanges(eventGenerator, a, b);\r\n    });\r\n    filteredChanges.forEach(function (change) {\r\n        var materializedChange = eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache);\r\n        registrations.forEach(function (registration) {\r\n            if (registration.respondsTo(change.type)) {\r\n                events.push(registration.createEvent(materializedChange, eventGenerator.query_));\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache) {\r\n    if (change.type === 'value' || change.type === 'child_removed') {\r\n        return change;\r\n    }\r\n    else {\r\n        change.prevName = eventCache.getPredecessorChildName(change.childName, change.snapshotNode, eventGenerator.index_);\r\n        return change;\r\n    }\r\n}\r\nfunction eventGeneratorCompareChanges(eventGenerator, a, b) {\r\n    if (a.childName == null || b.childName == null) {\r\n        throw assertionError('Should only compare child_ events.');\r\n    }\r\n    var aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n    var bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n    return eventGenerator.index_.compare(aWrapped, bWrapped);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n */\r\nvar View = /** @class */ (function () {\r\n    function View(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        var params = this.query_.getQueryParams();\r\n        var indexFilter = new IndexedFilter(params.getIndex());\r\n        var filter = queryParamsGetNodeFilter(params);\r\n        this.processor_ = new ViewProcessor(filter);\r\n        var initialServerCache = initialViewCache.getServerCache();\r\n        var initialEventCache = initialViewCache.getEventCache();\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        this.viewCache_ = new ViewCache(newEventCache, newServerCache);\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    View.prototype.getQuery = function () {\r\n        return this.query_;\r\n    };\r\n    View.prototype.getServerCache = function () {\r\n        return this.viewCache_.getServerCache().getNode();\r\n    };\r\n    View.prototype.getCompleteNode = function () {\r\n        return this.viewCache_.getCompleteEventSnap();\r\n    };\r\n    View.prototype.getCompleteServerCache = function (path) {\r\n        var cache = this.viewCache_.getCompleteServerSnap();\r\n        if (cache) {\r\n            // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n            // we need to see if it contains the child we're interested in.\r\n            if (this.query_.getQueryParams().loadsAllData() ||\r\n                (!pathIsEmpty(path) &&\r\n                    !cache.getImmediateChild(pathGetFront(path)).isEmpty())) {\r\n                return cache.getChild(path);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    View.prototype.isEmpty = function () {\r\n        return this.eventRegistrations_.length === 0;\r\n    };\r\n    View.prototype.addEventRegistration = function (eventRegistration) {\r\n        this.eventRegistrations_.push(eventRegistration);\r\n    };\r\n    /**\r\n     * @param eventRegistration If null, remove all callbacks.\r\n     * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return Cancel events, if cancelError was provided.\r\n     */\r\n    View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\r\n        var cancelEvents = [];\r\n        if (cancelError) {\r\n            assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n            var path_1 = this.query_.path;\r\n            this.eventRegistrations_.forEach(function (registration) {\r\n                var maybeEvent = registration.createCancelEvent(cancelError, path_1);\r\n                if (maybeEvent) {\r\n                    cancelEvents.push(maybeEvent);\r\n                }\r\n            });\r\n        }\r\n        if (eventRegistration) {\r\n            var remaining = [];\r\n            for (var i = 0; i < this.eventRegistrations_.length; ++i) {\r\n                var existing = this.eventRegistrations_[i];\r\n                if (!existing.matches(eventRegistration)) {\r\n                    remaining.push(existing);\r\n                }\r\n                else if (eventRegistration.hasAnyCallback()) {\r\n                    // We're removing just this one\r\n                    remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\r\n                    break;\r\n                }\r\n            }\r\n            this.eventRegistrations_ = remaining;\r\n        }\r\n        else {\r\n            this.eventRegistrations_ = [];\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n     */\r\n    View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\r\n        if (operation.type === OperationType.MERGE &&\r\n            operation.source.queryId !== null) {\r\n            assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\r\n            assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\r\n        }\r\n        var oldViewCache = this.viewCache_;\r\n        var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\r\n        this.processor_.assertIndexed(result.viewCache);\r\n        assert(result.viewCache.getServerCache().isFullyInitialized() ||\r\n            !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n        this.viewCache_ = result.viewCache;\r\n        return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\r\n    };\r\n    View.prototype.getInitialEvents = function (registration) {\r\n        var eventSnap = this.viewCache_.getEventCache();\r\n        var initialChanges = [];\r\n        if (!eventSnap.getNode().isLeafNode()) {\r\n            var eventNode = eventSnap.getNode();\r\n            eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                initialChanges.push(changeChildAdded(key, childNode));\r\n            });\r\n        }\r\n        if (eventSnap.isFullyInitialized()) {\r\n            initialChanges.push(changeValue(eventSnap.getNode()));\r\n        }\r\n        return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\r\n    };\r\n    View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\r\n        var registrations = eventRegistration\r\n            ? [eventRegistration]\r\n            : this.eventRegistrations_;\r\n        return eventGeneratorGenerateEventsForChanges(this.eventGenerator_, changes, eventCache, registrations);\r\n    };\r\n    return View;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor$1;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nvar SyncPoint = /** @class */ (function () {\r\n    function SyncPoint() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         */\r\n        this.views = new Map();\r\n    }\r\n    Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\r\n        get: function () {\r\n            assert(__referenceConstructor$1, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor$1;\r\n        },\r\n        set: function (val) {\r\n            assert(!__referenceConstructor$1, '__referenceConstructor has already been defined');\r\n            __referenceConstructor$1 = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    SyncPoint.prototype.isEmpty = function () {\r\n        return this.views.size === 0;\r\n    };\r\n    SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\r\n        var e_1, _a;\r\n        var queryId = operation.source.queryId;\r\n        if (queryId !== null) {\r\n            var view = this.views.get(queryId);\r\n            assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n            return view.applyOperation(operation, writesCache, optCompleteServerCache);\r\n        }\r\n        else {\r\n            var events = [];\r\n            try {\r\n                for (var _b = __values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var view = _c.value;\r\n                    events = events.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Get a view for the specified query.\r\n     *\r\n     * @param query The query to return a view for\r\n     * @param writesCache\r\n     * @param serverCache\r\n     * @param serverCacheComplete\r\n     * @return Events to raise.\r\n     */\r\n    SyncPoint.prototype.getView = function (query, writesCache, serverCache, serverCacheComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var view = this.views.get(queryId);\r\n        if (!view) {\r\n            // TODO: make writesCache take flag for complete server node\r\n            var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\r\n            var eventCacheComplete = false;\r\n            if (eventCache) {\r\n                eventCacheComplete = true;\r\n            }\r\n            else if (serverCache instanceof ChildrenNode) {\r\n                eventCache = writesCache.calcCompleteEventChildren(serverCache);\r\n                eventCacheComplete = false;\r\n            }\r\n            else {\r\n                eventCache = ChildrenNode.EMPTY_NODE;\r\n                eventCacheComplete = false;\r\n            }\r\n            var viewCache = new ViewCache(new CacheNode(eventCache, eventCacheComplete, false), new CacheNode(serverCache, serverCacheComplete, false));\r\n            return new View(query, viewCache);\r\n        }\r\n        return view;\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param query\r\n     * @param eventRegistration\r\n     * @param writesCache\r\n     * @param serverCache Complete server cache, if we have it.\r\n     * @param serverCacheComplete\r\n     * @return Events to raise.\r\n     */\r\n    SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n        var view = this.getView(query, writesCache, serverCache, serverCacheComplete);\r\n        if (!this.views.has(query.queryIdentifier())) {\r\n            this.views.set(query.queryIdentifier(), view);\r\n        }\r\n        // This is guaranteed to exist now, we just created anything that was missing\r\n        view.addEventRegistration(eventRegistration);\r\n        return view.getInitialEvents(eventRegistration);\r\n    };\r\n    /**\r\n     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n     *\r\n     * If query is the default query, we'll check all views for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n     *\r\n     * @param eventRegistration If null, remove all callbacks.\r\n     * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return removed queries and any cancel events\r\n     */\r\n    SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var e_2, _a;\r\n        var queryId = query.queryIdentifier();\r\n        var removed = [];\r\n        var cancelEvents = [];\r\n        var hadCompleteView = this.hasCompleteView();\r\n        if (queryId === 'default') {\r\n            try {\r\n                // When you do ref.off(...), we search all views for the registration to remove.\r\n                for (var _b = __values(this.views.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var _d = __read(_c.value, 2), viewQueryId = _d[0], view = _d[1];\r\n                    cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                    if (view.isEmpty()) {\r\n                        this.views.delete(viewQueryId);\r\n                        // We'll deal with complete views later.\r\n                        if (!view.getQuery().getQueryParams().loadsAllData()) {\r\n                            removed.push(view.getQuery());\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_2) throw e_2.error; }\r\n            }\r\n        }\r\n        else {\r\n            // remove the callback from the specific view.\r\n            var view = this.views.get(queryId);\r\n            if (view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    this.views.delete(queryId);\r\n                    // We'll deal with complete views later.\r\n                    if (!view.getQuery().getQueryParams().loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (hadCompleteView && !this.hasCompleteView()) {\r\n            // We removed our last complete view.\r\n            removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\r\n        }\r\n        return { removed: removed, events: cancelEvents };\r\n    };\r\n    SyncPoint.prototype.getQueryViews = function () {\r\n        var e_3, _a;\r\n        var result = [];\r\n        try {\r\n            for (var _b = __values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                if (!view.getQuery().getQueryParams().loadsAllData()) {\r\n                    result.push(view);\r\n                }\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * @param path The path to the desired complete snapshot\r\n     * @return A complete cache, if it exists\r\n     */\r\n    SyncPoint.prototype.getCompleteServerCache = function (path) {\r\n        var e_4, _a;\r\n        var serverCache = null;\r\n        try {\r\n            for (var _b = __values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                serverCache = serverCache || view.getCompleteServerCache(path);\r\n            }\r\n        }\r\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_4) throw e_4.error; }\r\n        }\r\n        return serverCache;\r\n    };\r\n    SyncPoint.prototype.viewForQuery = function (query) {\r\n        var params = query.getQueryParams();\r\n        if (params.loadsAllData()) {\r\n            return this.getCompleteView();\r\n        }\r\n        else {\r\n            var queryId = query.queryIdentifier();\r\n            return this.views.get(queryId);\r\n        }\r\n    };\r\n    SyncPoint.prototype.viewExistsForQuery = function (query) {\r\n        return this.viewForQuery(query) != null;\r\n    };\r\n    SyncPoint.prototype.hasCompleteView = function () {\r\n        return this.getCompleteView() != null;\r\n    };\r\n    SyncPoint.prototype.getCompleteView = function () {\r\n        var e_5, _a;\r\n        try {\r\n            for (var _b = __values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                if (view.getQuery().getQueryParams().loadsAllData()) {\r\n                    return view;\r\n                }\r\n            }\r\n        }\r\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_5) throw e_5.error; }\r\n        }\r\n        return null;\r\n    };\r\n    return SyncPoint;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\r\nvar CompoundWrite = /** @class */ (function () {\r\n    function CompoundWrite(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    CompoundWrite.empty = function () {\r\n        return new CompoundWrite(new ImmutableTree(null));\r\n    };\r\n    return CompoundWrite;\r\n}());\r\nfunction compoundWriteAddWrite(compoundWrite, path, node) {\r\n    if (pathIsEmpty(path)) {\r\n        return new CompoundWrite(new ImmutableTree(node));\r\n    }\r\n    else {\r\n        var rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            var rootMostPath = rootmost.path;\r\n            var value = rootmost.value;\r\n            var relativePath = newRelativePath(rootMostPath, path);\r\n            value = value.updateChild(relativePath, node);\r\n            return new CompoundWrite(compoundWrite.writeTree_.set(rootMostPath, value));\r\n        }\r\n        else {\r\n            var subtree = new ImmutableTree(node);\r\n            var newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    }\r\n}\r\nfunction compoundWriteAddWrites(compoundWrite, path, updates) {\r\n    var newWrite = compoundWrite;\r\n    each(updates, function (childKey, node) {\r\n        newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\r\n    });\r\n    return newWrite;\r\n}\r\n/**\r\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n * location, which must be removed by calling this method with that path.\r\n *\r\n * @param compoundWrite The CompoundWrite to remove.\r\n * @param path The path at which a write and all deeper writes should be removed\r\n * @return The new CompoundWrite with the removed path\r\n */\r\nfunction compoundWriteRemoveWrite(compoundWrite, path) {\r\n    if (pathIsEmpty(path)) {\r\n        return CompoundWrite.empty();\r\n    }\r\n    else {\r\n        var newWriteTree = compoundWrite.writeTree_.setTree(path, new ImmutableTree(null));\r\n        return new CompoundWrite(newWriteTree);\r\n    }\r\n}\r\n/**\r\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n * considered \"complete\".\r\n *\r\n * @param compoundWrite The CompoundWrite to check.\r\n * @param path The path to check for\r\n * @return Whether there is a complete write at that path\r\n */\r\nfunction compoundWriteHasCompleteWrite(compoundWrite, path) {\r\n    return compoundWriteGetCompleteNode(compoundWrite, path) != null;\r\n}\r\n/**\r\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n * writes from deeper paths, but will return child nodes from a more shallow path.\r\n *\r\n * @param compoundWrite The CompoundWrite to get the node from.\r\n * @param path The path to get a complete write\r\n * @return The node if complete at that path, or null otherwise.\r\n */\r\nfunction compoundWriteGetCompleteNode(compoundWrite, path) {\r\n    var rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\r\n    if (rootmost != null) {\r\n        return compoundWrite.writeTree_\r\n            .get(rootmost.path)\r\n            .getChild(newRelativePath(rootmost.path, path));\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Returns all children that are guaranteed to be a complete overwrite.\r\n *\r\n * @param compoundWrite The CompoundWrite to get children from.\r\n * @return A list of all complete children.\r\n */\r\nfunction compoundWriteGetCompleteChildren(compoundWrite) {\r\n    var children = [];\r\n    var node = compoundWrite.writeTree_.value;\r\n    if (node != null) {\r\n        // If it's a leaf node, it has no children; so nothing to do.\r\n        if (!node.isLeafNode()) {\r\n            node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                children.push(new NamedNode(childName, childNode));\r\n            });\r\n        }\r\n    }\r\n    else {\r\n        compoundWrite.writeTree_.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value != null) {\r\n                children.push(new NamedNode(childName, childTree.value));\r\n            }\r\n        });\r\n    }\r\n    return children;\r\n}\r\nfunction compoundWriteChildCompoundWrite(compoundWrite, path) {\r\n    if (pathIsEmpty(path)) {\r\n        return compoundWrite;\r\n    }\r\n    else {\r\n        var shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\r\n        if (shadowingNode != null) {\r\n            return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n        }\r\n        else {\r\n            return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n * @return Whether this CompoundWrite is empty\r\n */\r\nfunction compoundWriteIsEmpty(compoundWrite) {\r\n    return compoundWrite.writeTree_.isEmpty();\r\n}\r\n/**\r\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n * node\r\n * @param node The node to apply this CompoundWrite to\r\n * @return The node with all writes applied\r\n */\r\nfunction compoundWriteApply(compoundWrite, node) {\r\n    return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\r\n}\r\nfunction applySubtreeWrite(relativePath, writeTree, node) {\r\n    if (writeTree.value != null) {\r\n        // Since there a write is always a leaf, we're done here\r\n        return node.updateChild(relativePath, writeTree.value);\r\n    }\r\n    else {\r\n        var priorityWrite_1 = null;\r\n        writeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (childKey === '.priority') {\r\n                // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                // to apply priorities to empty nodes that are later filled\r\n                assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                priorityWrite_1 = childTree.value;\r\n            }\r\n            else {\r\n                node = applySubtreeWrite(pathChild(relativePath, childKey), childTree, node);\r\n            }\r\n        });\r\n        // If there was a priority write, we only apply it if the node is not empty\r\n        if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\r\n            node = node.updateChild(pathChild(relativePath, '.priority'), priorityWrite_1);\r\n        }\r\n        return node;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n */\r\nvar WriteTree = /** @class */ (function () {\r\n    function WriteTree() {\r\n        /**\r\n         * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n         * applyLocally=false or writes that are completely shadowed by other writes.\r\n         */\r\n        this.visibleWrites_ = CompoundWrite.empty();\r\n        /**\r\n         * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n         * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n         * used by transactions).\r\n         */\r\n        this.allWrites_ = [];\r\n        this.lastWriteId_ = -1;\r\n    }\r\n    /**\r\n     * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n     *\r\n     */\r\n    WriteTree.prototype.childWrites = function (path) {\r\n        return new WriteTreeRef(path, this);\r\n    };\r\n    /**\r\n     * Record a new overwrite from user code.\r\n     *\r\n     * @param visible This is set to false by some transactions. It should be excluded from event caches\r\n     */\r\n    WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\r\n        assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\r\n        if (visible === undefined) {\r\n            visible = true;\r\n        }\r\n        this.allWrites_.push({\r\n            path: path,\r\n            snap: snap,\r\n            writeId: writeId,\r\n            visible: visible\r\n        });\r\n        if (visible) {\r\n            this.visibleWrites_ = compoundWriteAddWrite(this.visibleWrites_, path, snap);\r\n        }\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * Record a new merge from user code.\r\n     */\r\n    WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\r\n        assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\r\n        this.allWrites_.push({\r\n            path: path,\r\n            children: changedChildren,\r\n            writeId: writeId,\r\n            visible: true\r\n        });\r\n        this.visibleWrites_ = compoundWriteAddWrites(this.visibleWrites_, path, changedChildren);\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    WriteTree.prototype.getWrite = function (writeId) {\r\n        for (var i = 0; i < this.allWrites_.length; i++) {\r\n            var record = this.allWrites_[i];\r\n            if (record.writeId === writeId) {\r\n                return record;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n     * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n     *\r\n     * @return true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n     * events as a result).\r\n     */\r\n    WriteTree.prototype.removeWrite = function (writeId) {\r\n        // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n        // out of order.\r\n        //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n        //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n        var _this = this;\r\n        var idx = this.allWrites_.findIndex(function (s) {\r\n            return s.writeId === writeId;\r\n        });\r\n        assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n        var writeToRemove = this.allWrites_[idx];\r\n        this.allWrites_.splice(idx, 1);\r\n        var removedWriteWasVisible = writeToRemove.visible;\r\n        var removedWriteOverlapsWithOtherWrites = false;\r\n        var i = this.allWrites_.length - 1;\r\n        while (removedWriteWasVisible && i >= 0) {\r\n            var currentWrite = this.allWrites_[i];\r\n            if (currentWrite.visible) {\r\n                if (i >= idx &&\r\n                    this.recordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                    // The removed write was completely shadowed by a subsequent write.\r\n                    removedWriteWasVisible = false;\r\n                }\r\n                else if (pathContains(writeToRemove.path, currentWrite.path)) {\r\n                    // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                    removedWriteOverlapsWithOtherWrites = true;\r\n                }\r\n            }\r\n            i--;\r\n        }\r\n        if (!removedWriteWasVisible) {\r\n            return false;\r\n        }\r\n        else if (removedWriteOverlapsWithOtherWrites) {\r\n            // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n            this.resetTree_();\r\n            return true;\r\n        }\r\n        else {\r\n            // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n            if (writeToRemove.snap) {\r\n                this.visibleWrites_ = compoundWriteRemoveWrite(this.visibleWrites_, writeToRemove.path);\r\n            }\r\n            else {\r\n                var children = writeToRemove.children;\r\n                each(children, function (childName) {\r\n                    _this.visibleWrites_ = compoundWriteRemoveWrite(_this.visibleWrites_, pathChild(writeToRemove.path, childName));\r\n                });\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n    /**\r\n     * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n     * No server data is considered.\r\n     *\r\n     */\r\n    WriteTree.prototype.getCompleteWriteData = function (path) {\r\n        return compoundWriteGetCompleteNode(this.visibleWrites_, path);\r\n    };\r\n    /**\r\n     * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n     * writes), attempt to calculate a complete snapshot for the given path\r\n     *\r\n     * @param writeIdsToExclude An optional set to be excluded\r\n     * @param includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     */\r\n    WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        if (!writeIdsToExclude && !includeHiddenWrites) {\r\n            var shadowingNode = compoundWriteGetCompleteNode(this.visibleWrites_, treePath);\r\n            if (shadowingNode != null) {\r\n                return shadowingNode;\r\n            }\r\n            else {\r\n                var subMerge = compoundWriteChildCompoundWrite(this.visibleWrites_, treePath);\r\n                if (compoundWriteIsEmpty(subMerge)) {\r\n                    return completeServerCache;\r\n                }\r\n                else if (completeServerCache == null &&\r\n                    !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())) {\r\n                    // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                    return null;\r\n                }\r\n                else {\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return compoundWriteApply(subMerge, layeredCache);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var merge = compoundWriteChildCompoundWrite(this.visibleWrites_, treePath);\r\n            if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\r\n                return completeServerCache;\r\n            }\r\n            else {\r\n                // If the server cache is null, and we don't have a complete cache, we need to return null\r\n                if (!includeHiddenWrites &&\r\n                    completeServerCache == null &&\r\n                    !compoundWriteHasCompleteWrite(merge, newEmptyPath())) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    var filter = function (write) {\r\n                        return ((write.visible || includeHiddenWrites) &&\r\n                            (!writeIdsToExclude ||\r\n                                !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                            (pathContains(write.path, treePath) ||\r\n                                pathContains(treePath, write.path)));\r\n                    };\r\n                    var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return compoundWriteApply(mergeAtPath, layeredCache);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n     * Used when creating new views, to pre-fill their complete event children snapshot.\r\n     */\r\n    WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\r\n        var completeChildren = ChildrenNode.EMPTY_NODE;\r\n        var topLevelSet = compoundWriteGetCompleteNode(this.visibleWrites_, treePath);\r\n        if (topLevelSet) {\r\n            if (!topLevelSet.isLeafNode()) {\r\n                // we're shadowing everything. Return the children.\r\n                topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\r\n                    completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n                });\r\n            }\r\n            return completeChildren;\r\n        }\r\n        else if (completeServerChildren) {\r\n            // Layer any children we have on top of this\r\n            // We know we don't have a top-level set, so just enumerate existing children\r\n            var merge_1 = compoundWriteChildCompoundWrite(this.visibleWrites_, treePath);\r\n            completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                var node = compoundWriteApply(compoundWriteChildCompoundWrite(merge_1, new Path(childName)), childNode);\r\n                completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n            });\r\n            // Add any complete children we have from the set\r\n            compoundWriteGetCompleteChildren(merge_1).forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n        else {\r\n            // We don't have anything to layer on top of. Layer on any children we have\r\n            // Note that we can return an empty snap if we have a defined delete\r\n            var merge = compoundWriteChildCompoundWrite(this.visibleWrites_, treePath);\r\n            compoundWriteGetCompleteChildren(merge).forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n    };\r\n    /**\r\n     * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n     * applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist\r\n     */\r\n    WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\r\n        assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n        var path = pathChild(treePath, childPath);\r\n        if (compoundWriteHasCompleteWrite(this.visibleWrites_, path)) {\r\n            // At this point we can probably guarantee that we're in case 2, meaning no events\r\n            // May need to check visibility while doing the findRootMostValueAndPath call\r\n            return null;\r\n        }\r\n        else {\r\n            // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n            var childMerge = compoundWriteChildCompoundWrite(this.visibleWrites_, path);\r\n            if (compoundWriteIsEmpty(childMerge)) {\r\n                // We're not shadowing at all. Case 1\r\n                return existingServerSnap.getChild(childPath);\r\n            }\r\n            else {\r\n                // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n                // However this is tricky to find out, since user updates don't necessary change the server\r\n                // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n                // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n                // only check if the updates change the serverNode.\r\n                // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n                return compoundWriteApply(childMerge, existingServerSnap.getChild(childPath));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     */\r\n    WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\r\n        var path = pathChild(treePath, childKey);\r\n        var shadowingNode = compoundWriteGetCompleteNode(this.visibleWrites_, path);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            if (existingServerSnap.isCompleteForChild(childKey)) {\r\n                var childMerge = compoundWriteChildCompoundWrite(this.visibleWrites_, path);\r\n                return compoundWriteApply(childMerge, existingServerSnap.getNode().getImmediateChild(childKey));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     */\r\n    WriteTree.prototype.shadowingWrite = function (path) {\r\n        return compoundWriteGetCompleteNode(this.visibleWrites_, path);\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window.\r\n     */\r\n    WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\r\n        var toIterate;\r\n        var merge = compoundWriteChildCompoundWrite(this.visibleWrites_, treePath);\r\n        var shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\r\n        if (shadowingNode != null) {\r\n            toIterate = shadowingNode;\r\n        }\r\n        else if (completeServerData != null) {\r\n            toIterate = compoundWriteApply(merge, completeServerData);\r\n        }\r\n        else {\r\n            // no children to iterate on\r\n            return [];\r\n        }\r\n        toIterate = toIterate.withIndex(index);\r\n        if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n            var nodes = [];\r\n            var cmp = index.getCompare();\r\n            var iter = reverse\r\n                ? toIterate.getReverseIteratorFrom(startPost, index)\r\n                : toIterate.getIteratorFrom(startPost, index);\r\n            var next = iter.getNext();\r\n            while (next && nodes.length < count) {\r\n                if (cmp(next, startPost) !== 0) {\r\n                    nodes.push(next);\r\n                }\r\n                next = iter.getNext();\r\n            }\r\n            return nodes;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\r\n        if (writeRecord.snap) {\r\n            return pathContains(writeRecord.path, path);\r\n        }\r\n        else {\r\n            for (var childName in writeRecord.children) {\r\n                if (writeRecord.children.hasOwnProperty(childName) &&\r\n                    pathContains(pathChild(writeRecord.path, childName), path)) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n     */\r\n    WriteTree.prototype.resetTree_ = function () {\r\n        this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, newEmptyPath());\r\n        if (this.allWrites_.length > 0) {\r\n            this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\r\n        }\r\n        else {\r\n            this.lastWriteId_ = -1;\r\n        }\r\n    };\r\n    /**\r\n     * The default filter used when constructing the tree. Keep everything that's visible.\r\n     */\r\n    WriteTree.DefaultFilter_ = function (write) {\r\n        return write.visible;\r\n    };\r\n    /**\r\n     * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n     * event data at that path.\r\n     */\r\n    WriteTree.layerTree_ = function (writes, filter, treeRoot) {\r\n        var compoundWrite = CompoundWrite.empty();\r\n        for (var i = 0; i < writes.length; ++i) {\r\n            var write = writes[i];\r\n            // Theory, a later set will either:\r\n            // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n            // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n            if (filter(write)) {\r\n                var writePath = write.path;\r\n                var relativePath = void 0;\r\n                if (write.snap) {\r\n                    if (pathContains(treeRoot, writePath)) {\r\n                        relativePath = newRelativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWriteAddWrite(compoundWrite, relativePath, write.snap);\r\n                    }\r\n                    else if (pathContains(writePath, treeRoot)) {\r\n                        relativePath = newRelativePath(writePath, treeRoot);\r\n                        compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), write.snap.getChild(relativePath));\r\n                    }\r\n                    else ;\r\n                }\r\n                else if (write.children) {\r\n                    if (pathContains(treeRoot, writePath)) {\r\n                        relativePath = newRelativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWriteAddWrites(compoundWrite, relativePath, write.children);\r\n                    }\r\n                    else if (pathContains(writePath, treeRoot)) {\r\n                        relativePath = newRelativePath(writePath, treeRoot);\r\n                        if (pathIsEmpty(relativePath)) {\r\n                            compoundWrite = compoundWriteAddWrites(compoundWrite, newEmptyPath(), write.children);\r\n                        }\r\n                        else {\r\n                            var child = safeGet(write.children, pathGetFront(relativePath));\r\n                            if (child) {\r\n                                // There exists a child in this node that matches the root path\r\n                                var deepNode = child.getChild(pathPopFront(relativePath));\r\n                                compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), deepNode);\r\n                            }\r\n                        }\r\n                    }\r\n                    else ;\r\n                }\r\n                else {\r\n                    throw assertionError('WriteRecord should have .snap or .children');\r\n                }\r\n            }\r\n        }\r\n        return compoundWrite;\r\n    };\r\n    return WriteTree;\r\n}());\r\n/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n */\r\nvar WriteTreeRef = /** @class */ (function () {\r\n    function WriteTreeRef(path, writeTree) {\r\n        this.treePath_ = path;\r\n        this.writeTree_ = writeTree;\r\n    }\r\n    /**\r\n     * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n     * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n     * can lead to a more expensive calculation.\r\n     *\r\n     * @param writeIdsToExclude Optional writes to exclude.\r\n     * @param includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n    };\r\n    /**\r\n     * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n     * mix of the given server data and write data.\r\n     *\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\r\n        return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\r\n    };\r\n    /**\r\n     * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n     * if anything, needs to be applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events should be raised\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n     *\r\n     *\r\n     */\r\n    WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\r\n        return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     */\r\n    WriteTreeRef.prototype.shadowingWrite = function (path) {\r\n        return this.writeTree_.shadowingWrite(pathChild(this.treePath_, path));\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window\r\n     */\r\n    WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\r\n        return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\r\n        return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\r\n    };\r\n    /**\r\n     * Return a WriteTreeRef for a child.\r\n     */\r\n    WriteTreeRef.prototype.child = function (childName) {\r\n        return new WriteTreeRef(pathChild(this.treePath_, childName), this.writeTree_);\r\n    };\r\n    return WriteTreeRef;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n */\r\nvar SyncTree = /** @class */ (function () {\r\n    /**\r\n     * @param listenProvider_ Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    function SyncTree(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         */\r\n        this.syncPointTree_ = new ImmutableTree(null);\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         */\r\n        this.pendingWriteTree_ = new WriteTree();\r\n        this.tagToQueryMap = new Map();\r\n        this.queryToTagMap = new Map();\r\n    }\r\n    /**\r\n     * Apply the data changes for a user-generated set() or transaction() call.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\r\n        // Record pending write.\r\n        this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\r\n        if (!visible) {\r\n            return [];\r\n        }\r\n        else {\r\n            return this.applyOperationToSyncPoints_(new Overwrite(newOperationSourceUser(), path, newData));\r\n        }\r\n    };\r\n    /**\r\n     * Apply the data from a user-generated update() call\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\r\n        // Record pending merge.\r\n        this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(newOperationSourceUser(), path, changeTree));\r\n    };\r\n    /**\r\n     * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n     *\r\n     * @param revert True if the given write failed and needs to be reverted\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.ackUserWrite = function (writeId, revert) {\r\n        if (revert === void 0) { revert = false; }\r\n        var write = this.pendingWriteTree_.getWrite(writeId);\r\n        var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\r\n        if (!needToReevaluate) {\r\n            return [];\r\n        }\r\n        else {\r\n            var affectedTree_1 = new ImmutableTree(null);\r\n            if (write.snap != null) {\r\n                // overwrite\r\n                affectedTree_1 = affectedTree_1.set(newEmptyPath(), true);\r\n            }\r\n            else {\r\n                each(write.children, function (pathString) {\r\n                    affectedTree_1 = affectedTree_1.set(new Path(pathString), true);\r\n                });\r\n            }\r\n            return this.applyOperationToSyncPoints_(new AckUserWrite(write.path, affectedTree_1, revert));\r\n        }\r\n    };\r\n    /**\r\n     * Apply new server data for the specified path..\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerOverwrite = function (path, newData) {\r\n        return this.applyOperationToSyncPoints_(new Overwrite(newOperationSourceServer(), path, newData));\r\n    };\r\n    /**\r\n     * Apply new server data to be merged in at the specified path.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(newOperationSourceServer(), path, changeTree));\r\n    };\r\n    /**\r\n     * Apply a listen complete for a query\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyListenComplete = function (path) {\r\n        return this.applyOperationToSyncPoints_(new ListenComplete(newOperationSourceServer(), path));\r\n    };\r\n    /**\r\n     * Apply new server data for the specified tagged query.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey != null) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = newRelativePath(queryPath, path);\r\n            var op = new Overwrite(newOperationSourceServerTaggedQuery(queryId), relativePath, snap);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // Query must have been removed already\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply server data to be merged in for the specified tagged query.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = newRelativePath(queryPath, path);\r\n            var changeTree = ImmutableTree.fromObject(changedChildren);\r\n            var op = new Merge(newOperationSourceServerTaggedQuery(queryId), relativePath, changeTree);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply a listen complete for a tagged query\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = newRelativePath(queryPath, path);\r\n            var op = new ListenComplete(newOperationSourceServerTaggedQuery(queryId), relativePath);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\r\n        var path = query.path;\r\n        var serverCache = null;\r\n        var foundAncestorDefaultView = false;\r\n        // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n        // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n        this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n            var relativePath = newRelativePath(pathToSyncPoint, path);\r\n            serverCache = serverCache || sp.getCompleteServerCache(relativePath);\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || sp.hasCompleteView();\r\n        });\r\n        var syncPoint = this.syncPointTree_.get(path);\r\n        if (!syncPoint) {\r\n            syncPoint = new SyncPoint();\r\n            this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\r\n        }\r\n        else {\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || syncPoint.hasCompleteView();\r\n            serverCache =\r\n                serverCache || syncPoint.getCompleteServerCache(newEmptyPath());\r\n        }\r\n        var serverCacheComplete;\r\n        if (serverCache != null) {\r\n            serverCacheComplete = true;\r\n        }\r\n        else {\r\n            serverCacheComplete = false;\r\n            serverCache = ChildrenNode.EMPTY_NODE;\r\n            var subtree = this.syncPointTree_.subtree(path);\r\n            subtree.foreachChild(function (childName, childSyncPoint) {\r\n                var completeCache = childSyncPoint.getCompleteServerCache(newEmptyPath());\r\n                if (completeCache) {\r\n                    serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n                }\r\n            });\r\n        }\r\n        var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\r\n        if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\r\n            // We need to track a tag for this query\r\n            var queryKey = SyncTree.makeQueryKey_(query);\r\n            assert(!this.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\r\n            var tag = SyncTree.getNextQueryTag_();\r\n            this.queryToTagMap.set(queryKey, tag);\r\n            this.tagToQueryMap.set(tag, queryKey);\r\n        }\r\n        var writesCache = this.pendingWriteTree_.childWrites(path);\r\n        var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n        if (!viewAlreadyExists && !foundAncestorDefaultView) {\r\n            var view = syncPoint.viewForQuery(query);\r\n            events = events.concat(this.setupListener_(query, view));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Remove event callback(s).\r\n     *\r\n     * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n     *\r\n     * @param eventRegistration If null, all callbacks are removed.\r\n     * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return Cancel events, if cancelError was provided.\r\n     */\r\n    SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var _this = this;\r\n        // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n        var path = query.path;\r\n        var maybeSyncPoint = this.syncPointTree_.get(path);\r\n        var cancelEvents = [];\r\n        // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n        // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n        // not loadsAllData().\r\n        if (maybeSyncPoint &&\r\n            (query.queryIdentifier() === 'default' ||\r\n                maybeSyncPoint.viewExistsForQuery(query))) {\r\n            var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\r\n            if (maybeSyncPoint.isEmpty()) {\r\n                this.syncPointTree_ = this.syncPointTree_.remove(path);\r\n            }\r\n            var removed = removedAndEvents.removed;\r\n            cancelEvents = removedAndEvents.events;\r\n            // We may have just removed one of many listeners and can short-circuit this whole process\r\n            // We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n            // properly set up.\r\n            //\r\n            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n            // queryId === 'default'\r\n            var removingDefault = -1 !==\r\n                removed.findIndex(function (query) {\r\n                    return query.getQueryParams().loadsAllData();\r\n                });\r\n            var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\r\n                return parentSyncPoint.hasCompleteView();\r\n            });\r\n            if (removingDefault && !covered) {\r\n                var subtree = this.syncPointTree_.subtree(path);\r\n                // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n                // removal\r\n                if (!subtree.isEmpty()) {\r\n                    // We need to fold over our subtree and collect the listeners to send\r\n                    var newViews = this.collectDistinctViewsForSubTree_(subtree);\r\n                    // Ok, we've collected all the listens we need. Set them up.\r\n                    for (var i = 0; i < newViews.length; ++i) {\r\n                        var view = newViews[i], newQuery = view.getQuery();\r\n                        var listener = this.createListenerForView_(view);\r\n                        this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\r\n                    }\r\n                }\r\n            }\r\n            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n            // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n            if (!covered && removed.length > 0 && !cancelError) {\r\n                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n                // default. Otherwise, we need to iterate through and cancel each individual query\r\n                if (removingDefault) {\r\n                    // We don't tag default listeners\r\n                    var defaultTag = null;\r\n                    this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\r\n                }\r\n                else {\r\n                    removed.forEach(function (queryToRemove) {\r\n                        var tagToRemove = _this.queryToTagMap.get(SyncTree.makeQueryKey_(queryToRemove));\r\n                        _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\r\n                    });\r\n                }\r\n            }\r\n            // Now, clear all of the tags we're tracking for the removed listens\r\n            this.removeTags_(removed);\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n     * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n     * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n     *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n     *\r\n     * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n     *\r\n     * @param path The path to the data we want\r\n     * @param writeIdsToExclude A specific set to be excluded\r\n     */\r\n    SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\r\n        var includeHiddenSets = true;\r\n        var writeTree = this.pendingWriteTree_;\r\n        var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\r\n            var relativePath = newRelativePath(pathSoFar, path);\r\n            var serverCache = syncPoint.getCompleteServerCache(relativePath);\r\n            if (serverCache) {\r\n                return serverCache;\r\n            }\r\n        });\r\n        return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n    };\r\n    SyncTree.prototype.getServerValue = function (query) {\r\n        var path = query.path;\r\n        var serverCache = null;\r\n        // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n        // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n        this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n            var relativePath = newRelativePath(pathToSyncPoint, path);\r\n            serverCache = serverCache || sp.getCompleteServerCache(relativePath);\r\n        });\r\n        var syncPoint = this.syncPointTree_.get(path);\r\n        if (!syncPoint) {\r\n            syncPoint = new SyncPoint();\r\n            this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\r\n        }\r\n        else {\r\n            serverCache =\r\n                serverCache || syncPoint.getCompleteServerCache(newEmptyPath());\r\n        }\r\n        var serverCacheComplete = serverCache != null;\r\n        var serverCacheNode = serverCacheComplete\r\n            ? new CacheNode(serverCache, true, false)\r\n            : null;\r\n        var writesCache = this.pendingWriteTree_.childWrites(query.path);\r\n        var view = syncPoint.getView(query, writesCache, serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE, serverCacheComplete);\r\n        return view.getCompleteNode();\r\n    };\r\n    /**\r\n     * This collapses multiple unfiltered views into a single view, since we only need a single\r\n     * listener for them.\r\n     */\r\n    SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\r\n        return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n            if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\r\n                var completeView = maybeChildSyncPoint.getCompleteView();\r\n                return [completeView];\r\n            }\r\n            else {\r\n                // No complete view here, flatten any deeper listens into an array\r\n                var views_1 = [];\r\n                if (maybeChildSyncPoint) {\r\n                    views_1 = maybeChildSyncPoint.getQueryViews();\r\n                }\r\n                each(childMap, function (_key, childViews) {\r\n                    views_1 = views_1.concat(childViews);\r\n                });\r\n                return views_1;\r\n            }\r\n        });\r\n    };\r\n    SyncTree.prototype.removeTags_ = function (queries) {\r\n        for (var j = 0; j < queries.length; ++j) {\r\n            var removedQuery = queries[j];\r\n            if (!removedQuery.getQueryParams().loadsAllData()) {\r\n                // We should have a tag for this\r\n                var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\r\n                var removedQueryTag = this.queryToTagMap.get(removedQueryKey);\r\n                this.queryToTagMap.delete(removedQueryKey);\r\n                this.tagToQueryMap.delete(removedQueryTag);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Normalizes a query to a query we send the server for listening\r\n     *\r\n     * @return The normalized query\r\n     */\r\n    SyncTree.queryForListening_ = function (query) {\r\n        if (query.getQueryParams().loadsAllData() &&\r\n            !query.getQueryParams().isDefault()) {\r\n            // We treat queries that load all data as default queries\r\n            // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n            // from Query\r\n            return query.getRef();\r\n        }\r\n        else {\r\n            return query;\r\n        }\r\n    };\r\n    /**\r\n     * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n     *\r\n     * @return This method can return events to support synchronous data sources\r\n     */\r\n    SyncTree.prototype.setupListener_ = function (query, view) {\r\n        var path = query.path;\r\n        var tag = this.tagForQuery_(query);\r\n        var listener = this.createListenerForView_(view);\r\n        var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n        var subtree = this.syncPointTree_.subtree(path);\r\n        // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n        // may need to shadow other listens as well.\r\n        if (tag) {\r\n            assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\r\n        }\r\n        else {\r\n            // Shadow everything at or below this location, this is a default listener.\r\n            var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n                if (!pathIsEmpty(relativePath) &&\r\n                    maybeChildSyncPoint &&\r\n                    maybeChildSyncPoint.hasCompleteView()) {\r\n                    return [maybeChildSyncPoint.getCompleteView().getQuery()];\r\n                }\r\n                else {\r\n                    // No default listener here, flatten any deeper queries into an array\r\n                    var queries_1 = [];\r\n                    if (maybeChildSyncPoint) {\r\n                        queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) { return view.getQuery(); }));\r\n                    }\r\n                    each(childMap, function (_key, childQueries) {\r\n                        queries_1 = queries_1.concat(childQueries);\r\n                    });\r\n                    return queries_1;\r\n                }\r\n            });\r\n            for (var i = 0; i < queriesToStop.length; ++i) {\r\n                var queryToStop = queriesToStop[i];\r\n                this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\r\n            }\r\n        }\r\n        return events;\r\n    };\r\n    SyncTree.prototype.createListenerForView_ = function (view) {\r\n        var _this = this;\r\n        var query = view.getQuery();\r\n        var tag = this.tagForQuery_(query);\r\n        return {\r\n            hashFn: function () {\r\n                var cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\r\n                return cache.hash();\r\n            },\r\n            onComplete: function (status) {\r\n                if (status === 'ok') {\r\n                    if (tag) {\r\n                        return _this.applyTaggedListenComplete(query.path, tag);\r\n                    }\r\n                    else {\r\n                        return _this.applyListenComplete(query.path);\r\n                    }\r\n                }\r\n                else {\r\n                    // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                    // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                    var error = errorForServerCode(status, query);\r\n                    return _this.removeEventRegistration(query, \r\n                    /*eventRegistration*/ null, error);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n     */\r\n    SyncTree.makeQueryKey_ = function (query) {\r\n        return query.path.toString() + '$' + query.queryIdentifier();\r\n    };\r\n    /**\r\n     * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n     */\r\n    SyncTree.parseQueryKey_ = function (queryKey) {\r\n        var splitIndex = queryKey.indexOf('$');\r\n        assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n        return {\r\n            queryId: queryKey.substr(splitIndex + 1),\r\n            path: new Path(queryKey.substr(0, splitIndex))\r\n        };\r\n    };\r\n    /**\r\n     * Return the query associated with the given tag, if we have one\r\n     */\r\n    SyncTree.prototype.queryKeyForTag_ = function (tag) {\r\n        return this.tagToQueryMap.get(tag);\r\n    };\r\n    /**\r\n     * Return the tag associated with the given query.\r\n     */\r\n    SyncTree.prototype.tagForQuery_ = function (query) {\r\n        var queryKey = SyncTree.makeQueryKey_(query);\r\n        return this.queryToTagMap.get(queryKey);\r\n    };\r\n    /**\r\n     * Static accessor for query tags.\r\n     */\r\n    SyncTree.getNextQueryTag_ = function () {\r\n        return SyncTree.nextQueryTag_++;\r\n    };\r\n    /**\r\n     * A helper method to apply tagged operations\r\n     */\r\n    SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\r\n        var syncPoint = this.syncPointTree_.get(queryPath);\r\n        assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n        var writesCache = this.pendingWriteTree_.childWrites(queryPath);\r\n        return syncPoint.applyOperation(operation, writesCache, \r\n        /*serverCache=*/ null);\r\n    };\r\n    /**\r\n     * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n     *\r\n     * NOTES:\r\n     * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n     *\r\n     * - We call applyOperation() on each SyncPoint passing three things:\r\n     *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n     *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n     *   3. A snapshot Node with cached server data, if we have it.\r\n     *\r\n     * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n     */\r\n    SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\r\n        return this.applyOperationHelper_(operation, this.syncPointTree_, \r\n        /*serverCache=*/ null, this.pendingWriteTree_.childWrites(newEmptyPath()));\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     */\r\n    SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        if (pathIsEmpty(operation.path)) {\r\n            return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n        }\r\n        else {\r\n            var syncPoint = syncPointTree.get(newEmptyPath());\r\n            // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n            if (serverCache == null && syncPoint != null) {\r\n                serverCache = syncPoint.getCompleteServerCache(newEmptyPath());\r\n            }\r\n            var events = [];\r\n            var childName = pathGetFront(operation.path);\r\n            var childOperation = operation.operationForChild(childName);\r\n            var childTree = syncPointTree.children.get(childName);\r\n            if (childTree && childOperation) {\r\n                var childServerCache = serverCache\r\n                    ? serverCache.getImmediateChild(childName)\r\n                    : null;\r\n                var childWritesCache = writesCache.child(childName);\r\n                events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n            if (syncPoint) {\r\n                events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     */\r\n    SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        var _this = this;\r\n        var syncPoint = syncPointTree.get(newEmptyPath());\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPoint.getCompleteServerCache(newEmptyPath());\r\n        }\r\n        var events = [];\r\n        syncPointTree.children.inorderTraversal(function (childName, childTree) {\r\n            var childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            var childWritesCache = writesCache.child(childName);\r\n            var childOperation = operation.operationForChild(childName);\r\n            if (childOperation) {\r\n                events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n        });\r\n        if (syncPoint) {\r\n            events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Static tracker for next query tag.\r\n     */\r\n    SyncTree.nextQueryTag_ = 1;\r\n    return SyncTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n */\r\nvar SnapshotHolder = /** @class */ (function () {\r\n    function SnapshotHolder() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    SnapshotHolder.prototype.getNode = function (path) {\r\n        return this.rootNode_.getChild(path);\r\n    };\r\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    };\r\n    return SnapshotHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n */\r\nvar StatsCollection = /** @class */ (function () {\r\n    function StatsCollection() {\r\n        this.counters_ = {};\r\n    }\r\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\r\n        if (amount === void 0) { amount = 1; }\r\n        if (!contains(this.counters_, name)) {\r\n            this.counters_[name] = 0;\r\n        }\r\n        this.counters_[name] += amount;\r\n    };\r\n    StatsCollection.prototype.get = function () {\r\n        return deepCopy(this.counters_);\r\n    };\r\n    return StatsCollection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StatsManager = /** @class */ (function () {\r\n    function StatsManager() {\r\n    }\r\n    StatsManager.getCollection = function (repoInfo) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.collections_[hashString]) {\r\n            this.collections_[hashString] = new StatsCollection();\r\n        }\r\n        return this.collections_[hashString];\r\n    };\r\n    StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.reporters_[hashString]) {\r\n            this.reporters_[hashString] = creatorFunction();\r\n        }\r\n        return this.reporters_[hashString];\r\n    };\r\n    StatsManager.collections_ = {};\r\n    StatsManager.reporters_ = {};\r\n    return StatsManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n */\r\nvar StatsListener = /** @class */ (function () {\r\n    function StatsListener(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    StatsListener.prototype.get = function () {\r\n        var newStats = this.collection_.get();\r\n        var delta = __assign({}, newStats);\r\n        if (this.last_) {\r\n            each(this.last_, function (stat, value) {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    };\r\n    return StatsListener;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\r\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\nvar StatsReporter = /** @class */ (function () {\r\n    /**\r\n     * @param collection\r\n     * @param server_\r\n     */\r\n    function StatsReporter(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        var timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    StatsReporter.prototype.includeStat = function (stat) {\r\n        this.statsToReport_[stat] = true;\r\n    };\r\n    StatsReporter.prototype.reportStats_ = function () {\r\n        var _this = this;\r\n        var stats = this.statsListener_.get();\r\n        var reportedStats = {};\r\n        var haveStatsToReport = false;\r\n        each(stats, function (stat, value) {\r\n            if (value > 0 && contains(_this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    };\r\n    return StatsReporter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n */\r\nvar EventQueue = /** @class */ (function () {\r\n    function EventQueue() {\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n    return EventQueue;\r\n}());\r\n/**\r\n * @param eventDataList The new events to queue.\r\n */\r\nfunction eventQueueQueueEvents(eventQueue, eventDataList) {\r\n    // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n    var currList = null;\r\n    for (var i = 0; i < eventDataList.length; i++) {\r\n        var data = eventDataList[i];\r\n        var path = data.getPath();\r\n        if (currList !== null && !pathEquals(path, currList.path)) {\r\n            eventQueue.eventLists_.push(currList);\r\n            currList = null;\r\n        }\r\n        if (currList === null) {\r\n            currList = { events: [], path: path };\r\n        }\r\n        currList.events.push(data);\r\n    }\r\n    if (currList) {\r\n        eventQueue.eventLists_.push(currList);\r\n    }\r\n}\r\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n * for the specified path.\r\n *\r\n * It is assumed that the new events are all for the specified path.\r\n *\r\n * @param path The path to raise events for.\r\n * @param eventDataList The new events to raise.\r\n */\r\nfunction eventQueueRaiseEventsAtPath(eventQueue, path, eventDataList) {\r\n    eventQueueQueueEvents(eventQueue, eventDataList);\r\n    eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, function (eventPath) {\r\n        return pathEquals(eventPath, path);\r\n    });\r\n}\r\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n * locations related to the specified change path (i.e. all ancestors and descendants).\r\n *\r\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n *\r\n * @param changedPath The path to raise events for.\r\n * @param eventDataList The events to raise\r\n */\r\nfunction eventQueueRaiseEventsForChangedPath(eventQueue, changedPath, eventDataList) {\r\n    eventQueueQueueEvents(eventQueue, eventDataList);\r\n    eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, function (eventPath) {\r\n        return pathContains(eventPath, changedPath) ||\r\n            pathContains(changedPath, eventPath);\r\n    });\r\n}\r\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, predicate) {\r\n    eventQueue.recursionDepth_++;\r\n    var sentAll = true;\r\n    for (var i = 0; i < eventQueue.eventLists_.length; i++) {\r\n        var eventList = eventQueue.eventLists_[i];\r\n        if (eventList) {\r\n            var eventPath = eventList.path;\r\n            if (predicate(eventPath)) {\r\n                eventListRaise(eventQueue.eventLists_[i]);\r\n                eventQueue.eventLists_[i] = null;\r\n            }\r\n            else {\r\n                sentAll = false;\r\n            }\r\n        }\r\n    }\r\n    if (sentAll) {\r\n        eventQueue.eventLists_ = [];\r\n    }\r\n    eventQueue.recursionDepth_--;\r\n}\r\n/**\r\n * Iterates through the list and raises each event\r\n */\r\nfunction eventListRaise(eventList) {\r\n    for (var i = 0; i < eventList.events.length; i++) {\r\n        var eventData = eventList.events[i];\r\n        if (eventData !== null) {\r\n            eventList.events[i] = null;\r\n            var eventFn = eventData.getEventRunner();\r\n            if (logger) {\r\n                log('event: ' + eventData.toString());\r\n            }\r\n            exceptionGuard(eventFn);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nvar EventEmitter = /** @class */ (function () {\r\n    function EventEmitter(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     */\r\n    EventEmitter.prototype.trigger = function (eventType) {\r\n        var varArgs = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            varArgs[_i - 1] = arguments[_i];\r\n        }\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            var listeners = __spread(this.listeners_[eventType]);\r\n            for (var i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, varArgs);\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.on = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback: callback, context: context });\r\n        var eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    };\r\n    EventEmitter.prototype.off = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        var listeners = this.listeners_[eventType] || [];\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\r\n        assert(this.allowedEvents_.find(function (et) {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    };\r\n    return EventEmitter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar VisibilityMonitor = /** @class */ (function (_super) {\r\n    __extends(VisibilityMonitor, _super);\r\n    function VisibilityMonitor() {\r\n        var _this = _super.call(this, ['visible']) || this;\r\n        var hidden;\r\n        var visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        _this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, function () {\r\n                var visible = !document[hidden];\r\n                if (visible !== _this.visible_) {\r\n                    _this.visible_ = visible;\r\n                    _this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    VisibilityMonitor.getInstance = function () {\r\n        return new VisibilityMonitor();\r\n    };\r\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\r\n        assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    };\r\n    return VisibilityMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n */\r\nvar OnlineMonitor = /** @class */ (function (_super) {\r\n    __extends(OnlineMonitor, _super);\r\n    function OnlineMonitor() {\r\n        var _this = _super.call(this, ['online']) || this;\r\n        _this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !isMobileCordova()) {\r\n            window.addEventListener('online', function () {\r\n                if (!_this.online_) {\r\n                    _this.online_ = true;\r\n                    _this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', function () {\r\n                if (_this.online_) {\r\n                    _this.online_ = false;\r\n                    _this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    OnlineMonitor.getInstance = function () {\r\n        return new OnlineMonitor();\r\n    };\r\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\r\n        assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    };\r\n    OnlineMonitor.prototype.currentlyOnline = function () {\r\n        return this.online_;\r\n    };\r\n    return OnlineMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n */\r\nvar PacketReceiver = /** @class */ (function () {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    function PacketReceiver(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    };\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     */\r\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\r\n        var _this = this;\r\n        this.pendingResponses[requestNum] = data;\r\n        var _loop_1 = function () {\r\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\r\n            delete this_1.pendingResponses[this_1.currentResponseNum];\r\n            var _loop_2 = function (i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(function () {\r\n                        _this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            };\r\n            for (var i = 0; i < toProcess.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\r\n                if (this_1.onClose) {\r\n                    this_1.onClose();\r\n                    this_1.onClose = null;\r\n                }\r\n                return \"break\";\r\n            }\r\n            this_1.currentResponseNum++;\r\n        };\r\n        var this_1 = this;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            var state_1 = _loop_1();\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    return PacketReceiver;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nvar MAX_URL_DATA_SIZE = 1870;\r\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n */\r\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n */\r\nvar LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n */\r\nvar BrowserPollConnection = /** @class */ (function () {\r\n    /**\r\n     * @param connId An identifier for this connection, used for logging\r\n     * @param repoInfo The info for the endpoint to send data to.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n     *                                         transport session\r\n     * @param lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n     *                                     connection previously\r\n     */\r\n    function BrowserPollConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.applicationId = applicationId;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.urlFn = function (params) {\r\n            return repoInfo.connectionURL(LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     * @param onMessage Callback when messages arrive\r\n     * @param onDisconnect Callback with connection lost.\r\n     */\r\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(function () {\r\n            _this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            _this.onClosed_();\r\n            _this.connectTimeoutTimer_ = null;\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(function () {\r\n            if (_this.isClosed_) {\r\n                return;\r\n            }\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = __read(args, 5), command = _a[0], arg1 = _a[1], arg2 = _a[2], arg3 = _a[3], arg4 = _a[4];\r\n                _this.incrementIncomingBytes_(args);\r\n                if (!_this.scriptTagHolder) {\r\n                    return; // we closed the connection.\r\n                }\r\n                if (_this.connectTimeoutTimer_) {\r\n                    clearTimeout(_this.connectTimeoutTimer_);\r\n                    _this.connectTimeoutTimer_ = null;\r\n                }\r\n                _this.everConnected_ = true;\r\n                if (command === FIREBASE_LONGPOLL_START_PARAM) {\r\n                    _this.id = arg1;\r\n                    _this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        _this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\r\n                            _this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        _this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = __read(args, 2), pN = _a[0], data = _a[1];\r\n                _this.incrementIncomingBytes_(args);\r\n                _this.myPacketOrderer.handleResponse(pN, data);\r\n            }, function () {\r\n                _this.onClosed_();\r\n            }, _this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier) {\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            }\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (_this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\r\n            }\r\n            if (_this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\r\n            }\r\n            if (_this.applicationId) {\r\n                urlParams[APPLICATION_ID_PARAM] = _this.applicationId;\r\n            }\r\n            if (typeof location !== 'undefined' &&\r\n                location.hostname &&\r\n                FORGE_DOMAIN_RE.test(location.hostname)) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            var connectURL = _this.urlFn(urlParams);\r\n            _this.log_('Connecting via long-poll to ' + connectURL);\r\n            _this.scriptTagHolder.addTag(connectURL, function () {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    BrowserPollConnection.prototype.start = function () {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    };\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceAllow = function () {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    };\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceDisallow = function () {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    };\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    BrowserPollConnection.isAvailable = function () {\r\n        if (isNodeSdk()) {\r\n            return false;\r\n        }\r\n        else if (BrowserPollConnection.forceAllow_) {\r\n            return true;\r\n        }\r\n        else {\r\n            // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n            // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n            return (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp());\r\n        }\r\n    };\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     */\r\n    BrowserPollConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    };\r\n    /**\r\n     * Triggered when this transport is closed\r\n     */\r\n    BrowserPollConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    BrowserPollConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param data The JSON data to transmit.\r\n     */\r\n    BrowserPollConnection.prototype.send = function (data) {\r\n        var dataStr = stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        var base64data = base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    };\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     */\r\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\r\n        if (isNodeSdk()) {\r\n            return;\r\n        }\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        var urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    };\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     */\r\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        var bytesReceived = stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    };\r\n    return BrowserPollConnection;\r\n}());\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n *********************************************************************************************/\r\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        this.outstandingRequests = new Set();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            var script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                var currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            var iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     */\r\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\r\n        var iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                var a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                var domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (iframe.document) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    };\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.close = function () {\r\n        var _this = this;\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\r\n            this.myIFrame.doc.body.innerHTML = '';\r\n            setTimeout(function () {\r\n                if (_this.myIFrame !== null) {\r\n                    document.body.removeChild(_this.myIFrame);\r\n                    _this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        // Protect from being called recursively.\r\n        var onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    };\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param id - The ID of this connection\r\n     * @param pw - The password for this connection\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    };\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            var theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            var curDataString = '';\r\n            var i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                var nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length +\r\n                    SEG_HEADER_SIZE +\r\n                    curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    var theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    };\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param url - The URL of the script tag.\r\n     * @param serial - The serial number of the request.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\r\n        var _this = this;\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial);\r\n        var doNewRequest = function () {\r\n            _this.outstandingRequests.delete(serial);\r\n            _this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        var readyStateCB = function () {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    };\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param url - The URL for the script tag source.\r\n     * @param loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\r\n        var _this = this;\r\n        if (isNodeSdk()) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!_this.sendNewPolls) {\r\n                        return;\r\n                    }\r\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\r\n                    newScript_1.type = 'text/javascript';\r\n                    newScript_1.async = true;\r\n                    newScript_1.src = url;\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\r\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                        var rstate = newScript_1.readyState;\r\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\r\n                            if (newScript_1.parentNode) {\r\n                                newScript_1.parentNode.removeChild(newScript_1);\r\n                            }\r\n                            loadCB();\r\n                        }\r\n                    };\r\n                    newScript_1.onerror = function () {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        _this.sendNewPolls = false;\r\n                        _this.close();\r\n                    };\r\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    };\r\n    return FirebaseIFrameScriptHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** The semver (www.semver.org) version of the SDK. */\r\nvar SDK_VERSION = '';\r\n// SDK_VERSION should be set before any database instance is created\r\nfunction setSDKVersion(version) {\r\n    SDK_VERSION = version;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nvar WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n */\r\nvar WebSocketConnection = /** @class */ (function () {\r\n    /**\r\n     * @param connId identifier for this transport\r\n     * @param repoInfo The info for the websocket endpoint.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param lastSessionId Optional lastSessionId if there was a previous connection\r\n     */\r\n    function WebSocketConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.applicationId = applicationId;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\r\n        this.nodeAdmin = repoInfo.nodeAdmin;\r\n    }\r\n    /**\r\n     * @param repoInfo The info for the websocket endpoint.\r\n     * @param transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param lastSessionId Optional lastSessionId if there was a previous connection\r\n     * @return connection url\r\n     */\r\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\r\n        var urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.hostname &&\r\n            FORGE_DOMAIN_RE.test(location.hostname)) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        return repoInfo.connectionURL(WEBSOCKET, urlParams);\r\n    };\r\n    /**\r\n     * @param onMessage Callback when messages arrive\r\n     * @param onDisconnect Callback with connection lost.\r\n     */\r\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            if (isNodeSdk()) {\r\n                var device = this.nodeAdmin ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                var options = {\r\n                    headers: {\r\n                        'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + SDK_VERSION + \"/\" + process.platform + \"/\" + device,\r\n                        'X-Firebase-GMPID': this.applicationId || ''\r\n                    }\r\n                };\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                var env = process['env'];\r\n                var proxy = this.connURL.indexOf('wss://') === 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n            else {\r\n                var options = {\r\n                    headers: {\r\n                        'X-Firebase-GMPID': this.applicationId || ''\r\n                    }\r\n                };\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                this.log_(error);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = function () {\r\n            _this.log_('Websocket connected.');\r\n            _this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = function () {\r\n            _this.log_('Websocket connection was disconnected.');\r\n            _this.mySock = null;\r\n            _this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = function (m) {\r\n            _this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = function (e) {\r\n            _this.log_('WebSocket error.  Closing connection.');\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                _this.log_(error);\r\n            }\r\n            _this.onClosed_();\r\n        };\r\n    };\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    WebSocketConnection.prototype.start = function () { };\r\n    WebSocketConnection.forceDisallow = function () {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    };\r\n    WebSocketConnection.isAvailable = function () {\r\n        var isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    };\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     */\r\n    WebSocketConnection.previouslyFailed = function () {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    };\r\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    };\r\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length === this.totalFrames) {\r\n            var fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            var jsonMess = jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    };\r\n    /**\r\n     * @param frameCount The number of frames we are expecting from the server\r\n     */\r\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    };\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @return Any remaining data to be process, or null if there is none\r\n     */\r\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\r\n        assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            var frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    };\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess The frame data\r\n     */\r\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\r\n        if (this.mySock === null) {\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        }\r\n        var data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            var remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Send a message to the server\r\n     * @param data The JSON object to transmit\r\n     */\r\n    WebSocketConnection.prototype.send = function (data) {\r\n        this.resetKeepAlive();\r\n        var dataStr = stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    WebSocketConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    WebSocketConnection.prototype.resetKeepAlive = function () {\r\n        var _this = this;\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(function () {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (_this.mySock) {\r\n                _this.sendString_('0');\r\n            }\r\n            _this.resetKeepAlive();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    };\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param str String to send.\r\n     */\r\n    WebSocketConnection.prototype.sendString_ = function (str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    };\r\n    /**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     */\r\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n    /**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     */\r\n    WebSocketConnection.healthyTimeout = 30000;\r\n    return WebSocketConnection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n */\r\nvar TransportManager = /** @class */ (function () {\r\n    /**\r\n     * @param repoInfo Metadata around the namespace we're connecting to\r\n     */\r\n    function TransportManager(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\r\n        get: function () {\r\n            return [BrowserPollConnection, WebSocketConnection];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\r\n        var e_1, _a;\r\n        var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable) {\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            }\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            var transports = (this.transports_ = []);\r\n            try {\r\n                for (var _b = __values(TransportManager.ALL_TRANSPORTS), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var transport = _c.value;\r\n                    if (transport && transport['isAvailable']()) {\r\n                        transports.push(transport);\r\n                    }\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return The constructor for the initial transport to use\r\n     */\r\n    TransportManager.prototype.initialTransport = function () {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    };\r\n    /**\r\n     * @return The constructor for the next transport, or null\r\n     */\r\n    TransportManager.prototype.upgradeTransport = function () {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    return TransportManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nvar UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nvar MESSAGE_TYPE = 't';\r\nvar MESSAGE_DATA = 'd';\r\nvar CONTROL_SHUTDOWN = 's';\r\nvar CONTROL_RESET = 'r';\r\nvar CONTROL_ERROR = 'e';\r\nvar CONTROL_PONG = 'o';\r\nvar SWITCH_ACK = 'a';\r\nvar END_TRANSMISSION = 'n';\r\nvar PING = 'p';\r\nvar SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    /**\r\n     * @param id - an id for this connection\r\n     * @param repoInfo_ - the info for the endpoint to connect to\r\n     * @param applicationId_ - the Firebase App ID for this project\r\n     * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    function Connection(id, repoInfo_, applicationId_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.applicationId_ = applicationId_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     */\r\n    Connection.prototype.start_ = function () {\r\n        var _this = this;\r\n        var conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, undefined, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessageReceived = this.connReceiver_(this.conn_);\r\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(function () {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        var healthyTimeoutMS = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeoutMS > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(function () {\r\n                _this.healthyTimeout_ = null;\r\n                if (!_this.isHealthy_) {\r\n                    if (_this.conn_ &&\r\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            _this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        _this.isHealthy_ = true;\r\n                        _this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (_this.conn_ &&\r\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            _this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        _this.log_('Closing unhealthy connection after timeout.');\r\n                        _this.close();\r\n                    }\r\n                }\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            }, Math.floor(healthyTimeoutMS));\r\n        }\r\n    };\r\n    Connection.prototype.nextTransportId_ = function () {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    };\r\n    Connection.prototype.disconnReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (everConnected) {\r\n            if (conn === _this.conn_) {\r\n                _this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === _this.secondaryConn_) {\r\n                _this.log_('Secondary connection lost.');\r\n                _this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                _this.log_('closing an old connection');\r\n            }\r\n        };\r\n    };\r\n    Connection.prototype.connReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (message) {\r\n            if (_this.state_ !== 2 /* DISCONNECTED */) {\r\n                if (conn === _this.rx_) {\r\n                    _this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === _this.secondaryConn_) {\r\n                    _this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    _this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * @param dataMsg An arbitrary data message to be sent to the server\r\n     */\r\n    Connection.prototype.sendRequest = function (dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        var msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    };\r\n    Connection.prototype.tryCleanupConnection = function () {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            var cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    };\r\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.proceedWithUpgrade_ = function () {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    };\r\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    };\r\n    Connection.prototype.onDataMessage_ = function (message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    };\r\n    Connection.prototype.onPrimaryResponse_ = function () {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onControl_ = function (controlData) {\r\n        var cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            var payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                this.onHandshake_(payload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param handshake The handshake data returned from the server\r\n     */\r\n    Connection.prototype.onHandshake_ = function (handshake) {\r\n        var timestamp = handshake.ts;\r\n        var version = handshake.v;\r\n        var host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.updateHost(host);\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ === 0 /* CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    };\r\n    Connection.prototype.tryStartUpgrade_ = function () {\r\n        var conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    };\r\n    Connection.prototype.startUpgrade_ = function (conn) {\r\n        var _this = this;\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessage = this.connReceiver_(this.secondaryConn_);\r\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(function () {\r\n            if (_this.secondaryConn_) {\r\n                _this.log_('Timed out trying to upgrade.');\r\n                _this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    };\r\n    Connection.prototype.onReset_ = function (host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.updateHost(host);\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    };\r\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\r\n        var _this = this;\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(function () {\r\n                _this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    };\r\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\r\n        var conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    };\r\n    /**\r\n     * @param everConnected Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     */\r\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    };\r\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    };\r\n    Connection.prototype.sendData_ = function (data) {\r\n        if (this.state_ !== 1 /* CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    Connection.prototype.close = function () {\r\n        if (this.state_ !== 2 /* DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.closeConnections_ = function () {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    };\r\n    return Connection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nvar ServerActions = /** @class */ (function () {\r\n    function ServerActions() {\r\n    }\r\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\r\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param token The authentication token\r\n     */\r\n    ServerActions.prototype.refreshAuthToken = function (token) { };\r\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\r\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\r\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\r\n    ServerActions.prototype.reportStats = function (stats) { };\r\n    return ServerActions;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RECONNECT_MIN_DELAY = 1000;\r\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nvar GET_CONNECT_TIMEOUT = 3 * 1000;\r\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nvar PersistentConnection = /** @class */ (function (_super) {\r\n    __extends(PersistentConnection, _super);\r\n    /**\r\n     * @param repoInfo_ Data about the namespace we are connecting to\r\n     * @param applicationId_ The Firebase App ID for this project\r\n     * @param onDataUpdate_ A callback for new data from the server\r\n     */\r\n    function PersistentConnection(repoInfo_, applicationId_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.applicationId_ = applicationId_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.onConnectStatus_ = onConnectStatus_;\r\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        _this.log_ = logWrapper('p:' + _this.id + ':');\r\n        _this.interruptReasons_ = {};\r\n        /** Map<path, Map<queryId, ListenSpec>> */\r\n        _this.listens = new Map();\r\n        _this.outstandingPuts_ = [];\r\n        _this.outstandingGets_ = [];\r\n        _this.outstandingPutCount_ = 0;\r\n        _this.outstandingGetCount_ = 0;\r\n        _this.onDisconnectRequestQueue_ = [];\r\n        _this.connected_ = false;\r\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        _this.securityDebugCallback_ = null;\r\n        _this.lastSessionId = null;\r\n        _this.establishConnectionTimer_ = null;\r\n        _this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        _this.requestCBHash_ = {};\r\n        _this.requestNumber_ = 0;\r\n        _this.realtime_ = null;\r\n        _this.authToken_ = null;\r\n        _this.forceTokenRefresh_ = false;\r\n        _this.invalidAuthTokenCount_ = 0;\r\n        _this.firstConnection_ = true;\r\n        _this.lastConnectionAttemptTime_ = null;\r\n        _this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        _this.scheduleConnect_(0);\r\n        VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\r\n        }\r\n        return _this;\r\n    }\r\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\r\n        var curReqNum = ++this.requestNumber_;\r\n        var msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(stringify(msg));\r\n        assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    };\r\n    PersistentConnection.prototype.get = function (query) {\r\n        var _this = this;\r\n        var deferred = new Deferred();\r\n        var request = {\r\n            p: query.path.toString(),\r\n            q: query.queryObject()\r\n        };\r\n        var outstandingGet = {\r\n            action: 'g',\r\n            request: request,\r\n            onComplete: function (message) {\r\n                var payload = message['d'];\r\n                if (message['s'] === 'ok') {\r\n                    _this.onDataUpdate_(request['p'], payload, \r\n                    /*isMerge*/ false, \r\n                    /*tag*/ null);\r\n                    deferred.resolve(payload);\r\n                }\r\n                else {\r\n                    deferred.reject(payload);\r\n                }\r\n            }\r\n        };\r\n        this.outstandingGets_.push(outstandingGet);\r\n        this.outstandingGetCount_++;\r\n        var index = this.outstandingGets_.length - 1;\r\n        if (!this.connected_) {\r\n            setTimeout(function () {\r\n                var get = _this.outstandingGets_[index];\r\n                if (get === undefined || outstandingGet !== get) {\r\n                    return;\r\n                }\r\n                delete _this.outstandingGets_[index];\r\n                _this.outstandingGetCount_--;\r\n                if (_this.outstandingGetCount_ === 0) {\r\n                    _this.outstandingGets_ = [];\r\n                }\r\n                _this.log_('get ' + index + ' timed out on connection');\r\n                deferred.reject(new Error('Client is offline.'));\r\n            }, GET_CONNECT_TIMEOUT);\r\n        }\r\n        if (this.connected_) {\r\n            this.sendGet_(index);\r\n        }\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        if (!this.listens.has(pathString)) {\r\n            this.listens.set(pathString, new Map());\r\n        }\r\n        assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\r\n        assert(!this.listens.get(pathString).has(queryId), 'listen() called twice for same path/queryId.');\r\n        var listenSpec = {\r\n            onComplete: onComplete,\r\n            hashFn: currentHashFn,\r\n            query: query,\r\n            tag: tag\r\n        };\r\n        this.listens.get(pathString).set(queryId, listenSpec);\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendGet_ = function (index) {\r\n        var _this = this;\r\n        var get = this.outstandingGets_[index];\r\n        this.sendRequest('g', get.request, function (message) {\r\n            delete _this.outstandingGets_[index];\r\n            _this.outstandingGetCount_--;\r\n            if (_this.outstandingGetCount_ === 0) {\r\n                _this.outstandingGets_ = [];\r\n            }\r\n            if (get.onComplete) {\r\n                get.onComplete(message);\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\r\n        var _this = this;\r\n        var query = listenSpec.query;\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query.queryObject();\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, function (message) {\r\n            var payload = message[ /*data*/'d'];\r\n            var status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            var currentListenSpec = _this.listens.get(pathString) &&\r\n                _this.listens.get(pathString).get(queryId);\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                _this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    _this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\r\n        if (payload && typeof payload === 'object' && contains(payload, 'w')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var warnings = safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                var indexSpec = '\".indexOn\": \"' + query.getQueryParams().getIndex().toString() + '\"';\r\n                var indexPath = query.path.toString();\r\n                warn(\"Using an unspecified index. Your data will be downloaded and \" +\r\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\r\n                    (indexPath + \" to your security rules for better performance.\"));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, function () { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    };\r\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        var isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    PersistentConnection.prototype.tryAuth = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.authToken_) {\r\n            var token_1 = this.authToken_;\r\n            var authMethod = isValidFormat(token_1) ? 'auth' : 'gauth';\r\n            var requestData = { cred: token_1 };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (_this.authToken_ === token_1) {\r\n                    if (status === 'ok') {\r\n                        _this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        _this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.unlisten = function (query, tag) {\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'o',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'om',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\r\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, function (response) {\r\n            if (onComplete) {\r\n                setTimeout(function () {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\r\n        var request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined) {\r\n            request[ /*hash*/'h'] = hash;\r\n        }\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action: action,\r\n            request: request,\r\n            onComplete: onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        var index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendPut_ = function (index) {\r\n        var _this = this;\r\n        var action = this.outstandingPuts_[index].action;\r\n        var request = this.outstandingPuts_[index].request;\r\n        var onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, function (message) {\r\n            _this.log_(action + ' response', message);\r\n            delete _this.outstandingPuts_[index];\r\n            _this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (_this.outstandingPutCount_ === 0) {\r\n                _this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete) {\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.reportStats = function (stats) {\r\n        var _this = this;\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            var request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, function (result) {\r\n                var status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    var errorReason = result[ /* data */'d'];\r\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + stringify(message));\r\n            var reqNum = message['r'];\r\n            var onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        }\r\n        else if (action === 'm') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        }\r\n        else if (action === 'c') {\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        }\r\n        else if (action === 'ac') {\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        }\r\n        else if (action === 'sd') {\r\n            this.onSecurityDebugPacket_(body);\r\n        }\r\n        else {\r\n            error('Unrecognized action received from server: ' +\r\n                stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    };\r\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\r\n        var _this = this;\r\n        assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(function () {\r\n            _this.establishConnectionTimer_ = null;\r\n            _this.establishConnection_();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(timeout));\r\n    };\r\n    PersistentConnection.prototype.onVisible_ = function (visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    };\r\n    PersistentConnection.prototype.onOnline_ = function (online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                }\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    };\r\n    PersistentConnection.prototype.establishConnection_ = function () {\r\n        var _this = this;\r\n        if (this.shouldReconnect_()) {\r\n            this.log_('Making a connection attempt');\r\n            this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            this.lastConnectionEstablishedTime_ = null;\r\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\r\n            var onReady_1 = this.onReady_.bind(this);\r\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\r\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n            var self_1 = this;\r\n            var lastSessionId_1 = this.lastSessionId;\r\n            var canceled_1 = false;\r\n            var connection_1 = null;\r\n            var closeFn_1 = function () {\r\n                if (connection_1) {\r\n                    connection_1.close();\r\n                }\r\n                else {\r\n                    canceled_1 = true;\r\n                    onDisconnect_1();\r\n                }\r\n            };\r\n            var sendRequestFn = function (msg) {\r\n                assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\r\n                connection_1.sendRequest(msg);\r\n            };\r\n            this.realtime_ = {\r\n                close: closeFn_1,\r\n                sendRequest: sendRequestFn\r\n            };\r\n            var forceRefresh = this.forceTokenRefresh_;\r\n            this.forceTokenRefresh_ = false;\r\n            // First fetch auth token, and establish connection after fetching the token was successful\r\n            this.authTokenProvider_\r\n                .getToken(forceRefresh)\r\n                .then(function (result) {\r\n                if (!canceled_1) {\r\n                    log('getToken() completed. Creating connection.');\r\n                    self_1.authToken_ = result && result.accessToken;\r\n                    connection_1 = new Connection(connId_1, self_1.repoInfo_, self_1.applicationId_, onDataMessage_1, onReady_1, onDisconnect_1, \r\n                    /* onKill= */ function (reason) {\r\n                        warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\r\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                    }, lastSessionId_1);\r\n                }\r\n                else {\r\n                    log('getToken() completed but was canceled');\r\n                }\r\n            })\r\n                .then(null, function (error) {\r\n                self_1.log_('Failed to get token: ' + error);\r\n                if (!canceled_1) {\r\n                    if (_this.repoInfo_.nodeAdmin) {\r\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                        // But getToken() may also just have temporarily failed, so we still want to\r\n                        // continue retrying.\r\n                        warn(error);\r\n                    }\r\n                    closeFn_1();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.interrupt = function (reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.resume = function (reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\r\n        var delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    };\r\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            var put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete) {\r\n                    put.onComplete('disconnect');\r\n                }\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0) {\r\n            this.outstandingPuts_ = [];\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        var queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(function (q) { return ObjectToUniqueKey(q); }).join('$');\r\n        }\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete) {\r\n            listen.onComplete('permission_denied');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\r\n        var normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        var listen;\r\n        if (this.listens.has(normalizedPathString)) {\r\n            var map = this.listens.get(normalizedPathString);\r\n            listen = map.get(queryId);\r\n            map.delete(queryId);\r\n            if (map.size === 0) {\r\n                this.listens.delete(normalizedPathString);\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    };\r\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.restoreState_ = function () {\r\n        var e_1, _a, e_2, _b;\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        try {\r\n            // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n            // make sure to send listens before puts.\r\n            for (var _c = __values(this.listens.values()), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var queries = _d.value;\r\n                try {\r\n                    for (var _e = (e_2 = void 0, __values(queries.values())), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var listenSpec = _f.value;\r\n                        this.sendListen_(listenSpec);\r\n                    }\r\n                }\r\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_2) throw e_2.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i]) {\r\n                this.sendPut_(i);\r\n            }\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            var request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n        for (var i = 0; i < this.outstandingGets_.length; i++) {\r\n            if (this.outstandingGets_[i]) {\r\n                this.sendGet_(i);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sends client stats for first connection\r\n     */\r\n    PersistentConnection.prototype.sendConnectStats_ = function () {\r\n        var stats = {};\r\n        var clientName = 'js';\r\n        if (isNodeSdk()) {\r\n            if (this.repoInfo_.nodeAdmin) {\r\n                clientName = 'admin_node';\r\n            }\r\n            else {\r\n                clientName = 'node';\r\n            }\r\n        }\r\n        stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    };\r\n    PersistentConnection.prototype.shouldReconnect_ = function () {\r\n        var online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return isEmpty(this.interruptReasons_) && online;\r\n    };\r\n    PersistentConnection.nextPersistentConnectionId_ = 0;\r\n    /**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     */\r\n    PersistentConnection.nextConnectionId_ = 0;\r\n    return PersistentConnection;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nvar ReadonlyRestClient = /** @class */ (function (_super) {\r\n    __extends(ReadonlyRestClient, _super);\r\n    /**\r\n     * @param repoInfo_ Data about the namespace we are connecting to\r\n     * @param onDataUpdate_ A callback for new data from the server\r\n     */\r\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        _this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         */\r\n        _this.listens_ = {};\r\n        return _this;\r\n    }\r\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query.path.toString();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var _this = this;\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier());\r\n        // Mark this listener so we can tell if it's removed.\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        var thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        var queryStringParameters = queryParamsToRestQueryStringParameters(query.getQueryParams());\r\n        this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\r\n            var data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (safeGet(_this.listens_, listenId) === thisListen) {\r\n                var status_1;\r\n                if (!error) {\r\n                    status_1 = 'ok';\r\n                }\r\n                else if (error === 401) {\r\n                    status_1 = 'permission_denied';\r\n                }\r\n                else {\r\n                    status_1 = 'rest_error:' + error;\r\n                }\r\n                onComplete(status_1, null);\r\n            }\r\n        });\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    };\r\n    ReadonlyRestClient.prototype.get = function (query) {\r\n        var _this = this;\r\n        var queryStringParameters = queryParamsToRestQueryStringParameters(query.getQueryParams());\r\n        var pathString = query.path.toString();\r\n        var deferred = new Deferred();\r\n        this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\r\n            var data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                _this.onDataUpdate_(pathString, data, \r\n                /*isMerge=*/ false, \r\n                /*tag=*/ null);\r\n                deferred.resolve(data);\r\n            }\r\n            else {\r\n                deferred.reject(new Error(data));\r\n            }\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\r\n        // no-op since we just always call getToken.\r\n    };\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     */\r\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\r\n        var _this = this;\r\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\r\n        queryStringParameters['format'] = 'export';\r\n        this.authTokenProvider_\r\n            .getToken(/*forceRefresh=*/ false)\r\n            .then(function (authTokenData) {\r\n            var authToken = authTokenData && authTokenData.accessToken;\r\n            if (authToken) {\r\n                queryStringParameters['auth'] = authToken;\r\n            }\r\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                _this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                'ns=' +\r\n                _this.repoInfo_.namespace +\r\n                querystring(queryStringParameters);\r\n            _this.log_('Sending REST request for ' + url);\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (callback && xhr.readyState === 4) {\r\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    var res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    };\r\n    return ReadonlyRestClient;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Node in a Tree.\r\n */\r\nvar TreeNode = /** @class */ (function () {\r\n    function TreeNode() {\r\n        // TODO: Consider making accessors that create children and value lazily or\r\n        // separate Internal / Leaf 'types'.\r\n        this.children = {};\r\n        this.childCount = 0;\r\n        this.value = null;\r\n    }\r\n    return TreeNode;\r\n}());\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nvar Tree = /** @class */ (function () {\r\n    /**\r\n     * @param name_ Optional name of the node.\r\n     * @param parent_ Optional parent node.\r\n     * @param node_ Optional node to wrap.\r\n     */\r\n    function Tree(name_, parent_, node_) {\r\n        if (name_ === void 0) { name_ = ''; }\r\n        if (parent_ === void 0) { parent_ = null; }\r\n        if (node_ === void 0) { node_ = new TreeNode(); }\r\n        this.name_ = name_;\r\n        this.parent_ = parent_;\r\n        this.node_ = node_;\r\n    }\r\n    /**\r\n     * Returns a sub-Tree for the given path.\r\n     *\r\n     * @param pathObj Path to look up.\r\n     * @return Tree for path.\r\n     */\r\n    Tree.prototype.subTree = function (pathObj) {\r\n        // TODO: Require pathObj to be Path?\r\n        var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n        var child = this, next = pathGetFront(path);\r\n        while (next !== null) {\r\n            var childNode = safeGet(child.node_.children, next) || new TreeNode();\r\n            child = new Tree(next, child, childNode);\r\n            path = pathPopFront(path);\r\n            next = pathGetFront(path);\r\n        }\r\n        return child;\r\n    };\r\n    /**\r\n     * Returns the data associated with this tree node.\r\n     *\r\n     * @return The data or null if no data exists.\r\n     */\r\n    Tree.prototype.getValue = function () {\r\n        return this.node_.value;\r\n    };\r\n    /**\r\n     * Sets data to this tree node.\r\n     *\r\n     * @param value Value to set.\r\n     */\r\n    Tree.prototype.setValue = function (value) {\r\n        assert(typeof value !== 'undefined', 'Cannot set value to undefined');\r\n        this.node_.value = value;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * Clears the contents of the tree node (its value and all children).\r\n     */\r\n    Tree.prototype.clear = function () {\r\n        this.node_.value = null;\r\n        this.node_.children = {};\r\n        this.node_.childCount = 0;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * @return Whether the tree has any children.\r\n     */\r\n    Tree.prototype.hasChildren = function () {\r\n        return this.node_.childCount > 0;\r\n    };\r\n    /**\r\n     * @return Whethe rthe tree is empty (no value or children).\r\n     */\r\n    Tree.prototype.isEmpty = function () {\r\n        return this.getValue() === null && !this.hasChildren();\r\n    };\r\n    /**\r\n     * Calls action for each child of this tree node.\r\n     *\r\n     * @param action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachChild = function (action) {\r\n        var _this = this;\r\n        each(this.node_.children, function (child, childTree) {\r\n            action(new Tree(child, _this, childTree));\r\n        });\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n     *\r\n     * @param action Action to be called for each child.\r\n     * @param includeSelf Whether to call action on this node as well. Defaults to\r\n     *   false.\r\n     * @param childrenFirst Whether to call action on children before calling it on\r\n     *   parent.\r\n     */\r\n    Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\r\n        if (includeSelf && !childrenFirst) {\r\n            action(this);\r\n        }\r\n        this.forEachChild(function (child) {\r\n            child.forEachDescendant(action, /*includeSelf=*/ true, childrenFirst);\r\n        });\r\n        if (includeSelf && childrenFirst) {\r\n            action(this);\r\n        }\r\n    };\r\n    /**\r\n     * Calls action on each ancestor node.\r\n     *\r\n     * @param action Action to be called on each parent; return\r\n     *   true to abort.\r\n     * @param includeSelf Whether to call action on this node as well.\r\n     * @return true if the action callback returned true.\r\n     */\r\n    Tree.prototype.forEachAncestor = function (action, includeSelf) {\r\n        var node = includeSelf ? this : this.parent();\r\n        while (node !== null) {\r\n            if (action(node)) {\r\n                return true;\r\n            }\r\n            node = node.parent();\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n     * is found, action is called on it and traversal does not continue inside the node.\r\n     * Action is *not* called on this node.\r\n     *\r\n     * @param action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\r\n        this.forEachChild(function (child) {\r\n            if (child.getValue() !== null) {\r\n                action(child);\r\n            }\r\n            else {\r\n                child.forEachImmediateDescendantWithValue(action);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @return The path of this tree node, as a Path.\r\n     */\r\n    Tree.prototype.path = function () {\r\n        return new Path(this.parent_ === null\r\n            ? this.name_\r\n            : this.parent_.path() + '/' + this.name_);\r\n    };\r\n    /**\r\n     * @return The name of the tree node.\r\n     */\r\n    Tree.prototype.name = function () {\r\n        return this.name_;\r\n    };\r\n    /**\r\n     * @return The parent tree node, or null if this is the root of the tree.\r\n     */\r\n    Tree.prototype.parent = function () {\r\n        return this.parent_;\r\n    };\r\n    /**\r\n     * Adds or removes this child from its parent based on whether it's empty or not.\r\n     */\r\n    Tree.prototype.updateParents_ = function () {\r\n        if (this.parent_ !== null) {\r\n            this.parent_.updateChild_(this.name_, this);\r\n        }\r\n    };\r\n    /**\r\n     * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n     *\r\n     * @param childName The name of the child to update.\r\n     * @param child The child to update.\r\n     */\r\n    Tree.prototype.updateChild_ = function (childName, child) {\r\n        var childEmpty = child.isEmpty();\r\n        var childExists = contains(this.node_.children, childName);\r\n        if (childEmpty && childExists) {\r\n            delete this.node_.children[childName];\r\n            this.node_.childCount--;\r\n            this.updateParents_();\r\n        }\r\n        else if (!childEmpty && !childExists) {\r\n            this.node_.children[childName] = child.node_;\r\n            this.node_.childCount++;\r\n            this.updateParents_();\r\n        }\r\n    };\r\n    return Tree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it. Among other\r\n * things this ensure that if there's ever a bug causing a mismatch between\r\n * client / server hashes for some data, we won't retry indefinitely.\r\n */\r\nvar MAX_TRANSACTION_RETRIES = 25;\r\nvar TransactionStatus;\r\n(function (TransactionStatus) {\r\n    // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\r\n    // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\r\n    // mismatched hash.\r\n    TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\";\r\n    // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\r\n    // or rejected yet).\r\n    TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\";\r\n    // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\r\n    // removed when we get a chance to prune completed ones.\r\n    TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\";\r\n    // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\r\n    // If it comes back as unsuccessful, we'll abort it.\r\n    TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\";\r\n    // Temporary state used to mark transactions that need to be aborted.\r\n    TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\r\n})(TransactionStatus || (TransactionStatus = {}));\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nvar Repo = /** @class */ (function () {\r\n    function Repo(repoInfo_, forceRestClient_, app, authTokenProvider_) {\r\n        this.repoInfo_ = repoInfo_;\r\n        this.forceRestClient_ = forceRestClient_;\r\n        this.app = app;\r\n        this.authTokenProvider_ = authTokenProvider_;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        /** A list of data pieces and paths to be set when this client disconnects. */\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        /** Stores queues of outstanding transactions for Firebase locations. */\r\n        this.transactionQueueTree_ = new Tree();\r\n        // TODO: This should be @private but it's used by test_access.js and internal.js\r\n        this.persistentConnection_ = null;\r\n        // This key is intentionally not updated if RepoInfo is later changed or replaced\r\n        this.key = this.repoInfo_.toURLString();\r\n    }\r\n    Repo.prototype.start = function () {\r\n        var _this = this;\r\n        this.stats_ = StatsManager.getCollection(this.repoInfo_);\r\n        if (this.forceRestClient_ || beingCrawled()) {\r\n            this.server_ = new ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), this.authTokenProvider_);\r\n            // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n            setTimeout(this.onConnectStatus_.bind(this, true), 0);\r\n        }\r\n        else {\r\n            var authOverride = this.app.options['databaseAuthVariableOverride'];\r\n            // Validate authOverride\r\n            if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n                if (typeof authOverride !== 'object') {\r\n                    throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n                }\r\n                try {\r\n                    stringify(authOverride);\r\n                }\r\n                catch (e) {\r\n                    throw new Error('Invalid authOverride provided: ' + e);\r\n                }\r\n            }\r\n            this.persistentConnection_ = new PersistentConnection(this.repoInfo_, this.app.options.appId, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), this.authTokenProvider_, authOverride);\r\n            this.server_ = this.persistentConnection_;\r\n        }\r\n        this.authTokenProvider_.addTokenChangeListener(function (token) {\r\n            _this.server_.refreshAuthToken(token);\r\n        });\r\n        // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n        // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n        this.statsReporter_ = StatsManager.getOrCreateReporter(this.repoInfo_, function () { return new StatsReporter(_this.stats_, _this.server_); });\r\n        // Used for .info.\r\n        this.infoData_ = new SnapshotHolder();\r\n        this.infoSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                var infoEvents = [];\r\n                var node = _this.infoData_.getNode(query.path);\r\n                // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n                // on initial data...\r\n                if (!node.isEmpty()) {\r\n                    infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\r\n                    setTimeout(function () {\r\n                        onComplete('ok');\r\n                    }, 0);\r\n                }\r\n                return infoEvents;\r\n            },\r\n            stopListening: function () { }\r\n        });\r\n        this.updateInfo_('connected', false);\r\n        this.serverSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                _this.server_.listen(query, currentHashFn, tag, function (status, data) {\r\n                    var events = onComplete(status, data);\r\n                    eventQueueRaiseEventsForChangedPath(_this.eventQueue_, query.path, events);\r\n                });\r\n                // No synchronous events for network-backed sync trees\r\n                return [];\r\n            },\r\n            stopListening: function (query, tag) {\r\n                _this.server_.unlisten(query, tag);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @return The URL corresponding to the root of this Firebase.\r\n     */\r\n    Repo.prototype.toString = function () {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    };\r\n    /**\r\n     * @return The namespace represented by the repo.\r\n     */\r\n    Repo.prototype.name = function () {\r\n        return this.repoInfo_.namespace;\r\n    };\r\n    /**\r\n     * @return The time in milliseconds, taking the server offset into account if we have one.\r\n     */\r\n    Repo.prototype.serverTime = function () {\r\n        var offsetNode = this.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n        var offset = offsetNode.val() || 0;\r\n        return new Date().getTime() + offset;\r\n    };\r\n    /**\r\n     * Generate ServerValues using some variables from the repo object.\r\n     */\r\n    Repo.prototype.generateServerValues = function () {\r\n        return generateWithValues({\r\n            timestamp: this.serverTime()\r\n        });\r\n    };\r\n    /**\r\n     * Called by realtime when we get new messages from the server.\r\n     */\r\n    Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\r\n        // For testing.\r\n        this.dataUpdateCount++;\r\n        var path = new Path(pathString);\r\n        data = this.interceptServerDataCallback_\r\n            ? this.interceptServerDataCallback_(pathString, data)\r\n            : data;\r\n        var events = [];\r\n        if (tag) {\r\n            if (isMerge) {\r\n                var taggedChildren = map(data, function (raw) { return nodeFromJSON$1(raw); });\r\n                events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\r\n            }\r\n            else {\r\n                var taggedSnap = nodeFromJSON$1(data);\r\n                events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\r\n            }\r\n        }\r\n        else if (isMerge) {\r\n            var changedChildren = map(data, function (raw) { return nodeFromJSON$1(raw); });\r\n            events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\r\n        }\r\n        else {\r\n            var snap = nodeFromJSON$1(data);\r\n            events = this.serverSyncTree_.applyServerOverwrite(path, snap);\r\n        }\r\n        var affectedPath = path;\r\n        if (events.length > 0) {\r\n            // Since we have a listener outstanding for each transaction, receiving any events\r\n            // is a proxy for some change having occurred.\r\n            affectedPath = this.rerunTransactions_(path);\r\n        }\r\n        eventQueueRaiseEventsForChangedPath(this.eventQueue_, affectedPath, events);\r\n    };\r\n    // TODO: This should be @private but it's used by test_access.js and internal.js\r\n    Repo.prototype.interceptServerData_ = function (callback) {\r\n        this.interceptServerDataCallback_ = callback;\r\n    };\r\n    Repo.prototype.onConnectStatus_ = function (connectStatus) {\r\n        this.updateInfo_('connected', connectStatus);\r\n        if (connectStatus === false) {\r\n            this.runOnDisconnectEvents_();\r\n        }\r\n    };\r\n    Repo.prototype.onServerInfoUpdate_ = function (updates) {\r\n        var _this = this;\r\n        each(updates, function (key, value) {\r\n            _this.updateInfo_(key, value);\r\n        });\r\n    };\r\n    Repo.prototype.updateInfo_ = function (pathString, value) {\r\n        var path = new Path('/.info/' + pathString);\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.infoData_.updateSnapshot(path, newNode);\r\n        var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\r\n        eventQueueRaiseEventsForChangedPath(this.eventQueue_, path, events);\r\n    };\r\n    Repo.prototype.getNextWriteId_ = function () {\r\n        return this.nextWriteId_++;\r\n    };\r\n    /**\r\n     * The purpose of `getValue` is to return the latest known value\r\n     * satisfying `query`.\r\n     *\r\n     * This method will first check for in-memory cached values\r\n     * belonging to active listeners. If they are found, such values\r\n     * are considered to be the most up-to-date.\r\n     *\r\n     * If the client is not connected, this method will try to\r\n     * establish a connection and request the value for `query`. If\r\n     * the client is not able to retrieve the query result, it reports\r\n     * an error.\r\n     *\r\n     * @param query - The query to surface a value for.\r\n     */\r\n    Repo.prototype.getValue = function (query) {\r\n        var _this = this;\r\n        // Only active queries are cached. There is no persisted cache.\r\n        var cached = this.serverSyncTree_.getServerValue(query);\r\n        if (cached != null) {\r\n            return Promise.resolve(new DataSnapshot(cached, query.getRef(), query.getQueryParams().getIndex()));\r\n        }\r\n        return this.server_.get(query).then(function (payload) {\r\n            var node = nodeFromJSON$1(payload);\r\n            var events = _this.serverSyncTree_.applyServerOverwrite(query.path, node);\r\n            eventQueueRaiseEventsAtPath(_this.eventQueue_, query.path, events);\r\n            return Promise.resolve(new DataSnapshot(node, query.getRef(), query.getQueryParams().getIndex()));\r\n        }, function (err) {\r\n            _this.log_('get for query ' + stringify(query) + ' failed: ' + err);\r\n            return Promise.reject(new Error(err));\r\n        });\r\n    };\r\n    Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\r\n        var _this = this;\r\n        this.log_('set', {\r\n            path: path.toString(),\r\n            value: newVal,\r\n            priority: newPriority\r\n        });\r\n        // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n        // (b) store unresolved paths on JSON parse\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\r\n        var existing = this.serverSyncTree_.calcCompleteEventCache(path);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\r\n        var writeId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\r\n        eventQueueQueueEvents(this.eventQueue_, events);\r\n        this.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\r\n            var success = status === 'ok';\r\n            if (!success) {\r\n                warn('set at ' + path + ' failed: ' + status);\r\n            }\r\n            var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\r\n            eventQueueRaiseEventsForChangedPath(_this.eventQueue_, path, clearEvents);\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n        var affectedPath = this.abortTransactions_(path);\r\n        this.rerunTransactions_(affectedPath);\r\n        // We queued the events above, so just flush the queue here\r\n        eventQueueRaiseEventsForChangedPath(this.eventQueue_, affectedPath, []);\r\n    };\r\n    Repo.prototype.update = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        this.log_('update', { path: path.toString(), value: childrenToMerge });\r\n        // Start with our existing data and merge each child into it.\r\n        var empty = true;\r\n        var serverValues = this.generateServerValues();\r\n        var changedChildren = {};\r\n        each(childrenToMerge, function (changedKey, changedValue) {\r\n            empty = false;\r\n            changedChildren[changedKey] = resolveDeferredValueTree(pathChild(path, changedKey), nodeFromJSON$1(changedValue), _this.serverSyncTree_, serverValues);\r\n        });\r\n        if (!empty) {\r\n            var writeId_1 = this.getNextWriteId_();\r\n            var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\r\n            eventQueueQueueEvents(this.eventQueue_, events);\r\n            this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n                var success = status === 'ok';\r\n                if (!success) {\r\n                    warn('update at ' + path + ' failed: ' + status);\r\n                }\r\n                var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\r\n                var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\r\n                eventQueueRaiseEventsForChangedPath(_this.eventQueue_, affectedPath, clearEvents);\r\n                _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n            });\r\n            each(childrenToMerge, function (changedPath) {\r\n                var affectedPath = _this.abortTransactions_(pathChild(path, changedPath));\r\n                _this.rerunTransactions_(affectedPath);\r\n            });\r\n            // We queued the events above, so just flush the queue here\r\n            eventQueueRaiseEventsForChangedPath(this.eventQueue_, path, []);\r\n        }\r\n        else {\r\n            log(\"update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n        }\r\n    };\r\n    /**\r\n     * Applies all of the changes stored up in the onDisconnect_ tree.\r\n     */\r\n    Repo.prototype.runOnDisconnectEvents_ = function () {\r\n        var _this = this;\r\n        this.log_('onDisconnectEvents');\r\n        var serverValues = this.generateServerValues();\r\n        var resolvedOnDisconnectTree = new SparseSnapshotTree();\r\n        this.onDisconnect_.forEachTree(newEmptyPath(), function (path, node) {\r\n            var resolved = resolveDeferredValueTree(path, node, _this.serverSyncTree_, serverValues);\r\n            resolvedOnDisconnectTree.remember(path, resolved);\r\n        });\r\n        var events = [];\r\n        resolvedOnDisconnectTree.forEachTree(newEmptyPath(), function (path, snap) {\r\n            events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\r\n            var affectedPath = _this.abortTransactions_(path);\r\n            _this.rerunTransactions_(affectedPath);\r\n        });\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        eventQueueRaiseEventsForChangedPath(this.eventQueue_, newEmptyPath(), events);\r\n    };\r\n    Repo.prototype.onDisconnectCancel = function (path, onComplete) {\r\n        var _this = this;\r\n        this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.forget(path);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value, priority);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        if (isEmpty(childrenToMerge)) {\r\n            log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n            return;\r\n        }\r\n        this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                each(childrenToMerge, function (childName, childNode) {\r\n                    var newChildNode = nodeFromJSON$1(childNode);\r\n                    _this.onDisconnect_.remember(pathChild(path, childName), newChildNode);\r\n                });\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\r\n        var events;\r\n        if (pathGetFront(query.path) === '.info') {\r\n            events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        eventQueueRaiseEventsAtPath(this.eventQueue_, query.path, events);\r\n    };\r\n    Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\r\n        // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n        // a little bit by handling the return values anyways.\r\n        var events;\r\n        if (pathGetFront(query.path) === '.info') {\r\n            events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        eventQueueRaiseEventsAtPath(this.eventQueue_, query.path, events);\r\n    };\r\n    Repo.prototype.interrupt = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.resume = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.resume(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.stats = function (showDelta) {\r\n        if (showDelta === void 0) { showDelta = false; }\r\n        if (typeof console === 'undefined') {\r\n            return;\r\n        }\r\n        var stats;\r\n        if (showDelta) {\r\n            if (!this.statsListener_) {\r\n                this.statsListener_ = new StatsListener(this.stats_);\r\n            }\r\n            stats = this.statsListener_.get();\r\n        }\r\n        else {\r\n            stats = this.stats_.get();\r\n        }\r\n        var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\r\n            return Math.max(currentValue.length, previousValue);\r\n        }, 0);\r\n        each(stats, function (stat, value) {\r\n            var paddedStat = stat;\r\n            // pad stat names to be the same length (plus 2 extra spaces).\r\n            for (var i = stat.length; i < longestName + 2; i++) {\r\n                paddedStat += ' ';\r\n            }\r\n            console.log(paddedStat + value);\r\n        });\r\n    };\r\n    Repo.prototype.statsIncrementCounter = function (metric) {\r\n        this.stats_.incrementCounter(metric);\r\n        this.statsReporter_.includeStat(metric);\r\n    };\r\n    Repo.prototype.log_ = function () {\r\n        var varArgs = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            varArgs[_i] = arguments[_i];\r\n        }\r\n        var prefix = '';\r\n        if (this.persistentConnection_) {\r\n            prefix = this.persistentConnection_.id + ':';\r\n        }\r\n        log.apply(void 0, __spread([prefix], varArgs));\r\n    };\r\n    Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\r\n        if (callback) {\r\n            exceptionGuard(function () {\r\n                if (status === 'ok') {\r\n                    callback(null);\r\n                }\r\n                else {\r\n                    var code = (status || 'error').toUpperCase();\r\n                    var message = code;\r\n                    if (errorReason) {\r\n                        message += ': ' + errorReason;\r\n                    }\r\n                    var error = new Error(message);\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    error.code = code;\r\n                    callback(error);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(Repo.prototype, \"database\", {\r\n        get: function () {\r\n            return this.__database || (this.__database = new Database(this));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new transaction, adds it to the transactions we're tracking, and\r\n     * sends it to the server if possible.\r\n     *\r\n     * @param path Path at which to do transaction.\r\n     * @param transactionUpdate Update callback.\r\n     * @param onComplete Completion callback.\r\n     * @param applyLocally Whether or not to make intermediate results visible\r\n     */\r\n    Repo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\r\n        this.log_('transaction on ' + path);\r\n        // Add a watch to make sure we get server updates.\r\n        var valueCallback = function () { };\r\n        var watchRef = new Reference(this, path);\r\n        watchRef.on('value', valueCallback);\r\n        var unwatcher = function () {\r\n            watchRef.off('value', valueCallback);\r\n        };\r\n        // Initialize transaction.\r\n        var transaction = {\r\n            path: path,\r\n            update: transactionUpdate,\r\n            onComplete: onComplete,\r\n            // One of TransactionStatus enums.\r\n            status: null,\r\n            // Used when combining transactions at different locations to figure out\r\n            // which one goes first.\r\n            order: LUIDGenerator(),\r\n            // Whether to raise local events for this transaction.\r\n            applyLocally: applyLocally,\r\n            // Count of how many times we've retried the transaction.\r\n            retryCount: 0,\r\n            // Function to call to clean up our .on() listener.\r\n            unwatcher: unwatcher,\r\n            // Stores why a transaction was aborted.\r\n            abortReason: null,\r\n            currentWriteId: null,\r\n            currentInputSnapshot: null,\r\n            currentOutputSnapshotRaw: null,\r\n            currentOutputSnapshotResolved: null\r\n        };\r\n        // Run transaction initially.\r\n        var currentState = this.getLatestState_(path);\r\n        transaction.currentInputSnapshot = currentState;\r\n        var newVal = transaction.update(currentState.val());\r\n        if (newVal === undefined) {\r\n            // Abort transaction.\r\n            transaction.unwatcher();\r\n            transaction.currentOutputSnapshotRaw = null;\r\n            transaction.currentOutputSnapshotResolved = null;\r\n            if (transaction.onComplete) {\r\n                // We just set the input snapshot, so this cast should be safe\r\n                var snapshot = new DataSnapshot(transaction.currentInputSnapshot, new Reference(this, transaction.path), PRIORITY_INDEX);\r\n                transaction.onComplete(null, false, snapshot);\r\n            }\r\n        }\r\n        else {\r\n            validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n            // Mark as run and add to our queue.\r\n            transaction.status = TransactionStatus.RUN;\r\n            var queueNode = this.transactionQueueTree_.subTree(path);\r\n            var nodeQueue = queueNode.getValue() || [];\r\n            nodeQueue.push(transaction);\r\n            queueNode.setValue(nodeQueue);\r\n            // Update visibleData and raise events\r\n            // Note: We intentionally raise events after updating all of our\r\n            // transaction state, since the user could start new transactions from the\r\n            // event callbacks.\r\n            var priorityForNode = void 0;\r\n            if (typeof newVal === 'object' &&\r\n                newVal !== null &&\r\n                contains(newVal, '.priority')) {\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                priorityForNode = safeGet(newVal, '.priority');\r\n                assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                    'Priority must be a valid string, finite number, server value, or null.');\r\n            }\r\n            else {\r\n                var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) ||\r\n                    ChildrenNode.EMPTY_NODE;\r\n                priorityForNode = currentNode.getPriority().val();\r\n            }\r\n            var serverValues = this.generateServerValues();\r\n            var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\r\n            var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\r\n            transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n            transaction.currentOutputSnapshotResolved = newNode;\r\n            transaction.currentWriteId = this.getNextWriteId_();\r\n            var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n            eventQueueRaiseEventsForChangedPath(this.eventQueue_, path, events);\r\n            this.sendReadyTransactions_();\r\n        }\r\n    };\r\n    /**\r\n     * @param excludeSets A specific set to exclude\r\n     */\r\n    Repo.prototype.getLatestState_ = function (path, excludeSets) {\r\n        return (this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) ||\r\n            ChildrenNode.EMPTY_NODE);\r\n    };\r\n    /**\r\n     * Sends any already-run transactions that aren't waiting for outstanding\r\n     * transactions to complete.\r\n     *\r\n     * Externally it's called with no arguments, but it calls itself recursively\r\n     * with a particular transactionQueueTree node to recurse through the tree.\r\n     *\r\n     * @param node transactionQueueTree node to start at.\r\n     */\r\n    Repo.prototype.sendReadyTransactions_ = function (node) {\r\n        var _this = this;\r\n        if (node === void 0) { node = this.transactionQueueTree_; }\r\n        // Before recursing, make sure any completed transactions are removed.\r\n        if (!node) {\r\n            this.pruneCompletedTransactionsBelowNode_(node);\r\n        }\r\n        if (node.getValue() !== null) {\r\n            var queue = this.buildTransactionQueue_(node);\r\n            assert(queue.length > 0, 'Sending zero length transaction queue');\r\n            var allRun = queue.every(function (transaction) {\r\n                return transaction.status === TransactionStatus.RUN;\r\n            });\r\n            // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n            if (allRun) {\r\n                this.sendTransactionQueue_(node.path(), queue);\r\n            }\r\n        }\r\n        else if (node.hasChildren()) {\r\n            node.forEachChild(function (childNode) {\r\n                _this.sendReadyTransactions_(childNode);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Given a list of run transactions, send them to the server and then handle\r\n     * the result (success or failure).\r\n     *\r\n     * @param path The location of the queue.\r\n     * @param queue Queue of transactions under the specified location.\r\n     */\r\n    Repo.prototype.sendTransactionQueue_ = function (path, queue) {\r\n        var _this = this;\r\n        // Mark transactions as sent and increment retry count!\r\n        var setsToIgnore = queue.map(function (txn) {\r\n            return txn.currentWriteId;\r\n        });\r\n        var latestState = this.getLatestState_(path, setsToIgnore);\r\n        var snapToSend = latestState;\r\n        var latestHash = latestState.hash();\r\n        for (var i = 0; i < queue.length; i++) {\r\n            var txn = queue[i];\r\n            assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n            txn.status = TransactionStatus.SENT;\r\n            txn.retryCount++;\r\n            var relativePath = newRelativePath(path, txn.path);\r\n            // If we've gotten to this point, the output snapshot must be defined.\r\n            snapToSend = snapToSend.updateChild(relativePath /** @type {!Node} */, txn.currentOutputSnapshotRaw);\r\n        }\r\n        var dataToSend = snapToSend.val(true);\r\n        var pathToSend = path;\r\n        // Send the put.\r\n        this.server_.put(pathToSend.toString(), dataToSend, function (status) {\r\n            _this.log_('transaction put response', {\r\n                path: pathToSend.toString(),\r\n                status: status\r\n            });\r\n            var events = [];\r\n            if (status === 'ok') {\r\n                // Queue up the callbacks and fire them after cleaning up all of our\r\n                // transaction state, since the callback could trigger more\r\n                // transactions or sets.\r\n                var callbacks = [];\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    queue[i].status = TransactionStatus.COMPLETED;\r\n                    events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\r\n                    if (queue[i].onComplete) {\r\n                        // We never unset the output snapshot, and given that this\r\n                        // transaction is complete, it should be set\r\n                        var node = queue[i].currentOutputSnapshotResolved;\r\n                        var ref = new Reference(_this, queue[i].path);\r\n                        var snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\r\n                        callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\r\n                    }\r\n                    queue[i].unwatcher();\r\n                }\r\n                // Now remove the completed transactions.\r\n                _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path));\r\n                // There may be pending transactions that we can now send.\r\n                _this.sendReadyTransactions_();\r\n                eventQueueRaiseEventsForChangedPath(_this.eventQueue_, path, events);\r\n                // Finally, trigger onComplete callbacks.\r\n                for (var i = 0; i < callbacks.length; i++) {\r\n                    exceptionGuard(callbacks[i]);\r\n                }\r\n            }\r\n            else {\r\n                // transactions are no longer sent.  Update their status appropriately.\r\n                if (status === 'datastale') {\r\n                    for (var i = 0; i < queue.length; i++) {\r\n                        if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\r\n                            queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                        }\r\n                        else {\r\n                            queue[i].status = TransactionStatus.RUN;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                    for (var i = 0; i < queue.length; i++) {\r\n                        queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                        queue[i].abortReason = status;\r\n                    }\r\n                }\r\n                _this.rerunTransactions_(path);\r\n            }\r\n        }, latestHash);\r\n    };\r\n    /**\r\n     * Finds all transactions dependent on the data at changedPath and reruns them.\r\n     *\r\n     * Should be called any time cached data changes.\r\n     *\r\n     * Return the highest path that was affected by rerunning transactions. This\r\n     * is the path at which events need to be raised for.\r\n     *\r\n     * @param changedPath The path in mergedData that changed.\r\n     * @return The rootmost path that was affected by rerunning transactions.\r\n     */\r\n    Repo.prototype.rerunTransactions_ = function (changedPath) {\r\n        var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\r\n        var path = rootMostTransactionNode.path();\r\n        var queue = this.buildTransactionQueue_(rootMostTransactionNode);\r\n        this.rerunTransactionQueue_(queue, path);\r\n        return path;\r\n    };\r\n    /**\r\n     * Does all the work of rerunning transactions (as well as cleans up aborted\r\n     * transactions and whatnot).\r\n     *\r\n     * @param queue The queue of transactions to run.\r\n     * @param path The path the queue is for.\r\n     */\r\n    Repo.prototype.rerunTransactionQueue_ = function (queue, path) {\r\n        if (queue.length === 0) {\r\n            return; // Nothing to do!\r\n        }\r\n        // Queue up the callbacks and fire them after cleaning up all of our\r\n        // transaction state, since the callback could trigger more transactions or\r\n        // sets.\r\n        var callbacks = [];\r\n        var events = [];\r\n        // Ignore all of the sets we're going to re-run.\r\n        var txnsToRerun = queue.filter(function (q) {\r\n            return q.status === TransactionStatus.RUN;\r\n        });\r\n        var setsToIgnore = txnsToRerun.map(function (q) {\r\n            return q.currentWriteId;\r\n        });\r\n        for (var i = 0; i < queue.length; i++) {\r\n            var transaction = queue[i];\r\n            var relativePath = newRelativePath(path, transaction.path);\r\n            var abortTransaction = false, abortReason = void 0;\r\n            assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n            if (transaction.status === TransactionStatus.NEEDS_ABORT) {\r\n                abortTransaction = true;\r\n                abortReason = transaction.abortReason;\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n            }\r\n            else if (transaction.status === TransactionStatus.RUN) {\r\n                if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\r\n                    abortTransaction = true;\r\n                    abortReason = 'maxretry';\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n                }\r\n                else {\r\n                    // This code reruns a transaction\r\n                    var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\r\n                    transaction.currentInputSnapshot = currentNode;\r\n                    var newData = queue[i].update(currentNode.val());\r\n                    if (newData !== undefined) {\r\n                        validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                        var newDataNode = nodeFromJSON$1(newData);\r\n                        var hasExplicitPriority = typeof newData === 'object' &&\r\n                            newData != null &&\r\n                            contains(newData, '.priority');\r\n                        if (!hasExplicitPriority) {\r\n                            // Keep the old priority if there wasn't a priority explicitly specified.\r\n                            newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                        }\r\n                        var oldWriteId = transaction.currentWriteId;\r\n                        var serverValues = this.generateServerValues();\r\n                        var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\r\n                        transaction.currentOutputSnapshotRaw = newDataNode;\r\n                        transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                        transaction.currentWriteId = this.getNextWriteId_();\r\n                        // Mutates setsToIgnore in place\r\n                        setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                        events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                        events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\r\n                    }\r\n                    else {\r\n                        abortTransaction = true;\r\n                        abortReason = 'nodata';\r\n                        events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n                    }\r\n                }\r\n            }\r\n            eventQueueRaiseEventsForChangedPath(this.eventQueue_, path, events);\r\n            events = [];\r\n            if (abortTransaction) {\r\n                // Abort.\r\n                queue[i].status = TransactionStatus.COMPLETED;\r\n                // Removing a listener can trigger pruning which can muck with\r\n                // mergedData/visibleData (as it prunes data). So defer the unwatcher\r\n                // until we're done.\r\n                (function (unwatcher) {\r\n                    setTimeout(unwatcher, Math.floor(0));\r\n                })(queue[i].unwatcher);\r\n                if (queue[i].onComplete) {\r\n                    if (abortReason === 'nodata') {\r\n                        var ref = new Reference(this, queue[i].path);\r\n                        // We set this field immediately, so it's safe to cast to an actual snapshot\r\n                        var lastInput /** @type {!Node} */ = queue[i].currentInputSnapshot;\r\n                        var snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\r\n                        callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\r\n                    }\r\n                    else {\r\n                        callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // Clean up completed transactions.\r\n        this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);\r\n        // Now fire callbacks, now that we're in a good, known state.\r\n        for (var i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n        // Try to send the transaction result to the server.\r\n        this.sendReadyTransactions_();\r\n    };\r\n    /**\r\n     * Returns the rootmost ancestor node of the specified path that has a pending\r\n     * transaction on it, or just returns the node for the given path if there are\r\n     * no pending transactions on any ancestor.\r\n     *\r\n     * @param path The location to start at.\r\n     * @return The rootmost node with a transaction.\r\n     */\r\n    Repo.prototype.getAncestorTransactionNode_ = function (path) {\r\n        var front;\r\n        // Start at the root and walk deeper into the tree towards path until we\r\n        // find a node with pending transactions.\r\n        var transactionNode = this.transactionQueueTree_;\r\n        front = pathGetFront(path);\r\n        while (front !== null && transactionNode.getValue() === null) {\r\n            transactionNode = transactionNode.subTree(front);\r\n            path = pathPopFront(path);\r\n            front = pathGetFront(path);\r\n        }\r\n        return transactionNode;\r\n    };\r\n    /**\r\n     * Builds the queue of all transactions at or below the specified\r\n     * transactionNode.\r\n     *\r\n     * @param transactionNode\r\n     * @return The generated queue.\r\n     */\r\n    Repo.prototype.buildTransactionQueue_ = function (transactionNode) {\r\n        // Walk any child transaction queues and aggregate them into a single queue.\r\n        var transactionQueue = [];\r\n        this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue);\r\n        // Sort them by the order the transactions were created.\r\n        transactionQueue.sort(function (a, b) {\r\n            return a.order - b.order;\r\n        });\r\n        return transactionQueue;\r\n    };\r\n    Repo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\r\n        var _this = this;\r\n        var nodeQueue = node.getValue();\r\n        if (nodeQueue !== null) {\r\n            for (var i = 0; i < nodeQueue.length; i++) {\r\n                queue.push(nodeQueue[i]);\r\n            }\r\n        }\r\n        node.forEachChild(function (child) {\r\n            _this.aggregateTransactionQueuesForNode_(child, queue);\r\n        });\r\n    };\r\n    /**\r\n     * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n     */\r\n    Repo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\r\n        var _this = this;\r\n        var queue = node.getValue();\r\n        if (queue) {\r\n            var to = 0;\r\n            for (var from = 0; from < queue.length; from++) {\r\n                if (queue[from].status !== TransactionStatus.COMPLETED) {\r\n                    queue[to] = queue[from];\r\n                    to++;\r\n                }\r\n            }\r\n            queue.length = to;\r\n            node.setValue(queue.length > 0 ? queue : null);\r\n        }\r\n        node.forEachChild(function (childNode) {\r\n            _this.pruneCompletedTransactionsBelowNode_(childNode);\r\n        });\r\n    };\r\n    /**\r\n     * Aborts all transactions on ancestors or descendants of the specified path.\r\n     * Called when doing a set() or update() since we consider them incompatible\r\n     * with transactions.\r\n     *\r\n     * @param path Path for which we want to abort related transactions.\r\n     */\r\n    Repo.prototype.abortTransactions_ = function (path) {\r\n        var _this = this;\r\n        var affectedPath = this.getAncestorTransactionNode_(path).path();\r\n        var transactionNode = this.transactionQueueTree_.subTree(path);\r\n        transactionNode.forEachAncestor(function (node) {\r\n            _this.abortTransactionsOnNode_(node);\r\n        });\r\n        this.abortTransactionsOnNode_(transactionNode);\r\n        transactionNode.forEachDescendant(function (node) {\r\n            _this.abortTransactionsOnNode_(node);\r\n        });\r\n        return affectedPath;\r\n    };\r\n    /**\r\n     * Abort transactions stored in this transaction queue node.\r\n     *\r\n     * @param node Node to abort transactions for.\r\n     */\r\n    Repo.prototype.abortTransactionsOnNode_ = function (node) {\r\n        var queue = node.getValue();\r\n        if (queue !== null) {\r\n            // Queue up the callbacks and fire them after cleaning up all of our\r\n            // transaction state, since the callback could trigger more transactions\r\n            // or sets.\r\n            var callbacks = [];\r\n            // Go through queue.  Any already-sent transactions must be marked for\r\n            // abort, while the unsent ones can be immediately aborted and removed.\r\n            var events = [];\r\n            var lastSent = -1;\r\n            for (var i = 0; i < queue.length; i++) {\r\n                if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) ;\r\n                else if (queue[i].status === TransactionStatus.SENT) {\r\n                    assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                    lastSent = i;\r\n                    // Mark transaction for abort when it comes back.\r\n                    queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\r\n                    queue[i].abortReason = 'set';\r\n                }\r\n                else {\r\n                    assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort');\r\n                    // We can abort it immediately.\r\n                    queue[i].unwatcher();\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\r\n                    if (queue[i].onComplete) {\r\n                        var snapshot = null;\r\n                        callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\r\n                    }\r\n                }\r\n            }\r\n            if (lastSent === -1) {\r\n                // We're not waiting for any sent transactions.  We can clear the queue.\r\n                node.setValue(null);\r\n            }\r\n            else {\r\n                // Remove the transactions we aborted.\r\n                queue.length = lastSent + 1;\r\n            }\r\n            // Now fire the callbacks.\r\n            eventQueueRaiseEventsForChangedPath(this.eventQueue_, node.path(), events);\r\n            for (var i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n    };\r\n    return Repo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Reference = /** @class */ (function (_super) {\r\n    __extends(Reference, _super);\r\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     */\r\n    function Reference(repo, path) {\r\n        var _this = this;\r\n        if (!(repo instanceof Repo)) {\r\n            throw new Error('new Reference() no longer supported - use app.database().');\r\n        }\r\n        // call Query's constructor, passing in the repo and path.\r\n        _this = _super.call(this, repo, path, new QueryParams(), false) || this;\r\n        return _this;\r\n    }\r\n    /** @return {?string} */\r\n    Reference.prototype.getKey = function () {\r\n        validateArgCount('Reference.key', 0, 0, arguments.length);\r\n        if (pathIsEmpty(this.path)) {\r\n            return null;\r\n        }\r\n        else {\r\n            return pathGetBack(this.path);\r\n        }\r\n    };\r\n    Reference.prototype.child = function (pathString) {\r\n        validateArgCount('Reference.child', 1, 1, arguments.length);\r\n        if (typeof pathString === 'number') {\r\n            pathString = String(pathString);\r\n        }\r\n        else if (!(pathString instanceof Path)) {\r\n            if (pathGetFront(this.path) === null) {\r\n                validateRootPathString('Reference.child', 1, pathString, false);\r\n            }\r\n            else {\r\n                validatePathString('Reference.child', 1, pathString, false);\r\n            }\r\n        }\r\n        return new Reference(this.repo, pathChild(this.path, pathString));\r\n    };\r\n    /** @return {?Reference} */\r\n    Reference.prototype.getParent = function () {\r\n        validateArgCount('Reference.parent', 0, 0, arguments.length);\r\n        var parentPath = pathParent(this.path);\r\n        return parentPath === null ? null : new Reference(this.repo, parentPath);\r\n    };\r\n    /** @return {!Reference} */\r\n    Reference.prototype.getRoot = function () {\r\n        validateArgCount('Reference.root', 0, 0, arguments.length);\r\n        var ref = this;\r\n        while (ref.getParent() !== null) {\r\n            ref = ref.getParent();\r\n        }\r\n        return ref;\r\n    };\r\n    /** @return {!Database} */\r\n    Reference.prototype.databaseProp = function () {\r\n        return this.repo.database;\r\n    };\r\n    Reference.prototype.set = function (newVal, onComplete) {\r\n        validateArgCount('Reference.set', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.set', this.path);\r\n        validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\r\n        validateCallback('Reference.set', 2, onComplete, true);\r\n        var deferred = new Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, \r\n        /*priority=*/ null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    Reference.prototype.update = function (objectToMerge, onComplete) {\r\n        validateArgCount('Reference.update', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.update', this.path);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to Firebase.update() is deprecated. ' +\r\n                'Use set() if you want to overwrite the existing data, or ' +\r\n                'an Object with integer keys if you really do want to ' +\r\n                'only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\r\n        validateCallback('Reference.update', 2, onComplete, true);\r\n        var deferred = new Deferred();\r\n        this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\r\n        validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('Reference.setWithPriority', this.path);\r\n        validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\r\n        validatePriority('Reference.setWithPriority', 2, newPriority, false);\r\n        validateCallback('Reference.setWithPriority', 3, onComplete, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys') {\r\n            throw ('Reference.setWithPriority failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.');\r\n        }\r\n        var deferred = new Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    Reference.prototype.remove = function (onComplete) {\r\n        validateArgCount('Reference.remove', 0, 1, arguments.length);\r\n        validateWritablePath('Reference.remove', this.path);\r\n        validateCallback('Reference.remove', 1, onComplete, true);\r\n        return this.set(null, onComplete);\r\n    };\r\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\r\n        validateArgCount('Reference.transaction', 1, 3, arguments.length);\r\n        validateWritablePath('Reference.transaction', this.path);\r\n        validateCallback('Reference.transaction', 1, transactionUpdate, false);\r\n        validateCallback('Reference.transaction', 2, onComplete, true);\r\n        // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\r\n        // to expose it.\r\n        validateBoolean('Reference.transaction', 3, applyLocally, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys') {\r\n            throw ('Reference.transaction failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.');\r\n        }\r\n        if (applyLocally === undefined) {\r\n            applyLocally = true;\r\n        }\r\n        var deferred = new Deferred();\r\n        if (typeof onComplete === 'function') {\r\n            deferred.promise.catch(function () { });\r\n        }\r\n        var promiseComplete = function (error, committed, snapshot) {\r\n            if (error) {\r\n                deferred.reject(error);\r\n            }\r\n            else {\r\n                deferred.resolve(new TransactionResult(committed, snapshot));\r\n            }\r\n            if (typeof onComplete === 'function') {\r\n                onComplete(error, committed, snapshot);\r\n            }\r\n        };\r\n        this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\r\n        return deferred.promise;\r\n    };\r\n    Reference.prototype.setPriority = function (priority, onComplete) {\r\n        validateArgCount('Reference.setPriority', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.setPriority', this.path);\r\n        validatePriority('Reference.setPriority', 1, priority, false);\r\n        validateCallback('Reference.setPriority', 2, onComplete, true);\r\n        var deferred = new Deferred();\r\n        this.repo.setWithPriority(pathChild(this.path, '.priority'), priority, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    Reference.prototype.push = function (value, onComplete) {\r\n        validateArgCount('Reference.push', 0, 2, arguments.length);\r\n        validateWritablePath('Reference.push', this.path);\r\n        validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\r\n        validateCallback('Reference.push', 2, onComplete, true);\r\n        var now = this.repo.serverTime();\r\n        var name = nextPushId(now);\r\n        // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\r\n        // We use child() to create handles to two different references. The first is turned into a\r\n        // ThennableReference below by adding then() and catch() methods and is used as the\r\n        // return value of push(). The second remains a regular Reference and is used as the fulfilled\r\n        // value of the first ThennableReference.\r\n        var thennablePushRef = this.child(name);\r\n        var pushRef = this.child(name);\r\n        var promise;\r\n        if (value != null) {\r\n            promise = thennablePushRef.set(value, onComplete).then(function () { return pushRef; });\r\n        }\r\n        else {\r\n            promise = Promise.resolve(pushRef);\r\n        }\r\n        thennablePushRef.then = promise.then.bind(promise);\r\n        thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n        if (typeof onComplete === 'function') {\r\n            promise.catch(function () { });\r\n        }\r\n        return thennablePushRef;\r\n    };\r\n    Reference.prototype.onDisconnect = function () {\r\n        validateWritablePath('Reference.onDisconnect', this.path);\r\n        return new OnDisconnect(this.repo, this.path);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"database\", {\r\n        get: function () {\r\n            return this.databaseProp();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"key\", {\r\n        get: function () {\r\n            return this.getKey();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getParent();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        get: function () {\r\n            return this.getRoot();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Reference;\r\n}(Query));\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nQuery.__referenceConstructor = Reference;\r\nSyncPoint.__referenceConstructor = Reference;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nvar FirebaseAuthTokenProvider = /** @class */ (function () {\r\n    function FirebaseAuthTokenProvider(app_, authProvider_) {\r\n        var _this = this;\r\n        this.app_ = app_;\r\n        this.authProvider_ = authProvider_;\r\n        this.auth_ = null;\r\n        this.auth_ = authProvider_.getImmediate({ optional: true });\r\n        if (!this.auth_) {\r\n            authProvider_.get().then(function (auth) { return (_this.auth_ = auth); });\r\n        }\r\n    }\r\n    FirebaseAuthTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        if (!this.auth_) {\r\n            return Promise.resolve(null);\r\n        }\r\n        return this.auth_.getToken(forceRefresh).catch(function (error) {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error && error.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error);\r\n            }\r\n        });\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        if (this.auth_) {\r\n            this.auth_.addAuthTokenListener(listener);\r\n        }\r\n        else {\r\n            setTimeout(function () { return listener(null); }, 0);\r\n            this.authProvider_\r\n                .get()\r\n                .then(function (auth) { return auth.addAuthTokenListener(listener); });\r\n        }\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\r\n        this.authProvider_\r\n            .get()\r\n            .then(function (auth) { return auth.removeAuthTokenListener(listener); });\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.app_.name +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    };\r\n    return FirebaseAuthTokenProvider;\r\n}());\r\n/* Auth token provider that the Admin SDK uses to connect to the Emulator. */\r\nvar EmulatorAdminTokenProvider = /** @class */ (function () {\r\n    function EmulatorAdminTokenProvider() {\r\n    }\r\n    EmulatorAdminTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        return Promise.resolve({\r\n            accessToken: EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN\r\n        });\r\n    };\r\n    EmulatorAdminTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // Invoke the listener immediately to match the behavior in Firebase Auth\r\n        // (see packages/auth/src/auth.js#L1807)\r\n        listener(EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN);\r\n    };\r\n    EmulatorAdminTokenProvider.prototype.removeTokenChangeListener = function (listener) { };\r\n    EmulatorAdminTokenProvider.prototype.notifyForInvalidToken = function () { };\r\n    EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN = 'owner';\r\n    return EmulatorAdminTokenProvider;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This variable is also defined in the firebase node.js admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\r\nvar FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\r\nvar _staticInstance;\r\n/**\r\n * Creates and caches Repo instances.\r\n */\r\nvar RepoManager = /** @class */ (function () {\r\n    function RepoManager() {\r\n        this.repos_ = {};\r\n        /**\r\n         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n         */\r\n        this.useRestClient_ = false;\r\n    }\r\n    RepoManager.getInstance = function () {\r\n        if (!_staticInstance) {\r\n            _staticInstance = new RepoManager();\r\n        }\r\n        return _staticInstance;\r\n    };\r\n    // TODO(koss): Remove these functions unless used in tests?\r\n    RepoManager.prototype.interrupt = function () {\r\n        var e_1, _a, e_2, _b;\r\n        try {\r\n            for (var _c = __values(Object.keys(this.repos_)), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var appName = _d.value;\r\n                try {\r\n                    for (var _e = (e_2 = void 0, __values(Object.keys(this.repos_[appName]))), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var dbUrl = _f.value;\r\n                        this.repos_[appName][dbUrl].interrupt();\r\n                    }\r\n                }\r\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_2) throw e_2.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n    };\r\n    RepoManager.prototype.resume = function () {\r\n        var e_3, _a, e_4, _b;\r\n        try {\r\n            for (var _c = __values(Object.keys(this.repos_)), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var appName = _d.value;\r\n                try {\r\n                    for (var _e = (e_4 = void 0, __values(Object.keys(this.repos_[appName]))), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var dbUrl = _f.value;\r\n                        this.repos_[appName][dbUrl].resume();\r\n                    }\r\n                }\r\n                catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_4) throw e_4.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n    };\r\n    /**\r\n     * Update an existing repo in place to point to a new host/port.\r\n     */\r\n    RepoManager.prototype.applyEmulatorSettings = function (repo, host, port) {\r\n        repo.repoInfo_ = new RepoInfo(host + \":\" + port, \r\n        /* secure= */ false, repo.repoInfo_.namespace, repo.repoInfo_.webSocketOnly, repo.repoInfo_.nodeAdmin, repo.repoInfo_.persistenceKey, repo.repoInfo_.includeNamespaceInQueryParams);\r\n        if (repo.repoInfo_.nodeAdmin) {\r\n            repo.authTokenProvider_ = new EmulatorAdminTokenProvider();\r\n        }\r\n    };\r\n    /**\r\n     * This function should only ever be called to CREATE a new database instance.\r\n     */\r\n    RepoManager.prototype.databaseFromApp = function (app, authProvider, url, nodeAdmin) {\r\n        var dbUrl = url || app.options.databaseURL;\r\n        if (dbUrl === undefined) {\r\n            if (!app.options.projectId) {\r\n                fatal(\"Can't determine Firebase Database URL. Be sure to include \" +\r\n                    ' a Project ID when calling firebase.initializeApp().');\r\n            }\r\n            log('Using default host for project ', app.options.projectId);\r\n            dbUrl = app.options.projectId + \"-default-rtdb.firebaseio.com\";\r\n        }\r\n        var parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\r\n        var repoInfo = parsedUrl.repoInfo;\r\n        var isEmulator;\r\n        var dbEmulatorHost = undefined;\r\n        if (typeof process !== 'undefined') {\r\n            dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\r\n        }\r\n        if (dbEmulatorHost) {\r\n            isEmulator = true;\r\n            dbUrl = \"http://\" + dbEmulatorHost + \"?ns=\" + repoInfo.namespace;\r\n            parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\r\n            repoInfo = parsedUrl.repoInfo;\r\n        }\r\n        else {\r\n            isEmulator = !parsedUrl.repoInfo.secure;\r\n        }\r\n        var authTokenProvider = nodeAdmin && isEmulator\r\n            ? new EmulatorAdminTokenProvider()\r\n            : new FirebaseAuthTokenProvider(app, authProvider);\r\n        validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\r\n        if (!pathIsEmpty(parsedUrl.path)) {\r\n            fatal('Database URL must point to the root of a Firebase Database ' +\r\n                '(not including a child path).');\r\n        }\r\n        var repo = this.createRepo(repoInfo, app, authTokenProvider);\r\n        return repo.database;\r\n    };\r\n    /**\r\n     * Remove the repo and make sure it is disconnected.\r\n     *\r\n     */\r\n    RepoManager.prototype.deleteRepo = function (repo) {\r\n        var appRepos = safeGet(this.repos_, repo.app.name);\r\n        // This should never happen...\r\n        if (!appRepos || safeGet(appRepos, repo.key) !== repo) {\r\n            fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\r\n        }\r\n        repo.interrupt();\r\n        delete appRepos[repo.key];\r\n    };\r\n    /**\r\n     * Ensures a repo doesn't already exist and then creates one using the\r\n     * provided app.\r\n     *\r\n     * @param repoInfo The metadata about the Repo\r\n     * @return The Repo object for the specified server / repoName.\r\n     */\r\n    RepoManager.prototype.createRepo = function (repoInfo, app, authTokenProvider) {\r\n        var appRepos = safeGet(this.repos_, app.name);\r\n        if (!appRepos) {\r\n            appRepos = {};\r\n            this.repos_[app.name] = appRepos;\r\n        }\r\n        var repo = safeGet(appRepos, repoInfo.toURLString());\r\n        if (repo) {\r\n            fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n        }\r\n        repo = new Repo(repoInfo, this.useRestClient_, app, authTokenProvider);\r\n        appRepos[repoInfo.toURLString()] = repo;\r\n        return repo;\r\n    };\r\n    /**\r\n     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n     */\r\n    RepoManager.prototype.forceRestClient = function (forceRestClient) {\r\n        this.useRestClient_ = forceRestClient;\r\n    };\r\n    return RepoManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase database.\r\n */\r\nvar Database = /** @class */ (function () {\r\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     */\r\n    function Database(repoInternal_) {\r\n        var _this = this;\r\n        this.repoInternal_ = repoInternal_;\r\n        /** Track if the instance has been used (root or repo accessed) */\r\n        this.instanceStarted_ = false;\r\n        this.INTERNAL = {\r\n            delete: function () { return __awaiter(_this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    this.checkDeleted_('delete');\r\n                    RepoManager.getInstance().deleteRepo(this.repo_);\r\n                    this.repoInternal_ = null;\r\n                    this.rootInternal_ = null;\r\n                    return [2 /*return*/];\r\n                });\r\n            }); }\r\n        };\r\n        if (!(repoInternal_ instanceof Repo)) {\r\n            fatal(\"Don't call new Database() directly - please use firebase.database().\");\r\n        }\r\n    }\r\n    Object.defineProperty(Database.prototype, \"repo_\", {\r\n        get: function () {\r\n            if (!this.instanceStarted_) {\r\n                this.repoInternal_.start();\r\n                this.instanceStarted_ = true;\r\n            }\r\n            return this.repoInternal_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Database.prototype, \"root_\", {\r\n        get: function () {\r\n            if (!this.rootInternal_) {\r\n                this.rootInternal_ = new Reference(this.repo_, newEmptyPath());\r\n            }\r\n            return this.rootInternal_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Database.prototype, \"app\", {\r\n        get: function () {\r\n            return this.repo_.app;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Modify this instance to communicate with the Realtime Database emulator.\r\n     *\r\n     * <p>Note: This method must be called before performing any other operation.\r\n     *\r\n     * @param host the emulator host (ex: localhost)\r\n     * @param port the emulator port (ex: 8080)\r\n     */\r\n    Database.prototype.useEmulator = function (host, port) {\r\n        this.checkDeleted_('useEmulator');\r\n        if (this.instanceStarted_) {\r\n            fatal('Cannot call useEmulator() after instance has already been initialized.');\r\n            return;\r\n        }\r\n        // Modify the repo to apply emulator settings\r\n        RepoManager.getInstance().applyEmulatorSettings(this.repoInternal_, host, port);\r\n    };\r\n    Database.prototype.ref = function (path) {\r\n        this.checkDeleted_('ref');\r\n        validateArgCount('database.ref', 0, 1, arguments.length);\r\n        if (path instanceof Reference) {\r\n            return this.refFromURL(path.toString());\r\n        }\r\n        return path !== undefined ? this.root_.child(path) : this.root_;\r\n    };\r\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @return Firebase reference.\r\n     */\r\n    Database.prototype.refFromURL = function (url) {\r\n        /** @const {string} */\r\n        var apiName = 'database.refFromURL';\r\n        this.checkDeleted_(apiName);\r\n        validateArgCount(apiName, 1, 1, arguments.length);\r\n        var parsedURL = parseRepoInfo(url, this.repo_.repoInfo_.nodeAdmin);\r\n        validateUrl(apiName, 1, parsedURL);\r\n        var repoInfo = parsedURL.repoInfo;\r\n        if (!this.repo_.repoInfo_.isCustomHost() &&\r\n            repoInfo.host !== this.repo_.repoInfo_.host) {\r\n            fatal(apiName +\r\n                ': Host name does not match the current database: ' +\r\n                '(found ' +\r\n                repoInfo.host +\r\n                ' but expected ' +\r\n                this.repo_.repoInfo_.host +\r\n                ')');\r\n        }\r\n        return this.ref(parsedURL.path.toString());\r\n    };\r\n    Database.prototype.checkDeleted_ = function (apiName) {\r\n        if (this.repoInternal_ === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    };\r\n    // Make individual repo go offline.\r\n    Database.prototype.goOffline = function () {\r\n        validateArgCount('database.goOffline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOffline');\r\n        this.repo_.interrupt();\r\n    };\r\n    Database.prototype.goOnline = function () {\r\n        validateArgCount('database.goOnline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOnline');\r\n        this.repo_.resume();\r\n    };\r\n    Database.ServerValue = {\r\n        TIMESTAMP: {\r\n            '.sv': 'timestamp'\r\n        },\r\n        increment: function (delta) {\r\n            return {\r\n                '.sv': {\r\n                    'increment': delta\r\n                }\r\n            };\r\n        }\r\n    };\r\n    return Database;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n */\r\nvar forceLongPolling = function () {\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n};\r\nvar forceWebSockets = function () {\r\n    BrowserPollConnection.forceDisallow();\r\n};\r\n/* Used by App Manager */\r\nvar isWebSocketsAvailable = function () {\r\n    return WebSocketConnection['isAvailable']();\r\n};\r\nvar setSecurityDebugCallback = function (ref, callback) {\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    ref.repo.persistentConnection_.securityDebugCallback_ = callback;\r\n};\r\nvar stats = function (ref, showDelta) {\r\n    ref.repo.stats(showDelta);\r\n};\r\nvar statsIncrementCounter = function (ref, metric) {\r\n    ref.repo.statsIncrementCounter(metric);\r\n};\r\nvar dataUpdateCount = function (ref) {\r\n    return ref.repo.dataUpdateCount;\r\n};\r\nvar interceptServerData = function (ref, callback) {\r\n    return ref.repo.interceptServerData_(callback);\r\n};\r\n/**\r\n * Used by console to create a database based on the app,\r\n * passed database URL and a custom auth implementation.\r\n *\r\n * @param app A valid FirebaseApp-like object\r\n * @param url A valid Firebase databaseURL\r\n * @param version custom version e.g. firebase-admin version\r\n * @param customAuthImpl custom auth implementation\r\n */\r\nfunction initStandalone(_a) {\r\n    var app = _a.app, url = _a.url, version = _a.version, customAuthImpl = _a.customAuthImpl, namespace = _a.namespace, _b = _a.nodeAdmin, nodeAdmin = _b === void 0 ? false : _b;\r\n    setSDKVersion(version);\r\n    /**\r\n     * ComponentContainer('database-standalone') is just a placeholder that doesn't perform\r\n     * any actual function.\r\n     */\r\n    var authProvider = new Provider('auth-internal', new ComponentContainer('database-standalone'));\r\n    authProvider.setComponent(new Component('auth-internal', function () { return customAuthImpl; }, \"PRIVATE\" /* PRIVATE */));\r\n    return {\r\n        instance: RepoManager.getInstance().databaseFromApp(app, authProvider, url, nodeAdmin),\r\n        namespace: namespace\r\n    };\r\n}\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData,\n  initStandalone: initStandalone\n});\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DataConnection = PersistentConnection;\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nvar RealTimeConnection = Connection;\r\nvar hijackHash = function (newHash) {\r\n    var oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        if (hash !== undefined) {\r\n            hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, onComplete, hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\nvar ConnectionTarget = RepoInfo;\r\nvar queryIdentifier = function (query) {\r\n    return query.queryIdentifier();\r\n};\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n */\r\nvar forceRestClient = function (forceRestClient) {\r\n    RepoManager.getInstance().forceRestClient(forceRestClient);\r\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  forceRestClient: forceRestClient\n});\n\nvar name = \"@firebase/database\";\nvar version = \"0.9.4\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ServerValue = Database.ServerValue;\r\nfunction registerDatabase(instance) {\r\n    // set SDK_VERSION\r\n    setSDKVersion(instance.SDK_VERSION);\r\n    // Register the Database Service with the 'firebase' namespace.\r\n    var namespace = instance.INTERNAL.registerComponent(new Component('database', function (container, url) {\r\n        /* Dependencies */\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        var authProvider = container.getProvider('auth-internal');\r\n        return RepoManager.getInstance().databaseFromApp(app, authProvider, url);\r\n    }, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(\r\n    // firebase.database namespace properties\r\n    {\r\n        Reference: Reference,\r\n        Query: Query,\r\n        Database: Database,\r\n        DataSnapshot: DataSnapshot,\r\n        enableLogging: enableLogging,\r\n        INTERNAL: INTERNAL,\r\n        ServerValue: ServerValue,\r\n        TEST_ACCESS: TEST_ACCESS\r\n    })\r\n        .setMultipleInstances(true));\r\n    instance.registerVersion(name, version);\r\n    if (isNodeSdk()) {\r\n        module.exports = namespace;\r\n    }\r\n}\r\nregisterDatabase(firebase);\n\nexport { DataSnapshot, Database, OnDisconnect, Query, Reference, ServerValue, enableLogging, registerDatabase };\n//# sourceMappingURL=index.esm.js.map\n"]},"metadata":{},"sourceType":"module"}
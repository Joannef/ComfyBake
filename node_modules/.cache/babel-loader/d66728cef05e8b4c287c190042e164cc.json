{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joann\\\\Desktop\\\\Capstone\\\\ComfyBake\\\\src\\\\containers\\\\DisplayGrid.js\";\nimport React, { useState, useEffect } from \"react\";\nimport database from '../firebase';\nimport './Cart.';\nimport { addToCart } from './Cart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst db = database.firestore();\nconst storage = database.storage();\n\nclass Display extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      arr: null\n    };\n\n    this.handleClick = arr => {\n      this.props.addToCart(arr);\n    };\n  }\n\n  //---------------- this function brings all the data from firestore -------------------//\n  componentDidMount() {\n    db.collectionGroup('food').get().then(snapShot => {\n      //array to store single item\n      const arr = []; //takes a data and pushes it into the array\n\n      snapShot.forEach(doc => {\n        const data = doc.data();\n        arr.push(data);\n      }); //makes an array of all the item and saves it in the state, null array above\n\n      this.setState({\n        arr: arr\n      });\n    }).catch(error => console.log(error));\n  } //-------------------------collecting data from firestore ----------------------------//\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item\",\n      children: [//it data exists then print each data from the array\n      this.state.arr && this.state.arr.map(arr => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"img-wrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: arr.ImageUrl,\n            alt: arr.Foodname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: arr.Foodname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"$\", arr.Price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              this.handleClick(arr);\n            },\n            children: \"Add to cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Display; // const Display = (props) => {\n//     const [name, setName] = useState(\"\");\n//     const [url, setUrl] = useState(\"\");\n//     const [price, setPrice] = useState(\"\");\n//     const [test, setTest] = useState([]);\n//     const [size, setSize] = useState();\n//     const {ID} = props\n//     const id = \"user2@gmail.com\";\n//     db.collectionGroup(\"food\").get().then(querySnapshot => {\n//         const data = querySnapshot.docs.map(doc=>doc.data())\n//         setHelper(data[4])\n//         setSize(data.length);\n//     })\n//     function setHelper(data_){\n//         setName(data_.Foodname);\n//         setPrice(data_.Price);\n//         setUrl(data_.ImageUrl)\n//     }\n//     return( \n//         <div>\n//             <br/>\n//             <h1>Testing here</h1>\n//             <p>{test}</p>\n//             <p> {size}</p>\n//             <p>Name: {name}</p>\n//             <p>Price: {price} </p>\n//             <img src={url}/>\n//             <br/> <br/>\n//             <p>-------------------------------------------------------------------------</p>\n//         </div>\n//     )\n// }\n// export default Display;","map":{"version":3,"sources":["C:/Users/joann/Desktop/Capstone/ComfyBake/src/containers/DisplayGrid.js"],"names":["React","useState","useEffect","database","addToCart","db","firestore","storage","Display","Component","state","arr","handleClick","props","componentDidMount","collectionGroup","get","then","snapShot","forEach","doc","data","push","setState","catch","error","console","log","render","map","ImageUrl","Foodname","Price"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAO,SAAP;AACA,SAASC,SAAT,QAA0B,QAA1B;;AAEA,MAAMC,EAAE,GAAGF,QAAQ,CAACG,SAAT,EAAX;AACA,MAAMC,OAAO,GAAGJ,QAAQ,CAACI,OAAT,EAAhB;;AAGA,MAAMC,OAAN,SAAsBR,KAAK,CAACS,SAA5B,CAAqC;AAAA;AAAA;AAAA,SAEjCC,KAFiC,GAEzB;AACJC,MAAAA,GAAG,EAAE;AADD,KAFyB;;AAAA,SA0BjCC,WA1BiC,GA0BnBD,GAAD,IAAQ;AACjB,WAAKE,KAAL,CAAWT,SAAX,CAAqBO,GAArB;AACH,KA5BgC;AAAA;;AAMjC;AACAG,EAAAA,iBAAiB,GAAE;AACfT,IAAAA,EAAE,CAACU,eAAH,CAAmB,MAAnB,EACKC,GADL,GAEKC,IAFL,CAEWC,QAAQ,IAAI;AACf;AACA,YAAMP,GAAG,GAAG,EAAZ,CAFe,CAGf;;AACAO,MAAAA,QAAQ,CAACC,OAAT,CAAkBC,GAAG,IAAI;AACrB,cAAMC,IAAI,GAAGD,GAAG,CAACC,IAAJ,EAAb;AACAV,QAAAA,GAAG,CAACW,IAAJ,CAASD,IAAT;AACH,OAHD,EAJe,CAQf;;AACA,WAAKE,QAAL,CAAc;AAACZ,QAAAA,GAAG,EAAEA;AAAN,OAAd;AAEH,KAbL,EAcKa,KAdL,CAcWC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAdpB;AAeH,GAvBgC,CAwBjC;;;AAOAG,EAAAA,MAAM,GAAE;AAEJ,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,iBAEQ;AACA,WAAKlB,KAAL,CAAWC,GAAX,IACA,KAAKD,KAAL,CAAWC,GAAX,CAAekB,GAAf,CAAoBlB,GAAG,IAAI;AACvB,4BACI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,kCACI;AAAK,YAAA,GAAG,EAAEA,GAAG,CAACmB,QAAd;AAAyB,YAAA,GAAG,EAAEnB,GAAG,CAACoB;AAAlC;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAIpB,GAAG,CAACoB;AAAR;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAII;AAAA,4BAAKpB,GAAG,CAACqB,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAQ,YAAA,OAAO,EAAE,MAAI;AAAE,mBAAKpB,WAAL,CAAiBD,GAAjB;AAAsB,aAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AASH,OAVD,CAJR,eAgBI;AAAA;AAAA;AAAA;AAAA,cAhBJ,eAgBS;AAAA;AAAA;AAAA;AAAA,cAhBT;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAoBH;;AArDgC;;AAuDrC,eAAeH,OAAf,C,CASA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAKA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport database from '../firebase';\r\nimport './Cart.';\r\nimport { addToCart } from './Cart'\r\n\r\nconst db = database.firestore();\r\nconst storage = database.storage();\r\n\r\n\r\nclass Display extends React.Component{\r\n    //state array\r\n    state = {\r\n        arr: null\r\n    }\r\n\r\n    //---------------- this function brings all the data from firestore -------------------//\r\n    componentDidMount(){\r\n        db.collectionGroup('food')\r\n            .get()\r\n            .then( snapShot => {\r\n                //array to store single item\r\n                const arr = []\r\n                //takes a data and pushes it into the array\r\n                snapShot.forEach( doc => {\r\n                    const data = doc.data()\r\n                    arr.push(data)\r\n                })\r\n                //makes an array of all the item and saves it in the state, null array above\r\n                this.setState({arr: arr})\r\n                \r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n    //-------------------------collecting data from firestore ----------------------------//\r\n    \r\n    handleClick =(arr) =>{\r\n        this.props.addToCart(arr);\r\n    }\r\n\r\n\r\n    render(){\r\n    \r\n        return(\r\n            <div className='item'>\r\n                {\r\n                    //it data exists then print each data from the array\r\n                    this.state.arr &&\r\n                    this.state.arr.map( arr => {\r\n                        return(\r\n                            <div className=\"img-wrap\">\r\n                                <img src={arr.ImageUrl } alt={arr.Foodname}/>\r\n                                <p>{arr.Foodname}</p>\r\n                                \r\n                                <p>${arr.Price}</p>\r\n                                <button onClick={()=>{ this.handleClick(arr)} }>Add to cart</button>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                <br/><br/> \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Display;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const Display = (props) => {\r\n//     const [name, setName] = useState(\"\");\r\n//     const [url, setUrl] = useState(\"\");\r\n//     const [price, setPrice] = useState(\"\");\r\n//     const [test, setTest] = useState([]);\r\n//     const [size, setSize] = useState();\r\n\r\n\r\n//     const {ID} = props\r\n//     const id = \"user2@gmail.com\";\r\n    \r\n   \r\n    \r\n\r\n//     db.collectionGroup(\"food\").get().then(querySnapshot => {\r\n//         const data = querySnapshot.docs.map(doc=>doc.data())\r\n//         setHelper(data[4])\r\n//         setSize(data.length);\r\n        \r\n        \r\n        \r\n//     })\r\n//     function setHelper(data_){\r\n//         setName(data_.Foodname);\r\n//         setPrice(data_.Price);\r\n//         setUrl(data_.ImageUrl)\r\n//     }\r\n\r\n//     return( \r\n//         <div>\r\n//             <br/>\r\n//             <h1>Testing here</h1>\r\n//             <p>{test}</p>\r\n//             <p> {size}</p>\r\n//             <p>Name: {name}</p>\r\n//             <p>Price: {price} </p>\r\n//             <img src={url}/>\r\n//             <br/> <br/>\r\n//             <p>-------------------------------------------------------------------------</p>\r\n//         </div>\r\n//     )\r\n    \r\n// }\r\n\r\n// export default Display;"]},"metadata":{},"sourceType":"module"}
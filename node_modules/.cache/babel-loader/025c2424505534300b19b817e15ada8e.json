{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joann\\\\Desktop\\\\Capstone\\\\comfybake-app\\\\src\\\\containers\\\\LoadCards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col'; // import database from '../firebase';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoadCards(props) {\n  _s();\n\n  const [titles, setTitles] = useState(props.title);\n  const [imageURL, setImageURL] = useState(props.imageURL);\n  const [body, setBody] = useState(props.body);\n  const [price, setPrice] = useState('$' + props.price);\n  const [ingredients, setIngredients] = useState(props.ingredients);\n\n  function updateTitleValue(event) {\n    setTitleValue(event.target.value);\n    console.log(titleValue);\n  }\n  /*\r\n  function updateImageURLValue (event) {\r\n      setimageURLValue(event.target.value)\r\n      console.log(imageURLValue)\r\n  }*/\n\n\n  function updateImageURLValue(event) {\n    event.preventDefault();\n\n    if (event.target.files[0]) {\n      setImage(event.target.files[0]);\n    }\n  }\n\n  function updateBodyValue(event) {\n    setBodyValue(event.target.value);\n  }\n\n  function updatePriceValue(event) {\n    setPriceValue(event.target.value);\n  }\n\n  function updateIngredientsValue(event) {\n    setIngredientsValue(event.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n      variant: \"top\",\n      src: imageURL\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: titles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add to Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"text-muted\",\n        children: [\" Contains: \", ingredients]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 13\n  }, this);\n}\n\n_s(LoadCards, \"KI4YLhNCupRm71LlehhCppUgmkk=\");\n\n_c = LoadCards;\nexport default LoadCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoadCards\");","map":{"version":3,"sources":["C:/Users/joann/Desktop/Capstone/comfybake-app/src/containers/LoadCards.js"],"names":["React","useState","Card","Container","Row","Col","LoadCards","props","titles","setTitles","title","imageURL","setImageURL","body","setBody","price","setPrice","ingredients","setIngredients","updateTitleValue","event","setTitleValue","target","value","console","log","titleValue","updateImageURLValue","preventDefault","files","setImage","updateBodyValue","setBodyValue","updatePriceValue","setPriceValue","updateIngredientsValue","setIngredientsValue"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAO,sCAAP;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB,C,CACA;;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACtB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAACM,KAAK,CAACG,KAAP,CAApC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAACM,KAAK,CAACI,QAAP,CAAxC;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAACM,KAAK,CAACM,IAAP,CAAhC;AACA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,MAAMM,KAAK,CAACQ,KAAb,CAAlC;AACA,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAACM,KAAK,CAACU,WAAP,CAA9C;;AAEA,WAASE,gBAAT,CAA2BC,KAA3B,EAAkC;AAC9BC,IAAAA,aAAa,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,UAAZ;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACI,WAASC,mBAAT,CAA8BP,KAA9B,EAAoC;AAChCA,IAAAA,KAAK,CAACQ,cAAN;;AACA,QAAIR,KAAK,CAACE,MAAN,CAAaO,KAAb,CAAmB,CAAnB,CAAJ,EAA0B;AACtBC,MAAAA,QAAQ,CAACV,KAAK,CAACE,MAAN,CAAaO,KAAb,CAAmB,CAAnB,CAAD,CAAR;AACH;AACJ;;AAED,WAASE,eAAT,CAA0BX,KAA1B,EAAiC;AAC7BY,IAAAA,YAAY,CAACZ,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAZ;AACH;;AAED,WAASU,gBAAT,CAA2Bb,KAA3B,EAAkC;AAC9Bc,IAAAA,aAAa,CAACd,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAb;AACH;;AAED,WAASY,sBAAT,CAAiCf,KAAjC,EAAwC;AACpCgB,IAAAA,mBAAmB,CAAChB,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAnB;AACH;;AAED,sBACQ,QAAC,IAAD;AAAA,4BACQ,QAAC,IAAD,CAAM,GAAN;AAAU,MAAA,OAAO,EAAC,KAAlB;AAAwB,MAAA,GAAG,EAAIZ;AAA/B;AAAA;AAAA;AAAA;AAAA,YADR,eAGQ,QAAC,IAAD,CAAM,IAAN;AAAA,8BAEI,QAAC,IAAD,CAAM,KAAN;AAAA,kBAAaH;AAAb;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,IAAD,CAAM,IAAN;AAAA,kBACKK;AADL;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHR,eAYQ,QAAC,IAAD,CAAM,MAAN;AAAA,8BAEI;AAAA,kBAAIE;AAAJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAO,QAAA,SAAS,EAAC,YAAjB;AAAA,kCAA0CE,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZR;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAyBH;;GA5DQX,S;;KAAAA,S;AA8DT,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n// import database from '../firebase';\r\n\r\nfunction LoadCards(props) {\r\n    const [titles, setTitles] = useState(props.title)\r\n    const [imageURL, setImageURL] = useState(props.imageURL)    \r\n    const [body, setBody] = useState(props.body)    \r\n    const [price, setPrice] = useState('$' + props.price)\r\n    const [ingredients, setIngredients] = useState(props.ingredients)\r\n\r\n    function updateTitleValue (event) {\r\n        setTitleValue(event.target.value)\r\n        console.log(titleValue)\r\n    }\r\n    /*\r\n    function updateImageURLValue (event) {\r\n        setimageURLValue(event.target.value)\r\n        console.log(imageURLValue)\r\n    }*/\r\n    function updateImageURLValue (event){\r\n        event.preventDefault();\r\n        if (event.target.files[0]){\r\n            setImage(event.target.files[0]);\r\n        }\r\n    }\r\n\r\n    function updateBodyValue (event) {\r\n        setBodyValue(event.target.value)\r\n    }\r\n\r\n    function updatePriceValue (event) {\r\n        setPriceValue(event.target.value)\r\n    }\r\n\r\n    function updateIngredientsValue (event) {\r\n        setIngredientsValue(event.target.value)\r\n    }\r\n    \r\n    return (\r\n            <Card>\r\n                    <Card.Img variant=\"top\" src = {imageURL} />\r\n                    \r\n                    <Card.Body>\r\n                    \r\n                        <Card.Title>{titles}</Card.Title>\r\n                        <Card.Text>\r\n                            {body}\r\n                        </Card.Text>\r\n                    \r\n                    </Card.Body>\r\n\r\n                    <Card.Footer>\r\n\r\n                        <p>{price}</p>\r\n                        <button>Add to Cart</button>\r\n                        <br></br>\r\n                        <small className=\"text-muted\"> Contains: {ingredients}</small>\r\n                        \r\n                    </Card.Footer> \r\n                \r\n            </Card> \r\n    );\r\n\r\n}\r\n\r\nexport default LoadCards"]},"metadata":{},"sourceType":"module"}